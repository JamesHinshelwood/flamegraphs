<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1590" onload="init(evt)" viewBox="0 0 1200 1590" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1590" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1573.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1573.00"> </text><svg id="frames" x="10" width="1180" total_samples="19406"><g><title>__GI___clone3 (12 samples, 0.06%)</title><rect x="0.0000%" y="1509" width="0.0618%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1519.50"></text></g><g><title>start_thread (12 samples, 0.06%)</title><rect x="0.0000%" y="1493" width="0.0618%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1503.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (12 samples, 0.06%)</title><rect x="0.0000%" y="1477" width="0.0618%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.06%)</title><rect x="0.0000%" y="1461" width="0.0618%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1471.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.06%)</title><rect x="0.0000%" y="1445" width="0.0618%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1455.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.06%)</title><rect x="0.0000%" y="1429" width="0.0618%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1439.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 0.06%)</title><rect x="0.0000%" y="1413" width="0.0618%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.06%)</title><rect x="0.0000%" y="1397" width="0.0618%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1407.50"></text></g><g><title>std::panicking::try (12 samples, 0.06%)</title><rect x="0.0000%" y="1381" width="0.0618%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.06%)</title><rect x="0.0000%" y="1365" width="0.0618%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.06%)</title><rect x="0.0000%" y="1349" width="0.0618%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1359.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 0.06%)</title><rect x="0.0000%" y="1333" width="0.0618%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1343.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (12 samples, 0.06%)</title><rect x="0.0000%" y="1317" width="0.0618%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1327.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (12 samples, 0.06%)</title><rect x="0.0000%" y="1301" width="0.0618%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1311.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (12 samples, 0.06%)</title><rect x="0.0000%" y="1285" width="0.0618%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1295.50"></text></g><g><title>rayon_core::registry::main_loop (12 samples, 0.06%)</title><rect x="0.0000%" y="1269" width="0.0618%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (12 samples, 0.06%)</title><rect x="0.0000%" y="1253" width="0.0618%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (12 samples, 0.06%)</title><rect x="0.0000%" y="1237" width="0.0618%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.06%)</title><rect x="0.0000%" y="1221" width="0.0618%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1231.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (12 samples, 0.06%)</title><rect x="0.0000%" y="1205" width="0.0618%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1215.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (12 samples, 0.06%)</title><rect x="0.0000%" y="1189" width="0.0618%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1199.50"></text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 0.06%)</title><rect x="0.0000%" y="1173" width="0.0618%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1183.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (12 samples, 0.06%)</title><rect x="0.0000%" y="1157" width="0.0618%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1167.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (12 samples, 0.06%)</title><rect x="0.0000%" y="1141" width="0.0618%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1151.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (12 samples, 0.06%)</title><rect x="0.0000%" y="1125" width="0.0618%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1135.50"></text></g><g><title>syscall (12 samples, 0.06%)</title><rect x="0.0000%" y="1109" width="0.0618%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1119.50"></text></g><g><title>&lt;zilliqa::transaction::VerifiedTransaction as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="0.0618%" y="709" width="0.0103%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="2"/><text x="0.3118%" y="719.50"></text></g><g><title>&lt;zilliqa::transaction::SignedTransaction as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="0.0618%" y="693" width="0.0103%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="2"/><text x="0.3118%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="0.0618%" y="773" width="0.0258%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="5"/><text x="0.3118%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.03%)</title><rect x="0.0618%" y="757" width="0.0258%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="5"/><text x="0.3118%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.03%)</title><rect x="0.0618%" y="741" width="0.0258%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="5"/><text x="0.3118%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.03%)</title><rect x="0.0618%" y="725" width="0.0258%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="5"/><text x="0.3118%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="0.0721%" y="709" width="0.0155%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="3"/><text x="0.3221%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="0.0721%" y="693" width="0.0155%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="3"/><text x="0.3221%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.02%)</title><rect x="0.0721%" y="677" width="0.0155%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="3"/><text x="0.3221%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="0.0721%" y="661" width="0.0155%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="3"/><text x="0.3221%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="0.0721%" y="645" width="0.0155%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="3"/><text x="0.3221%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="0.0721%" y="629" width="0.0155%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="3"/><text x="0.3221%" y="639.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="0.0721%" y="613" width="0.0155%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="3"/><text x="0.3221%" y="623.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="0.0721%" y="597" width="0.0155%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="3"/><text x="0.3221%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="0.0721%" y="581" width="0.0155%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="3"/><text x="0.3221%" y="591.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="0.0721%" y="565" width="0.0155%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="3"/><text x="0.3221%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_one (2 samples, 0.01%)</title><rect x="0.0876%" y="725" width="0.0103%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="2"/><text x="0.3376%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="0.0876%" y="709" width="0.0103%" height="15" fill="rgb(213,116,39)" fg:x="17" fg:w="2"/><text x="0.3376%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="0.0876%" y="693" width="0.0103%" height="15" fill="rgb(222,207,29)" fg:x="17" fg:w="2"/><text x="0.3376%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="0.0876%" y="677" width="0.0103%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="2"/><text x="0.3376%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="0.0876%" y="661" width="0.0103%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="2"/><text x="0.3376%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="0.0876%" y="645" width="0.0103%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="2"/><text x="0.3376%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="0.0876%" y="629" width="0.0103%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="2"/><text x="0.3376%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition::extend::{{closure}} (4 samples, 0.02%)</title><rect x="0.0876%" y="741" width="0.0206%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="4"/><text x="0.3376%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="0.0979%" y="725" width="0.0103%" height="15" fill="rgb(225,35,8)" fg:x="19" fg:w="2"/><text x="0.3479%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition (5 samples, 0.03%)</title><rect x="0.0876%" y="773" width="0.0258%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="5"/><text x="0.3376%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="0.0876%" y="757" width="0.0258%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="5"/><text x="0.3376%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="0.1185%" y="565" width="0.0258%" height="15" fill="rgb(231,138,38)" fg:x="23" fg:w="5"/><text x="0.3685%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.03%)</title><rect x="0.1185%" y="549" width="0.0258%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="5"/><text x="0.3685%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (5 samples, 0.03%)</title><rect x="0.1185%" y="533" width="0.0258%" height="15" fill="rgb(251,118,11)" fg:x="23" fg:w="5"/><text x="0.3685%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.03%)</title><rect x="0.1185%" y="517" width="0.0258%" height="15" fill="rgb(217,147,25)" fg:x="23" fg:w="5"/><text x="0.3685%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 0.03%)</title><rect x="0.1185%" y="501" width="0.0258%" height="15" fill="rgb(247,81,37)" fg:x="23" fg:w="5"/><text x="0.3685%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (5 samples, 0.03%)</title><rect x="0.1185%" y="485" width="0.0258%" height="15" fill="rgb(209,12,38)" fg:x="23" fg:w="5"/><text x="0.3685%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.03%)</title><rect x="0.1185%" y="469" width="0.0258%" height="15" fill="rgb(227,1,9)" fg:x="23" fg:w="5"/><text x="0.3685%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.03%)</title><rect x="0.1185%" y="453" width="0.0258%" height="15" fill="rgb(248,47,43)" fg:x="23" fg:w="5"/><text x="0.3685%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="0.1185%" y="437" width="0.0258%" height="15" fill="rgb(221,10,30)" fg:x="23" fg:w="5"/><text x="0.3685%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="0.1185%" y="421" width="0.0258%" height="15" fill="rgb(210,229,1)" fg:x="23" fg:w="5"/><text x="0.3685%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="0.1185%" y="405" width="0.0258%" height="15" fill="rgb(222,148,37)" fg:x="23" fg:w="5"/><text x="0.3685%" y="415.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.03%)</title><rect x="0.1185%" y="389" width="0.0258%" height="15" fill="rgb(234,67,33)" fg:x="23" fg:w="5"/><text x="0.3685%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.03%)</title><rect x="0.1185%" y="373" width="0.0258%" height="15" fill="rgb(247,98,35)" fg:x="23" fg:w="5"/><text x="0.3685%" y="383.50"></text></g><g><title>__GI___libc_free (5 samples, 0.03%)</title><rect x="0.1185%" y="357" width="0.0258%" height="15" fill="rgb(247,138,52)" fg:x="23" fg:w="5"/><text x="0.3685%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::trie::EthTrie&lt;eth_trie::db::MemoryDB&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="773" width="0.0515%" height="15" fill="rgb(213,79,30)" fg:x="23" fg:w="10"/><text x="0.3685%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::db::MemoryDB&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="757" width="0.0515%" height="15" fill="rgb(246,177,23)" fg:x="23" fg:w="10"/><text x="0.3685%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.05%)</title><rect x="0.1185%" y="741" width="0.0515%" height="15" fill="rgb(230,62,27)" fg:x="23" fg:w="10"/><text x="0.3685%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.05%)</title><rect x="0.1185%" y="725" width="0.0515%" height="15" fill="rgb(216,154,8)" fg:x="23" fg:w="10"/><text x="0.3685%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::db::MemoryDB&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="709" width="0.0515%" height="15" fill="rgb(244,35,45)" fg:x="23" fg:w="10"/><text x="0.3685%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="693" width="0.0515%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="10"/><text x="0.3685%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.05%)</title><rect x="0.1185%" y="677" width="0.0515%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="10"/><text x="0.3685%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.05%)</title><rect x="0.1185%" y="661" width="0.0515%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="10"/><text x="0.3685%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="645" width="0.0515%" height="15" fill="rgb(207,117,47)" fg:x="23" fg:w="10"/><text x="0.3685%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="629" width="0.0515%" height="15" fill="rgb(249,43,39)" fg:x="23" fg:w="10"/><text x="0.3685%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="613" width="0.0515%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="10"/><text x="0.3685%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,std::hash::random::RandomState&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="597" width="0.0515%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="10"/><text x="0.3685%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (10 samples, 0.05%)</title><rect x="0.1185%" y="581" width="0.0515%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="10"/><text x="0.3685%" y="591.50"></text></g><g><title>__GI___libc_free (5 samples, 0.03%)</title><rect x="0.1443%" y="565" width="0.0258%" height="15" fill="rgb(211,96,35)" fg:x="28" fg:w="5"/><text x="0.3943%" y="575.50"></text></g><g><title>_int_free (5 samples, 0.03%)</title><rect x="0.1443%" y="549" width="0.0258%" height="15" fill="rgb(253,215,40)" fg:x="28" fg:w="5"/><text x="0.3943%" y="559.50"></text></g><g><title>_int_free_maybe_consolidate (5 samples, 0.03%)</title><rect x="0.1443%" y="533" width="0.0258%" height="15" fill="rgb(211,81,21)" fg:x="28" fg:w="5"/><text x="0.3943%" y="543.50"></text></g><g><title>malloc_consolidate (5 samples, 0.03%)</title><rect x="0.1443%" y="517" width="0.0258%" height="15" fill="rgb(208,190,38)" fg:x="28" fg:w="5"/><text x="0.3943%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="0.1701%" y="741" width="0.0103%" height="15" fill="rgb(235,213,38)" fg:x="33" fg:w="2"/><text x="0.4201%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.1701%" y="725" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="33" fg:w="2"/><text x="0.4201%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.1701%" y="709" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="33" fg:w="2"/><text x="0.4201%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.1701%" y="693" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="33" fg:w="2"/><text x="0.4201%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.1701%" y="677" width="0.0103%" height="15" fill="rgb(210,16,53)" fg:x="33" fg:w="2"/><text x="0.4201%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="0.1701%" y="661" width="0.0103%" height="15" fill="rgb(235,124,12)" fg:x="33" fg:w="2"/><text x="0.4201%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="0.1701%" y="645" width="0.0103%" height="15" fill="rgb(224,169,11)" fg:x="33" fg:w="2"/><text x="0.4201%" y="655.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_rewards_late_at::{{closure}} (2 samples, 0.01%)</title><rect x="0.1701%" y="629" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="33" fg:w="2"/><text x="0.4201%" y="639.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_reward_address (2 samples, 0.01%)</title><rect x="0.1701%" y="613" width="0.0103%" height="15" fill="rgb(242,216,29)" fg:x="33" fg:w="2"/><text x="0.4201%" y="623.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (2 samples, 0.01%)</title><rect x="0.1701%" y="597" width="0.0103%" height="15" fill="rgb(230,116,27)" fg:x="33" fg:w="2"/><text x="0.4201%" y="607.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (2 samples, 0.01%)</title><rect x="0.1701%" y="581" width="0.0103%" height="15" fill="rgb(228,99,48)" fg:x="33" fg:w="2"/><text x="0.4201%" y="591.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (2 samples, 0.01%)</title><rect x="0.1701%" y="565" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="33" fg:w="2"/><text x="0.4201%" y="575.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (2 samples, 0.01%)</title><rect x="0.1701%" y="549" width="0.0103%" height="15" fill="rgb(247,143,39)" fg:x="33" fg:w="2"/><text x="0.4201%" y="559.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_reward_address (3 samples, 0.02%)</title><rect x="0.1804%" y="741" width="0.0155%" height="15" fill="rgb(236,97,10)" fg:x="35" fg:w="3"/><text x="0.4304%" y="751.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (2 samples, 0.01%)</title><rect x="0.1855%" y="725" width="0.0103%" height="15" fill="rgb(233,208,19)" fg:x="36" fg:w="2"/><text x="0.4355%" y="735.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (2 samples, 0.01%)</title><rect x="0.1855%" y="709" width="0.0103%" height="15" fill="rgb(216,164,2)" fg:x="36" fg:w="2"/><text x="0.4355%" y="719.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_rewards_late_at (6 samples, 0.03%)</title><rect x="0.1701%" y="757" width="0.0309%" height="15" fill="rgb(220,129,5)" fg:x="33" fg:w="6"/><text x="0.4201%" y="767.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_stakers (3 samples, 0.02%)</title><rect x="0.2010%" y="757" width="0.0155%" height="15" fill="rgb(242,17,10)" fg:x="39" fg:w="3"/><text x="0.4510%" y="767.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (3 samples, 0.02%)</title><rect x="0.2010%" y="741" width="0.0155%" height="15" fill="rgb(242,107,0)" fg:x="39" fg:w="3"/><text x="0.4510%" y="751.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (3 samples, 0.02%)</title><rect x="0.2010%" y="725" width="0.0155%" height="15" fill="rgb(251,28,31)" fg:x="39" fg:w="3"/><text x="0.4510%" y="735.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (3 samples, 0.02%)</title><rect x="0.2010%" y="709" width="0.0155%" height="15" fill="rgb(233,223,10)" fg:x="39" fg:w="3"/><text x="0.4510%" y="719.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (2 samples, 0.01%)</title><rect x="0.2061%" y="693" width="0.0103%" height="15" fill="rgb(215,21,27)" fg:x="40" fg:w="2"/><text x="0.4561%" y="703.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::run_the_loop (2 samples, 0.01%)</title><rect x="0.2061%" y="677" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="40" fg:w="2"/><text x="0.4561%" y="687.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::execute_frame (2 samples, 0.01%)</title><rect x="0.2061%" y="661" width="0.0103%" height="15" fill="rgb(244,5,23)" fg:x="40" fg:w="2"/><text x="0.4561%" y="671.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::execute_frame (2 samples, 0.01%)</title><rect x="0.2061%" y="645" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="40" fg:w="2"/><text x="0.4561%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.2061%" y="629" width="0.0103%" height="15" fill="rgb(247,70,30)" fg:x="40" fg:w="2"/><text x="0.4561%" y="639.50"></text></g><g><title>revm::handler::mainnet::execution::execute_frame (2 samples, 0.01%)</title><rect x="0.2061%" y="613" width="0.0103%" height="15" fill="rgb(212,68,19)" fg:x="40" fg:w="2"/><text x="0.4561%" y="623.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run (2 samples, 0.01%)</title><rect x="0.2061%" y="597" width="0.0103%" height="15" fill="rgb(240,187,13)" fg:x="40" fg:w="2"/><text x="0.4561%" y="607.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::step (2 samples, 0.01%)</title><rect x="0.2061%" y="581" width="0.0103%" height="15" fill="rgb(223,113,26)" fg:x="40" fg:w="2"/><text x="0.4561%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2 samples, 0.01%)</title><rect x="0.2061%" y="565" width="0.0103%" height="15" fill="rgb(206,192,2)" fg:x="40" fg:w="2"/><text x="0.4561%" y="575.50"></text></g><g><title>revm_interpreter::instructions::host::sload (2 samples, 0.01%)</title><rect x="0.2061%" y="549" width="0.0103%" height="15" fill="rgb(241,108,4)" fg:x="40" fg:w="2"/><text x="0.4561%" y="559.50"></text></g><g><title>&lt;revm::context::Context&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::sload (2 samples, 0.01%)</title><rect x="0.2061%" y="533" width="0.0103%" height="15" fill="rgb(247,173,49)" fg:x="40" fg:w="2"/><text x="0.4561%" y="543.50"></text></g><g><title>revm::context::inner_evm_context::InnerEvmContext&lt;DB&gt;::sload (2 samples, 0.01%)</title><rect x="0.2061%" y="517" width="0.0103%" height="15" fill="rgb(224,114,35)" fg:x="40" fg:w="2"/><text x="0.4561%" y="527.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (2 samples, 0.01%)</title><rect x="0.2061%" y="501" width="0.0103%" height="15" fill="rgb(245,159,27)" fg:x="40" fg:w="2"/><text x="0.4561%" y="511.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::storage (2 samples, 0.01%)</title><rect x="0.2061%" y="485" width="0.0103%" height="15" fill="rgb(245,172,44)" fg:x="40" fg:w="2"/><text x="0.4561%" y="495.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::storage_ref (2 samples, 0.01%)</title><rect x="0.2061%" y="469" width="0.0103%" height="15" fill="rgb(236,23,11)" fg:x="40" fg:w="2"/><text x="0.4561%" y="479.50"></text></g><g><title>zilliqa::state::State::get_account_storage (2 samples, 0.01%)</title><rect x="0.2061%" y="453" width="0.0103%" height="15" fill="rgb(205,117,38)" fg:x="40" fg:w="2"/><text x="0.4561%" y="463.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.01%)</title><rect x="0.2216%" y="357" width="0.0103%" height="15" fill="rgb(237,72,25)" fg:x="43" fg:w="2"/><text x="0.4716%" y="367.50"></text></g><g><title>unixRead (2 samples, 0.01%)</title><rect x="0.2216%" y="341" width="0.0103%" height="15" fill="rgb(244,70,9)" fg:x="43" fg:w="2"/><text x="0.4716%" y="351.50"></text></g><g><title>seekAndRead (2 samples, 0.01%)</title><rect x="0.2216%" y="325" width="0.0103%" height="15" fill="rgb(217,125,39)" fg:x="43" fg:w="2"/><text x="0.4716%" y="335.50"></text></g><g><title>__libc_pread64 (2 samples, 0.01%)</title><rect x="0.2216%" y="309" width="0.0103%" height="15" fill="rgb(235,36,10)" fg:x="43" fg:w="2"/><text x="0.4716%" y="319.50"></text></g><g><title>__libc_pread64 (2 samples, 0.01%)</title><rect x="0.2216%" y="293" width="0.0103%" height="15" fill="rgb(251,123,47)" fg:x="43" fg:w="2"/><text x="0.4716%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (35 samples, 0.18%)</title><rect x="0.0618%" y="837" width="0.1804%" height="15" fill="rgb(221,13,13)" fg:x="12" fg:w="35"/><text x="0.3118%" y="847.50"></text></g><g><title>it::produce_full::{{closure}}::{{closure}}::{{closure}}::{{closure}} (35 samples, 0.18%)</title><rect x="0.0618%" y="821" width="0.1804%" height="15" fill="rgb(238,131,9)" fg:x="12" fg:w="35"/><text x="0.3118%" y="831.50"></text></g><g><title>zilliqa::consensus::Consensus::timeout (35 samples, 0.18%)</title><rect x="0.0618%" y="805" width="0.1804%" height="15" fill="rgb(211,50,8)" fg:x="12" fg:w="35"/><text x="0.3118%" y="815.50"></text></g><g><title>zilliqa::consensus::Consensus::propose_new_block (35 samples, 0.18%)</title><rect x="0.0618%" y="789" width="0.1804%" height="15" fill="rgb(245,182,24)" fg:x="12" fg:w="35"/><text x="0.3118%" y="799.50"></text></g><g><title>zilliqa::consensus::Consensus::early_proposal_finish_at (14 samples, 0.07%)</title><rect x="0.1701%" y="773" width="0.0721%" height="15" fill="rgb(242,14,37)" fg:x="33" fg:w="14"/><text x="0.4201%" y="783.50"></text></g><g><title>zilliqa::state::State::root_hash (4 samples, 0.02%)</title><rect x="0.2216%" y="757" width="0.0206%" height="15" fill="rgb(246,228,12)" fg:x="43" fg:w="4"/><text x="0.4716%" y="767.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (4 samples, 0.02%)</title><rect x="0.2216%" y="741" width="0.0206%" height="15" fill="rgb(213,55,15)" fg:x="43" fg:w="4"/><text x="0.4716%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (4 samples, 0.02%)</title><rect x="0.2216%" y="725" width="0.0206%" height="15" fill="rgb(209,9,3)" fg:x="43" fg:w="4"/><text x="0.4716%" y="735.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::insert_batch (4 samples, 0.02%)</title><rect x="0.2216%" y="709" width="0.0206%" height="15" fill="rgb(230,59,30)" fg:x="43" fg:w="4"/><text x="0.4716%" y="719.50"></text></g><g><title>rusqlite::Connection::execute (4 samples, 0.02%)</title><rect x="0.2216%" y="693" width="0.0206%" height="15" fill="rgb(209,121,21)" fg:x="43" fg:w="4"/><text x="0.4716%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="0.2216%" y="677" width="0.0206%" height="15" fill="rgb(220,109,13)" fg:x="43" fg:w="4"/><text x="0.4716%" y="687.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (4 samples, 0.02%)</title><rect x="0.2216%" y="661" width="0.0206%" height="15" fill="rgb(232,18,1)" fg:x="43" fg:w="4"/><text x="0.4716%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="0.2216%" y="645" width="0.0206%" height="15" fill="rgb(215,41,42)" fg:x="43" fg:w="4"/><text x="0.4716%" y="655.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="0.2216%" y="629" width="0.0206%" height="15" fill="rgb(224,123,36)" fg:x="43" fg:w="4"/><text x="0.4716%" y="639.50"></text></g><g><title>rusqlite::statement::Statement::execute (4 samples, 0.02%)</title><rect x="0.2216%" y="613" width="0.0206%" height="15" fill="rgb(240,125,3)" fg:x="43" fg:w="4"/><text x="0.4716%" y="623.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (4 samples, 0.02%)</title><rect x="0.2216%" y="597" width="0.0206%" height="15" fill="rgb(205,98,50)" fg:x="43" fg:w="4"/><text x="0.4716%" y="607.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (4 samples, 0.02%)</title><rect x="0.2216%" y="581" width="0.0206%" height="15" fill="rgb(205,185,37)" fg:x="43" fg:w="4"/><text x="0.4716%" y="591.50"></text></g><g><title>sqlite3_step (4 samples, 0.02%)</title><rect x="0.2216%" y="565" width="0.0206%" height="15" fill="rgb(238,207,15)" fg:x="43" fg:w="4"/><text x="0.4716%" y="575.50"></text></g><g><title>sqlite3_step (4 samples, 0.02%)</title><rect x="0.2216%" y="549" width="0.0206%" height="15" fill="rgb(213,199,42)" fg:x="43" fg:w="4"/><text x="0.4716%" y="559.50"></text></g><g><title>sqlite3Step (4 samples, 0.02%)</title><rect x="0.2216%" y="533" width="0.0206%" height="15" fill="rgb(235,201,11)" fg:x="43" fg:w="4"/><text x="0.4716%" y="543.50"></text></g><g><title>doWalCallbacks (4 samples, 0.02%)</title><rect x="0.2216%" y="517" width="0.0206%" height="15" fill="rgb(207,46,11)" fg:x="43" fg:w="4"/><text x="0.4716%" y="527.50"></text></g><g><title>sqlite3WalDefaultHook (4 samples, 0.02%)</title><rect x="0.2216%" y="501" width="0.0206%" height="15" fill="rgb(241,35,35)" fg:x="43" fg:w="4"/><text x="0.4716%" y="511.50"></text></g><g><title>sqlite3WalDefaultHook (4 samples, 0.02%)</title><rect x="0.2216%" y="485" width="0.0206%" height="15" fill="rgb(243,32,47)" fg:x="43" fg:w="4"/><text x="0.4716%" y="495.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (4 samples, 0.02%)</title><rect x="0.2216%" y="469" width="0.0206%" height="15" fill="rgb(247,202,23)" fg:x="43" fg:w="4"/><text x="0.4716%" y="479.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (4 samples, 0.02%)</title><rect x="0.2216%" y="453" width="0.0206%" height="15" fill="rgb(219,102,11)" fg:x="43" fg:w="4"/><text x="0.4716%" y="463.50"></text></g><g><title>sqlite3Checkpoint (4 samples, 0.02%)</title><rect x="0.2216%" y="437" width="0.0206%" height="15" fill="rgb(243,110,44)" fg:x="43" fg:w="4"/><text x="0.4716%" y="447.50"></text></g><g><title>sqlite3BtreeCheckpoint (4 samples, 0.02%)</title><rect x="0.2216%" y="421" width="0.0206%" height="15" fill="rgb(222,74,54)" fg:x="43" fg:w="4"/><text x="0.4716%" y="431.50"></text></g><g><title>sqlite3PagerCheckpoint (4 samples, 0.02%)</title><rect x="0.2216%" y="405" width="0.0206%" height="15" fill="rgb(216,99,12)" fg:x="43" fg:w="4"/><text x="0.4716%" y="415.50"></text></g><g><title>sqlite3WalCheckpoint (4 samples, 0.02%)</title><rect x="0.2216%" y="389" width="0.0206%" height="15" fill="rgb(226,22,26)" fg:x="43" fg:w="4"/><text x="0.4716%" y="399.50"></text></g><g><title>walCheckpoint (4 samples, 0.02%)</title><rect x="0.2216%" y="373" width="0.0206%" height="15" fill="rgb(217,163,10)" fg:x="43" fg:w="4"/><text x="0.4716%" y="383.50"></text></g><g><title>sqlite3OsSync (2 samples, 0.01%)</title><rect x="0.2319%" y="357" width="0.0103%" height="15" fill="rgb(213,25,53)" fg:x="45" fg:w="2"/><text x="0.4819%" y="367.50"></text></g><g><title>sqlite3OsSync (2 samples, 0.01%)</title><rect x="0.2319%" y="341" width="0.0103%" height="15" fill="rgb(252,105,26)" fg:x="45" fg:w="2"/><text x="0.4819%" y="351.50"></text></g><g><title>unixSync (2 samples, 0.01%)</title><rect x="0.2319%" y="325" width="0.0103%" height="15" fill="rgb(220,39,43)" fg:x="45" fg:w="2"/><text x="0.4819%" y="335.50"></text></g><g><title>full_fsync (2 samples, 0.01%)</title><rect x="0.2319%" y="309" width="0.0103%" height="15" fill="rgb(229,68,48)" fg:x="45" fg:w="2"/><text x="0.4819%" y="319.50"></text></g><g><title>__GI_fsync (2 samples, 0.01%)</title><rect x="0.2319%" y="293" width="0.0103%" height="15" fill="rgb(252,8,32)" fg:x="45" fg:w="2"/><text x="0.4819%" y="303.50"></text></g><g><title>clear_cofactor (2 samples, 0.01%)</title><rect x="0.2525%" y="661" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="49" fg:w="2"/><text x="0.5025%" y="671.50"></text></g><g><title>POINTonE2_times_minus_z (2 samples, 0.01%)</title><rect x="0.2525%" y="645" width="0.0103%" height="15" fill="rgb(229,81,49)" fg:x="49" fg:w="2"/><text x="0.5025%" y="655.50"></text></g><g><title>POINTonE2_add_n_dbl (2 samples, 0.01%)</title><rect x="0.2525%" y="629" width="0.0103%" height="15" fill="rgb(236,28,36)" fg:x="49" fg:w="2"/><text x="0.5025%" y="639.50"></text></g><g><title>POINTonE2_double (2 samples, 0.01%)</title><rect x="0.2525%" y="613" width="0.0103%" height="15" fill="rgb(249,185,26)" fg:x="49" fg:w="2"/><text x="0.5025%" y="623.50"></text></g><g><title>mul_fp2 (2 samples, 0.01%)</title><rect x="0.2525%" y="597" width="0.0103%" height="15" fill="rgb(249,174,33)" fg:x="49" fg:w="2"/><text x="0.5025%" y="607.50"></text></g><g><title>mulx_mont_384x (2 samples, 0.01%)</title><rect x="0.2525%" y="581" width="0.0103%" height="15" fill="rgb(233,201,37)" fg:x="49" fg:w="2"/><text x="0.5025%" y="591.50"></text></g><g><title>&lt;blsful::impls::g2::Bls12381G2Impl as blsful::traits::hash_to_point::HashToPoint&gt;::hash_to_point (3 samples, 0.02%)</title><rect x="0.2525%" y="709" width="0.0155%" height="15" fill="rgb(221,78,26)" fg:x="49" fg:w="3"/><text x="0.5025%" y="719.50"></text></g><g><title>blstrs_plus::g2::G2Projective::hash (3 samples, 0.02%)</title><rect x="0.2525%" y="693" width="0.0155%" height="15" fill="rgb(250,127,30)" fg:x="49" fg:w="3"/><text x="0.5025%" y="703.50"></text></g><g><title>map_to_g2 (3 samples, 0.02%)</title><rect x="0.2525%" y="677" width="0.0155%" height="15" fill="rgb(230,49,44)" fg:x="49" fg:w="3"/><text x="0.5025%" y="687.50"></text></g><g><title>&lt;blstrs_plus::pairing::MillerLoopResult as pairing::MillerLoopResult&gt;::final_exponentiation (2 samples, 0.01%)</title><rect x="0.2680%" y="677" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="52" fg:w="2"/><text x="0.5180%" y="687.50"></text></g><g><title>final_exp (2 samples, 0.01%)</title><rect x="0.2680%" y="661" width="0.0103%" height="15" fill="rgb(249,83,47)" fg:x="52" fg:w="2"/><text x="0.5180%" y="671.50"></text></g><g><title>raise_to_z_div_by_2 (2 samples, 0.01%)</title><rect x="0.2680%" y="645" width="0.0103%" height="15" fill="rgb(215,43,3)" fg:x="52" fg:w="2"/><text x="0.5180%" y="655.50"></text></g><g><title>mul_n_sqr (2 samples, 0.01%)</title><rect x="0.2680%" y="629" width="0.0103%" height="15" fill="rgb(238,154,13)" fg:x="52" fg:w="2"/><text x="0.5180%" y="639.50"></text></g><g><title>cyclotomic_sqr_fp12 (2 samples, 0.01%)</title><rect x="0.2680%" y="613" width="0.0103%" height="15" fill="rgb(219,56,2)" fg:x="52" fg:w="2"/><text x="0.5180%" y="623.50"></text></g><g><title>sqr_fp4 (2 samples, 0.01%)</title><rect x="0.2680%" y="597" width="0.0103%" height="15" fill="rgb(233,0,4)" fg:x="52" fg:w="2"/><text x="0.5180%" y="607.50"></text></g><g><title>blstrs_plus::pairing::multi_miller_loop (3 samples, 0.02%)</title><rect x="0.2783%" y="677" width="0.0155%" height="15" fill="rgb(235,30,7)" fg:x="54" fg:w="3"/><text x="0.5283%" y="687.50"></text></g><g><title>&lt;blstrs_plus::Bls12 as pairing::MultiMillerLoop&gt;::multi_miller_loop (3 samples, 0.02%)</title><rect x="0.2783%" y="661" width="0.0155%" height="15" fill="rgb(250,79,13)" fg:x="54" fg:w="3"/><text x="0.5283%" y="671.50"></text></g><g><title>miller_loop_lines (3 samples, 0.02%)</title><rect x="0.2783%" y="645" width="0.0155%" height="15" fill="rgb(211,146,34)" fg:x="54" fg:w="3"/><text x="0.5283%" y="655.50"></text></g><g><title>post_add_n_dbl (3 samples, 0.02%)</title><rect x="0.2783%" y="629" width="0.0155%" height="15" fill="rgb(228,22,38)" fg:x="54" fg:w="3"/><text x="0.5283%" y="639.50"></text></g><g><title>sqr_fp12 (3 samples, 0.02%)</title><rect x="0.2783%" y="613" width="0.0155%" height="15" fill="rgb(235,168,5)" fg:x="54" fg:w="3"/><text x="0.5283%" y="623.50"></text></g><g><title>mul_fp6 (2 samples, 0.01%)</title><rect x="0.2834%" y="597" width="0.0103%" height="15" fill="rgb(221,155,16)" fg:x="55" fg:w="2"/><text x="0.5334%" y="607.50"></text></g><g><title>redc_fp6x2 (2 samples, 0.01%)</title><rect x="0.2834%" y="581" width="0.0103%" height="15" fill="rgb(215,215,53)" fg:x="55" fg:w="2"/><text x="0.5334%" y="591.50"></text></g><g><title>redc_fp2x2 (2 samples, 0.01%)</title><rect x="0.2834%" y="565" width="0.0103%" height="15" fill="rgb(223,4,10)" fg:x="55" fg:w="2"/><text x="0.5334%" y="575.50"></text></g><g><title>redcx_mont_384 (2 samples, 0.01%)</title><rect x="0.2834%" y="549" width="0.0103%" height="15" fill="rgb(234,103,6)" fg:x="55" fg:w="2"/><text x="0.5334%" y="559.50"></text></g><g><title>zilliqa::consensus::Consensus::verify_qc_signature (9 samples, 0.05%)</title><rect x="0.2525%" y="805" width="0.0464%" height="15" fill="rgb(227,97,0)" fg:x="49" fg:w="9"/><text x="0.5025%" y="815.50"></text></g><g><title>zilliqa::message::QuorumCertificate::verify (9 samples, 0.05%)</title><rect x="0.2525%" y="789" width="0.0464%" height="15" fill="rgb(234,150,53)" fg:x="49" fg:w="9"/><text x="0.5025%" y="799.50"></text></g><g><title>zilliqa::crypto::NodeSignature::verify_aggregate (9 samples, 0.05%)</title><rect x="0.2525%" y="773" width="0.0464%" height="15" fill="rgb(228,201,54)" fg:x="49" fg:w="9"/><text x="0.5025%" y="783.50"></text></g><g><title>blsful::multi_signature::MultiSignature&lt;C&gt;::verify (9 samples, 0.05%)</title><rect x="0.2525%" y="757" width="0.0464%" height="15" fill="rgb(222,22,37)" fg:x="49" fg:w="9"/><text x="0.5025%" y="767.50"></text></g><g><title>blsful::traits::sig_basic::BlsSignatureBasic::verify (9 samples, 0.05%)</title><rect x="0.2525%" y="741" width="0.0464%" height="15" fill="rgb(237,53,32)" fg:x="49" fg:w="9"/><text x="0.5025%" y="751.50"></text></g><g><title>blsful::traits::sig_core::BlsSignatureCore::core_verify (9 samples, 0.05%)</title><rect x="0.2525%" y="725" width="0.0464%" height="15" fill="rgb(233,25,53)" fg:x="49" fg:w="9"/><text x="0.5025%" y="735.50"></text></g><g><title>&lt;blsful::impls::g2::Bls12381G2Impl as blsful::traits::pairings::Pairing&gt;::pairing (6 samples, 0.03%)</title><rect x="0.2680%" y="709" width="0.0309%" height="15" fill="rgb(210,40,34)" fg:x="52" fg:w="6"/><text x="0.5180%" y="719.50"></text></g><g><title>blsful::helpers::pairing_g2_g1 (6 samples, 0.03%)</title><rect x="0.2680%" y="693" width="0.0309%" height="15" fill="rgb(241,220,44)" fg:x="52" fg:w="6"/><text x="0.5180%" y="703.50"></text></g><g><title>zilliqa::crypto::NodePublicKey::verify (4 samples, 0.02%)</title><rect x="0.2989%" y="805" width="0.0206%" height="15" fill="rgb(235,28,35)" fg:x="58" fg:w="4"/><text x="0.5489%" y="815.50"></text></g><g><title>blsful::signature::Signature&lt;C&gt;::verify (4 samples, 0.02%)</title><rect x="0.2989%" y="789" width="0.0206%" height="15" fill="rgb(210,56,17)" fg:x="58" fg:w="4"/><text x="0.5489%" y="799.50"></text></g><g><title>blsful::traits::sig_core::BlsSignatureCore::core_verify (4 samples, 0.02%)</title><rect x="0.2989%" y="773" width="0.0206%" height="15" fill="rgb(224,130,29)" fg:x="58" fg:w="4"/><text x="0.5489%" y="783.50"></text></g><g><title>&lt;blsful::impls::g2::Bls12381G2Impl as blsful::traits::pairings::Pairing&gt;::pairing (4 samples, 0.02%)</title><rect x="0.2989%" y="757" width="0.0206%" height="15" fill="rgb(235,212,8)" fg:x="58" fg:w="4"/><text x="0.5489%" y="767.50"></text></g><g><title>blsful::helpers::pairing_g2_g1 (4 samples, 0.02%)</title><rect x="0.2989%" y="741" width="0.0206%" height="15" fill="rgb(223,33,50)" fg:x="58" fg:w="4"/><text x="0.5489%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="0.3092%" y="725" width="0.0103%" height="15" fill="rgb(219,149,13)" fg:x="60" fg:w="2"/><text x="0.5592%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.3092%" y="709" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="60" fg:w="2"/><text x="0.5592%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.3092%" y="693" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="60" fg:w="2"/><text x="0.5592%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.3092%" y="677" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="60" fg:w="2"/><text x="0.5592%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="0.3092%" y="661" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="60" fg:w="2"/><text x="0.5592%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="0.3092%" y="645" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="60" fg:w="2"/><text x="0.5592%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="0.3092%" y="629" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="60" fg:w="2"/><text x="0.5592%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.3092%" y="613" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="60" fg:w="2"/><text x="0.5592%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.3092%" y="597" width="0.0103%" height="15" fill="rgb(254,173,49)" fg:x="60" fg:w="2"/><text x="0.5592%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="0.3092%" y="581" width="0.0103%" height="15" fill="rgb(221,1,38)" fg:x="60" fg:w="2"/><text x="0.5592%" y="591.50"></text></g><g><title>blsful::helpers::pairing_g2_g1::{{closure}} (2 samples, 0.01%)</title><rect x="0.3092%" y="565" width="0.0103%" height="15" fill="rgb(206,124,46)" fg:x="60" fg:w="2"/><text x="0.5592%" y="575.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::run_the_loop (3 samples, 0.02%)</title><rect x="0.3195%" y="725" width="0.0155%" height="15" fill="rgb(249,21,11)" fg:x="62" fg:w="3"/><text x="0.5695%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::execute_frame (3 samples, 0.02%)</title><rect x="0.3195%" y="709" width="0.0155%" height="15" fill="rgb(222,201,40)" fg:x="62" fg:w="3"/><text x="0.5695%" y="719.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::execute_frame (3 samples, 0.02%)</title><rect x="0.3195%" y="693" width="0.0155%" height="15" fill="rgb(235,61,29)" fg:x="62" fg:w="3"/><text x="0.5695%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="0.3195%" y="677" width="0.0155%" height="15" fill="rgb(219,207,3)" fg:x="62" fg:w="3"/><text x="0.5695%" y="687.50"></text></g><g><title>revm::handler::mainnet::execution::execute_frame (3 samples, 0.02%)</title><rect x="0.3195%" y="661" width="0.0155%" height="15" fill="rgb(222,56,46)" fg:x="62" fg:w="3"/><text x="0.5695%" y="671.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run (3 samples, 0.02%)</title><rect x="0.3195%" y="645" width="0.0155%" height="15" fill="rgb(239,76,54)" fg:x="62" fg:w="3"/><text x="0.5695%" y="655.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::step (3 samples, 0.02%)</title><rect x="0.3195%" y="629" width="0.0155%" height="15" fill="rgb(231,124,27)" fg:x="62" fg:w="3"/><text x="0.5695%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (3 samples, 0.02%)</title><rect x="0.3195%" y="613" width="0.0155%" height="15" fill="rgb(249,195,6)" fg:x="62" fg:w="3"/><text x="0.5695%" y="623.50"></text></g><g><title>revm_interpreter::instructions::host::sload (3 samples, 0.02%)</title><rect x="0.3195%" y="597" width="0.0155%" height="15" fill="rgb(237,174,47)" fg:x="62" fg:w="3"/><text x="0.5695%" y="607.50"></text></g><g><title>&lt;revm::context::Context&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::sload (3 samples, 0.02%)</title><rect x="0.3195%" y="581" width="0.0155%" height="15" fill="rgb(206,201,31)" fg:x="62" fg:w="3"/><text x="0.5695%" y="591.50"></text></g><g><title>revm::context::inner_evm_context::InnerEvmContext&lt;DB&gt;::sload (3 samples, 0.02%)</title><rect x="0.3195%" y="565" width="0.0155%" height="15" fill="rgb(231,57,52)" fg:x="62" fg:w="3"/><text x="0.5695%" y="575.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (3 samples, 0.02%)</title><rect x="0.3195%" y="549" width="0.0155%" height="15" fill="rgb(248,177,22)" fg:x="62" fg:w="3"/><text x="0.5695%" y="559.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::storage (3 samples, 0.02%)</title><rect x="0.3195%" y="533" width="0.0155%" height="15" fill="rgb(215,211,37)" fg:x="62" fg:w="3"/><text x="0.5695%" y="543.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::storage_ref (3 samples, 0.02%)</title><rect x="0.3195%" y="517" width="0.0155%" height="15" fill="rgb(241,128,51)" fg:x="62" fg:w="3"/><text x="0.5695%" y="527.50"></text></g><g><title>zilliqa::state::State::get_account_storage (3 samples, 0.02%)</title><rect x="0.3195%" y="501" width="0.0155%" height="15" fill="rgb(227,165,31)" fg:x="62" fg:w="3"/><text x="0.5695%" y="511.50"></text></g><g><title>zilliqa::state::State::get_account_trie (2 samples, 0.01%)</title><rect x="0.3246%" y="485" width="0.0103%" height="15" fill="rgb(228,167,24)" fg:x="63" fg:w="2"/><text x="0.5746%" y="495.50"></text></g><g><title>zilliqa::state::State::get_account (2 samples, 0.01%)</title><rect x="0.3246%" y="469" width="0.0103%" height="15" fill="rgb(228,143,12)" fg:x="63" fg:w="2"/><text x="0.5746%" y="479.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (2 samples, 0.01%)</title><rect x="0.3246%" y="453" width="0.0103%" height="15" fill="rgb(249,149,8)" fg:x="63" fg:w="2"/><text x="0.5746%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="0.3246%" y="437" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="63" fg:w="2"/><text x="0.5746%" y="447.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="0.3246%" y="421" width="0.0103%" height="15" fill="rgb(246,89,9)" fg:x="63" fg:w="2"/><text x="0.5746%" y="431.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="0.3246%" y="405" width="0.0103%" height="15" fill="rgb(233,213,13)" fg:x="63" fg:w="2"/><text x="0.5746%" y="415.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (2 samples, 0.01%)</title><rect x="0.3246%" y="389" width="0.0103%" height="15" fill="rgb(233,141,41)" fg:x="63" fg:w="2"/><text x="0.5746%" y="399.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (2 samples, 0.01%)</title><rect x="0.3246%" y="373" width="0.0103%" height="15" fill="rgb(239,167,4)" fg:x="63" fg:w="2"/><text x="0.5746%" y="383.50"></text></g><g><title>rusqlite::Connection::query_row (2 samples, 0.01%)</title><rect x="0.3246%" y="357" width="0.0103%" height="15" fill="rgb(209,217,16)" fg:x="63" fg:w="2"/><text x="0.5746%" y="367.50"></text></g><g><title>rusqlite::statement::Statement::query_row (2 samples, 0.01%)</title><rect x="0.3246%" y="341" width="0.0103%" height="15" fill="rgb(219,88,35)" fg:x="63" fg:w="2"/><text x="0.5746%" y="351.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (2 samples, 0.01%)</title><rect x="0.3246%" y="325" width="0.0103%" height="15" fill="rgb(220,193,23)" fg:x="63" fg:w="2"/><text x="0.5746%" y="335.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.01%)</title><rect x="0.3246%" y="309" width="0.0103%" height="15" fill="rgb(230,90,52)" fg:x="63" fg:w="2"/><text x="0.5746%" y="319.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2 samples, 0.01%)</title><rect x="0.3246%" y="293" width="0.0103%" height="15" fill="rgb(252,106,19)" fg:x="63" fg:w="2"/><text x="0.5746%" y="303.50"></text></g><g><title>rusqlite::statement::Statement::step (2 samples, 0.01%)</title><rect x="0.3246%" y="277" width="0.0103%" height="15" fill="rgb(206,74,20)" fg:x="63" fg:w="2"/><text x="0.5746%" y="287.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.01%)</title><rect x="0.3246%" y="261" width="0.0103%" height="15" fill="rgb(230,138,44)" fg:x="63" fg:w="2"/><text x="0.5746%" y="271.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="0.3246%" y="245" width="0.0103%" height="15" fill="rgb(235,182,43)" fg:x="63" fg:w="2"/><text x="0.5746%" y="255.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="0.3246%" y="229" width="0.0103%" height="15" fill="rgb(242,16,51)" fg:x="63" fg:w="2"/><text x="0.5746%" y="239.50"></text></g><g><title>sqlite3Step (2 samples, 0.01%)</title><rect x="0.3246%" y="213" width="0.0103%" height="15" fill="rgb(248,9,4)" fg:x="63" fg:w="2"/><text x="0.5746%" y="223.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.01%)</title><rect x="0.3246%" y="197" width="0.0103%" height="15" fill="rgb(210,31,22)" fg:x="63" fg:w="2"/><text x="0.5746%" y="207.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_stakers (4 samples, 0.02%)</title><rect x="0.3195%" y="805" width="0.0206%" height="15" fill="rgb(239,54,39)" fg:x="62" fg:w="4"/><text x="0.5695%" y="815.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (4 samples, 0.02%)</title><rect x="0.3195%" y="789" width="0.0206%" height="15" fill="rgb(230,99,41)" fg:x="62" fg:w="4"/><text x="0.5695%" y="799.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (4 samples, 0.02%)</title><rect x="0.3195%" y="773" width="0.0206%" height="15" fill="rgb(253,106,12)" fg:x="62" fg:w="4"/><text x="0.5695%" y="783.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (4 samples, 0.02%)</title><rect x="0.3195%" y="757" width="0.0206%" height="15" fill="rgb(213,46,41)" fg:x="62" fg:w="4"/><text x="0.5695%" y="767.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (4 samples, 0.02%)</title><rect x="0.3195%" y="741" width="0.0206%" height="15" fill="rgb(215,133,35)" fg:x="62" fg:w="4"/><text x="0.5695%" y="751.50"></text></g><g><title>zilliqa::consensus::Consensus::check_block (21 samples, 0.11%)</title><rect x="0.2473%" y="821" width="0.1082%" height="15" fill="rgb(213,28,5)" fg:x="48" fg:w="21"/><text x="0.4973%" y="831.50"></text></g><g><title>zilliqa::message::Block::verify_hash (3 samples, 0.02%)</title><rect x="0.3401%" y="805" width="0.0155%" height="15" fill="rgb(215,77,49)" fg:x="66" fg:w="3"/><text x="0.5901%" y="815.50"></text></g><g><title>zilliqa::message::Block::compute_hash (3 samples, 0.02%)</title><rect x="0.3401%" y="789" width="0.0155%" height="15" fill="rgb(248,100,22)" fg:x="66" fg:w="3"/><text x="0.5901%" y="799.50"></text></g><g><title>zilliqa::crypto::HashBuilder::with_iter (3 samples, 0.02%)</title><rect x="0.3401%" y="773" width="0.0155%" height="15" fill="rgb(208,67,9)" fg:x="66" fg:w="3"/><text x="0.5901%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="0.3401%" y="757" width="0.0155%" height="15" fill="rgb(219,133,21)" fg:x="66" fg:w="3"/><text x="0.5901%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="0.3401%" y="741" width="0.0155%" height="15" fill="rgb(246,46,29)" fg:x="66" fg:w="3"/><text x="0.5901%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="0.3401%" y="725" width="0.0155%" height="15" fill="rgb(246,185,52)" fg:x="66" fg:w="3"/><text x="0.5901%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="0.3401%" y="709" width="0.0155%" height="15" fill="rgb(252,136,11)" fg:x="66" fg:w="3"/><text x="0.5901%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="0.3401%" y="693" width="0.0155%" height="15" fill="rgb(219,138,53)" fg:x="66" fg:w="3"/><text x="0.5901%" y="703.50"></text></g><g><title>zilliqa::crypto::HashBuilder::with_iter::{{closure}} (3 samples, 0.02%)</title><rect x="0.3401%" y="677" width="0.0155%" height="15" fill="rgb(211,51,23)" fg:x="66" fg:w="3"/><text x="0.5901%" y="687.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (3 samples, 0.02%)</title><rect x="0.3401%" y="661" width="0.0155%" height="15" fill="rgb(247,221,28)" fg:x="66" fg:w="3"/><text x="0.5901%" y="671.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (3 samples, 0.02%)</title><rect x="0.3401%" y="645" width="0.0155%" height="15" fill="rgb(251,222,45)" fg:x="66" fg:w="3"/><text x="0.5901%" y="655.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (3 samples, 0.02%)</title><rect x="0.3401%" y="629" width="0.0155%" height="15" fill="rgb(217,162,53)" fg:x="66" fg:w="3"/><text x="0.5901%" y="639.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::{{closure}} (3 samples, 0.02%)</title><rect x="0.3401%" y="613" width="0.0155%" height="15" fill="rgb(229,93,14)" fg:x="66" fg:w="3"/><text x="0.5901%" y="623.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::UpdateCore&gt;::update_blocks (3 samples, 0.02%)</title><rect x="0.3401%" y="597" width="0.0155%" height="15" fill="rgb(209,67,49)" fg:x="66" fg:w="3"/><text x="0.5901%" y="607.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (3 samples, 0.02%)</title><rect x="0.3401%" y="581" width="0.0155%" height="15" fill="rgb(213,87,29)" fg:x="66" fg:w="3"/><text x="0.5901%" y="591.50"></text></g><g><title>keccak::p1600 (3 samples, 0.02%)</title><rect x="0.3401%" y="565" width="0.0155%" height="15" fill="rgb(205,151,52)" fg:x="66" fg:w="3"/><text x="0.5901%" y="575.50"></text></g><g><title>keccak::keccak_p (3 samples, 0.02%)</title><rect x="0.3401%" y="549" width="0.0155%" height="15" fill="rgb(253,215,39)" fg:x="66" fg:w="3"/><text x="0.5901%" y="559.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (3 samples, 0.02%)</title><rect x="0.3401%" y="533" width="0.0155%" height="15" fill="rgb(221,220,41)" fg:x="66" fg:w="3"/><text x="0.5901%" y="543.50"></text></g><g><title>sqlite3_column_bytes (2 samples, 0.01%)</title><rect x="0.3865%" y="389" width="0.0103%" height="15" fill="rgb(218,133,21)" fg:x="75" fg:w="2"/><text x="0.6365%" y="399.50"></text></g><g><title>columnMem (2 samples, 0.01%)</title><rect x="0.3865%" y="373" width="0.0103%" height="15" fill="rgb(221,193,43)" fg:x="75" fg:w="2"/><text x="0.6365%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.04%)</title><rect x="0.3659%" y="517" width="0.0361%" height="15" fill="rgb(240,128,52)" fg:x="71" fg:w="7"/><text x="0.6159%" y="527.50"></text></g><g><title>&lt;rusqlite::row::MappedRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7 samples, 0.04%)</title><rect x="0.3659%" y="501" width="0.0361%" height="15" fill="rgb(253,114,12)" fg:x="71" fg:w="7"/><text x="0.6159%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.04%)</title><rect x="0.3659%" y="485" width="0.0361%" height="15" fill="rgb(215,223,47)" fg:x="71" fg:w="7"/><text x="0.6159%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.04%)</title><rect x="0.3659%" y="469" width="0.0361%" height="15" fill="rgb(248,225,23)" fg:x="71" fg:w="7"/><text x="0.6159%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.04%)</title><rect x="0.3659%" y="453" width="0.0361%" height="15" fill="rgb(250,108,0)" fg:x="71" fg:w="7"/><text x="0.6159%" y="463.50"></text></g><g><title>zilliqa::db::Db::make_receipt (7 samples, 0.04%)</title><rect x="0.3659%" y="437" width="0.0361%" height="15" fill="rgb(228,208,7)" fg:x="71" fg:w="7"/><text x="0.6159%" y="447.50"></text></g><g><title>rusqlite::row::Row::get (6 samples, 0.03%)</title><rect x="0.3710%" y="421" width="0.0309%" height="15" fill="rgb(244,45,10)" fg:x="72" fg:w="6"/><text x="0.6210%" y="431.50"></text></g><g><title>rusqlite::statement::Statement::value_ref (5 samples, 0.03%)</title><rect x="0.3762%" y="405" width="0.0258%" height="15" fill="rgb(207,125,25)" fg:x="73" fg:w="5"/><text x="0.6262%" y="415.50"></text></g><g><title>zilliqa::consensus::Consensus::check_safe_block (14 samples, 0.07%)</title><rect x="0.3556%" y="821" width="0.0721%" height="15" fill="rgb(210,195,18)" fg:x="69" fg:w="14"/><text x="0.6056%" y="831.50"></text></g><g><title>zilliqa::consensus::Consensus::check_and_commit (14 samples, 0.07%)</title><rect x="0.3556%" y="805" width="0.0721%" height="15" fill="rgb(249,80,12)" fg:x="69" fg:w="14"/><text x="0.6056%" y="815.50"></text></g><g><title>zilliqa::consensus::Consensus::finalize_block (14 samples, 0.07%)</title><rect x="0.3556%" y="789" width="0.0721%" height="15" fill="rgb(221,65,9)" fg:x="69" fg:w="14"/><text x="0.6056%" y="799.50"></text></g><g><title>zilliqa::db::Db::get_transaction_receipts_in_block (13 samples, 0.07%)</title><rect x="0.3607%" y="773" width="0.0670%" height="15" fill="rgb(235,49,36)" fg:x="70" fg:w="13"/><text x="0.6107%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.07%)</title><rect x="0.3607%" y="757" width="0.0670%" height="15" fill="rgb(225,32,20)" fg:x="70" fg:w="13"/><text x="0.6107%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (13 samples, 0.07%)</title><rect x="0.3607%" y="741" width="0.0670%" height="15" fill="rgb(215,141,46)" fg:x="70" fg:w="13"/><text x="0.6107%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 0.07%)</title><rect x="0.3607%" y="725" width="0.0670%" height="15" fill="rgb(250,160,47)" fg:x="70" fg:w="13"/><text x="0.6107%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.07%)</title><rect x="0.3607%" y="709" width="0.0670%" height="15" fill="rgb(216,222,40)" fg:x="70" fg:w="13"/><text x="0.6107%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.07%)</title><rect x="0.3607%" y="693" width="0.0670%" height="15" fill="rgb(234,217,39)" fg:x="70" fg:w="13"/><text x="0.6107%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.07%)</title><rect x="0.3607%" y="677" width="0.0670%" height="15" fill="rgb(207,178,40)" fg:x="70" fg:w="13"/><text x="0.6107%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.07%)</title><rect x="0.3607%" y="661" width="0.0670%" height="15" fill="rgb(221,136,13)" fg:x="70" fg:w="13"/><text x="0.6107%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.07%)</title><rect x="0.3607%" y="645" width="0.0670%" height="15" fill="rgb(249,199,10)" fg:x="70" fg:w="13"/><text x="0.6107%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.07%)</title><rect x="0.3607%" y="629" width="0.0670%" height="15" fill="rgb(249,222,13)" fg:x="70" fg:w="13"/><text x="0.6107%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (13 samples, 0.07%)</title><rect x="0.3607%" y="613" width="0.0670%" height="15" fill="rgb(244,185,38)" fg:x="70" fg:w="13"/><text x="0.6107%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.07%)</title><rect x="0.3607%" y="597" width="0.0670%" height="15" fill="rgb(236,202,9)" fg:x="70" fg:w="13"/><text x="0.6107%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.07%)</title><rect x="0.3607%" y="581" width="0.0670%" height="15" fill="rgb(250,229,37)" fg:x="70" fg:w="13"/><text x="0.6107%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.07%)</title><rect x="0.3607%" y="565" width="0.0670%" height="15" fill="rgb(206,174,23)" fg:x="70" fg:w="13"/><text x="0.6107%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.07%)</title><rect x="0.3607%" y="549" width="0.0670%" height="15" fill="rgb(211,33,43)" fg:x="70" fg:w="13"/><text x="0.6107%" y="559.50"></text></g><g><title>&lt;rusqlite::row::MappedRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="0.3659%" y="533" width="0.0618%" height="15" fill="rgb(245,58,50)" fg:x="71" fg:w="12"/><text x="0.6159%" y="543.50"></text></g><g><title>rusqlite::row::Rows::next (5 samples, 0.03%)</title><rect x="0.4019%" y="517" width="0.0258%" height="15" fill="rgb(244,68,36)" fg:x="78" fg:w="5"/><text x="0.6519%" y="527.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (5 samples, 0.03%)</title><rect x="0.4019%" y="501" width="0.0258%" height="15" fill="rgb(232,229,15)" fg:x="78" fg:w="5"/><text x="0.6519%" y="511.50"></text></g><g><title>rusqlite::statement::Statement::step (5 samples, 0.03%)</title><rect x="0.4019%" y="485" width="0.0258%" height="15" fill="rgb(254,30,23)" fg:x="78" fg:w="5"/><text x="0.6519%" y="495.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (5 samples, 0.03%)</title><rect x="0.4019%" y="469" width="0.0258%" height="15" fill="rgb(235,160,14)" fg:x="78" fg:w="5"/><text x="0.6519%" y="479.50"></text></g><g><title>sqlite3_step (5 samples, 0.03%)</title><rect x="0.4019%" y="453" width="0.0258%" height="15" fill="rgb(212,155,44)" fg:x="78" fg:w="5"/><text x="0.6519%" y="463.50"></text></g><g><title>sqlite3_step (5 samples, 0.03%)</title><rect x="0.4019%" y="437" width="0.0258%" height="15" fill="rgb(226,2,50)" fg:x="78" fg:w="5"/><text x="0.6519%" y="447.50"></text></g><g><title>sqlite3Step (5 samples, 0.03%)</title><rect x="0.4019%" y="421" width="0.0258%" height="15" fill="rgb(234,177,6)" fg:x="78" fg:w="5"/><text x="0.6519%" y="431.50"></text></g><g><title>sqlite3VdbeExec (5 samples, 0.03%)</title><rect x="0.4019%" y="405" width="0.0258%" height="15" fill="rgb(217,24,9)" fg:x="78" fg:w="5"/><text x="0.6519%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="0.4277%" y="741" width="0.0103%" height="15" fill="rgb(220,13,46)" fg:x="83" fg:w="2"/><text x="0.6777%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.4277%" y="725" width="0.0103%" height="15" fill="rgb(239,221,27)" fg:x="83" fg:w="2"/><text x="0.6777%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.01%)</title><rect x="0.4277%" y="709" width="0.0103%" height="15" fill="rgb(222,198,25)" fg:x="83" fg:w="2"/><text x="0.6777%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2 samples, 0.01%)</title><rect x="0.4277%" y="693" width="0.0103%" height="15" fill="rgb(211,99,13)" fg:x="83" fg:w="2"/><text x="0.6777%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="0.4277%" y="677" width="0.0103%" height="15" fill="rgb(232,111,31)" fg:x="83" fg:w="2"/><text x="0.6777%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.4277%" y="661" width="0.0103%" height="15" fill="rgb(245,82,37)" fg:x="83" fg:w="2"/><text x="0.6777%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.4277%" y="645" width="0.0103%" height="15" fill="rgb(227,149,46)" fg:x="83" fg:w="2"/><text x="0.6777%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.4277%" y="629" width="0.0103%" height="15" fill="rgb(218,36,50)" fg:x="83" fg:w="2"/><text x="0.6777%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="0.4277%" y="613" width="0.0103%" height="15" fill="rgb(226,80,48)" fg:x="83" fg:w="2"/><text x="0.6777%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="0.4277%" y="597" width="0.0103%" height="15" fill="rgb(238,224,15)" fg:x="83" fg:w="2"/><text x="0.6777%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.4277%" y="581" width="0.0103%" height="15" fill="rgb(241,136,10)" fg:x="83" fg:w="2"/><text x="0.6777%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.01%)</title><rect x="0.4277%" y="565" width="0.0103%" height="15" fill="rgb(208,32,45)" fg:x="83" fg:w="2"/><text x="0.6777%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="0.4277%" y="549" width="0.0103%" height="15" fill="rgb(207,135,9)" fg:x="83" fg:w="2"/><text x="0.6777%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="0.4277%" y="533" width="0.0103%" height="15" fill="rgb(206,86,44)" fg:x="83" fg:w="2"/><text x="0.6777%" y="543.50"></text></g><g><title>&lt;rusqlite::row::MappedRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.4277%" y="517" width="0.0103%" height="15" fill="rgb(245,177,15)" fg:x="83" fg:w="2"/><text x="0.6777%" y="527.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.01%)</title><rect x="0.4277%" y="501" width="0.0103%" height="15" fill="rgb(206,64,50)" fg:x="83" fg:w="2"/><text x="0.6777%" y="511.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2 samples, 0.01%)</title><rect x="0.4277%" y="485" width="0.0103%" height="15" fill="rgb(234,36,40)" fg:x="83" fg:w="2"/><text x="0.6777%" y="495.50"></text></g><g><title>rusqlite::statement::Statement::step (2 samples, 0.01%)</title><rect x="0.4277%" y="469" width="0.0103%" height="15" fill="rgb(213,64,8)" fg:x="83" fg:w="2"/><text x="0.6777%" y="479.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.01%)</title><rect x="0.4277%" y="453" width="0.0103%" height="15" fill="rgb(210,75,36)" fg:x="83" fg:w="2"/><text x="0.6777%" y="463.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="0.4277%" y="437" width="0.0103%" height="15" fill="rgb(229,88,21)" fg:x="83" fg:w="2"/><text x="0.6777%" y="447.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="0.4277%" y="421" width="0.0103%" height="15" fill="rgb(252,204,47)" fg:x="83" fg:w="2"/><text x="0.6777%" y="431.50"></text></g><g><title>sqlite3Step (2 samples, 0.01%)</title><rect x="0.4277%" y="405" width="0.0103%" height="15" fill="rgb(208,77,27)" fg:x="83" fg:w="2"/><text x="0.6777%" y="415.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.01%)</title><rect x="0.4277%" y="389" width="0.0103%" height="15" fill="rgb(221,76,26)" fg:x="83" fg:w="2"/><text x="0.6777%" y="399.50"></text></g><g><title>zilliqa::consensus::Consensus::cleanup_votes (3 samples, 0.02%)</title><rect x="0.4277%" y="821" width="0.0155%" height="15" fill="rgb(225,139,18)" fg:x="83" fg:w="3"/><text x="0.6777%" y="831.50"></text></g><g><title>zilliqa::consensus::Consensus::get_block (3 samples, 0.02%)</title><rect x="0.4277%" y="805" width="0.0155%" height="15" fill="rgb(230,137,11)" fg:x="83" fg:w="3"/><text x="0.6777%" y="815.50"></text></g><g><title>zilliqa::block_store::BlockStore::get_block (3 samples, 0.02%)</title><rect x="0.4277%" y="789" width="0.0155%" height="15" fill="rgb(212,28,1)" fg:x="83" fg:w="3"/><text x="0.6777%" y="799.50"></text></g><g><title>zilliqa::db::Db::get_block_by_hash (3 samples, 0.02%)</title><rect x="0.4277%" y="773" width="0.0155%" height="15" fill="rgb(248,164,17)" fg:x="83" fg:w="3"/><text x="0.6777%" y="783.50"></text></g><g><title>zilliqa::db::Db::get_block (3 samples, 0.02%)</title><rect x="0.4277%" y="757" width="0.0155%" height="15" fill="rgb(222,171,42)" fg:x="83" fg:w="3"/><text x="0.6777%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.03%)</title><rect x="0.4432%" y="757" width="0.0309%" height="15" fill="rgb(243,84,45)" fg:x="86" fg:w="6"/><text x="0.6932%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.03%)</title><rect x="0.4432%" y="741" width="0.0309%" height="15" fill="rgb(252,49,23)" fg:x="86" fg:w="6"/><text x="0.6932%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="0.4432%" y="725" width="0.0309%" height="15" fill="rgb(215,19,7)" fg:x="86" fg:w="6"/><text x="0.6932%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="0.4483%" y="709" width="0.0258%" height="15" fill="rgb(238,81,41)" fg:x="87" fg:w="5"/><text x="0.6983%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="0.4483%" y="693" width="0.0258%" height="15" fill="rgb(210,199,37)" fg:x="87" fg:w="5"/><text x="0.6983%" y="703.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="0.4483%" y="677" width="0.0258%" height="15" fill="rgb(244,192,49)" fg:x="87" fg:w="5"/><text x="0.6983%" y="687.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="0.4483%" y="661" width="0.0258%" height="15" fill="rgb(226,211,11)" fg:x="87" fg:w="5"/><text x="0.6983%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.03%)</title><rect x="0.4483%" y="645" width="0.0258%" height="15" fill="rgb(236,162,54)" fg:x="87" fg:w="5"/><text x="0.6983%" y="655.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="0.4483%" y="629" width="0.0258%" height="15" fill="rgb(220,229,9)" fg:x="87" fg:w="5"/><text x="0.6983%" y="639.50"></text></g><g><title>_int_realloc (5 samples, 0.03%)</title><rect x="0.4483%" y="613" width="0.0258%" height="15" fill="rgb(250,87,22)" fg:x="87" fg:w="5"/><text x="0.6983%" y="623.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="0.4638%" y="597" width="0.0103%" height="15" fill="rgb(239,43,17)" fg:x="90" fg:w="2"/><text x="0.7138%" y="607.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (9 samples, 0.05%)</title><rect x="0.4432%" y="789" width="0.0464%" height="15" fill="rgb(231,177,25)" fg:x="86" fg:w="9"/><text x="0.6932%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.05%)</title><rect x="0.4432%" y="773" width="0.0464%" height="15" fill="rgb(219,179,1)" fg:x="86" fg:w="9"/><text x="0.6932%" y="783.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="0.4741%" y="757" width="0.0155%" height="15" fill="rgb(238,219,53)" fg:x="92" fg:w="3"/><text x="0.7241%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.03%)</title><rect x="0.4895%" y="773" width="0.0258%" height="15" fill="rgb(232,167,36)" fg:x="95" fg:w="5"/><text x="0.7395%" y="783.50"></text></g><g><title>&lt;eth_trie::node::Node as core::clone::Clone&gt;::clone (9 samples, 0.05%)</title><rect x="0.5153%" y="757" width="0.0464%" height="15" fill="rgb(244,19,51)" fg:x="100" fg:w="9"/><text x="0.7653%" y="767.50"></text></g><g><title>&lt;eth_trie::node::Node as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="0.5617%" y="741" width="0.0412%" height="15" fill="rgb(224,6,22)" fg:x="109" fg:w="8"/><text x="0.8117%" y="751.50"></text></g><g><title>eth_trie::node::Node::from_extension (2 samples, 0.01%)</title><rect x="0.6132%" y="741" width="0.0103%" height="15" fill="rgb(224,145,5)" fg:x="119" fg:w="2"/><text x="0.8632%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="0.6132%" y="725" width="0.0103%" height="15" fill="rgb(234,130,49)" fg:x="119" fg:w="2"/><text x="0.8632%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="0.6132%" y="709" width="0.0103%" height="15" fill="rgb(254,6,2)" fg:x="119" fg:w="2"/><text x="0.8632%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="0.6132%" y="693" width="0.0103%" height="15" fill="rgb(208,96,46)" fg:x="119" fg:w="2"/><text x="0.8632%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="0.6132%" y="677" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="119" fg:w="2"/><text x="0.8632%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="0.6132%" y="661" width="0.0103%" height="15" fill="rgb(233,210,1)" fg:x="119" fg:w="2"/><text x="0.8632%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="0.6132%" y="645" width="0.0103%" height="15" fill="rgb(244,137,37)" fg:x="119" fg:w="2"/><text x="0.8632%" y="655.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="0.6132%" y="629" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="119" fg:w="2"/><text x="0.8632%" y="639.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="0.6132%" y="613" width="0.0103%" height="15" fill="rgb(239,18,37)" fg:x="119" fg:w="2"/><text x="0.8632%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="0.6132%" y="597" width="0.0103%" height="15" fill="rgb(218,185,22)" fg:x="119" fg:w="2"/><text x="0.8632%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="0.6132%" y="581" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="119" fg:w="2"/><text x="0.8632%" y="591.50"></text></g><g><title>eth_trie::nibbles::Nibbles::offset (2 samples, 0.01%)</title><rect x="0.6287%" y="725" width="0.0103%" height="15" fill="rgb(230,182,32)" fg:x="122" fg:w="2"/><text x="0.8787%" y="735.50"></text></g><g><title>eth_trie::nibbles::Nibbles::slice (2 samples, 0.01%)</title><rect x="0.6287%" y="709" width="0.0103%" height="15" fill="rgb(242,56,43)" fg:x="122" fg:w="2"/><text x="0.8787%" y="719.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_hex (2 samples, 0.01%)</title><rect x="0.6287%" y="693" width="0.0103%" height="15" fill="rgb(233,99,24)" fg:x="122" fg:w="2"/><text x="0.8787%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.6287%" y="677" width="0.0103%" height="15" fill="rgb(234,209,42)" fg:x="122" fg:w="2"/><text x="0.8787%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="0.6287%" y="661" width="0.0103%" height="15" fill="rgb(227,7,12)" fg:x="122" fg:w="2"/><text x="0.8787%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="0.6287%" y="645" width="0.0103%" height="15" fill="rgb(245,203,43)" fg:x="122" fg:w="2"/><text x="0.8787%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.6287%" y="629" width="0.0103%" height="15" fill="rgb(238,205,33)" fg:x="122" fg:w="2"/><text x="0.8787%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="0.6287%" y="613" width="0.0103%" height="15" fill="rgb(231,56,7)" fg:x="122" fg:w="2"/><text x="0.8787%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="0.6287%" y="597" width="0.0103%" height="15" fill="rgb(244,186,29)" fg:x="122" fg:w="2"/><text x="0.8787%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="0.6287%" y="581" width="0.0103%" height="15" fill="rgb(234,111,31)" fg:x="122" fg:w="2"/><text x="0.8787%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="0.6287%" y="565" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="122" fg:w="2"/><text x="0.8787%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="0.6287%" y="549" width="0.0103%" height="15" fill="rgb(249,206,44)" fg:x="122" fg:w="2"/><text x="0.8787%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="0.6287%" y="533" width="0.0103%" height="15" fill="rgb(251,153,30)" fg:x="122" fg:w="2"/><text x="0.8787%" y="543.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="0.6287%" y="517" width="0.0103%" height="15" fill="rgb(239,152,38)" fg:x="122" fg:w="2"/><text x="0.8787%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="0.6287%" y="501" width="0.0103%" height="15" fill="rgb(249,139,47)" fg:x="122" fg:w="2"/><text x="0.8787%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="0.6287%" y="485" width="0.0103%" height="15" fill="rgb(244,64,35)" fg:x="122" fg:w="2"/><text x="0.8787%" y="495.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="0.6287%" y="469" width="0.0103%" height="15" fill="rgb(216,46,15)" fg:x="122" fg:w="2"/><text x="0.8787%" y="479.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="0.6287%" y="453" width="0.0103%" height="15" fill="rgb(250,74,19)" fg:x="122" fg:w="2"/><text x="0.8787%" y="463.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::insert (41 samples, 0.21%)</title><rect x="0.4432%" y="805" width="0.2113%" height="15" fill="rgb(249,42,33)" fg:x="86" fg:w="41"/><text x="0.6932%" y="815.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (32 samples, 0.16%)</title><rect x="0.4895%" y="789" width="0.1649%" height="15" fill="rgb(242,149,17)" fg:x="95" fg:w="32"/><text x="0.7395%" y="799.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (27 samples, 0.14%)</title><rect x="0.5153%" y="773" width="0.1391%" height="15" fill="rgb(244,29,21)" fg:x="100" fg:w="27"/><text x="0.7653%" y="783.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (18 samples, 0.09%)</title><rect x="0.5617%" y="757" width="0.0928%" height="15" fill="rgb(220,130,37)" fg:x="109" fg:w="18"/><text x="0.8117%" y="767.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (6 samples, 0.03%)</title><rect x="0.6235%" y="741" width="0.0309%" height="15" fill="rgb(211,67,2)" fg:x="121" fg:w="6"/><text x="0.8735%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (2 samples, 0.01%)</title><rect x="0.6441%" y="725" width="0.0103%" height="15" fill="rgb(235,68,52)" fg:x="125" fg:w="2"/><text x="0.8941%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="0.6544%" y="773" width="0.0103%" height="15" fill="rgb(246,142,3)" fg:x="127" fg:w="2"/><text x="0.9044%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="0.6544%" y="757" width="0.0103%" height="15" fill="rgb(241,25,7)" fg:x="127" fg:w="2"/><text x="0.9044%" y="767.50"></text></g><g><title>_int_free_maybe_consolidate (2 samples, 0.01%)</title><rect x="0.6544%" y="741" width="0.0103%" height="15" fill="rgb(242,119,39)" fg:x="127" fg:w="2"/><text x="0.9044%" y="751.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="0.6544%" y="725" width="0.0103%" height="15" fill="rgb(241,98,45)" fg:x="127" fg:w="2"/><text x="0.9044%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.6647%" y="773" width="0.0103%" height="15" fill="rgb(254,28,30)" fg:x="129" fg:w="2"/><text x="0.9147%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="0.6647%" y="757" width="0.0103%" height="15" fill="rgb(241,142,54)" fg:x="129" fg:w="2"/><text x="0.9147%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="0.6647%" y="741" width="0.0103%" height="15" fill="rgb(222,85,15)" fg:x="129" fg:w="2"/><text x="0.9147%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.6647%" y="725" width="0.0103%" height="15" fill="rgb(210,85,47)" fg:x="129" fg:w="2"/><text x="0.9147%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="0.6647%" y="709" width="0.0103%" height="15" fill="rgb(224,206,25)" fg:x="129" fg:w="2"/><text x="0.9147%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.6647%" y="693" width="0.0103%" height="15" fill="rgb(243,201,19)" fg:x="129" fg:w="2"/><text x="0.9147%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="0.6647%" y="677" width="0.0103%" height="15" fill="rgb(236,59,4)" fg:x="129" fg:w="2"/><text x="0.9147%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="0.6750%" y="341" width="0.0103%" height="15" fill="rgb(254,179,45)" fg:x="131" fg:w="2"/><text x="0.9250%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::LeafNode&gt; (2 samples, 0.01%)</title><rect x="0.6750%" y="325" width="0.0103%" height="15" fill="rgb(226,14,10)" fg:x="131" fg:w="2"/><text x="0.9250%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="0.6750%" y="309" width="0.0103%" height="15" fill="rgb(244,27,41)" fg:x="131" fg:w="2"/><text x="0.9250%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="0.6750%" y="293" width="0.0103%" height="15" fill="rgb(235,35,32)" fg:x="131" fg:w="2"/><text x="0.9250%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.6750%" y="277" width="0.0103%" height="15" fill="rgb(218,68,31)" fg:x="131" fg:w="2"/><text x="0.9250%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="0.6750%" y="261" width="0.0103%" height="15" fill="rgb(207,120,37)" fg:x="131" fg:w="2"/><text x="0.9250%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="0.6750%" y="245" width="0.0103%" height="15" fill="rgb(227,98,0)" fg:x="131" fg:w="2"/><text x="0.9250%" y="255.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="0.6750%" y="229" width="0.0103%" height="15" fill="rgb(207,7,3)" fg:x="131" fg:w="2"/><text x="0.9250%" y="239.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="0.6750%" y="213" width="0.0103%" height="15" fill="rgb(206,98,19)" fg:x="131" fg:w="2"/><text x="0.9250%" y="223.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="0.6750%" y="197" width="0.0103%" height="15" fill="rgb(217,5,26)" fg:x="131" fg:w="2"/><text x="0.9250%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::node::LeafNode&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6750%" y="373" width="0.0155%" height="15" fill="rgb(235,190,38)" fg:x="131" fg:w="3"/><text x="0.9250%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.6750%" y="357" width="0.0155%" height="15" fill="rgb(247,86,24)" fg:x="131" fg:w="3"/><text x="0.9250%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="0.6750%" y="773" width="0.0309%" height="15" fill="rgb(205,101,16)" fg:x="131" fg:w="6"/><text x="0.9250%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="757" width="0.0309%" height="15" fill="rgb(246,168,33)" fg:x="131" fg:w="6"/><text x="0.9250%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="741" width="0.0309%" height="15" fill="rgb(231,114,1)" fg:x="131" fg:w="6"/><text x="0.9250%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="725" width="0.0309%" height="15" fill="rgb(207,184,53)" fg:x="131" fg:w="6"/><text x="0.9250%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="0.6750%" y="709" width="0.0309%" height="15" fill="rgb(224,95,51)" fg:x="131" fg:w="6"/><text x="0.9250%" y="719.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="693" width="0.0309%" height="15" fill="rgb(212,188,45)" fg:x="131" fg:w="6"/><text x="0.9250%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="677" width="0.0309%" height="15" fill="rgb(223,154,38)" fg:x="131" fg:w="6"/><text x="0.9250%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="661" width="0.0309%" height="15" fill="rgb(251,22,52)" fg:x="131" fg:w="6"/><text x="0.9250%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="0.6750%" y="645" width="0.0309%" height="15" fill="rgb(229,209,22)" fg:x="131" fg:w="6"/><text x="0.9250%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="0.6750%" y="629" width="0.0309%" height="15" fill="rgb(234,138,34)" fg:x="131" fg:w="6"/><text x="0.9250%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="613" width="0.0309%" height="15" fill="rgb(212,95,11)" fg:x="131" fg:w="6"/><text x="0.9250%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="597" width="0.0309%" height="15" fill="rgb(240,179,47)" fg:x="131" fg:w="6"/><text x="0.9250%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="581" width="0.0309%" height="15" fill="rgb(240,163,11)" fg:x="131" fg:w="6"/><text x="0.9250%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="0.6750%" y="565" width="0.0309%" height="15" fill="rgb(236,37,12)" fg:x="131" fg:w="6"/><text x="0.9250%" y="575.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="549" width="0.0309%" height="15" fill="rgb(232,164,16)" fg:x="131" fg:w="6"/><text x="0.9250%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="533" width="0.0309%" height="15" fill="rgb(244,205,15)" fg:x="131" fg:w="6"/><text x="0.9250%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="517" width="0.0309%" height="15" fill="rgb(223,117,47)" fg:x="131" fg:w="6"/><text x="0.9250%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="0.6750%" y="501" width="0.0309%" height="15" fill="rgb(244,107,35)" fg:x="131" fg:w="6"/><text x="0.9250%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="0.6750%" y="485" width="0.0309%" height="15" fill="rgb(205,140,8)" fg:x="131" fg:w="6"/><text x="0.9250%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="469" width="0.0309%" height="15" fill="rgb(228,84,46)" fg:x="131" fg:w="6"/><text x="0.9250%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="453" width="0.0309%" height="15" fill="rgb(254,188,9)" fg:x="131" fg:w="6"/><text x="0.9250%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="437" width="0.0309%" height="15" fill="rgb(206,112,54)" fg:x="131" fg:w="6"/><text x="0.9250%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="0.6750%" y="421" width="0.0309%" height="15" fill="rgb(216,84,49)" fg:x="131" fg:w="6"/><text x="0.9250%" y="431.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="405" width="0.0309%" height="15" fill="rgb(214,194,35)" fg:x="131" fg:w="6"/><text x="0.9250%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="0.6750%" y="389" width="0.0309%" height="15" fill="rgb(249,28,3)" fg:x="131" fg:w="6"/><text x="0.9250%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="373" width="0.0155%" height="15" fill="rgb(222,56,52)" fg:x="134" fg:w="3"/><text x="0.9405%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.6905%" y="357" width="0.0155%" height="15" fill="rgb(245,217,50)" fg:x="134" fg:w="3"/><text x="0.9405%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="0.6905%" y="341" width="0.0155%" height="15" fill="rgb(213,201,24)" fg:x="134" fg:w="3"/><text x="0.9405%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="325" width="0.0155%" height="15" fill="rgb(248,116,28)" fg:x="134" fg:w="3"/><text x="0.9405%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="309" width="0.0155%" height="15" fill="rgb(219,72,43)" fg:x="134" fg:w="3"/><text x="0.9405%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="293" width="0.0155%" height="15" fill="rgb(209,138,14)" fg:x="134" fg:w="3"/><text x="0.9405%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (3 samples, 0.02%)</title><rect x="0.6905%" y="277" width="0.0155%" height="15" fill="rgb(222,18,33)" fg:x="134" fg:w="3"/><text x="0.9405%" y="287.50"></text></g><g><title> 16]&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="261" width="0.0155%" height="15" fill="rgb(213,199,7)" fg:x="134" fg:w="3"/><text x="0.9405%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="245" width="0.0155%" height="15" fill="rgb(250,110,10)" fg:x="134" fg:w="3"/><text x="0.9405%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::node::LeafNode&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="229" width="0.0155%" height="15" fill="rgb(248,123,6)" fg:x="134" fg:w="3"/><text x="0.9405%" y="239.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.6905%" y="213" width="0.0155%" height="15" fill="rgb(206,91,31)" fg:x="134" fg:w="3"/><text x="0.9405%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="0.6905%" y="197" width="0.0155%" height="15" fill="rgb(211,154,13)" fg:x="134" fg:w="3"/><text x="0.9405%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::LeafNode&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="181" width="0.0155%" height="15" fill="rgb(225,148,7)" fg:x="134" fg:w="3"/><text x="0.9405%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::nibbles::Nibbles&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="165" width="0.0155%" height="15" fill="rgb(220,160,43)" fg:x="134" fg:w="3"/><text x="0.9405%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="149" width="0.0155%" height="15" fill="rgb(213,52,39)" fg:x="134" fg:w="3"/><text x="0.9405%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.02%)</title><rect x="0.6905%" y="133" width="0.0155%" height="15" fill="rgb(243,137,7)" fg:x="134" fg:w="3"/><text x="0.9405%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.6905%" y="117" width="0.0155%" height="15" fill="rgb(230,79,13)" fg:x="134" fg:w="3"/><text x="0.9405%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="0.6905%" y="101" width="0.0155%" height="15" fill="rgb(247,105,23)" fg:x="134" fg:w="3"/><text x="0.9405%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="0.6905%" y="85" width="0.0155%" height="15" fill="rgb(223,179,41)" fg:x="134" fg:w="3"/><text x="0.9405%" y="95.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.02%)</title><rect x="0.6905%" y="69" width="0.0155%" height="15" fill="rgb(218,9,34)" fg:x="134" fg:w="3"/><text x="0.9405%" y="79.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.02%)</title><rect x="0.6905%" y="53" width="0.0155%" height="15" fill="rgb(222,106,8)" fg:x="134" fg:w="3"/><text x="0.9405%" y="63.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="0.6905%" y="37" width="0.0155%" height="15" fill="rgb(211,220,0)" fg:x="134" fg:w="3"/><text x="0.9405%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="0.7060%" y="757" width="0.0258%" height="15" fill="rgb(229,52,16)" fg:x="137" fg:w="5"/><text x="0.9560%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.03%)</title><rect x="0.7060%" y="741" width="0.0258%" height="15" fill="rgb(212,155,18)" fg:x="137" fg:w="5"/><text x="0.9560%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.03%)</title><rect x="0.7060%" y="725" width="0.0258%" height="15" fill="rgb(242,21,14)" fg:x="137" fg:w="5"/><text x="0.9560%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.03%)</title><rect x="0.7060%" y="709" width="0.0258%" height="15" fill="rgb(222,19,48)" fg:x="137" fg:w="5"/><text x="0.9560%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="0.7111%" y="693" width="0.0206%" height="15" fill="rgb(232,45,27)" fg:x="138" fg:w="4"/><text x="0.9611%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="0.7111%" y="677" width="0.0206%" height="15" fill="rgb(249,103,42)" fg:x="138" fg:w="4"/><text x="0.9611%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned (4 samples, 0.02%)</title><rect x="0.7111%" y="661" width="0.0206%" height="15" fill="rgb(246,81,33)" fg:x="138" fg:w="4"/><text x="0.9611%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.7317%" y="741" width="0.0103%" height="15" fill="rgb(252,33,42)" fg:x="142" fg:w="2"/><text x="0.9817%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="0.7317%" y="725" width="0.0103%" height="15" fill="rgb(209,212,41)" fg:x="142" fg:w="2"/><text x="0.9817%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="0.7317%" y="709" width="0.0103%" height="15" fill="rgb(207,154,6)" fg:x="142" fg:w="2"/><text x="0.9817%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.7317%" y="693" width="0.0103%" height="15" fill="rgb(223,64,47)" fg:x="142" fg:w="2"/><text x="0.9817%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="0.7317%" y="677" width="0.0103%" height="15" fill="rgb(211,161,38)" fg:x="142" fg:w="2"/><text x="0.9817%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="0.7317%" y="661" width="0.0103%" height="15" fill="rgb(219,138,40)" fg:x="142" fg:w="2"/><text x="0.9817%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="0.7317%" y="645" width="0.0103%" height="15" fill="rgb(241,228,46)" fg:x="142" fg:w="2"/><text x="0.9817%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="0.7317%" y="629" width="0.0103%" height="15" fill="rgb(223,209,38)" fg:x="142" fg:w="2"/><text x="0.9817%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="0.7317%" y="613" width="0.0103%" height="15" fill="rgb(236,164,45)" fg:x="142" fg:w="2"/><text x="0.9817%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="0.7317%" y="597" width="0.0103%" height="15" fill="rgb(231,15,5)" fg:x="142" fg:w="2"/><text x="0.9817%" y="607.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="0.7317%" y="581" width="0.0103%" height="15" fill="rgb(252,35,15)" fg:x="142" fg:w="2"/><text x="0.9817%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="0.7317%" y="565" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="142" fg:w="2"/><text x="0.9817%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="0.7317%" y="549" width="0.0103%" height="15" fill="rgb(233,39,42)" fg:x="142" fg:w="2"/><text x="0.9817%" y="559.50"></text></g><g><title>&lt;eth_trie::db::MemoryDB as eth_trie::db::DB&gt;::insert (5 samples, 0.03%)</title><rect x="0.7317%" y="757" width="0.0258%" height="15" fill="rgb(238,110,33)" fg:x="142" fg:w="5"/><text x="0.9817%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.01%)</title><rect x="0.7472%" y="741" width="0.0103%" height="15" fill="rgb(233,195,10)" fg:x="145" fg:w="2"/><text x="0.9972%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="0.7472%" y="725" width="0.0103%" height="15" fill="rgb(254,105,3)" fg:x="145" fg:w="2"/><text x="0.9972%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="0.7472%" y="709" width="0.0103%" height="15" fill="rgb(221,225,9)" fg:x="145" fg:w="2"/><text x="0.9972%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="0.7472%" y="693" width="0.0103%" height="15" fill="rgb(224,227,45)" fg:x="145" fg:w="2"/><text x="0.9972%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="0.7472%" y="677" width="0.0103%" height="15" fill="rgb(229,198,43)" fg:x="145" fg:w="2"/><text x="0.9972%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.01%)</title><rect x="0.7472%" y="661" width="0.0103%" height="15" fill="rgb(206,209,35)" fg:x="145" fg:w="2"/><text x="0.9972%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.01%)</title><rect x="0.7472%" y="645" width="0.0103%" height="15" fill="rgb(245,195,53)" fg:x="145" fg:w="2"/><text x="0.9972%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="0.7575%" y="741" width="0.0258%" height="15" fill="rgb(240,92,26)" fg:x="147" fg:w="5"/><text x="1.0075%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (5 samples, 0.03%)</title><rect x="0.7575%" y="725" width="0.0258%" height="15" fill="rgb(207,40,23)" fg:x="147" fg:w="5"/><text x="1.0075%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.03%)</title><rect x="0.7575%" y="709" width="0.0258%" height="15" fill="rgb(223,111,35)" fg:x="147" fg:w="5"/><text x="1.0075%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.03%)</title><rect x="0.7575%" y="693" width="0.0258%" height="15" fill="rgb(229,147,28)" fg:x="147" fg:w="5"/><text x="1.0075%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="0.7575%" y="677" width="0.0258%" height="15" fill="rgb(211,29,28)" fg:x="147" fg:w="5"/><text x="1.0075%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="0.7575%" y="661" width="0.0258%" height="15" fill="rgb(228,72,33)" fg:x="147" fg:w="5"/><text x="1.0075%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="0.7575%" y="645" width="0.0258%" height="15" fill="rgb(205,214,31)" fg:x="147" fg:w="5"/><text x="1.0075%" y="655.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.03%)</title><rect x="0.7575%" y="629" width="0.0258%" height="15" fill="rgb(224,111,15)" fg:x="147" fg:w="5"/><text x="1.0075%" y="639.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.03%)</title><rect x="0.7575%" y="613" width="0.0258%" height="15" fill="rgb(253,21,26)" fg:x="147" fg:w="5"/><text x="1.0075%" y="623.50"></text></g><g><title>__GI___libc_free (5 samples, 0.03%)</title><rect x="0.7575%" y="597" width="0.0258%" height="15" fill="rgb(245,139,43)" fg:x="147" fg:w="5"/><text x="1.0075%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="0.7730%" y="581" width="0.0103%" height="15" fill="rgb(252,170,7)" fg:x="150" fg:w="2"/><text x="1.0230%" y="591.50"></text></g><g><title>eth_trie::db::DB::insert_batch (16 samples, 0.08%)</title><rect x="0.7060%" y="773" width="0.0824%" height="15" fill="rgb(231,118,14)" fg:x="137" fg:w="16"/><text x="0.9560%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="0.7575%" y="757" width="0.0309%" height="15" fill="rgb(238,83,0)" fg:x="147" fg:w="6"/><text x="1.0075%" y="767.50"></text></g><g><title>alloy_primitives::utils::keccak256 (2 samples, 0.01%)</title><rect x="0.7936%" y="693" width="0.0103%" height="15" fill="rgb(221,39,39)" fg:x="154" fg:w="2"/><text x="1.0436%" y="703.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (2 samples, 0.01%)</title><rect x="0.7936%" y="677" width="0.0103%" height="15" fill="rgb(222,119,46)" fg:x="154" fg:w="2"/><text x="1.0436%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::update (2 samples, 0.01%)</title><rect x="0.7936%" y="661" width="0.0103%" height="15" fill="rgb(222,165,49)" fg:x="154" fg:w="2"/><text x="1.0436%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::update (2 samples, 0.01%)</title><rect x="0.7936%" y="645" width="0.0103%" height="15" fill="rgb(219,113,52)" fg:x="154" fg:w="2"/><text x="1.0436%" y="655.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (2 samples, 0.01%)</title><rect x="0.7936%" y="629" width="0.0103%" height="15" fill="rgb(214,7,15)" fg:x="154" fg:w="2"/><text x="1.0436%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (2 samples, 0.01%)</title><rect x="0.7936%" y="613" width="0.0103%" height="15" fill="rgb(235,32,4)" fg:x="154" fg:w="2"/><text x="1.0436%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (2 samples, 0.01%)</title><rect x="0.7936%" y="597" width="0.0103%" height="15" fill="rgb(238,90,54)" fg:x="154" fg:w="2"/><text x="1.0436%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (2 samples, 0.01%)</title><rect x="0.7936%" y="581" width="0.0103%" height="15" fill="rgb(213,208,19)" fg:x="154" fg:w="2"/><text x="1.0436%" y="591.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (2 samples, 0.01%)</title><rect x="0.7936%" y="565" width="0.0103%" height="15" fill="rgb(233,156,4)" fg:x="154" fg:w="2"/><text x="1.0436%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.04%)</title><rect x="0.8039%" y="661" width="0.0361%" height="15" fill="rgb(207,194,5)" fg:x="156" fg:w="7"/><text x="1.0539%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.04%)</title><rect x="0.8039%" y="645" width="0.0361%" height="15" fill="rgb(206,111,30)" fg:x="156" fg:w="7"/><text x="1.0539%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.04%)</title><rect x="0.8039%" y="629" width="0.0361%" height="15" fill="rgb(243,70,54)" fg:x="156" fg:w="7"/><text x="1.0539%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.04%)</title><rect x="0.8039%" y="613" width="0.0361%" height="15" fill="rgb(242,28,8)" fg:x="156" fg:w="7"/><text x="1.0539%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="0.8039%" y="597" width="0.0361%" height="15" fill="rgb(219,106,18)" fg:x="156" fg:w="7"/><text x="1.0539%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="0.8039%" y="581" width="0.0361%" height="15" fill="rgb(244,222,10)" fg:x="156" fg:w="7"/><text x="1.0539%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.04%)</title><rect x="0.8039%" y="565" width="0.0361%" height="15" fill="rgb(236,179,52)" fg:x="156" fg:w="7"/><text x="1.0539%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="0.8039%" y="549" width="0.0361%" height="15" fill="rgb(213,23,39)" fg:x="156" fg:w="7"/><text x="1.0539%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="0.8039%" y="533" width="0.0361%" height="15" fill="rgb(238,48,10)" fg:x="156" fg:w="7"/><text x="1.0539%" y="543.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="0.8039%" y="517" width="0.0361%" height="15" fill="rgb(251,196,23)" fg:x="156" fg:w="7"/><text x="1.0539%" y="527.50"></text></g><g><title>__rdl_alloc (7 samples, 0.04%)</title><rect x="0.8039%" y="501" width="0.0361%" height="15" fill="rgb(250,152,24)" fg:x="156" fg:w="7"/><text x="1.0539%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.04%)</title><rect x="0.8039%" y="485" width="0.0361%" height="15" fill="rgb(209,150,17)" fg:x="156" fg:w="7"/><text x="1.0539%" y="495.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="0.8039%" y="469" width="0.0361%" height="15" fill="rgb(234,202,34)" fg:x="156" fg:w="7"/><text x="1.0539%" y="479.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="0.8039%" y="453" width="0.0361%" height="15" fill="rgb(253,148,53)" fg:x="156" fg:w="7"/><text x="1.0539%" y="463.50"></text></g><g><title>unlink_chunk (7 samples, 0.04%)</title><rect x="0.8039%" y="437" width="0.0361%" height="15" fill="rgb(218,129,16)" fg:x="156" fg:w="7"/><text x="1.0539%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="0.8399%" y="661" width="0.0361%" height="15" fill="rgb(216,85,19)" fg:x="163" fg:w="7"/><text x="1.0899%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="0.8399%" y="645" width="0.0361%" height="15" fill="rgb(235,228,7)" fg:x="163" fg:w="7"/><text x="1.0899%" y="655.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="0.8399%" y="629" width="0.0361%" height="15" fill="rgb(245,175,0)" fg:x="163" fg:w="7"/><text x="1.0899%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="0.8399%" y="613" width="0.0361%" height="15" fill="rgb(208,168,36)" fg:x="163" fg:w="7"/><text x="1.0899%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="0.8399%" y="597" width="0.0361%" height="15" fill="rgb(246,171,24)" fg:x="163" fg:w="7"/><text x="1.0899%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="0.8399%" y="581" width="0.0361%" height="15" fill="rgb(215,142,24)" fg:x="163" fg:w="7"/><text x="1.0899%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="0.8399%" y="565" width="0.0361%" height="15" fill="rgb(250,187,7)" fg:x="163" fg:w="7"/><text x="1.0899%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="0.8399%" y="549" width="0.0361%" height="15" fill="rgb(228,66,33)" fg:x="163" fg:w="7"/><text x="1.0899%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="0.8399%" y="533" width="0.0361%" height="15" fill="rgb(234,215,21)" fg:x="163" fg:w="7"/><text x="1.0899%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="0.8399%" y="517" width="0.0361%" height="15" fill="rgb(222,191,20)" fg:x="163" fg:w="7"/><text x="1.0899%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="0.8399%" y="501" width="0.0361%" height="15" fill="rgb(245,79,54)" fg:x="163" fg:w="7"/><text x="1.0899%" y="511.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="0.8399%" y="485" width="0.0361%" height="15" fill="rgb(240,10,37)" fg:x="163" fg:w="7"/><text x="1.0899%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.04%)</title><rect x="0.8399%" y="469" width="0.0361%" height="15" fill="rgb(214,192,32)" fg:x="163" fg:w="7"/><text x="1.0899%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="0.8812%" y="645" width="0.0103%" height="15" fill="rgb(209,36,54)" fg:x="171" fg:w="2"/><text x="1.1312%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="0.8812%" y="629" width="0.0103%" height="15" fill="rgb(220,10,11)" fg:x="171" fg:w="2"/><text x="1.1312%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.8812%" y="613" width="0.0103%" height="15" fill="rgb(221,106,17)" fg:x="171" fg:w="2"/><text x="1.1312%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="0.8812%" y="597" width="0.0103%" height="15" fill="rgb(251,142,44)" fg:x="171" fg:w="2"/><text x="1.1312%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="0.8812%" y="581" width="0.0103%" height="15" fill="rgb(238,13,15)" fg:x="171" fg:w="2"/><text x="1.1312%" y="591.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="0.8812%" y="565" width="0.0103%" height="15" fill="rgb(208,107,27)" fg:x="171" fg:w="2"/><text x="1.1312%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="0.8812%" y="549" width="0.0103%" height="15" fill="rgb(205,136,37)" fg:x="171" fg:w="2"/><text x="1.1312%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="0.8812%" y="533" width="0.0103%" height="15" fill="rgb(250,205,27)" fg:x="171" fg:w="2"/><text x="1.1312%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="0.8812%" y="517" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="171" fg:w="2"/><text x="1.1312%" y="527.50"></text></g><g><title>eth_trie::nibbles::Nibbles::encode_compact (5 samples, 0.03%)</title><rect x="0.8915%" y="645" width="0.0258%" height="15" fill="rgb(247,160,36)" fg:x="173" fg:w="5"/><text x="1.1415%" y="655.50"></text></g><g><title>eth_trie::nibbles::Nibbles::is_leaf (4 samples, 0.02%)</title><rect x="0.8966%" y="629" width="0.0206%" height="15" fill="rgb(234,13,49)" fg:x="174" fg:w="4"/><text x="1.1466%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.03%)</title><rect x="0.9224%" y="629" width="0.0309%" height="15" fill="rgb(234,122,0)" fg:x="179" fg:w="6"/><text x="1.1724%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="0.9224%" y="613" width="0.0309%" height="15" fill="rgb(207,146,38)" fg:x="179" fg:w="6"/><text x="1.1724%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="0.9224%" y="597" width="0.0309%" height="15" fill="rgb(207,177,25)" fg:x="179" fg:w="6"/><text x="1.1724%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="0.9224%" y="581" width="0.0309%" height="15" fill="rgb(211,178,42)" fg:x="179" fg:w="6"/><text x="1.1724%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="0.9224%" y="565" width="0.0309%" height="15" fill="rgb(230,69,54)" fg:x="179" fg:w="6"/><text x="1.1724%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="0.9224%" y="549" width="0.0309%" height="15" fill="rgb(214,135,41)" fg:x="179" fg:w="6"/><text x="1.1724%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.03%)</title><rect x="0.9224%" y="533" width="0.0309%" height="15" fill="rgb(237,67,25)" fg:x="179" fg:w="6"/><text x="1.1724%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="0.9224%" y="517" width="0.0309%" height="15" fill="rgb(222,189,50)" fg:x="179" fg:w="6"/><text x="1.1724%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="0.9224%" y="501" width="0.0309%" height="15" fill="rgb(245,148,34)" fg:x="179" fg:w="6"/><text x="1.1724%" y="511.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="0.9224%" y="485" width="0.0309%" height="15" fill="rgb(222,29,6)" fg:x="179" fg:w="6"/><text x="1.1724%" y="495.50"></text></g><g><title>__rdl_alloc (6 samples, 0.03%)</title><rect x="0.9224%" y="469" width="0.0309%" height="15" fill="rgb(221,189,43)" fg:x="179" fg:w="6"/><text x="1.1724%" y="479.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.03%)</title><rect x="0.9224%" y="453" width="0.0309%" height="15" fill="rgb(207,36,27)" fg:x="179" fg:w="6"/><text x="1.1724%" y="463.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="0.9224%" y="437" width="0.0309%" height="15" fill="rgb(217,90,24)" fg:x="179" fg:w="6"/><text x="1.1724%" y="447.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="0.9224%" y="421" width="0.0309%" height="15" fill="rgb(224,66,35)" fg:x="179" fg:w="6"/><text x="1.1724%" y="431.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (11 samples, 0.06%)</title><rect x="0.9533%" y="597" width="0.0567%" height="15" fill="rgb(221,13,50)" fg:x="185" fg:w="11"/><text x="1.2033%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (11 samples, 0.06%)</title><rect x="0.9533%" y="581" width="0.0567%" height="15" fill="rgb(236,68,49)" fg:x="185" fg:w="11"/><text x="1.2033%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (11 samples, 0.06%)</title><rect x="0.9533%" y="565" width="0.0567%" height="15" fill="rgb(229,146,28)" fg:x="185" fg:w="11"/><text x="1.2033%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (11 samples, 0.06%)</title><rect x="0.9533%" y="549" width="0.0567%" height="15" fill="rgb(225,31,38)" fg:x="185" fg:w="11"/><text x="1.2033%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (11 samples, 0.06%)</title><rect x="0.9533%" y="533" width="0.0567%" height="15" fill="rgb(250,208,3)" fg:x="185" fg:w="11"/><text x="1.2033%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (11 samples, 0.06%)</title><rect x="0.9533%" y="517" width="0.0567%" height="15" fill="rgb(246,54,23)" fg:x="185" fg:w="11"/><text x="1.2033%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (11 samples, 0.06%)</title><rect x="0.9533%" y="501" width="0.0567%" height="15" fill="rgb(243,76,11)" fg:x="185" fg:w="11"/><text x="1.2033%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (11 samples, 0.06%)</title><rect x="0.9533%" y="485" width="0.0567%" height="15" fill="rgb(245,21,50)" fg:x="185" fg:w="11"/><text x="1.2033%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (11 samples, 0.06%)</title><rect x="0.9533%" y="469" width="0.0567%" height="15" fill="rgb(228,9,43)" fg:x="185" fg:w="11"/><text x="1.2033%" y="479.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (11 samples, 0.06%)</title><rect x="0.9533%" y="453" width="0.0567%" height="15" fill="rgb(208,100,47)" fg:x="185" fg:w="11"/><text x="1.2033%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256 (12 samples, 0.06%)</title><rect x="0.9533%" y="629" width="0.0618%" height="15" fill="rgb(232,26,8)" fg:x="185" fg:w="12"/><text x="1.2033%" y="639.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (12 samples, 0.06%)</title><rect x="0.9533%" y="613" width="0.0618%" height="15" fill="rgb(216,166,38)" fg:x="185" fg:w="12"/><text x="1.2033%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (3 samples, 0.02%)</title><rect x="1.0151%" y="613" width="0.0155%" height="15" fill="rgb(251,202,51)" fg:x="197" fg:w="3"/><text x="1.2651%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="1.0151%" y="597" width="0.0155%" height="15" fill="rgb(254,216,34)" fg:x="197" fg:w="3"/><text x="1.2651%" y="607.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="1.0151%" y="581" width="0.0155%" height="15" fill="rgb(251,32,27)" fg:x="197" fg:w="3"/><text x="1.2651%" y="591.50"></text></g><g><title>eth_trie::nibbles::Nibbles::encode_compact (5 samples, 0.03%)</title><rect x="1.0306%" y="613" width="0.0258%" height="15" fill="rgb(208,127,28)" fg:x="200" fg:w="5"/><text x="1.2806%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="1.0306%" y="597" width="0.0258%" height="15" fill="rgb(224,137,22)" fg:x="200" fg:w="5"/><text x="1.2806%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.02%)</title><rect x="1.0358%" y="581" width="0.0206%" height="15" fill="rgb(254,70,32)" fg:x="201" fg:w="4"/><text x="1.2858%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.02%)</title><rect x="1.0358%" y="565" width="0.0206%" height="15" fill="rgb(229,75,37)" fg:x="201" fg:w="4"/><text x="1.2858%" y="575.50"></text></g><g><title>rlp::stream::RlpStream::append (6 samples, 0.03%)</title><rect x="1.0564%" y="613" width="0.0309%" height="15" fill="rgb(252,64,23)" fg:x="205" fg:w="6"/><text x="1.3064%" y="623.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (6 samples, 0.03%)</title><rect x="1.0564%" y="597" width="0.0309%" height="15" fill="rgb(232,162,48)" fg:x="205" fg:w="6"/><text x="1.3064%" y="607.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (6 samples, 0.03%)</title><rect x="1.0564%" y="581" width="0.0309%" height="15" fill="rgb(246,160,12)" fg:x="205" fg:w="6"/><text x="1.3064%" y="591.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (6 samples, 0.03%)</title><rect x="1.0564%" y="565" width="0.0309%" height="15" fill="rgb(247,166,0)" fg:x="205" fg:w="6"/><text x="1.3064%" y="575.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (6 samples, 0.03%)</title><rect x="1.0564%" y="549" width="0.0309%" height="15" fill="rgb(249,219,21)" fg:x="205" fg:w="6"/><text x="1.3064%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="1.0564%" y="533" width="0.0309%" height="15" fill="rgb(205,209,3)" fg:x="205" fg:w="6"/><text x="1.3064%" y="543.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (6 samples, 0.03%)</title><rect x="1.0564%" y="517" width="0.0309%" height="15" fill="rgb(243,44,1)" fg:x="205" fg:w="6"/><text x="1.3064%" y="527.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (6 samples, 0.03%)</title><rect x="1.0564%" y="501" width="0.0309%" height="15" fill="rgb(206,159,16)" fg:x="205" fg:w="6"/><text x="1.3064%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (16 samples, 0.08%)</title><rect x="1.0151%" y="629" width="0.0824%" height="15" fill="rgb(244,77,30)" fg:x="197" fg:w="16"/><text x="1.2651%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (38 samples, 0.20%)</title><rect x="0.9172%" y="645" width="0.1958%" height="15" fill="rgb(218,69,12)" fg:x="178" fg:w="38"/><text x="1.1672%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="1.1028%" y="629" width="0.0103%" height="15" fill="rgb(212,87,7)" fg:x="214" fg:w="2"/><text x="1.3528%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="1.1028%" y="613" width="0.0103%" height="15" fill="rgb(245,114,25)" fg:x="214" fg:w="2"/><text x="1.3528%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="1.1028%" y="597" width="0.0103%" height="15" fill="rgb(210,61,42)" fg:x="214" fg:w="2"/><text x="1.3528%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="1.1028%" y="581" width="0.0103%" height="15" fill="rgb(211,52,33)" fg:x="214" fg:w="2"/><text x="1.3528%" y="591.50"></text></g><g><title>rlp::stream::RlpStream::append (4 samples, 0.02%)</title><rect x="1.1131%" y="645" width="0.0206%" height="15" fill="rgb(234,58,33)" fg:x="216" fg:w="4"/><text x="1.3631%" y="655.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (4 samples, 0.02%)</title><rect x="1.1131%" y="629" width="0.0206%" height="15" fill="rgb(220,115,36)" fg:x="216" fg:w="4"/><text x="1.3631%" y="639.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (4 samples, 0.02%)</title><rect x="1.1131%" y="613" width="0.0206%" height="15" fill="rgb(243,153,54)" fg:x="216" fg:w="4"/><text x="1.3631%" y="623.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (4 samples, 0.02%)</title><rect x="1.1131%" y="597" width="0.0206%" height="15" fill="rgb(251,47,18)" fg:x="216" fg:w="4"/><text x="1.3631%" y="607.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="1.1131%" y="581" width="0.0206%" height="15" fill="rgb(242,102,42)" fg:x="216" fg:w="4"/><text x="1.3631%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="1.1131%" y="565" width="0.0206%" height="15" fill="rgb(234,31,38)" fg:x="216" fg:w="4"/><text x="1.3631%" y="575.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.02%)</title><rect x="1.1131%" y="549" width="0.0206%" height="15" fill="rgb(221,117,51)" fg:x="216" fg:w="4"/><text x="1.3631%" y="559.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (4 samples, 0.02%)</title><rect x="1.1131%" y="533" width="0.0206%" height="15" fill="rgb(212,20,18)" fg:x="216" fg:w="4"/><text x="1.3631%" y="543.50"></text></g><g><title>rlp::stream::RlpStream::new_list_with_buffer (2 samples, 0.01%)</title><rect x="1.1337%" y="629" width="0.0103%" height="15" fill="rgb(245,133,36)" fg:x="220" fg:w="2"/><text x="1.3837%" y="639.50"></text></g><g><title>rlp::stream::RlpStream::append_raw (3 samples, 0.02%)</title><rect x="1.1337%" y="645" width="0.0155%" height="15" fill="rgb(212,6,19)" fg:x="220" fg:w="3"/><text x="1.3837%" y="655.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (55 samples, 0.28%)</title><rect x="0.8760%" y="661" width="0.2834%" height="15" fill="rgb(218,1,36)" fg:x="170" fg:w="55"/><text x="1.1260%" y="671.50"></text></g><g><title>rlp::stream::RlpStream::new_list (2 samples, 0.01%)</title><rect x="1.1491%" y="645" width="0.0103%" height="15" fill="rgb(246,84,54)" fg:x="223" fg:w="2"/><text x="1.3991%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (2 samples, 0.01%)</title><rect x="1.1491%" y="629" width="0.0103%" height="15" fill="rgb(242,110,6)" fg:x="223" fg:w="2"/><text x="1.3991%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="1.1491%" y="613" width="0.0103%" height="15" fill="rgb(214,47,5)" fg:x="223" fg:w="2"/><text x="1.3991%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="1.1491%" y="597" width="0.0103%" height="15" fill="rgb(218,159,25)" fg:x="223" fg:w="2"/><text x="1.3991%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="1.1491%" y="581" width="0.0103%" height="15" fill="rgb(215,211,28)" fg:x="223" fg:w="2"/><text x="1.3991%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="1.1491%" y="565" width="0.0103%" height="15" fill="rgb(238,59,32)" fg:x="223" fg:w="2"/><text x="1.3991%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="1.1491%" y="549" width="0.0103%" height="15" fill="rgb(226,82,3)" fg:x="223" fg:w="2"/><text x="1.3991%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="1.1491%" y="533" width="0.0103%" height="15" fill="rgb(240,164,32)" fg:x="223" fg:w="2"/><text x="1.3991%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="1.1491%" y="517" width="0.0103%" height="15" fill="rgb(232,46,7)" fg:x="223" fg:w="2"/><text x="1.3991%" y="527.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="1.1491%" y="501" width="0.0103%" height="15" fill="rgb(229,129,53)" fg:x="223" fg:w="2"/><text x="1.3991%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="1.1491%" y="485" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="223" fg:w="2"/><text x="1.3991%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="1.1491%" y="469" width="0.0103%" height="15" fill="rgb(246,141,4)" fg:x="223" fg:w="2"/><text x="1.3991%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="1.1594%" y="613" width="0.0361%" height="15" fill="rgb(229,23,39)" fg:x="225" fg:w="7"/><text x="1.4094%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.04%)</title><rect x="1.1594%" y="597" width="0.0361%" height="15" fill="rgb(206,12,3)" fg:x="225" fg:w="7"/><text x="1.4094%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (7 samples, 0.04%)</title><rect x="1.1594%" y="581" width="0.0361%" height="15" fill="rgb(252,226,20)" fg:x="225" fg:w="7"/><text x="1.4094%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (7 samples, 0.04%)</title><rect x="1.1594%" y="565" width="0.0361%" height="15" fill="rgb(216,123,35)" fg:x="225" fg:w="7"/><text x="1.4094%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (7 samples, 0.04%)</title><rect x="1.1594%" y="549" width="0.0361%" height="15" fill="rgb(212,68,40)" fg:x="225" fg:w="7"/><text x="1.4094%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (7 samples, 0.04%)</title><rect x="1.1594%" y="533" width="0.0361%" height="15" fill="rgb(254,125,32)" fg:x="225" fg:w="7"/><text x="1.4094%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (7 samples, 0.04%)</title><rect x="1.1594%" y="517" width="0.0361%" height="15" fill="rgb(253,97,22)" fg:x="225" fg:w="7"/><text x="1.4094%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.04%)</title><rect x="1.1594%" y="501" width="0.0361%" height="15" fill="rgb(241,101,14)" fg:x="225" fg:w="7"/><text x="1.4094%" y="511.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="1.1594%" y="485" width="0.0361%" height="15" fill="rgb(238,103,29)" fg:x="225" fg:w="7"/><text x="1.4094%" y="495.50"></text></g><g><title>allocator_api2::stable::alloc::global::Global::alloc_impl (7 samples, 0.04%)</title><rect x="1.1594%" y="469" width="0.0361%" height="15" fill="rgb(233,195,47)" fg:x="225" fg:w="7"/><text x="1.4094%" y="479.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="1.1594%" y="453" width="0.0361%" height="15" fill="rgb(246,218,30)" fg:x="225" fg:w="7"/><text x="1.4094%" y="463.50"></text></g><g><title>__rdl_alloc (7 samples, 0.04%)</title><rect x="1.1594%" y="437" width="0.0361%" height="15" fill="rgb(219,145,47)" fg:x="225" fg:w="7"/><text x="1.4094%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.04%)</title><rect x="1.1594%" y="421" width="0.0361%" height="15" fill="rgb(243,12,26)" fg:x="225" fg:w="7"/><text x="1.4094%" y="431.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="1.1594%" y="405" width="0.0361%" height="15" fill="rgb(214,87,16)" fg:x="225" fg:w="7"/><text x="1.4094%" y="415.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="1.1594%" y="389" width="0.0361%" height="15" fill="rgb(208,99,42)" fg:x="225" fg:w="7"/><text x="1.4094%" y="399.50"></text></g><g><title>malloc_consolidate (5 samples, 0.03%)</title><rect x="1.1697%" y="373" width="0.0258%" height="15" fill="rgb(253,99,2)" fg:x="227" fg:w="5"/><text x="1.4197%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.04%)</title><rect x="1.1594%" y="661" width="0.0412%" height="15" fill="rgb(220,168,23)" fg:x="225" fg:w="8"/><text x="1.4094%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (8 samples, 0.04%)</title><rect x="1.1594%" y="645" width="0.0412%" height="15" fill="rgb(242,38,24)" fg:x="225" fg:w="8"/><text x="1.4094%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.04%)</title><rect x="1.1594%" y="629" width="0.0412%" height="15" fill="rgb(225,182,9)" fg:x="225" fg:w="8"/><text x="1.4094%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (78 samples, 0.40%)</title><rect x="0.8039%" y="693" width="0.4019%" height="15" fill="rgb(243,178,37)" fg:x="156" fg:w="78"/><text x="1.0539%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (78 samples, 0.40%)</title><rect x="0.8039%" y="677" width="0.4019%" height="15" fill="rgb(232,139,19)" fg:x="156" fg:w="78"/><text x="1.0539%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (82 samples, 0.42%)</title><rect x="0.7884%" y="773" width="0.4225%" height="15" fill="rgb(225,201,24)" fg:x="153" fg:w="82"/><text x="1.0384%" y="783.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (82 samples, 0.42%)</title><rect x="0.7884%" y="757" width="0.4225%" height="15" fill="rgb(221,47,46)" fg:x="153" fg:w="82"/><text x="1.0384%" y="767.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (82 samples, 0.42%)</title><rect x="0.7884%" y="741" width="0.4225%" height="15" fill="rgb(249,23,13)" fg:x="153" fg:w="82"/><text x="1.0384%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (82 samples, 0.42%)</title><rect x="0.7884%" y="725" width="0.4225%" height="15" fill="rgb(219,9,5)" fg:x="153" fg:w="82"/><text x="1.0384%" y="735.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (82 samples, 0.42%)</title><rect x="0.7884%" y="709" width="0.4225%" height="15" fill="rgb(254,171,16)" fg:x="153" fg:w="82"/><text x="1.0384%" y="719.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (110 samples, 0.57%)</title><rect x="0.6544%" y="805" width="0.5668%" height="15" fill="rgb(230,171,20)" fg:x="127" fg:w="110"/><text x="0.9044%" y="815.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (110 samples, 0.57%)</title><rect x="0.6544%" y="789" width="0.5668%" height="15" fill="rgb(210,71,41)" fg:x="127" fg:w="110"/><text x="0.9044%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (2 samples, 0.01%)</title><rect x="1.2110%" y="773" width="0.0103%" height="15" fill="rgb(206,173,20)" fg:x="235" fg:w="2"/><text x="1.4610%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (2 samples, 0.01%)</title><rect x="1.2110%" y="757" width="0.0103%" height="15" fill="rgb(233,88,34)" fg:x="235" fg:w="2"/><text x="1.4610%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (2 samples, 0.01%)</title><rect x="1.2110%" y="741" width="0.0103%" height="15" fill="rgb(223,209,46)" fg:x="235" fg:w="2"/><text x="1.4610%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.01%)</title><rect x="1.2110%" y="725" width="0.0103%" height="15" fill="rgb(250,43,18)" fg:x="235" fg:w="2"/><text x="1.4610%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.01%)</title><rect x="1.2110%" y="709" width="0.0103%" height="15" fill="rgb(208,13,10)" fg:x="235" fg:w="2"/><text x="1.4610%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.01%)</title><rect x="1.2110%" y="693" width="0.0103%" height="15" fill="rgb(212,200,36)" fg:x="235" fg:w="2"/><text x="1.4610%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,())&gt; (2 samples, 0.01%)</title><rect x="1.2110%" y="677" width="0.0103%" height="15" fill="rgb(225,90,30)" fg:x="235" fg:w="2"/><text x="1.4610%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="1.2110%" y="661" width="0.0103%" height="15" fill="rgb(236,182,39)" fg:x="235" fg:w="2"/><text x="1.4610%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="1.2110%" y="645" width="0.0103%" height="15" fill="rgb(212,144,35)" fg:x="235" fg:w="2"/><text x="1.4610%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="1.2110%" y="629" width="0.0103%" height="15" fill="rgb(228,63,44)" fg:x="235" fg:w="2"/><text x="1.4610%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="1.2110%" y="613" width="0.0103%" height="15" fill="rgb(228,109,6)" fg:x="235" fg:w="2"/><text x="1.4610%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="1.2110%" y="597" width="0.0103%" height="15" fill="rgb(238,117,24)" fg:x="235" fg:w="2"/><text x="1.4610%" y="607.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="1.2110%" y="581" width="0.0103%" height="15" fill="rgb(242,26,26)" fg:x="235" fg:w="2"/><text x="1.4610%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="1.2110%" y="565" width="0.0103%" height="15" fill="rgb(221,92,48)" fg:x="235" fg:w="2"/><text x="1.4610%" y="575.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="1.2110%" y="549" width="0.0103%" height="15" fill="rgb(209,209,32)" fg:x="235" fg:w="2"/><text x="1.4610%" y="559.50"></text></g><g><title>&lt;zilliqa::inspector::TouchedAddressInspector as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="1.2213%" y="805" width="0.0103%" height="15" fill="rgb(221,70,22)" fg:x="237" fg:w="2"/><text x="1.4713%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="1.2213%" y="789" width="0.0103%" height="15" fill="rgb(248,145,5)" fg:x="237" fg:w="2"/><text x="1.4713%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="1.2213%" y="773" width="0.0103%" height="15" fill="rgb(226,116,26)" fg:x="237" fg:w="2"/><text x="1.4713%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="1.2213%" y="757" width="0.0103%" height="15" fill="rgb(244,5,17)" fg:x="237" fg:w="2"/><text x="1.4713%" y="767.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="1.2213%" y="741" width="0.0103%" height="15" fill="rgb(252,159,33)" fg:x="237" fg:w="2"/><text x="1.4713%" y="751.50"></text></g><g><title>std::hash::random::RandomState::new (2 samples, 0.01%)</title><rect x="1.2213%" y="725" width="0.0103%" height="15" fill="rgb(206,71,0)" fg:x="237" fg:w="2"/><text x="1.4713%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="1.2213%" y="709" width="0.0103%" height="15" fill="rgb(233,118,54)" fg:x="237" fg:w="2"/><text x="1.4713%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="1.2213%" y="693" width="0.0103%" height="15" fill="rgb(234,83,48)" fg:x="237" fg:w="2"/><text x="1.4713%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.01%)</title><rect x="1.2213%" y="677" width="0.0103%" height="15" fill="rgb(228,3,54)" fg:x="237" fg:w="2"/><text x="1.4713%" y="687.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::{{constant}}::{{closure}} (2 samples, 0.01%)</title><rect x="1.2213%" y="661" width="0.0103%" height="15" fill="rgb(226,155,13)" fg:x="237" fg:w="2"/><text x="1.4713%" y="671.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (2 samples, 0.01%)</title><rect x="1.2213%" y="645" width="0.0103%" height="15" fill="rgb(241,28,37)" fg:x="237" fg:w="2"/><text x="1.4713%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="1.2470%" y="709" width="0.0103%" height="15" fill="rgb(233,93,10)" fg:x="242" fg:w="2"/><text x="1.4970%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="1.2470%" y="693" width="0.0103%" height="15" fill="rgb(225,113,19)" fg:x="242" fg:w="2"/><text x="1.4970%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="1.2470%" y="677" width="0.0103%" height="15" fill="rgb(241,2,18)" fg:x="242" fg:w="2"/><text x="1.4970%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="1.2470%" y="661" width="0.0103%" height="15" fill="rgb(228,207,21)" fg:x="242" fg:w="2"/><text x="1.4970%" y="671.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::SignableTransaction&lt;alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;&gt;::into_signed (11 samples, 0.06%)</title><rect x="1.2419%" y="757" width="0.0567%" height="15" fill="rgb(213,211,35)" fg:x="241" fg:w="11"/><text x="1.4919%" y="767.50"></text></g><g><title>alloy_consensus::transaction::rlp::RlpEcdsaTx::tx_hash (11 samples, 0.06%)</title><rect x="1.2419%" y="741" width="0.0567%" height="15" fill="rgb(209,83,10)" fg:x="241" fg:w="11"/><text x="1.4919%" y="751.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::tx_hash_with_type (11 samples, 0.06%)</title><rect x="1.2419%" y="725" width="0.0567%" height="15" fill="rgb(209,164,1)" fg:x="241" fg:w="11"/><text x="1.4919%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="1.2573%" y="709" width="0.0412%" height="15" fill="rgb(213,184,43)" fg:x="244" fg:w="8"/><text x="1.5073%" y="719.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="1.2573%" y="693" width="0.0412%" height="15" fill="rgb(231,61,34)" fg:x="244" fg:w="8"/><text x="1.5073%" y="703.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (8 samples, 0.04%)</title><rect x="1.2573%" y="677" width="0.0412%" height="15" fill="rgb(235,75,3)" fg:x="244" fg:w="8"/><text x="1.5073%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (8 samples, 0.04%)</title><rect x="1.2573%" y="661" width="0.0412%" height="15" fill="rgb(220,106,47)" fg:x="244" fg:w="8"/><text x="1.5073%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (8 samples, 0.04%)</title><rect x="1.2573%" y="645" width="0.0412%" height="15" fill="rgb(210,196,33)" fg:x="244" fg:w="8"/><text x="1.5073%" y="655.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (8 samples, 0.04%)</title><rect x="1.2573%" y="629" width="0.0412%" height="15" fill="rgb(229,154,42)" fg:x="244" fg:w="8"/><text x="1.5073%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (8 samples, 0.04%)</title><rect x="1.2573%" y="613" width="0.0412%" height="15" fill="rgb(228,114,26)" fg:x="244" fg:w="8"/><text x="1.5073%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (8 samples, 0.04%)</title><rect x="1.2573%" y="597" width="0.0412%" height="15" fill="rgb(208,144,1)" fg:x="244" fg:w="8"/><text x="1.5073%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (8 samples, 0.04%)</title><rect x="1.2573%" y="581" width="0.0412%" height="15" fill="rgb(239,112,37)" fg:x="244" fg:w="8"/><text x="1.5073%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (8 samples, 0.04%)</title><rect x="1.2573%" y="565" width="0.0412%" height="15" fill="rgb(210,96,50)" fg:x="244" fg:w="8"/><text x="1.5073%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (8 samples, 0.04%)</title><rect x="1.2573%" y="549" width="0.0412%" height="15" fill="rgb(222,178,2)" fg:x="244" fg:w="8"/><text x="1.5073%" y="559.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (8 samples, 0.04%)</title><rect x="1.2573%" y="533" width="0.0412%" height="15" fill="rgb(226,74,18)" fg:x="244" fg:w="8"/><text x="1.5073%" y="543.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::SignableTransaction&lt;alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;&gt;::encode_for_signing (2 samples, 0.01%)</title><rect x="1.2986%" y="709" width="0.0103%" height="15" fill="rgb(225,67,54)" fg:x="252" fg:w="2"/><text x="1.5486%" y="719.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::rlp_encode_fields (2 samples, 0.01%)</title><rect x="1.2986%" y="693" width="0.0103%" height="15" fill="rgb(251,92,32)" fg:x="252" fg:w="2"/><text x="1.5486%" y="703.50"></text></g><g><title>alloy_consensus::transaction::SignableTransaction::encoded_for_signing (3 samples, 0.02%)</title><rect x="1.2986%" y="725" width="0.0155%" height="15" fill="rgb(228,149,22)" fg:x="252" fg:w="3"/><text x="1.5486%" y="735.50"></text></g><g><title>alloy_consensus::transaction::SignableTransaction::signature_hash (8 samples, 0.04%)</title><rect x="1.2986%" y="741" width="0.0412%" height="15" fill="rgb(243,54,13)" fg:x="252" fg:w="8"/><text x="1.5486%" y="751.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="1.3140%" y="725" width="0.0258%" height="15" fill="rgb(243,180,28)" fg:x="255" fg:w="5"/><text x="1.5640%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="1.3140%" y="709" width="0.0258%" height="15" fill="rgb(208,167,24)" fg:x="255" fg:w="5"/><text x="1.5640%" y="719.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="1.3140%" y="693" width="0.0258%" height="15" fill="rgb(245,73,45)" fg:x="255" fg:w="5"/><text x="1.5640%" y="703.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="1.3140%" y="677" width="0.0258%" height="15" fill="rgb(237,203,48)" fg:x="255" fg:w="5"/><text x="1.5640%" y="687.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="1.3140%" y="661" width="0.0258%" height="15" fill="rgb(211,197,16)" fg:x="255" fg:w="5"/><text x="1.5640%" y="671.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="1.3140%" y="645" width="0.0258%" height="15" fill="rgb(243,99,51)" fg:x="255" fg:w="5"/><text x="1.5640%" y="655.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="1.3140%" y="629" width="0.0258%" height="15" fill="rgb(215,123,29)" fg:x="255" fg:w="5"/><text x="1.5640%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="1.3140%" y="613" width="0.0258%" height="15" fill="rgb(239,186,37)" fg:x="255" fg:w="5"/><text x="1.5640%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="1.3140%" y="597" width="0.0258%" height="15" fill="rgb(252,136,39)" fg:x="255" fg:w="5"/><text x="1.5640%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="1.3140%" y="581" width="0.0258%" height="15" fill="rgb(223,213,32)" fg:x="255" fg:w="5"/><text x="1.5640%" y="591.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="1.3140%" y="565" width="0.0258%" height="15" fill="rgb(233,115,5)" fg:x="255" fg:w="5"/><text x="1.5640%" y="575.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="1.3140%" y="549" width="0.0258%" height="15" fill="rgb(207,226,44)" fg:x="255" fg:w="5"/><text x="1.5640%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="1.3140%" y="533" width="0.0258%" height="15" fill="rgb(208,126,0)" fg:x="255" fg:w="5"/><text x="1.5640%" y="543.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as core::ops::arith::AddAssign&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::add_assign (990 samples, 5.10%)</title><rect x="1.3449%" y="629" width="5.1015%" height="15" fill="rgb(244,66,21)" fg:x="261" fg:w="990"/><text x="1.5949%" y="639.50">&lt;k256:..</text></g><g><title>k256::arithmetic::projective::ProjectivePoint::add (953 samples, 4.91%)</title><rect x="1.5356%" y="613" width="4.9109%" height="15" fill="rgb(222,97,12)" fg:x="298" fg:w="953"/><text x="1.7856%" y="623.50">k256::..</text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (953 samples, 4.91%)</title><rect x="1.5356%" y="597" width="4.9109%" height="15" fill="rgb(219,213,19)" fg:x="298" fg:w="953"/><text x="1.7856%" y="607.50">&lt;k256:..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (953 samples, 4.91%)</title><rect x="1.5356%" y="581" width="4.9109%" height="15" fill="rgb(252,169,30)" fg:x="298" fg:w="953"/><text x="1.7856%" y="591.50">k256::..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (953 samples, 4.91%)</title><rect x="1.5356%" y="565" width="4.9109%" height="15" fill="rgb(206,32,51)" fg:x="298" fg:w="953"/><text x="1.7856%" y="575.50">k256::..</text></g><g><title>__memcpy_avx_unaligned_erms (51 samples, 0.26%)</title><rect x="6.4465%" y="629" width="0.2628%" height="15" fill="rgb(250,172,42)" fg:x="1251" fg:w="51"/><text x="6.6965%" y="639.50"></text></g><g><title>k256::arithmetic::mul::Radix16Decomposition&lt;_&gt;::new (3 samples, 0.02%)</title><rect x="6.7093%" y="533" width="0.0155%" height="15" fill="rgb(209,34,43)" fg:x="1302" fg:w="3"/><text x="6.9593%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.03%)</title><rect x="6.7093%" y="629" width="0.0309%" height="15" fill="rgb(223,11,35)" fg:x="1302" fg:w="6"/><text x="6.9593%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="6.7093%" y="613" width="0.0309%" height="15" fill="rgb(251,219,26)" fg:x="1302" fg:w="6"/><text x="6.9593%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="6.7093%" y="597" width="0.0309%" height="15" fill="rgb(231,119,3)" fg:x="1302" fg:w="6"/><text x="6.9593%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.03%)</title><rect x="6.7093%" y="581" width="0.0309%" height="15" fill="rgb(216,97,11)" fg:x="1302" fg:w="6"/><text x="6.9593%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.03%)</title><rect x="6.7093%" y="565" width="0.0309%" height="15" fill="rgb(223,59,9)" fg:x="1302" fg:w="6"/><text x="6.9593%" y="575.50"></text></g><g><title>k256::arithmetic::mul::lincomb::{{closure}} (6 samples, 0.03%)</title><rect x="6.7093%" y="549" width="0.0309%" height="15" fill="rgb(233,93,31)" fg:x="1302" fg:w="6"/><text x="6.9593%" y="559.50"></text></g><g><title>k256::arithmetic::mul::decompose_scalar (3 samples, 0.02%)</title><rect x="6.7247%" y="533" width="0.0155%" height="15" fill="rgb(239,81,33)" fg:x="1305" fg:w="3"/><text x="6.9747%" y="543.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as core::ops::arith::Mul&gt;::mul (2 samples, 0.01%)</title><rect x="6.7299%" y="517" width="0.0103%" height="15" fill="rgb(213,120,34)" fg:x="1306" fg:w="2"/><text x="6.9799%" y="527.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::mul (2 samples, 0.01%)</title><rect x="6.7299%" y="501" width="0.0103%" height="15" fill="rgb(243,49,53)" fg:x="1306" fg:w="2"/><text x="6.9799%" y="511.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::reduce (2 samples, 0.01%)</title><rect x="6.7299%" y="485" width="0.0103%" height="15" fill="rgb(247,216,33)" fg:x="1306" fg:w="2"/><text x="6.9799%" y="495.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::reduce_impl (2 samples, 0.01%)</title><rect x="6.7299%" y="469" width="0.0103%" height="15" fill="rgb(226,26,14)" fg:x="1306" fg:w="2"/><text x="6.9799%" y="479.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (10 samples, 0.05%)</title><rect x="6.7402%" y="613" width="0.0515%" height="15" fill="rgb(215,49,53)" fg:x="1308" fg:w="10"/><text x="6.9902%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.05%)</title><rect x="6.7402%" y="597" width="0.0515%" height="15" fill="rgb(245,162,40)" fg:x="1308" fg:w="10"/><text x="6.9902%" y="607.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (10 samples, 0.05%)</title><rect x="6.7402%" y="581" width="0.0515%" height="15" fill="rgb(229,68,17)" fg:x="1308" fg:w="10"/><text x="6.9902%" y="591.50"></text></g><g><title>subtle::black_box (3 samples, 0.02%)</title><rect x="6.7763%" y="565" width="0.0155%" height="15" fill="rgb(213,182,10)" fg:x="1315" fg:w="3"/><text x="7.0263%" y="575.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.02%)</title><rect x="6.7763%" y="549" width="0.0155%" height="15" fill="rgb(245,125,30)" fg:x="1315" fg:w="3"/><text x="7.0263%" y="559.50"></text></g><g><title>k256::arithmetic::mul::LookupTable::select (159 samples, 0.82%)</title><rect x="6.7402%" y="629" width="0.8193%" height="15" fill="rgb(232,202,2)" fg:x="1308" fg:w="159"/><text x="6.9902%" y="639.50"></text></g><g><title>subtle::ConditionallySelectable::conditional_assign (149 samples, 0.77%)</title><rect x="6.7917%" y="613" width="0.7678%" height="15" fill="rgb(237,140,51)" fg:x="1318" fg:w="149"/><text x="7.0417%" y="623.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as subtle::ConditionallySelectable&gt;::conditional_select (73 samples, 0.38%)</title><rect x="7.1833%" y="597" width="0.3762%" height="15" fill="rgb(236,157,25)" fg:x="1394" fg:w="73"/><text x="7.4333%" y="607.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as subtle::ConditionallySelectable&gt;::conditional_select (73 samples, 0.38%)</title><rect x="7.1833%" y="581" width="0.3762%" height="15" fill="rgb(219,209,0)" fg:x="1394" fg:w="73"/><text x="7.4333%" y="591.50"></text></g><g><title>&lt;k256::arithmetic::field::field_5x52::FieldElement5x52 as subtle::ConditionallySelectable&gt;::conditional_select (73 samples, 0.38%)</title><rect x="7.1833%" y="565" width="0.3762%" height="15" fill="rgb(240,116,54)" fg:x="1394" fg:w="73"/><text x="7.4333%" y="575.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_select (73 samples, 0.38%)</title><rect x="7.1833%" y="549" width="0.3762%" height="15" fill="rgb(216,10,36)" fg:x="1394" fg:w="73"/><text x="7.4333%" y="559.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitXor&lt;u64&gt;&gt;::bitxor (73 samples, 0.38%)</title><rect x="7.1833%" y="533" width="0.3762%" height="15" fill="rgb(222,72,44)" fg:x="1394" fg:w="73"/><text x="7.4333%" y="543.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (73 samples, 0.38%)</title><rect x="7.1833%" y="517" width="0.3762%" height="15" fill="rgb(232,159,9)" fg:x="1394" fg:w="73"/><text x="7.4333%" y="527.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (385 samples, 1.98%)</title><rect x="7.5595%" y="613" width="1.9839%" height="15" fill="rgb(210,39,32)" fg:x="1467" fg:w="385"/><text x="7.8095%" y="623.50">&lt;..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (385 samples, 1.98%)</title><rect x="7.5595%" y="597" width="1.9839%" height="15" fill="rgb(216,194,45)" fg:x="1467" fg:w="385"/><text x="7.8095%" y="607.50">k..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (385 samples, 1.98%)</title><rect x="7.5595%" y="581" width="1.9839%" height="15" fill="rgb(218,18,35)" fg:x="1467" fg:w="385"/><text x="7.8095%" y="591.50">k..</text></g><g><title>&lt;P as elliptic_curve::ops::LinearCombination&gt;::lincomb (1,697 samples, 8.74%)</title><rect x="1.3449%" y="693" width="8.7447%" height="15" fill="rgb(207,83,51)" fg:x="261" fg:w="1697"/><text x="1.5949%" y="703.50">&lt;P as ellipt..</text></g><g><title>k256::arithmetic::mul::&lt;impl elliptic_curve::ops::LinearCombinationExt&lt;[(k256::arithmetic::projective::ProjectivePoint,k256::arithmetic::scalar::Scalar) (1,697 samples, 8.74%)</title><rect x="1.3449%" y="677" width="8.7447%" height="15" fill="rgb(225,63,43)" fg:x="261" fg:w="1697"/><text x="1.5949%" y="687.50">k256::arithm..</text></g><g><title> N]&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::lincomb_ext (1,697 samples, 8.74%)</title><rect x="1.3449%" y="661" width="8.7447%" height="15" fill="rgb(207,57,36)" fg:x="261" fg:w="1697"/><text x="1.5949%" y="671.50"> N]&gt; for k25..</text></g><g><title>k256::arithmetic::mul::lincomb (1,697 samples, 8.74%)</title><rect x="1.3449%" y="645" width="8.7447%" height="15" fill="rgb(216,99,33)" fg:x="261" fg:w="1697"/><text x="1.5949%" y="655.50">k256::arithm..</text></g><g><title>k256::arithmetic::projective::ProjectivePoint::double (491 samples, 2.53%)</title><rect x="7.5595%" y="629" width="2.5301%" height="15" fill="rgb(225,42,16)" fg:x="1467" fg:w="491"/><text x="7.8095%" y="639.50">k2..</text></g><g><title>k256::arithmetic::field::FieldElement::square (106 samples, 0.55%)</title><rect x="9.5434%" y="613" width="0.5462%" height="15" fill="rgb(220,201,45)" fg:x="1852" fg:w="106"/><text x="9.7934%" y="623.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (106 samples, 0.55%)</title><rect x="9.5434%" y="597" width="0.5462%" height="15" fill="rgb(225,33,4)" fg:x="1852" fg:w="106"/><text x="9.7934%" y="607.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (106 samples, 0.55%)</title><rect x="9.5434%" y="581" width="0.5462%" height="15" fill="rgb(224,33,50)" fg:x="1852" fg:w="106"/><text x="9.7934%" y="591.50"></text></g><g><title>k256::arithmetic::field::FieldElement::invert (119 samples, 0.61%)</title><rect x="10.0897%" y="645" width="0.6132%" height="15" fill="rgb(246,198,51)" fg:x="1958" fg:w="119"/><text x="10.3397%" y="655.50"></text></g><g><title>k256::arithmetic::field::FieldElement::pow2k (119 samples, 0.61%)</title><rect x="10.0897%" y="629" width="0.6132%" height="15" fill="rgb(205,22,4)" fg:x="1958" fg:w="119"/><text x="10.3397%" y="639.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (105 samples, 0.54%)</title><rect x="10.1618%" y="613" width="0.5411%" height="15" fill="rgb(206,3,8)" fg:x="1972" fg:w="105"/><text x="10.4118%" y="623.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (105 samples, 0.54%)</title><rect x="10.1618%" y="597" width="0.5411%" height="15" fill="rgb(251,23,15)" fg:x="1972" fg:w="105"/><text x="10.4118%" y="607.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (105 samples, 0.54%)</title><rect x="10.1618%" y="581" width="0.5411%" height="15" fill="rgb(252,88,28)" fg:x="1972" fg:w="105"/><text x="10.4118%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (120 samples, 0.62%)</title><rect x="10.0897%" y="693" width="0.6184%" height="15" fill="rgb(212,127,14)" fg:x="1958" fg:w="120"/><text x="10.3397%" y="703.50"></text></g><g><title>k256::arithmetic::projective::&lt;impl core::convert::From&lt;k256::arithmetic::projective::ProjectivePoint&gt; for k256::arithmetic::affine::AffinePoint&gt;::from (120 samples, 0.62%)</title><rect x="10.0897%" y="677" width="0.6184%" height="15" fill="rgb(247,145,37)" fg:x="1958" fg:w="120"/><text x="10.3397%" y="687.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::to_affine (120 samples, 0.62%)</title><rect x="10.0897%" y="661" width="0.6184%" height="15" fill="rgb(209,117,53)" fg:x="1958" fg:w="120"/><text x="10.3397%" y="671.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as core::ops::arith::AddAssign&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::add_assign (951 samples, 4.90%)</title><rect x="10.7183%" y="581" width="4.9005%" height="15" fill="rgb(212,90,42)" fg:x="2080" fg:w="951"/><text x="10.9683%" y="591.50">&lt;k256:..</text></g><g><title>k256::arithmetic::projective::ProjectivePoint::add (916 samples, 4.72%)</title><rect x="10.8987%" y="565" width="4.7202%" height="15" fill="rgb(218,164,37)" fg:x="2115" fg:w="916"/><text x="11.1487%" y="575.50">k256::..</text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (916 samples, 4.72%)</title><rect x="10.8987%" y="549" width="4.7202%" height="15" fill="rgb(246,65,34)" fg:x="2115" fg:w="916"/><text x="11.1487%" y="559.50">&lt;k256:..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (916 samples, 4.72%)</title><rect x="10.8987%" y="533" width="4.7202%" height="15" fill="rgb(231,100,33)" fg:x="2115" fg:w="916"/><text x="11.1487%" y="543.50">k256::..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (916 samples, 4.72%)</title><rect x="10.8987%" y="517" width="4.7202%" height="15" fill="rgb(228,126,14)" fg:x="2115" fg:w="916"/><text x="11.1487%" y="527.50">k256::..</text></g><g><title>Unknown (2 samples, 0.01%)</title><rect x="15.6189%" y="581" width="0.0103%" height="15" fill="rgb(215,173,21)" fg:x="3031" fg:w="2"/><text x="15.8689%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.23%)</title><rect x="15.6292%" y="581" width="0.2319%" height="15" fill="rgb(210,6,40)" fg:x="3033" fg:w="45"/><text x="15.8792%" y="591.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as subtle::ConditionallySelectable&gt;::conditional_select (2 samples, 0.01%)</title><rect x="15.8611%" y="485" width="0.0103%" height="15" fill="rgb(212,48,18)" fg:x="3078" fg:w="2"/><text x="16.1111%" y="495.50"></text></g><g><title>k256::arithmetic::mul::Radix16Decomposition&lt;_&gt;::new (2 samples, 0.01%)</title><rect x="15.8714%" y="485" width="0.0103%" height="15" fill="rgb(230,214,11)" fg:x="3080" fg:w="2"/><text x="16.1214%" y="495.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::mul_wide (2 samples, 0.01%)</title><rect x="15.8868%" y="437" width="0.0103%" height="15" fill="rgb(254,105,39)" fg:x="3083" fg:w="2"/><text x="16.1368%" y="447.50"></text></g><g><title>k256::arithmetic::scalar::wide::muladd (2 samples, 0.01%)</title><rect x="15.8868%" y="421" width="0.0103%" height="15" fill="rgb(245,158,5)" fg:x="3083" fg:w="2"/><text x="16.1368%" y="431.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as core::ops::arith::Mul&gt;::mul (5 samples, 0.03%)</title><rect x="15.8868%" y="469" width="0.0258%" height="15" fill="rgb(249,208,11)" fg:x="3083" fg:w="5"/><text x="16.1368%" y="479.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::mul (5 samples, 0.03%)</title><rect x="15.8868%" y="453" width="0.0258%" height="15" fill="rgb(210,39,28)" fg:x="3083" fg:w="5"/><text x="16.1368%" y="463.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::reduce (3 samples, 0.02%)</title><rect x="15.8971%" y="437" width="0.0155%" height="15" fill="rgb(211,56,53)" fg:x="3085" fg:w="3"/><text x="16.1471%" y="447.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::reduce_impl (3 samples, 0.02%)</title><rect x="15.8971%" y="421" width="0.0155%" height="15" fill="rgb(226,201,30)" fg:x="3085" fg:w="3"/><text x="16.1471%" y="431.50"></text></g><g><title>k256::arithmetic::mul::decompose_scalar (8 samples, 0.04%)</title><rect x="15.8817%" y="485" width="0.0412%" height="15" fill="rgb(239,101,34)" fg:x="3082" fg:w="8"/><text x="16.1317%" y="495.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::mul_shift_vartime (2 samples, 0.01%)</title><rect x="15.9126%" y="469" width="0.0103%" height="15" fill="rgb(226,209,5)" fg:x="3088" fg:w="2"/><text x="16.1626%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.07%)</title><rect x="15.8611%" y="581" width="0.0670%" height="15" fill="rgb(250,105,47)" fg:x="3078" fg:w="13"/><text x="16.1111%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.07%)</title><rect x="15.8611%" y="565" width="0.0670%" height="15" fill="rgb(230,72,3)" fg:x="3078" fg:w="13"/><text x="16.1111%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.07%)</title><rect x="15.8611%" y="549" width="0.0670%" height="15" fill="rgb(232,218,39)" fg:x="3078" fg:w="13"/><text x="16.1111%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (13 samples, 0.07%)</title><rect x="15.8611%" y="533" width="0.0670%" height="15" fill="rgb(248,166,6)" fg:x="3078" fg:w="13"/><text x="16.1111%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.07%)</title><rect x="15.8611%" y="517" width="0.0670%" height="15" fill="rgb(247,89,20)" fg:x="3078" fg:w="13"/><text x="16.1111%" y="527.50"></text></g><g><title>k256::arithmetic::mul::lincomb::{{closure}} (13 samples, 0.07%)</title><rect x="15.8611%" y="501" width="0.0670%" height="15" fill="rgb(248,130,54)" fg:x="3078" fg:w="13"/><text x="16.1111%" y="511.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (10 samples, 0.05%)</title><rect x="15.9281%" y="565" width="0.0515%" height="15" fill="rgb(234,196,4)" fg:x="3091" fg:w="10"/><text x="16.1781%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.05%)</title><rect x="15.9281%" y="549" width="0.0515%" height="15" fill="rgb(250,143,31)" fg:x="3091" fg:w="10"/><text x="16.1781%" y="559.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (10 samples, 0.05%)</title><rect x="15.9281%" y="533" width="0.0515%" height="15" fill="rgb(211,110,34)" fg:x="3091" fg:w="10"/><text x="16.1781%" y="543.50"></text></g><g><title>subtle::black_box (5 samples, 0.03%)</title><rect x="15.9538%" y="517" width="0.0258%" height="15" fill="rgb(215,124,48)" fg:x="3096" fg:w="5"/><text x="16.2038%" y="527.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.03%)</title><rect x="15.9538%" y="501" width="0.0258%" height="15" fill="rgb(216,46,13)" fg:x="3096" fg:w="5"/><text x="16.2038%" y="511.50"></text></g><g><title>k256::arithmetic::mul::LookupTable::select (159 samples, 0.82%)</title><rect x="15.9281%" y="581" width="0.8193%" height="15" fill="rgb(205,184,25)" fg:x="3091" fg:w="159"/><text x="16.1781%" y="591.50"></text></g><g><title>subtle::ConditionallySelectable::conditional_assign (149 samples, 0.77%)</title><rect x="15.9796%" y="565" width="0.7678%" height="15" fill="rgb(228,1,10)" fg:x="3101" fg:w="149"/><text x="16.2296%" y="575.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as subtle::ConditionallySelectable&gt;::conditional_select (85 samples, 0.44%)</title><rect x="16.3094%" y="549" width="0.4380%" height="15" fill="rgb(213,116,27)" fg:x="3165" fg:w="85"/><text x="16.5594%" y="559.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as subtle::ConditionallySelectable&gt;::conditional_select (85 samples, 0.44%)</title><rect x="16.3094%" y="533" width="0.4380%" height="15" fill="rgb(241,95,50)" fg:x="3165" fg:w="85"/><text x="16.5594%" y="543.50"></text></g><g><title>&lt;k256::arithmetic::field::field_5x52::FieldElement5x52 as subtle::ConditionallySelectable&gt;::conditional_select (85 samples, 0.44%)</title><rect x="16.3094%" y="517" width="0.4380%" height="15" fill="rgb(238,48,32)" fg:x="3165" fg:w="85"/><text x="16.5594%" y="527.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_select (85 samples, 0.44%)</title><rect x="16.3094%" y="501" width="0.4380%" height="15" fill="rgb(235,113,49)" fg:x="3165" fg:w="85"/><text x="16.5594%" y="511.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitXor&lt;u64&gt;&gt;::bitxor (85 samples, 0.44%)</title><rect x="16.3094%" y="485" width="0.4380%" height="15" fill="rgb(205,127,43)" fg:x="3165" fg:w="85"/><text x="16.5594%" y="495.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (85 samples, 0.44%)</title><rect x="16.3094%" y="469" width="0.4380%" height="15" fill="rgb(250,162,2)" fg:x="3165" fg:w="85"/><text x="16.5594%" y="479.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (347 samples, 1.79%)</title><rect x="16.7474%" y="565" width="1.7881%" height="15" fill="rgb(220,13,41)" fg:x="3250" fg:w="347"/><text x="16.9974%" y="575.50">&lt;..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (347 samples, 1.79%)</title><rect x="16.7474%" y="549" width="1.7881%" height="15" fill="rgb(249,221,25)" fg:x="3250" fg:w="347"/><text x="16.9974%" y="559.50">k..</text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (347 samples, 1.79%)</title><rect x="16.7474%" y="533" width="1.7881%" height="15" fill="rgb(215,208,19)" fg:x="3250" fg:w="347"/><text x="16.9974%" y="543.50">k..</text></g><g><title>&lt;P as elliptic_curve::ops::LinearCombination&gt;::lincomb (1,614 samples, 8.32%)</title><rect x="10.7080%" y="645" width="8.3170%" height="15" fill="rgb(236,175,2)" fg:x="2078" fg:w="1614"/><text x="10.9580%" y="655.50">&lt;P as ellipt..</text></g><g><title>k256::arithmetic::mul::&lt;impl elliptic_curve::ops::LinearCombinationExt&lt;[(k256::arithmetic::projective::ProjectivePoint,k256::arithmetic::scalar::Scalar) (1,614 samples, 8.32%)</title><rect x="10.7080%" y="629" width="8.3170%" height="15" fill="rgb(241,52,2)" fg:x="2078" fg:w="1614"/><text x="10.9580%" y="639.50">k256::arithm..</text></g><g><title> N]&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::lincomb_ext (1,614 samples, 8.32%)</title><rect x="10.7080%" y="613" width="8.3170%" height="15" fill="rgb(248,140,14)" fg:x="2078" fg:w="1614"/><text x="10.9580%" y="623.50"> N]&gt; for k25..</text></g><g><title>k256::arithmetic::mul::lincomb (1,612 samples, 8.31%)</title><rect x="10.7183%" y="597" width="8.3067%" height="15" fill="rgb(253,22,42)" fg:x="2080" fg:w="1612"/><text x="10.9683%" y="607.50">k256::arithm..</text></g><g><title>k256::arithmetic::projective::ProjectivePoint::double (442 samples, 2.28%)</title><rect x="16.7474%" y="581" width="2.2776%" height="15" fill="rgb(234,61,47)" fg:x="3250" fg:w="442"/><text x="16.9974%" y="591.50">k..</text></g><g><title>k256::arithmetic::field::FieldElement::square (95 samples, 0.49%)</title><rect x="18.5355%" y="565" width="0.4895%" height="15" fill="rgb(208,226,15)" fg:x="3597" fg:w="95"/><text x="18.7855%" y="575.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (95 samples, 0.49%)</title><rect x="18.5355%" y="549" width="0.4895%" height="15" fill="rgb(217,221,4)" fg:x="3597" fg:w="95"/><text x="18.7855%" y="559.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (95 samples, 0.49%)</title><rect x="18.5355%" y="533" width="0.4895%" height="15" fill="rgb(212,174,34)" fg:x="3597" fg:w="95"/><text x="18.7855%" y="543.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as core::ops::arith::SubAssign&lt;&amp;k256::arithmetic::scalar::Scalar&gt;&gt;::sub_assign (112 samples, 0.58%)</title><rect x="19.0250%" y="613" width="0.5771%" height="15" fill="rgb(253,83,4)" fg:x="3692" fg:w="112"/><text x="19.2750%" y="623.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::sub (112 samples, 0.58%)</title><rect x="19.0250%" y="597" width="0.5771%" height="15" fill="rgb(250,195,49)" fg:x="3692" fg:w="112"/><text x="19.2750%" y="607.50"></text></g><g><title>crypto_bigint::uint::sub_mod::&lt;impl crypto_bigint::uint::Uint&lt;_&gt;&gt;::sub_mod (112 samples, 0.58%)</title><rect x="19.0250%" y="581" width="0.5771%" height="15" fill="rgb(241,192,25)" fg:x="3692" fg:w="112"/><text x="19.2750%" y="591.50"></text></g><g><title>crypto_bigint::uint::add::&lt;impl crypto_bigint::uint::Uint&lt;_&gt;&gt;::wrapping_add (112 samples, 0.58%)</title><rect x="19.0250%" y="565" width="0.5771%" height="15" fill="rgb(208,124,10)" fg:x="3692" fg:w="112"/><text x="19.2750%" y="575.50"></text></g><g><title>crypto_bigint::uint::add::&lt;impl crypto_bigint::uint::Uint&lt;_&gt;&gt;::adc (112 samples, 0.58%)</title><rect x="19.0250%" y="549" width="0.5771%" height="15" fill="rgb(222,33,0)" fg:x="3692" fg:w="112"/><text x="19.2750%" y="559.50"></text></g><g><title>crypto_bigint::limb::add::&lt;impl crypto_bigint::limb::Limb&gt;::adc (112 samples, 0.58%)</title><rect x="19.0250%" y="533" width="0.5771%" height="15" fill="rgb(234,209,28)" fg:x="3692" fg:w="112"/><text x="19.2750%" y="543.50"></text></g><g><title>ff::PrimeField::is_even (42 samples, 0.22%)</title><rect x="19.6022%" y="613" width="0.2164%" height="15" fill="rgb(224,11,23)" fg:x="3804" fg:w="42"/><text x="19.8522%" y="623.50"></text></g><g><title>&lt;subtle::Choice as core::ops::bit::Not&gt;::not (42 samples, 0.22%)</title><rect x="19.6022%" y="597" width="0.2164%" height="15" fill="rgb(232,99,1)" fg:x="3804" fg:w="42"/><text x="19.8522%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (42 samples, 0.22%)</title><rect x="19.6022%" y="581" width="0.2164%" height="15" fill="rgb(237,95,45)" fg:x="3804" fg:w="42"/><text x="19.8522%" y="591.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (42 samples, 0.22%)</title><rect x="19.6022%" y="565" width="0.2164%" height="15" fill="rgb(208,109,11)" fg:x="3804" fg:w="42"/><text x="19.8522%" y="575.50"></text></g><g><title>subtle::black_box (42 samples, 0.22%)</title><rect x="19.6022%" y="549" width="0.2164%" height="15" fill="rgb(216,190,48)" fg:x="3804" fg:w="42"/><text x="19.8522%" y="559.50"></text></g><g><title>core::ptr::read_volatile (42 samples, 0.22%)</title><rect x="19.6022%" y="533" width="0.2164%" height="15" fill="rgb(251,171,36)" fg:x="3804" fg:w="42"/><text x="19.8522%" y="543.50"></text></g><g><title>&lt;elliptic_curve::scalar::nonzero::NonZeroScalar&lt;C&gt; as elliptic_curve::ops::Invert&gt;::invert_vartime (159 samples, 0.82%)</title><rect x="19.0250%" y="645" width="0.8193%" height="15" fill="rgb(230,62,22)" fg:x="3692" fg:w="159"/><text x="19.2750%" y="655.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as elliptic_curve::ops::Invert&gt;::invert_vartime (159 samples, 0.82%)</title><rect x="19.0250%" y="629" width="0.8193%" height="15" fill="rgb(225,114,35)" fg:x="3692" fg:w="159"/><text x="19.2750%" y="639.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::is_zero (5 samples, 0.03%)</title><rect x="19.8186%" y="613" width="0.0258%" height="15" fill="rgb(215,118,42)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="623.50"></text></g><g><title>crypto_bigint::traits::Zero::is_zero (5 samples, 0.03%)</title><rect x="19.8186%" y="597" width="0.0258%" height="15" fill="rgb(243,119,21)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="607.50"></text></g><g><title>crypto_bigint::uint::cmp::&lt;impl subtle::ConstantTimeEq for crypto_bigint::uint::Uint&lt;_&gt;&gt;::ct_eq (5 samples, 0.03%)</title><rect x="19.8186%" y="581" width="0.0258%" height="15" fill="rgb(252,177,53)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="19.8186%" y="565" width="0.0258%" height="15" fill="rgb(237,209,29)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="575.50"></text></g><g><title>crypto_bigint::ct_choice::&lt;impl core::convert::From&lt;crypto_bigint::ct_choice::CtChoice&gt; for subtle::Choice&gt;::from (5 samples, 0.03%)</title><rect x="19.8186%" y="549" width="0.0258%" height="15" fill="rgb(212,65,23)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="559.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (5 samples, 0.03%)</title><rect x="19.8186%" y="533" width="0.0258%" height="15" fill="rgb(230,222,46)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="543.50"></text></g><g><title>subtle::black_box (5 samples, 0.03%)</title><rect x="19.8186%" y="517" width="0.0258%" height="15" fill="rgb(215,135,32)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="527.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.03%)</title><rect x="19.8186%" y="501" width="0.0258%" height="15" fill="rgb(246,101,22)" fg:x="3846" fg:w="5"/><text x="20.0686%" y="511.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (14 samples, 0.07%)</title><rect x="19.8444%" y="597" width="0.0721%" height="15" fill="rgb(206,107,13)" fg:x="3851" fg:w="14"/><text x="20.0944%" y="607.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (14 samples, 0.07%)</title><rect x="19.8444%" y="581" width="0.0721%" height="15" fill="rgb(250,100,44)" fg:x="3851" fg:w="14"/><text x="20.0944%" y="591.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (14 samples, 0.07%)</title><rect x="19.8444%" y="565" width="0.0721%" height="15" fill="rgb(231,147,38)" fg:x="3851" fg:w="14"/><text x="20.0944%" y="575.50"></text></g><g><title>k256::arithmetic::field::FieldElement::invert (112 samples, 0.58%)</title><rect x="19.8444%" y="613" width="0.5771%" height="15" fill="rgb(229,8,40)" fg:x="3851" fg:w="112"/><text x="20.0944%" y="623.50"></text></g><g><title>k256::arithmetic::field::FieldElement::pow2k (98 samples, 0.50%)</title><rect x="19.9165%" y="597" width="0.5050%" height="15" fill="rgb(221,135,30)" fg:x="3865" fg:w="98"/><text x="20.1665%" y="607.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (98 samples, 0.50%)</title><rect x="19.9165%" y="581" width="0.5050%" height="15" fill="rgb(249,193,18)" fg:x="3865" fg:w="98"/><text x="20.1665%" y="591.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (98 samples, 0.50%)</title><rect x="19.9165%" y="565" width="0.5050%" height="15" fill="rgb(209,133,39)" fg:x="3865" fg:w="98"/><text x="20.1665%" y="575.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (98 samples, 0.50%)</title><rect x="19.9165%" y="549" width="0.5050%" height="15" fill="rgb(232,100,14)" fg:x="3865" fg:w="98"/><text x="20.1665%" y="559.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as group::Curve&gt;::to_affine (113 samples, 0.58%)</title><rect x="19.8444%" y="645" width="0.5823%" height="15" fill="rgb(224,185,1)" fg:x="3851" fg:w="113"/><text x="20.0944%" y="655.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::to_affine (113 samples, 0.58%)</title><rect x="19.8444%" y="629" width="0.5823%" height="15" fill="rgb(223,139,8)" fg:x="3851" fg:w="113"/><text x="20.0944%" y="639.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::mul_wide (2 samples, 0.01%)</title><rect x="20.4267%" y="613" width="0.0103%" height="15" fill="rgb(232,213,38)" fg:x="3964" fg:w="2"/><text x="20.6767%" y="623.50"></text></g><g><title>k256::arithmetic::scalar::wide::muladd (2 samples, 0.01%)</title><rect x="20.4267%" y="597" width="0.0103%" height="15" fill="rgb(207,94,22)" fg:x="3964" fg:w="2"/><text x="20.6767%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="20.4267%" y="581" width="0.0103%" height="15" fill="rgb(219,183,54)" fg:x="3964" fg:w="2"/><text x="20.6767%" y="591.50"></text></g><g><title>&lt;ecdsa::verifying::VerifyingKey&lt;C&gt; as signature::hazmat::PrehashVerifier&lt;ecdsa::Signature&lt;C&gt;&gt;&gt;::verify_prehash (1,889 samples, 9.73%)</title><rect x="10.7080%" y="693" width="9.7341%" height="15" fill="rgb(216,185,54)" fg:x="2078" fg:w="1889"/><text x="10.9580%" y="703.50">&lt;ecdsa::verify..</text></g><g><title>k256::ecdsa::&lt;impl ecdsa::hazmat::VerifyPrimitive&lt;k256::Secp256k1&gt; for k256::arithmetic::affine::AffinePoint&gt;::verify_prehashed (1,889 samples, 9.73%)</title><rect x="10.7080%" y="677" width="9.7341%" height="15" fill="rgb(254,217,39)" fg:x="2078" fg:w="1889"/><text x="10.9580%" y="687.50">k256::ecdsa::&lt;..</text></g><g><title>ecdsa::hazmat::verify_prehashed (1,889 samples, 9.73%)</title><rect x="10.7080%" y="661" width="9.7341%" height="15" fill="rgb(240,178,23)" fg:x="2078" fg:w="1889"/><text x="10.9580%" y="671.50">ecdsa::hazmat:..</text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as core::ops::arith::Mul&gt;::mul (3 samples, 0.02%)</title><rect x="20.4267%" y="645" width="0.0155%" height="15" fill="rgb(218,11,47)" fg:x="3964" fg:w="3"/><text x="20.6767%" y="655.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::mul (3 samples, 0.02%)</title><rect x="20.4267%" y="629" width="0.0155%" height="15" fill="rgb(218,51,51)" fg:x="3964" fg:w="3"/><text x="20.6767%" y="639.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as core::ops::arith::Mul&lt;&amp;k256::arithmetic::scalar::Scalar&gt;&gt;::mul (73 samples, 0.38%)</title><rect x="20.4421%" y="645" width="0.3762%" height="15" fill="rgb(238,126,27)" fg:x="3967" fg:w="73"/><text x="20.6921%" y="655.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::mul (73 samples, 0.38%)</title><rect x="20.4421%" y="629" width="0.3762%" height="15" fill="rgb(249,202,22)" fg:x="3967" fg:w="73"/><text x="20.6921%" y="639.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::mul_wide (73 samples, 0.38%)</title><rect x="20.4421%" y="613" width="0.3762%" height="15" fill="rgb(254,195,49)" fg:x="3967" fg:w="73"/><text x="20.6921%" y="623.50"></text></g><g><title>k256::arithmetic::scalar::wide::muladd (73 samples, 0.38%)</title><rect x="20.4421%" y="597" width="0.3762%" height="15" fill="rgb(208,123,14)" fg:x="3967" fg:w="73"/><text x="20.6921%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (73 samples, 0.38%)</title><rect x="20.4421%" y="581" width="0.3762%" height="15" fill="rgb(224,200,8)" fg:x="3967" fg:w="73"/><text x="20.6921%" y="591.50"></text></g><g><title>&lt;elliptic_curve::scalar::nonzero::NonZeroScalar&lt;C&gt; as elliptic_curve::ops::Invert&gt;::invert (236 samples, 1.22%)</title><rect x="20.4421%" y="693" width="1.2161%" height="15" fill="rgb(217,61,36)" fg:x="3967" fg:w="236"/><text x="20.6921%" y="703.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as elliptic_curve::ops::Invert&gt;::invert (236 samples, 1.22%)</title><rect x="20.4421%" y="677" width="1.2161%" height="15" fill="rgb(206,35,45)" fg:x="3967" fg:w="236"/><text x="20.6921%" y="687.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::invert (236 samples, 1.22%)</title><rect x="20.4421%" y="661" width="1.2161%" height="15" fill="rgb(217,65,33)" fg:x="3967" fg:w="236"/><text x="20.6921%" y="671.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::pow2k (163 samples, 0.84%)</title><rect x="20.8183%" y="645" width="0.8399%" height="15" fill="rgb(222,158,48)" fg:x="4040" fg:w="163"/><text x="21.0683%" y="655.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::square (145 samples, 0.75%)</title><rect x="20.9111%" y="629" width="0.7472%" height="15" fill="rgb(254,2,54)" fg:x="4058" fg:w="145"/><text x="21.1611%" y="639.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::mul (145 samples, 0.75%)</title><rect x="20.9111%" y="613" width="0.7472%" height="15" fill="rgb(250,143,38)" fg:x="4058" fg:w="145"/><text x="21.1611%" y="623.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::reduce (145 samples, 0.75%)</title><rect x="20.9111%" y="597" width="0.7472%" height="15" fill="rgb(248,25,0)" fg:x="4058" fg:w="145"/><text x="21.1611%" y="607.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::reduce_impl (143 samples, 0.74%)</title><rect x="20.9214%" y="581" width="0.7369%" height="15" fill="rgb(206,152,27)" fg:x="4060" fg:w="143"/><text x="21.1714%" y="591.50"></text></g><g><title>&lt;subtle::Choice as core::ops::bit::Not&gt;::not (36 samples, 0.19%)</title><rect x="21.4727%" y="565" width="0.1855%" height="15" fill="rgb(240,77,30)" fg:x="4167" fg:w="36"/><text x="21.7227%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (36 samples, 0.19%)</title><rect x="21.4727%" y="549" width="0.1855%" height="15" fill="rgb(231,5,3)" fg:x="4167" fg:w="36"/><text x="21.7227%" y="559.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (36 samples, 0.19%)</title><rect x="21.4727%" y="533" width="0.1855%" height="15" fill="rgb(207,226,32)" fg:x="4167" fg:w="36"/><text x="21.7227%" y="543.50"></text></g><g><title>subtle::black_box (36 samples, 0.19%)</title><rect x="21.4727%" y="517" width="0.1855%" height="15" fill="rgb(222,207,47)" fg:x="4167" fg:w="36"/><text x="21.7227%" y="527.50"></text></g><g><title>core::ptr::read_volatile (36 samples, 0.19%)</title><rect x="21.4727%" y="501" width="0.1855%" height="15" fill="rgb(229,115,45)" fg:x="4167" fg:w="36"/><text x="21.7227%" y="511.50"></text></g><g><title>k256::arithmetic::field::FieldElement::sqrt (125 samples, 0.64%)</title><rect x="21.6583%" y="645" width="0.6441%" height="15" fill="rgb(224,191,6)" fg:x="4203" fg:w="125"/><text x="21.9083%" y="655.50"></text></g><g><title>k256::arithmetic::field::FieldElement::pow2k (125 samples, 0.64%)</title><rect x="21.6583%" y="629" width="0.6441%" height="15" fill="rgb(230,227,24)" fg:x="4203" fg:w="125"/><text x="21.9083%" y="639.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (108 samples, 0.56%)</title><rect x="21.7459%" y="613" width="0.5565%" height="15" fill="rgb(228,80,19)" fg:x="4220" fg:w="108"/><text x="21.9959%" y="623.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (108 samples, 0.56%)</title><rect x="21.7459%" y="597" width="0.5565%" height="15" fill="rgb(247,229,0)" fg:x="4220" fg:w="108"/><text x="21.9959%" y="607.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (108 samples, 0.56%)</title><rect x="21.7459%" y="581" width="0.5565%" height="15" fill="rgb(237,194,15)" fg:x="4220" fg:w="108"/><text x="21.9959%" y="591.50"></text></g><g><title>&lt;k256::arithmetic::affine::AffinePoint as elliptic_curve::point::DecompressPoint&lt;k256::Secp256k1&gt;&gt;::decompress (128 samples, 0.66%)</title><rect x="21.6583%" y="693" width="0.6596%" height="15" fill="rgb(219,203,20)" fg:x="4203" fg:w="128"/><text x="21.9083%" y="703.50"></text></g><g><title>subtle::CtOption&lt;T&gt;::and_then (128 samples, 0.66%)</title><rect x="21.6583%" y="677" width="0.6596%" height="15" fill="rgb(234,128,8)" fg:x="4203" fg:w="128"/><text x="21.9083%" y="687.50"></text></g><g><title>&lt;k256::arithmetic::affine::AffinePoint as elliptic_curve::point::DecompressPoint&lt;k256::Secp256k1&gt;&gt;::decompress::{{closure}} (128 samples, 0.66%)</title><rect x="21.6583%" y="661" width="0.6596%" height="15" fill="rgb(248,202,8)" fg:x="4203" fg:w="128"/><text x="21.9083%" y="671.50"></text></g><g><title>subtle::CtOption&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="22.3024%" y="645" width="0.0155%" height="15" fill="rgb(206,104,37)" fg:x="4328" fg:w="3"/><text x="22.5524%" y="655.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::PrimitiveSignature::recover_from_prehash (4,076 samples, 21.00%)</title><rect x="1.3398%" y="725" width="21.0038%" height="15" fill="rgb(223,8,27)" fg:x="260" fg:w="4076"/><text x="1.5898%" y="735.50">alloy_primitives::signature::prim..</text></g><g><title>ecdsa::recovery::&lt;impl ecdsa::verifying::VerifyingKey&lt;C&gt;&gt;::recover_from_prehash (4,075 samples, 21.00%)</title><rect x="1.3449%" y="709" width="20.9987%" height="15" fill="rgb(216,217,28)" fg:x="261" fg:w="4075"/><text x="1.5949%" y="719.50">ecdsa::recovery::&lt;impl ecdsa::ver..</text></g><g><title>ecdsa::Signature&lt;C&gt;::split_scalars (4 samples, 0.02%)</title><rect x="22.3230%" y="693" width="0.0206%" height="15" fill="rgb(249,199,1)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="703.50"></text></g><g><title>ecdsa::Signature&lt;C&gt;::s (4 samples, 0.02%)</title><rect x="22.3230%" y="677" width="0.0206%" height="15" fill="rgb(240,85,17)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="687.50"></text></g><g><title>elliptic_curve::scalar::nonzero::NonZeroScalar&lt;C&gt;::new (4 samples, 0.02%)</title><rect x="22.3230%" y="661" width="0.0206%" height="15" fill="rgb(206,108,45)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="671.50"></text></g><g><title>ff::Field::is_zero (4 samples, 0.02%)</title><rect x="22.3230%" y="645" width="0.0206%" height="15" fill="rgb(245,210,41)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="655.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as subtle::ConstantTimeEq&gt;::ct_eq (4 samples, 0.02%)</title><rect x="22.3230%" y="629" width="0.0206%" height="15" fill="rgb(206,13,37)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="639.50"></text></g><g><title>crypto_bigint::uint::cmp::&lt;impl subtle::ConstantTimeEq for crypto_bigint::uint::Uint&lt;_&gt;&gt;::ct_eq (4 samples, 0.02%)</title><rect x="22.3230%" y="613" width="0.0206%" height="15" fill="rgb(250,61,18)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.02%)</title><rect x="22.3230%" y="597" width="0.0206%" height="15" fill="rgb(235,172,48)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="607.50"></text></g><g><title>crypto_bigint::ct_choice::&lt;impl core::convert::From&lt;crypto_bigint::ct_choice::CtChoice&gt; for subtle::Choice&gt;::from (4 samples, 0.02%)</title><rect x="22.3230%" y="581" width="0.0206%" height="15" fill="rgb(249,201,17)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="591.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (4 samples, 0.02%)</title><rect x="22.3230%" y="565" width="0.0206%" height="15" fill="rgb(219,208,6)" fg:x="4332" fg:w="4"/><text x="22.5730%" y="575.50"></text></g><g><title>&lt;k256::arithmetic::affine::AffinePoint as elliptic_curve::sec1::ToEncodedPoint&lt;k256::Secp256k1&gt;&gt;::to_encoded_point (2 samples, 0.01%)</title><rect x="22.3436%" y="677" width="0.0103%" height="15" fill="rgb(248,31,23)" fg:x="4336" fg:w="2"/><text x="22.5936%" y="687.50"></text></g><g><title>k256::arithmetic::field::FieldElement::to_bytes (2 samples, 0.01%)</title><rect x="22.3436%" y="661" width="0.0103%" height="15" fill="rgb(245,15,42)" fg:x="4336" fg:w="2"/><text x="22.5936%" y="671.50"></text></g><g><title>tiny_keccak::Buffer::setout (2 samples, 0.01%)</title><rect x="22.3539%" y="533" width="0.0103%" height="15" fill="rgb(222,217,39)" fg:x="4338" fg:w="2"/><text x="22.6039%" y="543.50"></text></g><g><title>tiny_keccak::Buffer::execute (2 samples, 0.01%)</title><rect x="22.3539%" y="517" width="0.0103%" height="15" fill="rgb(210,219,27)" fg:x="4338" fg:w="2"/><text x="22.6039%" y="527.50"></text></g><g><title>tiny_keccak::Buffer::setout::{{closure}} (2 samples, 0.01%)</title><rect x="22.3539%" y="501" width="0.0103%" height="15" fill="rgb(252,166,36)" fg:x="4338" fg:w="2"/><text x="22.6039%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.01%)</title><rect x="22.3539%" y="485" width="0.0103%" height="15" fill="rgb(245,132,34)" fg:x="4338" fg:w="2"/><text x="22.6039%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="22.3539%" y="469" width="0.0103%" height="15" fill="rgb(236,54,3)" fg:x="4338" fg:w="2"/><text x="22.6039%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="22.3539%" y="453" width="0.0103%" height="15" fill="rgb(241,173,43)" fg:x="4338" fg:w="2"/><text x="22.6039%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,109 samples, 21.17%)</title><rect x="1.2367%" y="805" width="21.1739%" height="15" fill="rgb(215,190,9)" fg:x="240" fg:w="4109"/><text x="1.4867%" y="815.50">core::option::Option&lt;T&gt;::map</text></g><g><title>zilliqa::consensus::Consensus::execute_block::{{closure}} (4,109 samples, 21.17%)</title><rect x="1.2367%" y="789" width="21.1739%" height="15" fill="rgb(242,101,16)" fg:x="240" fg:w="4109"/><text x="1.4867%" y="799.50">zilliqa::consensus::Consensus::ex..</text></g><g><title>zilliqa::transaction::SignedTransaction::verify (4,108 samples, 21.17%)</title><rect x="1.2419%" y="773" width="21.1687%" height="15" fill="rgb(223,190,21)" fg:x="241" fg:w="4108"/><text x="1.4919%" y="783.50">zilliqa::transaction::SignedTrans..</text></g><g><title>alloy_consensus::signed::Signed&lt;T&gt;::recover_signer (4,097 samples, 21.11%)</title><rect x="1.2986%" y="757" width="21.1120%" height="15" fill="rgb(215,228,25)" fg:x="252" fg:w="4097"/><text x="1.5486%" y="767.50">alloy_consensus::signed::Signed&lt;T..</text></g><g><title>alloy_primitives::signature::primitive_sig::PrimitiveSignature::recover_address_from_prehash (4,089 samples, 21.07%)</title><rect x="1.3398%" y="741" width="21.0708%" height="15" fill="rgb(225,36,22)" fg:x="260" fg:w="4089"/><text x="1.5898%" y="751.50">alloy_primitives::signature::prim..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (13 samples, 0.07%)</title><rect x="22.3436%" y="725" width="0.0670%" height="15" fill="rgb(251,106,46)" fg:x="4336" fg:w="13"/><text x="22.5936%" y="735.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::PrimitiveSignature::recover_address_from_prehash::{{closure}} (13 samples, 0.07%)</title><rect x="22.3436%" y="709" width="0.0670%" height="15" fill="rgb(208,90,1)" fg:x="4336" fg:w="13"/><text x="22.5936%" y="719.50"></text></g><g><title>alloy_primitives::bits::address::Address::from_public_key (13 samples, 0.07%)</title><rect x="22.3436%" y="693" width="0.0670%" height="15" fill="rgb(243,10,4)" fg:x="4336" fg:w="13"/><text x="22.5936%" y="703.50"></text></g><g><title>alloy_primitives::bits::address::Address::from_raw_public_key (11 samples, 0.06%)</title><rect x="22.3539%" y="677" width="0.0567%" height="15" fill="rgb(212,137,27)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="687.50"></text></g><g><title>alloy_primitives::utils::keccak256 (11 samples, 0.06%)</title><rect x="22.3539%" y="661" width="0.0567%" height="15" fill="rgb(231,220,49)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (11 samples, 0.06%)</title><rect x="22.3539%" y="645" width="0.0567%" height="15" fill="rgb(237,96,20)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="655.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (11 samples, 0.06%)</title><rect x="22.3539%" y="629" width="0.0567%" height="15" fill="rgb(239,229,30)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (11 samples, 0.06%)</title><rect x="22.3539%" y="613" width="0.0567%" height="15" fill="rgb(219,65,33)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (11 samples, 0.06%)</title><rect x="22.3539%" y="597" width="0.0567%" height="15" fill="rgb(243,134,7)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (11 samples, 0.06%)</title><rect x="22.3539%" y="581" width="0.0567%" height="15" fill="rgb(216,177,54)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (11 samples, 0.06%)</title><rect x="22.3539%" y="565" width="0.0567%" height="15" fill="rgb(211,160,20)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (11 samples, 0.06%)</title><rect x="22.3539%" y="549" width="0.0567%" height="15" fill="rgb(239,85,39)" fg:x="4338" fg:w="11"/><text x="22.6039%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (9 samples, 0.05%)</title><rect x="22.3642%" y="533" width="0.0464%" height="15" fill="rgb(232,125,22)" fg:x="4340" fg:w="9"/><text x="22.6142%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.05%)</title><rect x="22.3642%" y="517" width="0.0464%" height="15" fill="rgb(244,57,34)" fg:x="4340" fg:w="9"/><text x="22.6142%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.05%)</title><rect x="22.3642%" y="501" width="0.0464%" height="15" fill="rgb(214,203,32)" fg:x="4340" fg:w="9"/><text x="22.6142%" y="511.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="22.3642%" y="485" width="0.0464%" height="15" fill="rgb(207,58,43)" fg:x="4340" fg:w="9"/><text x="22.6142%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="22.4106%" y="597" width="0.0412%" height="15" fill="rgb(215,193,15)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8 samples, 0.04%)</title><rect x="22.4106%" y="581" width="0.0412%" height="15" fill="rgb(232,15,44)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (8 samples, 0.04%)</title><rect x="22.4106%" y="565" width="0.0412%" height="15" fill="rgb(212,3,48)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8 samples, 0.04%)</title><rect x="22.4106%" y="549" width="0.0412%" height="15" fill="rgb(218,128,7)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8 samples, 0.04%)</title><rect x="22.4106%" y="533" width="0.0412%" height="15" fill="rgb(226,216,39)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (8 samples, 0.04%)</title><rect x="22.4106%" y="517" width="0.0412%" height="15" fill="rgb(243,47,51)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.04%)</title><rect x="22.4106%" y="501" width="0.0412%" height="15" fill="rgb(241,183,40)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.04%)</title><rect x="22.4106%" y="485" width="0.0412%" height="15" fill="rgb(231,217,32)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="22.4106%" y="469" width="0.0412%" height="15" fill="rgb(229,61,38)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.04%)</title><rect x="22.4106%" y="453" width="0.0412%" height="15" fill="rgb(225,210,5)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.04%)</title><rect x="22.4106%" y="437" width="0.0412%" height="15" fill="rgb(231,79,45)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="447.50"></text></g><g><title>__rdl_dealloc (8 samples, 0.04%)</title><rect x="22.4106%" y="421" width="0.0412%" height="15" fill="rgb(224,100,7)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="431.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.04%)</title><rect x="22.4106%" y="405" width="0.0412%" height="15" fill="rgb(241,198,18)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="415.50"></text></g><g><title>__GI___libc_free (8 samples, 0.04%)</title><rect x="22.4106%" y="389" width="0.0412%" height="15" fill="rgb(252,97,53)" fg:x="4349" fg:w="8"/><text x="22.6606%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="22.4415%" y="373" width="0.0103%" height="15" fill="rgb(220,88,7)" fg:x="4355" fg:w="2"/><text x="22.6915%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::trie::EthTrie&lt;eth_trie::db::MemoryDB&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="805" width="0.0567%" height="15" fill="rgb(213,176,14)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::db::MemoryDB&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="789" width="0.0567%" height="15" fill="rgb(246,73,7)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.06%)</title><rect x="22.4106%" y="773" width="0.0567%" height="15" fill="rgb(245,64,36)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.06%)</title><rect x="22.4106%" y="757" width="0.0567%" height="15" fill="rgb(245,80,10)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::db::MemoryDB&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="741" width="0.0567%" height="15" fill="rgb(232,107,50)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="725" width="0.0567%" height="15" fill="rgb(253,3,0)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.06%)</title><rect x="22.4106%" y="709" width="0.0567%" height="15" fill="rgb(212,99,53)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.06%)</title><rect x="22.4106%" y="693" width="0.0567%" height="15" fill="rgb(249,111,54)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="677" width="0.0567%" height="15" fill="rgb(249,55,30)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="661" width="0.0567%" height="15" fill="rgb(237,47,42)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="645" width="0.0567%" height="15" fill="rgb(211,20,18)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,std::hash::random::RandomState&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="629" width="0.0567%" height="15" fill="rgb(231,203,46)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (11 samples, 0.06%)</title><rect x="22.4106%" y="613" width="0.0567%" height="15" fill="rgb(237,142,3)" fg:x="4349" fg:w="11"/><text x="22.6606%" y="623.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="22.4518%" y="597" width="0.0155%" height="15" fill="rgb(241,107,1)" fg:x="4357" fg:w="3"/><text x="22.7018%" y="607.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="22.4518%" y="581" width="0.0155%" height="15" fill="rgb(229,83,13)" fg:x="4357" fg:w="3"/><text x="22.7018%" y="591.50"></text></g><g><title>_int_free_maybe_consolidate (3 samples, 0.02%)</title><rect x="22.4518%" y="565" width="0.0155%" height="15" fill="rgb(241,91,40)" fg:x="4357" fg:w="3"/><text x="22.7018%" y="575.50"></text></g><g><title>malloc_consolidate (3 samples, 0.02%)</title><rect x="22.4518%" y="549" width="0.0155%" height="15" fill="rgb(225,3,45)" fg:x="4357" fg:w="3"/><text x="22.7018%" y="559.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="22.4724%" y="389" width="0.0103%" height="15" fill="rgb(244,223,14)" fg:x="4361" fg:w="2"/><text x="22.7224%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="22.4724%" y="373" width="0.0103%" height="15" fill="rgb(224,124,37)" fg:x="4361" fg:w="2"/><text x="22.7224%" y="383.50"></text></g><g><title>itertools::Itertools::join (5 samples, 0.03%)</title><rect x="22.4724%" y="805" width="0.0258%" height="15" fill="rgb(251,171,30)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.03%)</title><rect x="22.4724%" y="789" width="0.0258%" height="15" fill="rgb(236,46,54)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="799.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="22.4724%" y="773" width="0.0258%" height="15" fill="rgb(245,213,5)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="783.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::IteratorRefSpec&gt;::spec_fold (5 samples, 0.03%)</title><rect x="22.4724%" y="757" width="0.0258%" height="15" fill="rgb(230,144,27)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="767.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::IteratorRefSpec&gt;::spec_try_fold (5 samples, 0.03%)</title><rect x="22.4724%" y="741" width="0.0258%" height="15" fill="rgb(220,86,6)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="22.4724%" y="725" width="0.0258%" height="15" fill="rgb(240,20,13)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="22.4724%" y="709" width="0.0258%" height="15" fill="rgb(217,89,34)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="22.4724%" y="693" width="0.0258%" height="15" fill="rgb(229,13,5)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="703.50"></text></g><g><title>zilliqa::consensus::Consensus::execute_block::{{closure}} (5 samples, 0.03%)</title><rect x="22.4724%" y="677" width="0.0258%" height="15" fill="rgb(244,67,35)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="687.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.03%)</title><rect x="22.4724%" y="661" width="0.0258%" height="15" fill="rgb(221,40,2)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (5 samples, 0.03%)</title><rect x="22.4724%" y="645" width="0.0258%" height="15" fill="rgb(237,157,21)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="655.50"></text></g><g><title>alloc::fmt::format::{{closure}} (5 samples, 0.03%)</title><rect x="22.4724%" y="629" width="0.0258%" height="15" fill="rgb(222,94,11)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.03%)</title><rect x="22.4724%" y="613" width="0.0258%" height="15" fill="rgb(249,113,6)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.03%)</title><rect x="22.4724%" y="597" width="0.0258%" height="15" fill="rgb(238,137,36)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (5 samples, 0.03%)</title><rect x="22.4724%" y="581" width="0.0258%" height="15" fill="rgb(210,102,26)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="591.50"></text></g><g><title>core::fmt::write (5 samples, 0.03%)</title><rect x="22.4724%" y="565" width="0.0258%" height="15" fill="rgb(218,30,30)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.03%)</title><rect x="22.4724%" y="549" width="0.0258%" height="15" fill="rgb(214,67,26)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="559.50"></text></g><g><title>&lt;zilliqa::crypto::Hash as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="22.4724%" y="533" width="0.0258%" height="15" fill="rgb(251,9,53)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="543.50"></text></g><g><title>hex::encode (5 samples, 0.03%)</title><rect x="22.4724%" y="517" width="0.0258%" height="15" fill="rgb(228,204,25)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="527.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (5 samples, 0.03%)</title><rect x="22.4724%" y="501" width="0.0258%" height="15" fill="rgb(207,153,8)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="511.50"></text></g><g><title>hex::encode_to_iter (5 samples, 0.03%)</title><rect x="22.4724%" y="485" width="0.0258%" height="15" fill="rgb(242,9,16)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.03%)</title><rect x="22.4724%" y="469" width="0.0258%" height="15" fill="rgb(217,211,10)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="22.4724%" y="453" width="0.0258%" height="15" fill="rgb(219,228,52)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (5 samples, 0.03%)</title><rect x="22.4724%" y="437" width="0.0258%" height="15" fill="rgb(231,92,29)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.03%)</title><rect x="22.4724%" y="421" width="0.0258%" height="15" fill="rgb(232,8,23)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.03%)</title><rect x="22.4724%" y="405" width="0.0258%" height="15" fill="rgb(216,211,34)" fg:x="4361" fg:w="5"/><text x="22.7224%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="22.4827%" y="389" width="0.0155%" height="15" fill="rgb(236,151,0)" fg:x="4363" fg:w="3"/><text x="22.7327%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="22.4827%" y="373" width="0.0155%" height="15" fill="rgb(209,168,3)" fg:x="4363" fg:w="3"/><text x="22.7327%" y="383.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.02%)</title><rect x="22.4827%" y="357" width="0.0155%" height="15" fill="rgb(208,129,28)" fg:x="4363" fg:w="3"/><text x="22.7327%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="22.4982%" y="789" width="0.0155%" height="15" fill="rgb(229,78,22)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="22.4982%" y="773" width="0.0155%" height="15" fill="rgb(228,187,13)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="22.4982%" y="757" width="0.0155%" height="15" fill="rgb(240,119,24)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="22.4982%" y="741" width="0.0155%" height="15" fill="rgb(209,194,42)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="22.4982%" y="725" width="0.0155%" height="15" fill="rgb(247,200,46)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="22.4982%" y="709" width="0.0155%" height="15" fill="rgb(218,76,16)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.02%)</title><rect x="22.4982%" y="693" width="0.0155%" height="15" fill="rgb(225,21,48)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="703.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_rewards_late_at::{{closure}} (3 samples, 0.02%)</title><rect x="22.4982%" y="677" width="0.0155%" height="15" fill="rgb(239,223,50)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="687.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_stake (3 samples, 0.02%)</title><rect x="22.4982%" y="661" width="0.0155%" height="15" fill="rgb(244,45,21)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="671.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (3 samples, 0.02%)</title><rect x="22.4982%" y="645" width="0.0155%" height="15" fill="rgb(232,33,43)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="655.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (3 samples, 0.02%)</title><rect x="22.4982%" y="629" width="0.0155%" height="15" fill="rgb(209,8,3)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="639.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (3 samples, 0.02%)</title><rect x="22.4982%" y="613" width="0.0155%" height="15" fill="rgb(214,25,53)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="623.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (3 samples, 0.02%)</title><rect x="22.4982%" y="597" width="0.0155%" height="15" fill="rgb(254,186,54)" fg:x="4366" fg:w="3"/><text x="22.7482%" y="607.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register::{{closure}} (2 samples, 0.01%)</title><rect x="22.5033%" y="581" width="0.0103%" height="15" fill="rgb(208,174,49)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="591.50"></text></g><g><title>zilliqa::precompiles::scilla::scilla_call_handle_register::{{closure}} (2 samples, 0.01%)</title><rect x="22.5033%" y="565" width="0.0103%" height="15" fill="rgb(233,191,51)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="22.5033%" y="549" width="0.0103%" height="15" fill="rgb(222,134,10)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="559.50"></text></g><g><title>revm::handler::mainnet::execution::call (2 samples, 0.01%)</title><rect x="22.5033%" y="533" width="0.0103%" height="15" fill="rgb(230,226,20)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="543.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::make_call_frame (2 samples, 0.01%)</title><rect x="22.5033%" y="517" width="0.0103%" height="15" fill="rgb(251,111,25)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="527.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_delegated (2 samples, 0.01%)</title><rect x="22.5033%" y="501" width="0.0103%" height="15" fill="rgb(224,40,46)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="511.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (2 samples, 0.01%)</title><rect x="22.5033%" y="485" width="0.0103%" height="15" fill="rgb(236,108,47)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="495.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (2 samples, 0.01%)</title><rect x="22.5033%" y="469" width="0.0103%" height="15" fill="rgb(234,93,0)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="479.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (2 samples, 0.01%)</title><rect x="22.5033%" y="453" width="0.0103%" height="15" fill="rgb(224,213,32)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="463.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (2 samples, 0.01%)</title><rect x="22.5033%" y="437" width="0.0103%" height="15" fill="rgb(251,11,48)" fg:x="4367" fg:w="2"/><text x="22.7533%" y="447.50"></text></g><g><title>ethabi::encoder::encode (6 samples, 0.03%)</title><rect x="22.5137%" y="757" width="0.0309%" height="15" fill="rgb(236,173,5)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="767.50"></text></g><g><title>ethabi::encoder::encode_head_tail (6 samples, 0.03%)</title><rect x="22.5137%" y="741" width="0.0309%" height="15" fill="rgb(230,95,12)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.03%)</title><rect x="22.5137%" y="725" width="0.0309%" height="15" fill="rgb(232,209,1)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="22.5137%" y="709" width="0.0309%" height="15" fill="rgb(232,6,1)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="22.5137%" y="693" width="0.0309%" height="15" fill="rgb(210,224,50)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.03%)</title><rect x="22.5137%" y="677" width="0.0309%" height="15" fill="rgb(228,127,35)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="22.5137%" y="661" width="0.0309%" height="15" fill="rgb(245,102,45)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="22.5137%" y="645" width="0.0309%" height="15" fill="rgb(214,1,49)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="655.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="22.5137%" y="629" width="0.0309%" height="15" fill="rgb(226,163,40)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="639.50"></text></g><g><title>__rdl_alloc (6 samples, 0.03%)</title><rect x="22.5137%" y="613" width="0.0309%" height="15" fill="rgb(239,212,28)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="623.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.03%)</title><rect x="22.5137%" y="597" width="0.0309%" height="15" fill="rgb(220,20,13)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="607.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="22.5137%" y="581" width="0.0309%" height="15" fill="rgb(210,164,35)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="591.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="22.5137%" y="565" width="0.0309%" height="15" fill="rgb(248,109,41)" fg:x="4369" fg:w="6"/><text x="22.7637%" y="575.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="22.5343%" y="549" width="0.0103%" height="15" fill="rgb(238,23,50)" fg:x="4373" fg:w="2"/><text x="22.7843%" y="559.50"></text></g><g><title>ethabi::function::Function::encode_input (7 samples, 0.04%)</title><rect x="22.5137%" y="773" width="0.0361%" height="15" fill="rgb(211,48,49)" fg:x="4369" fg:w="7"/><text x="22.7637%" y="783.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::preverify_transaction_inner (2 samples, 0.01%)</title><rect x="22.5497%" y="725" width="0.0103%" height="15" fill="rgb(223,36,21)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="735.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::tx_against_state (2 samples, 0.01%)</title><rect x="22.5497%" y="709" width="0.0103%" height="15" fill="rgb(207,123,46)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="22.5497%" y="693" width="0.0103%" height="15" fill="rgb(240,218,32)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="703.50"></text></g><g><title>revm::handler::mainnet::validation::validate_tx_against_state (2 samples, 0.01%)</title><rect x="22.5497%" y="677" width="0.0103%" height="15" fill="rgb(252,5,43)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="687.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (2 samples, 0.01%)</title><rect x="22.5497%" y="661" width="0.0103%" height="15" fill="rgb(252,84,19)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="671.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (2 samples, 0.01%)</title><rect x="22.5497%" y="645" width="0.0103%" height="15" fill="rgb(243,152,39)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="655.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (2 samples, 0.01%)</title><rect x="22.5497%" y="629" width="0.0103%" height="15" fill="rgb(234,160,15)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="639.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (2 samples, 0.01%)</title><rect x="22.5497%" y="613" width="0.0103%" height="15" fill="rgb(237,34,20)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="623.50"></text></g><g><title>zilliqa::state::State::has_account (2 samples, 0.01%)</title><rect x="22.5497%" y="597" width="0.0103%" height="15" fill="rgb(229,97,13)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="607.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (2 samples, 0.01%)</title><rect x="22.5497%" y="581" width="0.0103%" height="15" fill="rgb(234,71,50)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="22.5497%" y="565" width="0.0103%" height="15" fill="rgb(253,155,4)" fg:x="4376" fg:w="2"/><text x="22.7997%" y="575.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_rewards_late_at (15 samples, 0.08%)</title><rect x="22.4982%" y="805" width="0.0773%" height="15" fill="rgb(222,185,37)" fg:x="4366" fg:w="15"/><text x="22.7482%" y="815.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_reward_address (12 samples, 0.06%)</title><rect x="22.5137%" y="789" width="0.0618%" height="15" fill="rgb(251,177,13)" fg:x="4369" fg:w="12"/><text x="22.7637%" y="799.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (5 samples, 0.03%)</title><rect x="22.5497%" y="773" width="0.0258%" height="15" fill="rgb(250,179,40)" fg:x="4376" fg:w="5"/><text x="22.7997%" y="783.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (5 samples, 0.03%)</title><rect x="22.5497%" y="757" width="0.0258%" height="15" fill="rgb(242,44,2)" fg:x="4376" fg:w="5"/><text x="22.7997%" y="767.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (5 samples, 0.03%)</title><rect x="22.5497%" y="741" width="0.0258%" height="15" fill="rgb(216,177,13)" fg:x="4376" fg:w="5"/><text x="22.7997%" y="751.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (3 samples, 0.02%)</title><rect x="22.5600%" y="725" width="0.0155%" height="15" fill="rgb(216,106,43)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="735.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register::{{closure}} (3 samples, 0.02%)</title><rect x="22.5600%" y="709" width="0.0155%" height="15" fill="rgb(216,183,2)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="719.50"></text></g><g><title>zilliqa::precompiles::scilla::scilla_call_handle_register::{{closure}} (3 samples, 0.02%)</title><rect x="22.5600%" y="693" width="0.0155%" height="15" fill="rgb(249,75,3)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="22.5600%" y="677" width="0.0155%" height="15" fill="rgb(219,67,39)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="687.50"></text></g><g><title>revm::handler::mainnet::execution::call (3 samples, 0.02%)</title><rect x="22.5600%" y="661" width="0.0155%" height="15" fill="rgb(253,228,2)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="671.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::make_call_frame (3 samples, 0.02%)</title><rect x="22.5600%" y="645" width="0.0155%" height="15" fill="rgb(235,138,27)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="655.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_delegated (3 samples, 0.02%)</title><rect x="22.5600%" y="629" width="0.0155%" height="15" fill="rgb(236,97,51)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="639.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (3 samples, 0.02%)</title><rect x="22.5600%" y="613" width="0.0155%" height="15" fill="rgb(240,80,30)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="623.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (3 samples, 0.02%)</title><rect x="22.5600%" y="597" width="0.0155%" height="15" fill="rgb(230,178,19)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="607.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (3 samples, 0.02%)</title><rect x="22.5600%" y="581" width="0.0155%" height="15" fill="rgb(210,190,27)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="591.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (3 samples, 0.02%)</title><rect x="22.5600%" y="565" width="0.0155%" height="15" fill="rgb(222,107,31)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="575.50"></text></g><g><title>zilliqa::state::State::has_account (3 samples, 0.02%)</title><rect x="22.5600%" y="549" width="0.0155%" height="15" fill="rgb(216,127,34)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="559.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (3 samples, 0.02%)</title><rect x="22.5600%" y="533" width="0.0155%" height="15" fill="rgb(234,116,52)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (3 samples, 0.02%)</title><rect x="22.5600%" y="517" width="0.0155%" height="15" fill="rgb(222,124,15)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (3 samples, 0.02%)</title><rect x="22.5600%" y="501" width="0.0155%" height="15" fill="rgb(231,179,28)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (3 samples, 0.02%)</title><rect x="22.5600%" y="485" width="0.0155%" height="15" fill="rgb(226,93,45)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (3 samples, 0.02%)</title><rect x="22.5600%" y="469" width="0.0155%" height="15" fill="rgb(215,8,51)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="479.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (3 samples, 0.02%)</title><rect x="22.5600%" y="453" width="0.0155%" height="15" fill="rgb(223,106,5)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="463.50"></text></g><g><title>rusqlite::Connection::query_row (3 samples, 0.02%)</title><rect x="22.5600%" y="437" width="0.0155%" height="15" fill="rgb(250,191,5)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="447.50"></text></g><g><title>rusqlite::statement::Statement::query_row (3 samples, 0.02%)</title><rect x="22.5600%" y="421" width="0.0155%" height="15" fill="rgb(242,132,44)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="431.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (3 samples, 0.02%)</title><rect x="22.5600%" y="405" width="0.0155%" height="15" fill="rgb(251,152,29)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="415.50"></text></g><g><title>rusqlite::row::Rows::next (3 samples, 0.02%)</title><rect x="22.5600%" y="389" width="0.0155%" height="15" fill="rgb(218,179,5)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="399.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (3 samples, 0.02%)</title><rect x="22.5600%" y="373" width="0.0155%" height="15" fill="rgb(227,67,19)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="383.50"></text></g><g><title>rusqlite::statement::Statement::step (3 samples, 0.02%)</title><rect x="22.5600%" y="357" width="0.0155%" height="15" fill="rgb(233,119,31)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="367.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (3 samples, 0.02%)</title><rect x="22.5600%" y="341" width="0.0155%" height="15" fill="rgb(241,120,22)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="351.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="22.5600%" y="325" width="0.0155%" height="15" fill="rgb(224,102,30)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="335.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="22.5600%" y="309" width="0.0155%" height="15" fill="rgb(210,164,37)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="319.50"></text></g><g><title>sqlite3Step (3 samples, 0.02%)</title><rect x="22.5600%" y="293" width="0.0155%" height="15" fill="rgb(226,191,16)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="303.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.02%)</title><rect x="22.5600%" y="277" width="0.0155%" height="15" fill="rgb(214,40,45)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="287.50"></text></g><g><title>sqlite3BtreeIndexMoveto (3 samples, 0.02%)</title><rect x="22.5600%" y="261" width="0.0155%" height="15" fill="rgb(244,29,26)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="271.50"></text></g><g><title>sqlite3Malloc (3 samples, 0.02%)</title><rect x="22.5600%" y="245" width="0.0155%" height="15" fill="rgb(216,16,5)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="255.50"></text></g><g><title>sqlite3Malloc (3 samples, 0.02%)</title><rect x="22.5600%" y="229" width="0.0155%" height="15" fill="rgb(249,76,35)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="239.50"></text></g><g><title>mallocWithAlarm (3 samples, 0.02%)</title><rect x="22.5600%" y="213" width="0.0155%" height="15" fill="rgb(207,11,44)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="223.50"></text></g><g><title>sqlite3MemMalloc (3 samples, 0.02%)</title><rect x="22.5600%" y="197" width="0.0155%" height="15" fill="rgb(228,190,49)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="207.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="22.5600%" y="181" width="0.0155%" height="15" fill="rgb(214,173,12)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="191.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="22.5600%" y="165" width="0.0155%" height="15" fill="rgb(218,26,35)" fg:x="4378" fg:w="3"/><text x="22.8100%" y="175.50"></text></g><g><title>&lt;zilliqa::transaction::VerifiedTransaction as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="22.5755%" y="773" width="0.0155%" height="15" fill="rgb(220,200,19)" fg:x="4381" fg:w="3"/><text x="22.8255%" y="783.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (24 samples, 0.12%)</title><rect x="22.6322%" y="709" width="0.1237%" height="15" fill="rgb(239,95,49)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="719.50"></text></g><g><title>alloy_primitives::utils::keccak256 (24 samples, 0.12%)</title><rect x="22.6322%" y="693" width="0.1237%" height="15" fill="rgb(235,85,53)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="703.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (24 samples, 0.12%)</title><rect x="22.6322%" y="677" width="0.1237%" height="15" fill="rgb(233,133,31)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (24 samples, 0.12%)</title><rect x="22.6322%" y="661" width="0.1237%" height="15" fill="rgb(218,25,20)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="671.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (24 samples, 0.12%)</title><rect x="22.6322%" y="645" width="0.1237%" height="15" fill="rgb(252,210,38)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (24 samples, 0.12%)</title><rect x="22.6322%" y="629" width="0.1237%" height="15" fill="rgb(242,134,21)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="639.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (24 samples, 0.12%)</title><rect x="22.6322%" y="613" width="0.1237%" height="15" fill="rgb(213,28,48)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (24 samples, 0.12%)</title><rect x="22.6322%" y="597" width="0.1237%" height="15" fill="rgb(250,196,2)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (24 samples, 0.12%)</title><rect x="22.6322%" y="581" width="0.1237%" height="15" fill="rgb(227,5,17)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (24 samples, 0.12%)</title><rect x="22.6322%" y="565" width="0.1237%" height="15" fill="rgb(221,226,24)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (24 samples, 0.12%)</title><rect x="22.6322%" y="549" width="0.1237%" height="15" fill="rgb(211,5,48)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (24 samples, 0.12%)</title><rect x="22.6322%" y="533" width="0.1237%" height="15" fill="rgb(219,150,6)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="543.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (24 samples, 0.12%)</title><rect x="22.6322%" y="517" width="0.1237%" height="15" fill="rgb(251,46,16)" fg:x="4392" fg:w="24"/><text x="22.8822%" y="527.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (29 samples, 0.15%)</title><rect x="22.6116%" y="741" width="0.1494%" height="15" fill="rgb(220,204,40)" fg:x="4388" fg:w="29"/><text x="22.8616%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (29 samples, 0.15%)</title><rect x="22.6116%" y="725" width="0.1494%" height="15" fill="rgb(211,85,2)" fg:x="4388" fg:w="29"/><text x="22.8616%" y="735.50"></text></g><g><title>tiny_keccak::Buffer::setout (2 samples, 0.01%)</title><rect x="22.7816%" y="581" width="0.0103%" height="15" fill="rgb(229,17,7)" fg:x="4421" fg:w="2"/><text x="23.0316%" y="591.50"></text></g><g><title>tiny_keccak::Buffer::execute (2 samples, 0.01%)</title><rect x="22.7816%" y="565" width="0.0103%" height="15" fill="rgb(239,72,28)" fg:x="4421" fg:w="2"/><text x="23.0316%" y="575.50"></text></g><g><title>tiny_keccak::Buffer::setout::{{closure}} (2 samples, 0.01%)</title><rect x="22.7816%" y="549" width="0.0103%" height="15" fill="rgb(230,47,54)" fg:x="4421" fg:w="2"/><text x="23.0316%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.01%)</title><rect x="22.7816%" y="533" width="0.0103%" height="15" fill="rgb(214,50,8)" fg:x="4421" fg:w="2"/><text x="23.0316%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="22.7816%" y="517" width="0.0103%" height="15" fill="rgb(216,198,43)" fg:x="4421" fg:w="2"/><text x="23.0316%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (25 samples, 0.13%)</title><rect x="22.7816%" y="677" width="0.1288%" height="15" fill="rgb(234,20,35)" fg:x="4421" fg:w="25"/><text x="23.0316%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (25 samples, 0.13%)</title><rect x="22.7816%" y="661" width="0.1288%" height="15" fill="rgb(254,45,19)" fg:x="4421" fg:w="25"/><text x="23.0316%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (25 samples, 0.13%)</title><rect x="22.7816%" y="645" width="0.1288%" height="15" fill="rgb(219,14,44)" fg:x="4421" fg:w="25"/><text x="23.0316%" y="655.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (25 samples, 0.13%)</title><rect x="22.7816%" y="629" width="0.1288%" height="15" fill="rgb(217,220,26)" fg:x="4421" fg:w="25"/><text x="23.0316%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (25 samples, 0.13%)</title><rect x="22.7816%" y="613" width="0.1288%" height="15" fill="rgb(213,158,28)" fg:x="4421" fg:w="25"/><text x="23.0316%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (25 samples, 0.13%)</title><rect x="22.7816%" y="597" width="0.1288%" height="15" fill="rgb(252,51,52)" fg:x="4421" fg:w="25"/><text x="23.0316%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (23 samples, 0.12%)</title><rect x="22.7919%" y="581" width="0.1185%" height="15" fill="rgb(246,89,16)" fg:x="4423" fg:w="23"/><text x="23.0419%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (23 samples, 0.12%)</title><rect x="22.7919%" y="565" width="0.1185%" height="15" fill="rgb(216,158,49)" fg:x="4423" fg:w="23"/><text x="23.0419%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (23 samples, 0.12%)</title><rect x="22.7919%" y="549" width="0.1185%" height="15" fill="rgb(236,107,19)" fg:x="4423" fg:w="23"/><text x="23.0419%" y="559.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (23 samples, 0.12%)</title><rect x="22.7919%" y="533" width="0.1185%" height="15" fill="rgb(228,185,30)" fg:x="4423" fg:w="23"/><text x="23.0419%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::new (28 samples, 0.14%)</title><rect x="22.7713%" y="725" width="0.1443%" height="15" fill="rgb(246,134,8)" fg:x="4419" fg:w="28"/><text x="23.0213%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256 (28 samples, 0.14%)</title><rect x="22.7713%" y="709" width="0.1443%" height="15" fill="rgb(214,143,50)" fg:x="4419" fg:w="28"/><text x="23.0213%" y="719.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (28 samples, 0.14%)</title><rect x="22.7713%" y="693" width="0.1443%" height="15" fill="rgb(228,75,8)" fg:x="4419" fg:w="28"/><text x="23.0213%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.04%)</title><rect x="22.9414%" y="613" width="0.0412%" height="15" fill="rgb(207,175,4)" fg:x="4452" fg:w="8"/><text x="23.1914%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.04%)</title><rect x="22.9414%" y="597" width="0.0412%" height="15" fill="rgb(205,108,24)" fg:x="4452" fg:w="8"/><text x="23.1914%" y="607.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.04%)</title><rect x="22.9414%" y="581" width="0.0412%" height="15" fill="rgb(244,120,49)" fg:x="4452" fg:w="8"/><text x="23.1914%" y="591.50"></text></g><g><title>__rdl_realloc (8 samples, 0.04%)</title><rect x="22.9414%" y="565" width="0.0412%" height="15" fill="rgb(223,47,38)" fg:x="4452" fg:w="8"/><text x="23.1914%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.04%)</title><rect x="22.9414%" y="549" width="0.0412%" height="15" fill="rgb(229,179,11)" fg:x="4452" fg:w="8"/><text x="23.1914%" y="559.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.04%)</title><rect x="22.9414%" y="533" width="0.0412%" height="15" fill="rgb(231,122,1)" fg:x="4452" fg:w="8"/><text x="23.1914%" y="543.50"></text></g><g><title>_int_realloc (5 samples, 0.03%)</title><rect x="22.9568%" y="517" width="0.0258%" height="15" fill="rgb(245,119,9)" fg:x="4455" fg:w="5"/><text x="23.2068%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="22.9723%" y="501" width="0.0103%" height="15" fill="rgb(241,163,25)" fg:x="4458" fg:w="2"/><text x="23.2223%" y="511.50"></text></g><g><title>tcache_put (2 samples, 0.01%)</title><rect x="22.9723%" y="485" width="0.0103%" height="15" fill="rgb(217,214,3)" fg:x="4458" fg:w="2"/><text x="23.2223%" y="495.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (12 samples, 0.06%)</title><rect x="22.9259%" y="693" width="0.0618%" height="15" fill="rgb(240,86,28)" fg:x="4449" fg:w="12"/><text x="23.1759%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.06%)</title><rect x="22.9259%" y="677" width="0.0618%" height="15" fill="rgb(215,47,9)" fg:x="4449" fg:w="12"/><text x="23.1759%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.05%)</title><rect x="22.9362%" y="661" width="0.0515%" height="15" fill="rgb(252,25,45)" fg:x="4451" fg:w="10"/><text x="23.1862%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.05%)</title><rect x="22.9362%" y="645" width="0.0515%" height="15" fill="rgb(251,164,9)" fg:x="4451" fg:w="10"/><text x="23.1862%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.05%)</title><rect x="22.9362%" y="629" width="0.0515%" height="15" fill="rgb(233,194,0)" fg:x="4451" fg:w="10"/><text x="23.1862%" y="639.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (19 samples, 0.10%)</title><rect x="22.9156%" y="709" width="0.0979%" height="15" fill="rgb(249,111,24)" fg:x="4447" fg:w="19"/><text x="23.1656%" y="719.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (5 samples, 0.03%)</title><rect x="22.9877%" y="693" width="0.0258%" height="15" fill="rgb(250,223,3)" fg:x="4461" fg:w="5"/><text x="23.2377%" y="703.50"></text></g><g><title>bincode::deserialize (3 samples, 0.02%)</title><rect x="23.0135%" y="677" width="0.0155%" height="15" fill="rgb(236,178,37)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="687.50"></text></g><g><title>bincode::config::Options::deserialize (3 samples, 0.02%)</title><rect x="23.0135%" y="661" width="0.0155%" height="15" fill="rgb(241,158,50)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="671.50"></text></g><g><title>bincode::internal::deserialize (3 samples, 0.02%)</title><rect x="23.0135%" y="645" width="0.0155%" height="15" fill="rgb(213,121,41)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="655.50"></text></g><g><title>bincode::internal::deserialize_seed (3 samples, 0.02%)</title><rect x="23.0135%" y="629" width="0.0155%" height="15" fill="rgb(240,92,3)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.02%)</title><rect x="23.0135%" y="613" width="0.0155%" height="15" fill="rgb(205,123,3)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="623.50"></text></g><g><title>zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize (3 samples, 0.02%)</title><rect x="23.0135%" y="597" width="0.0155%" height="15" fill="rgb(205,97,47)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="607.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.02%)</title><rect x="23.0135%" y="581" width="0.0155%" height="15" fill="rgb(247,152,14)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="591.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (3 samples, 0.02%)</title><rect x="23.0135%" y="565" width="0.0155%" height="15" fill="rgb(248,195,53)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="575.50"></text></g><g><title>&lt;zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.02%)</title><rect x="23.0135%" y="549" width="0.0155%" height="15" fill="rgb(226,201,16)" fg:x="4466" fg:w="3"/><text x="23.2635%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="23.0135%" y="709" width="0.0206%" height="15" fill="rgb(205,98,0)" fg:x="4466" fg:w="4"/><text x="23.2635%" y="719.50"></text></g><g><title>zilliqa::state::State::get_account::{{closure}} (4 samples, 0.02%)</title><rect x="23.0135%" y="693" width="0.0206%" height="15" fill="rgb(214,191,48)" fg:x="4466" fg:w="4"/><text x="23.2635%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (2 samples, 0.01%)</title><rect x="23.0341%" y="709" width="0.0103%" height="15" fill="rgb(237,112,39)" fg:x="4470" fg:w="2"/><text x="23.2841%" y="719.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::pad_with_zeros (2 samples, 0.01%)</title><rect x="23.0444%" y="613" width="0.0103%" height="15" fill="rgb(247,203,27)" fg:x="4472" fg:w="2"/><text x="23.2944%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2 samples, 0.01%)</title><rect x="23.0444%" y="597" width="0.0103%" height="15" fill="rgb(235,124,28)" fg:x="4472" fg:w="2"/><text x="23.2944%" y="607.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::pad_with_zeros::{{closure}} (2 samples, 0.01%)</title><rect x="23.0444%" y="581" width="0.0103%" height="15" fill="rgb(208,207,46)" fg:x="4472" fg:w="2"/><text x="23.2944%" y="591.50"></text></g><g><title>zilliqa::state::State::get_account_trie (76 samples, 0.39%)</title><rect x="22.7610%" y="741" width="0.3916%" height="15" fill="rgb(234,176,4)" fg:x="4417" fg:w="76"/><text x="23.0110%" y="751.50"></text></g><g><title>zilliqa::state::State::get_account (46 samples, 0.24%)</title><rect x="22.9156%" y="725" width="0.2370%" height="15" fill="rgb(230,133,28)" fg:x="4447" fg:w="46"/><text x="23.1656%" y="735.50"></text></g><g><title>zilliqa::state::State::account_key (21 samples, 0.11%)</title><rect x="23.0444%" y="709" width="0.1082%" height="15" fill="rgb(211,137,40)" fg:x="4472" fg:w="21"/><text x="23.2944%" y="719.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (21 samples, 0.11%)</title><rect x="23.0444%" y="693" width="0.1082%" height="15" fill="rgb(254,35,13)" fg:x="4472" fg:w="21"/><text x="23.2944%" y="703.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (21 samples, 0.11%)</title><rect x="23.0444%" y="677" width="0.1082%" height="15" fill="rgb(225,49,51)" fg:x="4472" fg:w="21"/><text x="23.2944%" y="687.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (21 samples, 0.11%)</title><rect x="23.0444%" y="661" width="0.1082%" height="15" fill="rgb(251,10,15)" fg:x="4472" fg:w="21"/><text x="23.2944%" y="671.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (21 samples, 0.11%)</title><rect x="23.0444%" y="645" width="0.1082%" height="15" fill="rgb(228,207,15)" fg:x="4472" fg:w="21"/><text x="23.2944%" y="655.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (21 samples, 0.11%)</title><rect x="23.0444%" y="629" width="0.1082%" height="15" fill="rgb(241,99,19)" fg:x="4472" fg:w="21"/><text x="23.2944%" y="639.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (19 samples, 0.10%)</title><rect x="23.0547%" y="613" width="0.0979%" height="15" fill="rgb(207,104,49)" fg:x="4474" fg:w="19"/><text x="23.3047%" y="623.50"></text></g><g><title>keccak::p1600 (19 samples, 0.10%)</title><rect x="23.0547%" y="597" width="0.0979%" height="15" fill="rgb(234,99,18)" fg:x="4474" fg:w="19"/><text x="23.3047%" y="607.50"></text></g><g><title>keccak::keccak_p (19 samples, 0.10%)</title><rect x="23.0547%" y="581" width="0.0979%" height="15" fill="rgb(213,191,49)" fg:x="4474" fg:w="19"/><text x="23.3047%" y="591.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (19 samples, 0.10%)</title><rect x="23.0547%" y="565" width="0.0979%" height="15" fill="rgb(210,226,19)" fg:x="4474" fg:w="19"/><text x="23.3047%" y="575.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="23.1939%" y="533" width="0.0206%" height="15" fill="rgb(229,97,18)" fg:x="4501" fg:w="4"/><text x="23.4439%" y="543.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (12 samples, 0.06%)</title><rect x="23.1578%" y="709" width="0.0618%" height="15" fill="rgb(211,167,15)" fg:x="4494" fg:w="12"/><text x="23.4078%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.04%)</title><rect x="23.1836%" y="693" width="0.0361%" height="15" fill="rgb(210,169,34)" fg:x="4499" fg:w="7"/><text x="23.4336%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.04%)</title><rect x="23.1836%" y="677" width="0.0361%" height="15" fill="rgb(241,121,31)" fg:x="4499" fg:w="7"/><text x="23.4336%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="23.1836%" y="661" width="0.0361%" height="15" fill="rgb(232,40,11)" fg:x="4499" fg:w="7"/><text x="23.4336%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="23.1836%" y="645" width="0.0361%" height="15" fill="rgb(205,86,26)" fg:x="4499" fg:w="7"/><text x="23.4336%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="23.1939%" y="629" width="0.0258%" height="15" fill="rgb(231,126,28)" fg:x="4501" fg:w="5"/><text x="23.4439%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="23.1939%" y="613" width="0.0258%" height="15" fill="rgb(219,221,18)" fg:x="4501" fg:w="5"/><text x="23.4439%" y="623.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="23.1939%" y="597" width="0.0258%" height="15" fill="rgb(211,40,0)" fg:x="4501" fg:w="5"/><text x="23.4439%" y="607.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="23.1939%" y="581" width="0.0258%" height="15" fill="rgb(239,85,43)" fg:x="4501" fg:w="5"/><text x="23.4439%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.03%)</title><rect x="23.1939%" y="565" width="0.0258%" height="15" fill="rgb(231,55,21)" fg:x="4501" fg:w="5"/><text x="23.4439%" y="575.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="23.1939%" y="549" width="0.0258%" height="15" fill="rgb(225,184,43)" fg:x="4501" fg:w="5"/><text x="23.4439%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;eth_trie::node::BranchNode&gt;&gt; (5 samples, 0.03%)</title><rect x="23.2299%" y="693" width="0.0258%" height="15" fill="rgb(251,158,41)" fg:x="4508" fg:w="5"/><text x="23.4799%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="23.2299%" y="677" width="0.0258%" height="15" fill="rgb(234,159,37)" fg:x="4508" fg:w="5"/><text x="23.4799%" y="687.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_unlock (5 samples, 0.03%)</title><rect x="23.2299%" y="661" width="0.0258%" height="15" fill="rgb(216,204,22)" fg:x="4508" fg:w="5"/><text x="23.4799%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (5 samples, 0.03%)</title><rect x="23.2299%" y="645" width="0.0258%" height="15" fill="rgb(214,17,3)" fg:x="4508" fg:w="5"/><text x="23.4799%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.03%)</title><rect x="23.2299%" y="629" width="0.0258%" height="15" fill="rgb(212,111,17)" fg:x="4508" fg:w="5"/><text x="23.4799%" y="639.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::insert (29 samples, 0.15%)</title><rect x="23.1526%" y="725" width="0.1494%" height="15" fill="rgb(221,157,24)" fg:x="4493" fg:w="29"/><text x="23.4026%" y="735.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (16 samples, 0.08%)</title><rect x="23.2196%" y="709" width="0.0824%" height="15" fill="rgb(252,16,13)" fg:x="4506" fg:w="16"/><text x="23.4696%" y="719.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (8 samples, 0.04%)</title><rect x="23.2608%" y="693" width="0.0412%" height="15" fill="rgb(221,62,2)" fg:x="4514" fg:w="8"/><text x="23.5108%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (4 samples, 0.02%)</title><rect x="23.2815%" y="677" width="0.0206%" height="15" fill="rgb(247,87,22)" fg:x="4518" fg:w="4"/><text x="23.5315%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (3 samples, 0.02%)</title><rect x="23.2866%" y="661" width="0.0155%" height="15" fill="rgb(215,73,9)" fg:x="4519" fg:w="3"/><text x="23.5366%" y="671.50"></text></g><g><title>eth_trie::nibbles::Nibbles::common_prefix (2 samples, 0.01%)</title><rect x="23.2918%" y="645" width="0.0103%" height="15" fill="rgb(207,175,33)" fg:x="4520" fg:w="2"/><text x="23.5418%" y="655.50"></text></g><g><title>eth_trie::nibbles::Nibbles::at (2 samples, 0.01%)</title><rect x="23.2918%" y="629" width="0.0103%" height="15" fill="rgb(243,129,54)" fg:x="4520" fg:w="2"/><text x="23.5418%" y="639.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (22 samples, 0.11%)</title><rect x="23.3072%" y="693" width="0.1134%" height="15" fill="rgb(227,119,45)" fg:x="4523" fg:w="22"/><text x="23.5572%" y="703.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (22 samples, 0.11%)</title><rect x="23.3072%" y="677" width="0.1134%" height="15" fill="rgb(205,109,36)" fg:x="4523" fg:w="22"/><text x="23.5572%" y="687.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (22 samples, 0.11%)</title><rect x="23.3072%" y="661" width="0.1134%" height="15" fill="rgb(205,6,39)" fg:x="4523" fg:w="22"/><text x="23.5572%" y="671.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (22 samples, 0.11%)</title><rect x="23.3072%" y="645" width="0.1134%" height="15" fill="rgb(221,32,16)" fg:x="4523" fg:w="22"/><text x="23.5572%" y="655.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (21 samples, 0.11%)</title><rect x="23.3124%" y="629" width="0.1082%" height="15" fill="rgb(228,144,50)" fg:x="4524" fg:w="21"/><text x="23.5624%" y="639.50"></text></g><g><title>keccak::p1600 (17 samples, 0.09%)</title><rect x="23.3330%" y="613" width="0.0876%" height="15" fill="rgb(229,201,53)" fg:x="4528" fg:w="17"/><text x="23.5830%" y="623.50"></text></g><g><title>keccak::keccak_p (17 samples, 0.09%)</title><rect x="23.3330%" y="597" width="0.0876%" height="15" fill="rgb(249,153,27)" fg:x="4528" fg:w="17"/><text x="23.5830%" y="607.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (17 samples, 0.09%)</title><rect x="23.3330%" y="581" width="0.0876%" height="15" fill="rgb(227,106,25)" fg:x="4528" fg:w="17"/><text x="23.5830%" y="591.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_delta_evm (162 samples, 0.83%)</title><rect x="22.5910%" y="757" width="0.8348%" height="15" fill="rgb(230,65,29)" fg:x="4384" fg:w="162"/><text x="22.8410%" y="767.50"></text></g><g><title>zilliqa::state::State::save_account (53 samples, 0.27%)</title><rect x="23.1526%" y="741" width="0.2731%" height="15" fill="rgb(221,57,46)" fg:x="4493" fg:w="53"/><text x="23.4026%" y="751.50"></text></g><g><title>zilliqa::state::State::account_key (23 samples, 0.12%)</title><rect x="23.3072%" y="725" width="0.1185%" height="15" fill="rgb(229,161,17)" fg:x="4523" fg:w="23"/><text x="23.5572%" y="735.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (23 samples, 0.12%)</title><rect x="23.3072%" y="709" width="0.1185%" height="15" fill="rgb(222,213,11)" fg:x="4523" fg:w="23"/><text x="23.5572%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="23.4257%" y="645" width="0.0155%" height="15" fill="rgb(235,35,13)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="23.4257%" y="629" width="0.0155%" height="15" fill="rgb(233,158,34)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.02%)</title><rect x="23.4257%" y="613" width="0.0155%" height="15" fill="rgb(215,151,48)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="23.4257%" y="597" width="0.0155%" height="15" fill="rgb(229,84,14)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="23.4257%" y="581" width="0.0155%" height="15" fill="rgb(229,68,14)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="23.4257%" y="565" width="0.0155%" height="15" fill="rgb(243,106,26)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="23.4257%" y="549" width="0.0155%" height="15" fill="rgb(206,45,38)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="23.4257%" y="533" width="0.0155%" height="15" fill="rgb(226,6,15)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="23.4257%" y="517" width="0.0155%" height="15" fill="rgb(232,22,54)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="527.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="23.4257%" y="501" width="0.0155%" height="15" fill="rgb(229,222,32)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="511.50"></text></g><g><title>tcache_get_n (3 samples, 0.02%)</title><rect x="23.4257%" y="485" width="0.0155%" height="15" fill="rgb(228,62,29)" fg:x="4546" fg:w="3"/><text x="23.6757%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="23.4257%" y="725" width="0.0309%" height="15" fill="rgb(251,103,34)" fg:x="4546" fg:w="6"/><text x="23.6757%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="23.4257%" y="709" width="0.0309%" height="15" fill="rgb(233,12,30)" fg:x="4546" fg:w="6"/><text x="23.6757%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="23.4257%" y="693" width="0.0309%" height="15" fill="rgb(238,52,0)" fg:x="4546" fg:w="6"/><text x="23.6757%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="23.4257%" y="677" width="0.0309%" height="15" fill="rgb(223,98,5)" fg:x="4546" fg:w="6"/><text x="23.6757%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="23.4257%" y="661" width="0.0309%" height="15" fill="rgb(228,75,37)" fg:x="4546" fg:w="6"/><text x="23.6757%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.02%)</title><rect x="23.4412%" y="645" width="0.0155%" height="15" fill="rgb(205,115,49)" fg:x="4549" fg:w="3"/><text x="23.6912%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="23.4412%" y="629" width="0.0155%" height="15" fill="rgb(250,154,43)" fg:x="4549" fg:w="3"/><text x="23.6912%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="23.4412%" y="613" width="0.0155%" height="15" fill="rgb(226,43,29)" fg:x="4549" fg:w="3"/><text x="23.6912%" y="623.50"></text></g><g><title>&lt;zilliqa::state::State as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="23.4257%" y="741" width="0.0361%" height="15" fill="rgb(249,228,39)" fg:x="4546" fg:w="7"/><text x="23.6757%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (14 samples, 0.07%)</title><rect x="23.4618%" y="741" width="0.0721%" height="15" fill="rgb(216,79,43)" fg:x="4553" fg:w="14"/><text x="23.7118%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::trie::EthTrie&lt;zilliqa::db::TrieStorage&gt;&gt; (3 samples, 0.02%)</title><rect x="23.5340%" y="709" width="0.0155%" height="15" fill="rgb(228,95,12)" fg:x="4567" fg:w="3"/><text x="23.7840%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="23.5391%" y="693" width="0.0103%" height="15" fill="rgb(249,221,15)" fg:x="4568" fg:w="2"/><text x="23.7891%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,()&gt;&gt; (2 samples, 0.01%)</title><rect x="23.5391%" y="677" width="0.0103%" height="15" fill="rgb(233,34,13)" fg:x="4568" fg:w="2"/><text x="23.7891%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::vec::Vec&lt;u8&gt;,())&gt;&gt; (2 samples, 0.01%)</title><rect x="23.5391%" y="661" width="0.0103%" height="15" fill="rgb(214,103,39)" fg:x="4568" fg:w="2"/><text x="23.7891%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="23.5391%" y="645" width="0.0103%" height="15" fill="rgb(251,126,39)" fg:x="4568" fg:w="2"/><text x="23.7891%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.01%)</title><rect x="23.5391%" y="629" width="0.0103%" height="15" fill="rgb(214,216,36)" fg:x="4568" fg:w="2"/><text x="23.7891%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.01%)</title><rect x="23.5391%" y="613" width="0.0103%" height="15" fill="rgb(220,221,8)" fg:x="4568" fg:w="2"/><text x="23.7891%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::exec::PendingState&gt; (5 samples, 0.03%)</title><rect x="23.5340%" y="741" width="0.0258%" height="15" fill="rgb(240,216,3)" fg:x="4567" fg:w="5"/><text x="23.7840%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::state::State&gt; (5 samples, 0.03%)</title><rect x="23.5340%" y="725" width="0.0258%" height="15" fill="rgb(232,218,17)" fg:x="4567" fg:w="5"/><text x="23.7840%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::cfg::ScillaExtLibsPath&gt; (2 samples, 0.01%)</title><rect x="23.5494%" y="709" width="0.0103%" height="15" fill="rgb(229,163,45)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::cfg::ScillaExtLibsPathInZq2&gt; (2 samples, 0.01%)</title><rect x="23.5494%" y="693" width="0.0103%" height="15" fill="rgb(231,110,42)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.01%)</title><rect x="23.5494%" y="677" width="0.0103%" height="15" fill="rgb(208,170,48)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="23.5494%" y="661" width="0.0103%" height="15" fill="rgb(239,116,25)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="23.5494%" y="645" width="0.0103%" height="15" fill="rgb(219,200,50)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="23.5494%" y="629" width="0.0103%" height="15" fill="rgb(245,200,0)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="23.5494%" y="613" width="0.0103%" height="15" fill="rgb(245,119,33)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="23.5494%" y="597" width="0.0103%" height="15" fill="rgb(231,125,12)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="607.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="23.5494%" y="581" width="0.0103%" height="15" fill="rgb(216,96,41)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="23.5494%" y="565" width="0.0103%" height="15" fill="rgb(248,43,45)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="575.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="23.5494%" y="549" width="0.0103%" height="15" fill="rgb(217,222,7)" fg:x="4570" fg:w="2"/><text x="23.7994%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="23.5906%" y="629" width="0.0103%" height="15" fill="rgb(233,28,6)" fg:x="4578" fg:w="2"/><text x="23.8406%" y="639.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register (94 samples, 0.48%)</title><rect x="23.5597%" y="693" width="0.4844%" height="15" fill="rgb(231,218,15)" fg:x="4572" fg:w="94"/><text x="23.8097%" y="703.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_all (93 samples, 0.48%)</title><rect x="23.5649%" y="677" width="0.4792%" height="15" fill="rgb(226,171,48)" fg:x="4573" fg:w="93"/><text x="23.8149%" y="687.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::to_boxed_with (93 samples, 0.48%)</title><rect x="23.5649%" y="661" width="0.4792%" height="15" fill="rgb(235,201,9)" fg:x="4573" fg:w="93"/><text x="23.8149%" y="671.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::to_boxed_with_slow (93 samples, 0.48%)</title><rect x="23.5649%" y="645" width="0.4792%" height="15" fill="rgb(217,80,15)" fg:x="4573" fg:w="93"/><text x="23.8149%" y="655.50"></text></g><g><title>revm_interpreter::opcode::tables::make_boxed_instruction_table (86 samples, 0.44%)</title><rect x="23.6009%" y="629" width="0.4432%" height="15" fill="rgb(219,152,8)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="639.50"></text></g><g><title>core::array::from_fn (86 samples, 0.44%)</title><rect x="23.6009%" y="613" width="0.4432%" height="15" fill="rgb(243,107,38)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="623.50"></text></g><g><title>core::array::try_from_fn (86 samples, 0.44%)</title><rect x="23.6009%" y="597" width="0.4432%" height="15" fill="rgb(231,17,5)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="607.50"></text></g><g><title>core::array::try_from_fn_erased (86 samples, 0.44%)</title><rect x="23.6009%" y="581" width="0.4432%" height="15" fill="rgb(209,25,54)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="591.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (86 samples, 0.44%)</title><rect x="23.6009%" y="565" width="0.4432%" height="15" fill="rgb(219,0,2)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="575.50"></text></g><g><title>revm_interpreter::opcode::tables::make_boxed_instruction_table::{{closure}} (86 samples, 0.44%)</title><rect x="23.6009%" y="549" width="0.4432%" height="15" fill="rgb(246,9,5)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="559.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_all::{{closure}} (86 samples, 0.44%)</title><rect x="23.6009%" y="533" width="0.4432%" height="15" fill="rgb(226,159,4)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (86 samples, 0.44%)</title><rect x="23.6009%" y="517" width="0.4432%" height="15" fill="rgb(219,175,34)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (86 samples, 0.44%)</title><rect x="23.6009%" y="501" width="0.4432%" height="15" fill="rgb(236,10,46)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.44%)</title><rect x="23.6009%" y="485" width="0.4432%" height="15" fill="rgb(240,211,16)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.44%)</title><rect x="23.6009%" y="469" width="0.4432%" height="15" fill="rgb(205,3,43)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="479.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.44%)</title><rect x="23.6009%" y="453" width="0.4432%" height="15" fill="rgb(245,7,22)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="463.50"></text></g><g><title>__rdl_alloc (86 samples, 0.44%)</title><rect x="23.6009%" y="437" width="0.4432%" height="15" fill="rgb(239,132,32)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (86 samples, 0.44%)</title><rect x="23.6009%" y="421" width="0.4432%" height="15" fill="rgb(228,202,34)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="431.50"></text></g><g><title>__GI___libc_malloc (86 samples, 0.44%)</title><rect x="23.6009%" y="405" width="0.4432%" height="15" fill="rgb(254,200,22)" fg:x="4580" fg:w="86"/><text x="23.8509%" y="415.50"></text></g><g><title>_int_malloc (59 samples, 0.30%)</title><rect x="23.7401%" y="389" width="0.3040%" height="15" fill="rgb(219,10,39)" fg:x="4607" fg:w="59"/><text x="23.9901%" y="399.50"></text></g><g><title>checked_request2size (59 samples, 0.30%)</title><rect x="23.7401%" y="373" width="0.3040%" height="15" fill="rgb(226,210,39)" fg:x="4607" fg:w="59"/><text x="23.9901%" y="383.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::append_handler_register (95 samples, 0.49%)</title><rect x="23.5597%" y="741" width="0.4895%" height="15" fill="rgb(208,219,16)" fg:x="4572" fg:w="95"/><text x="23.8097%" y="751.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::append_handler_register (95 samples, 0.49%)</title><rect x="23.5597%" y="725" width="0.4895%" height="15" fill="rgb(216,158,51)" fg:x="4572" fg:w="95"/><text x="23.8097%" y="735.50"></text></g><g><title>revm::handler::register::HandleRegisters&lt;EXT,DB&gt;::register (95 samples, 0.49%)</title><rect x="23.5597%" y="709" width="0.4895%" height="15" fill="rgb(233,14,44)" fg:x="4572" fg:w="95"/><text x="23.8097%" y="719.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::with_tx_env (3 samples, 0.02%)</title><rect x="24.0493%" y="741" width="0.0155%" height="15" fill="rgb(237,97,39)" fg:x="4667" fg:w="3"/><text x="24.2993%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::env::TxEnv&gt; (3 samples, 0.02%)</title><rect x="24.0493%" y="725" width="0.0155%" height="15" fill="rgb(218,198,43)" fg:x="4667" fg:w="3"/><text x="24.2993%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="24.0699%" y="725" width="0.0155%" height="15" fill="rgb(231,104,20)" fg:x="4671" fg:w="3"/><text x="24.3199%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="24.0853%" y="725" width="0.0103%" height="15" fill="rgb(254,36,13)" fg:x="4674" fg:w="2"/><text x="24.3353%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="24.0956%" y="677" width="0.0103%" height="15" fill="rgb(248,14,50)" fg:x="4676" fg:w="2"/><text x="24.3456%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,alloc::boxed::Box&lt;revm_interpreter::interpreter_action::create_inputs::CreateInputs&gt;)&gt;+Output = core::result::Result&lt;revm::frame::FrameOrResult,revm_primitives::result::EVMError&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="24.0956%" y="709" width="0.0206%" height="15" fill="rgb(217,107,29)" fg:x="4676" fg:w="4"/><text x="24.3456%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="24.0956%" y="693" width="0.0206%" height="15" fill="rgb(251,169,33)" fg:x="4676" fg:w="4"/><text x="24.3456%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.1059%" y="677" width="0.0103%" height="15" fill="rgb(217,108,32)" fg:x="4678" fg:w="2"/><text x="24.3559%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.1059%" y="661" width="0.0103%" height="15" fill="rgb(219,66,42)" fg:x="4678" fg:w="2"/><text x="24.3559%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="24.0956%" y="725" width="0.0258%" height="15" fill="rgb(206,180,7)" fg:x="4676" fg:w="5"/><text x="24.3456%" y="735.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (2 samples, 0.01%)</title><rect x="24.1214%" y="661" width="0.0103%" height="15" fill="rgb(208,226,31)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.1214%" y="645" width="0.0103%" height="15" fill="rgb(218,26,49)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.1214%" y="629" width="0.0103%" height="15" fill="rgb(233,197,48)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="24.1214%" y="613" width="0.0103%" height="15" fill="rgb(252,181,51)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="24.1214%" y="597" width="0.0103%" height="15" fill="rgb(253,90,19)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="24.1214%" y="581" width="0.0103%" height="15" fill="rgb(215,171,30)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="24.1214%" y="565" width="0.0103%" height="15" fill="rgb(214,222,9)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="575.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="24.1214%" y="549" width="0.0103%" height="15" fill="rgb(223,3,22)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="24.1214%" y="533" width="0.0103%" height="15" fill="rgb(225,196,46)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="24.1214%" y="517" width="0.0103%" height="15" fill="rgb(209,110,37)" fg:x="4681" fg:w="2"/><text x="24.3714%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="24.1420%" y="501" width="0.0103%" height="15" fill="rgb(249,89,12)" fg:x="4685" fg:w="2"/><text x="24.3920%" y="511.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_db (18 samples, 0.09%)</title><rect x="24.0647%" y="741" width="0.0928%" height="15" fill="rgb(226,27,33)" fg:x="4670" fg:w="18"/><text x="24.3147%" y="751.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (7 samples, 0.04%)</title><rect x="24.1214%" y="725" width="0.0361%" height="15" fill="rgb(213,82,22)" fg:x="4681" fg:w="7"/><text x="24.3714%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (7 samples, 0.04%)</title><rect x="24.1214%" y="709" width="0.0361%" height="15" fill="rgb(248,140,0)" fg:x="4681" fg:w="7"/><text x="24.3714%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (7 samples, 0.04%)</title><rect x="24.1214%" y="693" width="0.0361%" height="15" fill="rgb(228,106,3)" fg:x="4681" fg:w="7"/><text x="24.3714%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (7 samples, 0.04%)</title><rect x="24.1214%" y="677" width="0.0361%" height="15" fill="rgb(209,23,37)" fg:x="4681" fg:w="7"/><text x="24.3714%" y="687.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (4 samples, 0.02%)</title><rect x="24.1369%" y="661" width="0.0206%" height="15" fill="rgb(241,93,50)" fg:x="4684" fg:w="4"/><text x="24.3869%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.1420%" y="645" width="0.0155%" height="15" fill="rgb(253,46,43)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.1420%" y="629" width="0.0155%" height="15" fill="rgb(226,206,43)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="24.1420%" y="613" width="0.0155%" height="15" fill="rgb(217,54,7)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="24.1420%" y="597" width="0.0155%" height="15" fill="rgb(223,5,52)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="24.1420%" y="581" width="0.0155%" height="15" fill="rgb(206,52,46)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="24.1420%" y="565" width="0.0155%" height="15" fill="rgb(253,136,11)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="24.1420%" y="549" width="0.0155%" height="15" fill="rgb(208,106,33)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="24.1420%" y="533" width="0.0155%" height="15" fill="rgb(206,54,4)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="24.1420%" y="517" width="0.0155%" height="15" fill="rgb(213,3,15)" fg:x="4685" fg:w="3"/><text x="24.3920%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="24.1626%" y="661" width="0.0103%" height="15" fill="rgb(252,211,39)" fg:x="4689" fg:w="2"/><text x="24.4126%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (4 samples, 0.02%)</title><rect x="24.1626%" y="709" width="0.0206%" height="15" fill="rgb(223,6,36)" fg:x="4689" fg:w="4"/><text x="24.4126%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,revm::frame::FrameResult)&gt;+Output = core::result::Result&lt;revm_primitives::result::ResultAndState,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="24.1626%" y="693" width="0.0206%" height="15" fill="rgb(252,169,45)" fg:x="4689" fg:w="4"/><text x="24.4126%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="24.1626%" y="677" width="0.0206%" height="15" fill="rgb(212,48,26)" fg:x="4689" fg:w="4"/><text x="24.4126%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.1729%" y="661" width="0.0103%" height="15" fill="rgb(251,102,48)" fg:x="4691" fg:w="2"/><text x="24.4229%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.1729%" y="645" width="0.0103%" height="15" fill="rgb(243,208,16)" fg:x="4691" fg:w="2"/><text x="24.4229%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,(),zilliqa::exec::PendingState&gt;&gt; (8 samples, 0.04%)</title><rect x="24.1575%" y="725" width="0.0412%" height="15" fill="rgb(219,96,24)" fg:x="4688" fg:w="8"/><text x="24.4075%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="24.1884%" y="709" width="0.0103%" height="15" fill="rgb(219,33,29)" fg:x="4694" fg:w="2"/><text x="24.4384%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;u64,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="24.1884%" y="693" width="0.0103%" height="15" fill="rgb(223,176,5)" fg:x="4694" fg:w="2"/><text x="24.4384%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.1884%" y="677" width="0.0103%" height="15" fill="rgb(228,140,14)" fg:x="4694" fg:w="2"/><text x="24.4384%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="24.1884%" y="661" width="0.0103%" height="15" fill="rgb(217,179,31)" fg:x="4694" fg:w="2"/><text x="24.4384%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = core::result::Result&lt;revm_interpreter::interpreter_action::create_outcome::CreateOutcome,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="24.1987%" y="709" width="0.0103%" height="15" fill="rgb(230,9,30)" fg:x="4696" fg:w="2"/><text x="24.4487%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.1987%" y="693" width="0.0103%" height="15" fill="rgb(230,136,20)" fg:x="4696" fg:w="2"/><text x="24.4487%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="24.1987%" y="677" width="0.0103%" height="15" fill="rgb(215,210,22)" fg:x="4696" fg:w="2"/><text x="24.4487%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="24.1987%" y="661" width="0.0103%" height="15" fill="rgb(218,43,5)" fg:x="4696" fg:w="2"/><text x="24.4487%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (3 samples, 0.02%)</title><rect x="24.1987%" y="725" width="0.0155%" height="15" fill="rgb(216,11,5)" fg:x="4696" fg:w="3"/><text x="24.4487%" y="735.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (7 samples, 0.04%)</title><rect x="24.2142%" y="661" width="0.0361%" height="15" fill="rgb(209,82,29)" fg:x="4699" fg:w="7"/><text x="24.4642%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="24.2296%" y="645" width="0.0206%" height="15" fill="rgb(244,115,12)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="24.2296%" y="629" width="0.0206%" height="15" fill="rgb(222,82,18)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="24.2296%" y="613" width="0.0206%" height="15" fill="rgb(249,227,8)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="24.2296%" y="597" width="0.0206%" height="15" fill="rgb(253,141,45)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="24.2296%" y="581" width="0.0206%" height="15" fill="rgb(234,184,4)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="591.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="24.2296%" y="565" width="0.0206%" height="15" fill="rgb(218,194,23)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="575.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="24.2296%" y="549" width="0.0206%" height="15" fill="rgb(235,66,41)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="24.2296%" y="533" width="0.0206%" height="15" fill="rgb(245,217,1)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="543.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="24.2296%" y="517" width="0.0206%" height="15" fill="rgb(229,91,1)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="527.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="24.2296%" y="501" width="0.0206%" height="15" fill="rgb(207,101,30)" fg:x="4702" fg:w="4"/><text x="24.4796%" y="511.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (3 samples, 0.02%)</title><rect x="24.2502%" y="661" width="0.0155%" height="15" fill="rgb(223,82,49)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.2502%" y="645" width="0.0155%" height="15" fill="rgb(218,167,17)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.2502%" y="629" width="0.0155%" height="15" fill="rgb(208,103,14)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="24.2502%" y="613" width="0.0155%" height="15" fill="rgb(238,20,8)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="24.2502%" y="597" width="0.0155%" height="15" fill="rgb(218,80,54)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="24.2502%" y="581" width="0.0155%" height="15" fill="rgb(240,144,17)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="24.2502%" y="565" width="0.0155%" height="15" fill="rgb(245,27,50)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="24.2502%" y="549" width="0.0155%" height="15" fill="rgb(251,51,7)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="24.2502%" y="533" width="0.0155%" height="15" fill="rgb(245,217,29)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="24.2502%" y="517" width="0.0155%" height="15" fill="rgb(221,176,29)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="527.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="24.2502%" y="501" width="0.0155%" height="15" fill="rgb(212,180,24)" fg:x="4706" fg:w="3"/><text x="24.5002%" y="511.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_external_context (23 samples, 0.12%)</title><rect x="24.1575%" y="741" width="0.1185%" height="15" fill="rgb(254,24,2)" fg:x="4688" fg:w="23"/><text x="24.4075%" y="751.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (12 samples, 0.06%)</title><rect x="24.2142%" y="725" width="0.0618%" height="15" fill="rgb(230,100,2)" fg:x="4699" fg:w="12"/><text x="24.4642%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (12 samples, 0.06%)</title><rect x="24.2142%" y="709" width="0.0618%" height="15" fill="rgb(219,142,25)" fg:x="4699" fg:w="12"/><text x="24.4642%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (12 samples, 0.06%)</title><rect x="24.2142%" y="693" width="0.0618%" height="15" fill="rgb(240,73,43)" fg:x="4699" fg:w="12"/><text x="24.4642%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (12 samples, 0.06%)</title><rect x="24.2142%" y="677" width="0.0618%" height="15" fill="rgb(214,114,15)" fg:x="4699" fg:w="12"/><text x="24.4642%" y="687.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::new (2 samples, 0.01%)</title><rect x="24.2657%" y="661" width="0.0103%" height="15" fill="rgb(207,130,4)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.2657%" y="645" width="0.0103%" height="15" fill="rgb(221,25,40)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.2657%" y="629" width="0.0103%" height="15" fill="rgb(241,184,7)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="24.2657%" y="613" width="0.0103%" height="15" fill="rgb(235,159,4)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="24.2657%" y="597" width="0.0103%" height="15" fill="rgb(214,87,48)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="24.2657%" y="581" width="0.0103%" height="15" fill="rgb(246,198,24)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="24.2657%" y="565" width="0.0103%" height="15" fill="rgb(209,66,40)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="575.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="24.2657%" y="549" width="0.0103%" height="15" fill="rgb(233,147,39)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="24.2657%" y="533" width="0.0103%" height="15" fill="rgb(231,145,52)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="24.2657%" y="517" width="0.0103%" height="15" fill="rgb(206,20,26)" fg:x="4709" fg:w="2"/><text x="24.5157%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="24.2760%" y="725" width="0.0103%" height="15" fill="rgb(238,220,4)" fg:x="4711" fg:w="2"/><text x="24.5260%" y="735.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="24.2760%" y="709" width="0.0103%" height="15" fill="rgb(252,195,42)" fg:x="4711" fg:w="2"/><text x="24.5260%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="24.2760%" y="693" width="0.0103%" height="15" fill="rgb(209,10,6)" fg:x="4711" fg:w="2"/><text x="24.5260%" y="703.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.2760%" y="677" width="0.0103%" height="15" fill="rgb(229,3,52)" fg:x="4711" fg:w="2"/><text x="24.5260%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.2760%" y="661" width="0.0103%" height="15" fill="rgb(253,49,37)" fg:x="4711" fg:w="2"/><text x="24.5260%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.2760%" y="645" width="0.0103%" height="15" fill="rgb(240,103,49)" fg:x="4711" fg:w="2"/><text x="24.5260%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="24.2863%" y="709" width="0.0103%" height="15" fill="rgb(250,182,30)" fg:x="4713" fg:w="2"/><text x="24.5363%" y="719.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="24.2863%" y="693" width="0.0103%" height="15" fill="rgb(248,8,30)" fg:x="4713" fg:w="2"/><text x="24.5363%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="24.2863%" y="677" width="0.0103%" height="15" fill="rgb(237,120,30)" fg:x="4713" fg:w="2"/><text x="24.5363%" y="687.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.2863%" y="661" width="0.0103%" height="15" fill="rgb(221,146,34)" fg:x="4713" fg:w="2"/><text x="24.5363%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.2863%" y="645" width="0.0103%" height="15" fill="rgb(242,55,13)" fg:x="4713" fg:w="2"/><text x="24.5363%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.2863%" y="629" width="0.0103%" height="15" fill="rgb(242,112,31)" fg:x="4713" fg:w="2"/><text x="24.5363%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,)&gt;+Output = ()&gt;&gt; (2 samples, 0.01%)</title><rect x="24.2966%" y="693" width="0.0103%" height="15" fill="rgb(249,192,27)" fg:x="4715" fg:w="2"/><text x="24.5466%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.2966%" y="677" width="0.0103%" height="15" fill="rgb(208,204,44)" fg:x="4715" fg:w="2"/><text x="24.5466%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.2966%" y="661" width="0.0103%" height="15" fill="rgb(208,93,54)" fg:x="4715" fg:w="2"/><text x="24.5466%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.2966%" y="645" width="0.0103%" height="15" fill="rgb(242,1,31)" fg:x="4715" fg:w="2"/><text x="24.5466%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (5 samples, 0.03%)</title><rect x="24.2863%" y="725" width="0.0258%" height="15" fill="rgb(241,83,25)" fg:x="4713" fg:w="5"/><text x="24.5363%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (3 samples, 0.02%)</title><rect x="24.2966%" y="709" width="0.0155%" height="15" fill="rgb(205,169,50)" fg:x="4715" fg:w="3"/><text x="24.5466%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="24.3121%" y="677" width="0.0258%" height="15" fill="rgb(239,186,37)" fg:x="4718" fg:w="5"/><text x="24.5621%" y="687.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (5 samples, 0.03%)</title><rect x="24.3378%" y="661" width="0.0258%" height="15" fill="rgb(205,221,10)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.03%)</title><rect x="24.3378%" y="645" width="0.0258%" height="15" fill="rgb(218,196,15)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.03%)</title><rect x="24.3378%" y="629" width="0.0258%" height="15" fill="rgb(218,196,35)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.03%)</title><rect x="24.3378%" y="613" width="0.0258%" height="15" fill="rgb(233,63,24)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.03%)</title><rect x="24.3378%" y="597" width="0.0258%" height="15" fill="rgb(225,8,4)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.03%)</title><rect x="24.3378%" y="581" width="0.0258%" height="15" fill="rgb(234,105,35)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="591.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.03%)</title><rect x="24.3378%" y="565" width="0.0258%" height="15" fill="rgb(236,21,32)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="575.50"></text></g><g><title>__rdl_alloc (5 samples, 0.03%)</title><rect x="24.3378%" y="549" width="0.0258%" height="15" fill="rgb(228,109,6)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.03%)</title><rect x="24.3378%" y="533" width="0.0258%" height="15" fill="rgb(229,215,31)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="543.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.03%)</title><rect x="24.3378%" y="517" width="0.0258%" height="15" fill="rgb(221,52,54)" fg:x="4723" fg:w="5"/><text x="24.5878%" y="527.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="24.3481%" y="501" width="0.0155%" height="15" fill="rgb(252,129,43)" fg:x="4725" fg:w="3"/><text x="24.5981%" y="511.50"></text></g><g><title>tcache_put (3 samples, 0.02%)</title><rect x="24.3481%" y="485" width="0.0155%" height="15" fill="rgb(248,183,27)" fg:x="4725" fg:w="3"/><text x="24.5981%" y="495.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (3 samples, 0.02%)</title><rect x="24.3636%" y="661" width="0.0155%" height="15" fill="rgb(250,0,22)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.3636%" y="645" width="0.0155%" height="15" fill="rgb(213,166,10)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.3636%" y="629" width="0.0155%" height="15" fill="rgb(207,163,36)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="24.3636%" y="613" width="0.0155%" height="15" fill="rgb(208,122,22)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="24.3636%" y="597" width="0.0155%" height="15" fill="rgb(207,104,49)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="24.3636%" y="581" width="0.0155%" height="15" fill="rgb(248,211,50)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="24.3636%" y="565" width="0.0155%" height="15" fill="rgb(217,13,45)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="24.3636%" y="549" width="0.0155%" height="15" fill="rgb(211,216,49)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="24.3636%" y="533" width="0.0155%" height="15" fill="rgb(221,58,53)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="24.3636%" y="517" width="0.0155%" height="15" fill="rgb(220,112,41)" fg:x="4728" fg:w="3"/><text x="24.6136%" y="527.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_handler_cfg (21 samples, 0.11%)</title><rect x="24.2760%" y="741" width="0.1082%" height="15" fill="rgb(236,38,28)" fg:x="4711" fg:w="21"/><text x="24.5260%" y="751.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (14 samples, 0.07%)</title><rect x="24.3121%" y="725" width="0.0721%" height="15" fill="rgb(227,195,22)" fg:x="4718" fg:w="14"/><text x="24.5621%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (14 samples, 0.07%)</title><rect x="24.3121%" y="709" width="0.0721%" height="15" fill="rgb(214,55,33)" fg:x="4718" fg:w="14"/><text x="24.5621%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (14 samples, 0.07%)</title><rect x="24.3121%" y="693" width="0.0721%" height="15" fill="rgb(248,80,13)" fg:x="4718" fg:w="14"/><text x="24.5621%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (9 samples, 0.05%)</title><rect x="24.3378%" y="677" width="0.0464%" height="15" fill="rgb(238,52,6)" fg:x="4723" fg:w="9"/><text x="24.5878%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="24.3842%" y="645" width="0.0103%" height="15" fill="rgb(224,198,47)" fg:x="4732" fg:w="2"/><text x="24.6342%" y="655.50"></text></g><g><title>&lt;revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt; as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="24.3842%" y="709" width="0.0155%" height="15" fill="rgb(233,171,20)" fg:x="4732" fg:w="3"/><text x="24.6342%" y="719.50"></text></g><g><title>revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;::new_empty (3 samples, 0.02%)</title><rect x="24.3842%" y="693" width="0.0155%" height="15" fill="rgb(241,30,25)" fg:x="4732" fg:w="3"/><text x="24.6342%" y="703.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::new (3 samples, 0.02%)</title><rect x="24.3842%" y="677" width="0.0155%" height="15" fill="rgb(207,171,38)" fg:x="4732" fg:w="3"/><text x="24.6342%" y="687.50"></text></g><g><title>revm::context::inner_evm_context::InnerEvmContext&lt;DB&gt;::new (3 samples, 0.02%)</title><rect x="24.3842%" y="661" width="0.0155%" height="15" fill="rgb(234,70,1)" fg:x="4732" fg:w="3"/><text x="24.6342%" y="671.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (2 samples, 0.01%)</title><rect x="24.4048%" y="645" width="0.0103%" height="15" fill="rgb(232,178,18)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.4048%" y="629" width="0.0103%" height="15" fill="rgb(241,78,40)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.4048%" y="613" width="0.0103%" height="15" fill="rgb(222,35,25)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="24.4048%" y="597" width="0.0103%" height="15" fill="rgb(207,92,16)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="24.4048%" y="581" width="0.0103%" height="15" fill="rgb(216,59,51)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="24.4048%" y="565" width="0.0103%" height="15" fill="rgb(213,80,28)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="24.4048%" y="549" width="0.0103%" height="15" fill="rgb(220,93,7)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="559.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="24.4048%" y="533" width="0.0103%" height="15" fill="rgb(225,24,44)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="24.4048%" y="517" width="0.0103%" height="15" fill="rgb(243,74,40)" fg:x="4736" fg:w="2"/><text x="24.6548%" y="527.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (2 samples, 0.01%)</title><rect x="24.4151%" y="645" width="0.0103%" height="15" fill="rgb(228,39,7)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.4151%" y="629" width="0.0103%" height="15" fill="rgb(227,79,8)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.4151%" y="613" width="0.0103%" height="15" fill="rgb(236,58,11)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="24.4151%" y="597" width="0.0103%" height="15" fill="rgb(249,63,35)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="24.4151%" y="581" width="0.0103%" height="15" fill="rgb(252,114,16)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="24.4151%" y="565" width="0.0103%" height="15" fill="rgb(254,151,24)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="24.4151%" y="549" width="0.0103%" height="15" fill="rgb(253,54,39)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="559.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="24.4151%" y="533" width="0.0103%" height="15" fill="rgb(243,25,45)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="24.4151%" y="517" width="0.0103%" height="15" fill="rgb(234,134,9)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="24.4151%" y="501" width="0.0103%" height="15" fill="rgb(227,166,31)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="24.4151%" y="485" width="0.0103%" height="15" fill="rgb(245,143,41)" fg:x="4738" fg:w="2"/><text x="24.6651%" y="495.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::new (2 samples, 0.01%)</title><rect x="24.4254%" y="645" width="0.0103%" height="15" fill="rgb(238,181,32)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.4254%" y="629" width="0.0103%" height="15" fill="rgb(224,113,18)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.4254%" y="613" width="0.0103%" height="15" fill="rgb(240,229,28)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="24.4254%" y="597" width="0.0103%" height="15" fill="rgb(250,185,3)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="24.4254%" y="581" width="0.0103%" height="15" fill="rgb(212,59,25)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="24.4254%" y="565" width="0.0103%" height="15" fill="rgb(221,87,20)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="24.4254%" y="549" width="0.0103%" height="15" fill="rgb(213,74,28)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="559.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="24.4254%" y="533" width="0.0103%" height="15" fill="rgb(224,132,34)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="24.4254%" y="517" width="0.0103%" height="15" fill="rgb(222,101,24)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="24.4254%" y="501" width="0.0103%" height="15" fill="rgb(254,142,4)" fg:x="4740" fg:w="2"/><text x="24.6754%" y="511.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (3 samples, 0.02%)</title><rect x="24.4357%" y="645" width="0.0155%" height="15" fill="rgb(230,229,49)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.4357%" y="629" width="0.0155%" height="15" fill="rgb(238,70,47)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="24.4357%" y="613" width="0.0155%" height="15" fill="rgb(231,160,17)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="24.4357%" y="597" width="0.0155%" height="15" fill="rgb(218,68,53)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="24.4357%" y="581" width="0.0155%" height="15" fill="rgb(236,111,10)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="24.4357%" y="565" width="0.0155%" height="15" fill="rgb(224,34,41)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="24.4357%" y="549" width="0.0155%" height="15" fill="rgb(241,118,19)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="559.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="24.4357%" y="533" width="0.0155%" height="15" fill="rgb(238,129,25)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="24.4357%" y="517" width="0.0155%" height="15" fill="rgb(238,22,31)" fg:x="4742" fg:w="3"/><text x="24.6857%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="24.4409%" y="501" width="0.0103%" height="15" fill="rgb(222,174,48)" fg:x="4743" fg:w="2"/><text x="24.6909%" y="511.50"></text></g><g><title>revm::evm::Evm&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;::builder (14 samples, 0.07%)</title><rect x="24.3842%" y="741" width="0.0721%" height="15" fill="rgb(206,152,40)" fg:x="4732" fg:w="14"/><text x="24.6342%" y="751.50"></text></g><g><title>&lt;revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt; as core::default::Default&gt;::default (14 samples, 0.07%)</title><rect x="24.3842%" y="725" width="0.0721%" height="15" fill="rgb(218,99,54)" fg:x="4732" fg:w="14"/><text x="24.6342%" y="735.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (11 samples, 0.06%)</title><rect x="24.3997%" y="709" width="0.0567%" height="15" fill="rgb(220,174,26)" fg:x="4735" fg:w="11"/><text x="24.6497%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (11 samples, 0.06%)</title><rect x="24.3997%" y="693" width="0.0567%" height="15" fill="rgb(245,116,9)" fg:x="4735" fg:w="11"/><text x="24.6497%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (11 samples, 0.06%)</title><rect x="24.3997%" y="677" width="0.0567%" height="15" fill="rgb(209,72,35)" fg:x="4735" fg:w="11"/><text x="24.6497%" y="687.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (11 samples, 0.06%)</title><rect x="24.3997%" y="661" width="0.0567%" height="15" fill="rgb(226,126,21)" fg:x="4735" fg:w="11"/><text x="24.6497%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="24.4615%" y="725" width="0.0155%" height="15" fill="rgb(227,192,1)" fg:x="4747" fg:w="3"/><text x="24.7115%" y="735.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="24.4770%" y="549" width="0.0206%" height="15" fill="rgb(237,180,29)" fg:x="4750" fg:w="4"/><text x="24.7270%" y="559.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="24.4770%" y="533" width="0.0206%" height="15" fill="rgb(230,197,35)" fg:x="4750" fg:w="4"/><text x="24.7270%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::context::context_precompiles::ContextPrecompiles&lt;zilliqa::exec::PendingState&gt;&gt; (6 samples, 0.03%)</title><rect x="24.4770%" y="725" width="0.0309%" height="15" fill="rgb(246,193,31)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::context::context_precompiles::PrecompilesCow&lt;zilliqa::exec::PendingState&gt;&gt; (6 samples, 0.03%)</title><rect x="24.4770%" y="709" width="0.0309%" height="15" fill="rgb(241,36,4)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloy_primitives::bits::address::Address,revm::context::context_precompiles::ContextPrecompile&lt;zilliqa::exec::PendingState&gt;,foldhash::seed::fast::RandomState&gt;&gt; (6 samples, 0.03%)</title><rect x="24.4770%" y="693" width="0.0309%" height="15" fill="rgb(241,130,17)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloy_primitives::bits::address::Address,revm::context::context_precompiles::ContextPrecompile&lt;zilliqa::exec::PendingState&gt;,foldhash::seed::fast::RandomState&gt;&gt; (6 samples, 0.03%)</title><rect x="24.4770%" y="677" width="0.0309%" height="15" fill="rgb(206,137,32)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloy_primitives::bits::address::Address,revm::context::context_precompiles::ContextPrecompile&lt;zilliqa::exec::PendingState&gt;)&gt;&gt; (6 samples, 0.03%)</title><rect x="24.4770%" y="661" width="0.0309%" height="15" fill="rgb(237,228,51)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="24.4770%" y="645" width="0.0309%" height="15" fill="rgb(243,6,42)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6 samples, 0.03%)</title><rect x="24.4770%" y="629" width="0.0309%" height="15" fill="rgb(251,74,28)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (6 samples, 0.03%)</title><rect x="24.4770%" y="613" width="0.0309%" height="15" fill="rgb(218,20,49)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (6 samples, 0.03%)</title><rect x="24.4770%" y="597" width="0.0309%" height="15" fill="rgb(238,28,14)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (6 samples, 0.03%)</title><rect x="24.4770%" y="581" width="0.0309%" height="15" fill="rgb(229,40,46)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloy_primitives::bits::address::Address,revm::context::context_precompiles::ContextPrecompile&lt;zilliqa::exec::PendingState&gt;)&gt; (6 samples, 0.03%)</title><rect x="24.4770%" y="565" width="0.0309%" height="15" fill="rgb(244,195,20)" fg:x="4750" fg:w="6"/><text x="24.7270%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::context::context_precompiles::ContextPrecompile&lt;zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="24.4976%" y="549" width="0.0103%" height="15" fill="rgb(253,56,35)" fg:x="4754" fg:w="2"/><text x="24.7476%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn revm::context::context_precompiles::ContextStatefulPrecompile&lt;zilliqa::exec::PendingState&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="24.4976%" y="533" width="0.0103%" height="15" fill="rgb(210,149,44)" fg:x="4754" fg:w="2"/><text x="24.7476%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.4976%" y="517" width="0.0103%" height="15" fill="rgb(240,135,12)" fg:x="4754" fg:w="2"/><text x="24.7476%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.4976%" y="501" width="0.0103%" height="15" fill="rgb(251,24,50)" fg:x="4754" fg:w="2"/><text x="24.7476%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.4976%" y="485" width="0.0103%" height="15" fill="rgb(243,200,47)" fg:x="4754" fg:w="2"/><text x="24.7476%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="24.5079%" y="709" width="0.0103%" height="15" fill="rgb(224,166,26)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,revm::frame::FrameResult)&gt;+Output = core::result::Result&lt;revm_primitives::result::ResultAndState,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="24.5079%" y="693" width="0.0103%" height="15" fill="rgb(233,0,47)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.5079%" y="677" width="0.0103%" height="15" fill="rgb(253,80,5)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="24.5079%" y="661" width="0.0103%" height="15" fill="rgb(214,133,25)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="671.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="24.5079%" y="645" width="0.0103%" height="15" fill="rgb(209,27,14)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="24.5079%" y="629" width="0.0103%" height="15" fill="rgb(219,102,51)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="639.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.5079%" y="613" width="0.0103%" height="15" fill="rgb(237,18,16)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="24.5079%" y="597" width="0.0103%" height="15" fill="rgb(241,85,17)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="24.5079%" y="581" width="0.0103%" height="15" fill="rgb(236,90,42)" fg:x="4756" fg:w="2"/><text x="24.7579%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="24.5233%" y="709" width="0.0103%" height="15" fill="rgb(249,57,21)" fg:x="4759" fg:w="2"/><text x="24.7733%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;u64,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="24.5233%" y="693" width="0.0103%" height="15" fill="rgb(243,12,36)" fg:x="4759" fg:w="2"/><text x="24.7733%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.5233%" y="677" width="0.0103%" height="15" fill="rgb(253,128,47)" fg:x="4759" fg:w="2"/><text x="24.7733%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.23%)</title><rect x="24.5440%" y="645" width="0.2319%" height="15" fill="rgb(207,33,20)" fg:x="4763" fg:w="45"/><text x="24.7940%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 0.23%)</title><rect x="24.5440%" y="629" width="0.2319%" height="15" fill="rgb(233,215,35)" fg:x="4763" fg:w="45"/><text x="24.7940%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.23%)</title><rect x="24.5440%" y="613" width="0.2319%" height="15" fill="rgb(249,188,52)" fg:x="4763" fg:w="45"/><text x="24.7940%" y="623.50"></text></g><g><title>__rdl_dealloc (45 samples, 0.23%)</title><rect x="24.5440%" y="597" width="0.2319%" height="15" fill="rgb(225,12,32)" fg:x="4763" fg:w="45"/><text x="24.7940%" y="607.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (45 samples, 0.23%)</title><rect x="24.5440%" y="581" width="0.2319%" height="15" fill="rgb(247,98,14)" fg:x="4763" fg:w="45"/><text x="24.7940%" y="591.50"></text></g><g><title>__GI___libc_free (45 samples, 0.23%)</title><rect x="24.5440%" y="565" width="0.2319%" height="15" fill="rgb(247,219,48)" fg:x="4763" fg:w="45"/><text x="24.7940%" y="575.50"></text></g><g><title>_int_free (31 samples, 0.16%)</title><rect x="24.6161%" y="549" width="0.1597%" height="15" fill="rgb(253,60,48)" fg:x="4777" fg:w="31"/><text x="24.8661%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (54 samples, 0.28%)</title><rect x="24.5079%" y="725" width="0.2783%" height="15" fill="rgb(245,15,52)" fg:x="4756" fg:w="54"/><text x="24.7579%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::opcode::tables::InstructionTables&lt;revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;&gt;&gt; (49 samples, 0.25%)</title><rect x="24.5336%" y="709" width="0.2525%" height="15" fill="rgb(220,133,28)" fg:x="4761" fg:w="49"/><text x="24.7836%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt; (49 samples, 0.25%)</title><rect x="24.5336%" y="693" width="0.2525%" height="15" fill="rgb(217,180,4)" fg:x="4761" fg:w="49"/><text x="24.7836%" y="703.50"></text></g><g><title> 256]&gt; (49 samples, 0.25%)</title><rect x="24.5336%" y="677" width="0.2525%" height="15" fill="rgb(251,24,1)" fg:x="4761" fg:w="49"/><text x="24.7836%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt;&gt; (49 samples, 0.25%)</title><rect x="24.5336%" y="661" width="0.2525%" height="15" fill="rgb(212,185,49)" fg:x="4761" fg:w="49"/><text x="24.7836%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::opcode::tables::update_boxed_instruction&lt;revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,revm::inspector::handler_register::inspector_instruction&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;&gt;::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="24.7758%" y="645" width="0.0103%" height="15" fill="rgb(215,175,22)" fg:x="4808" fg:w="2"/><text x="25.0258%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt;&gt; (2 samples, 0.01%)</title><rect x="24.7758%" y="629" width="0.0103%" height="15" fill="rgb(250,205,14)" fg:x="4808" fg:w="2"/><text x="25.0258%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm::frame::Frame,revm_interpreter::interpreter_action::create_outcome::CreateOutcome)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="24.7861%" y="709" width="0.0155%" height="15" fill="rgb(225,211,22)" fg:x="4810" fg:w="3"/><text x="25.0361%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="24.7861%" y="693" width="0.0155%" height="15" fill="rgb(251,179,42)" fg:x="4810" fg:w="3"/><text x="25.0361%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="24.7861%" y="677" width="0.0155%" height="15" fill="rgb(208,216,51)" fg:x="4810" fg:w="3"/><text x="25.0361%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="24.7861%" y="661" width="0.0155%" height="15" fill="rgb(235,36,11)" fg:x="4810" fg:w="3"/><text x="25.0361%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm::frame::FrameResult)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="24.8016%" y="709" width="0.0155%" height="15" fill="rgb(213,189,28)" fg:x="4813" fg:w="3"/><text x="25.0516%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="24.8016%" y="693" width="0.0155%" height="15" fill="rgb(227,203,42)" fg:x="4813" fg:w="3"/><text x="25.0516%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="24.8068%" y="677" width="0.0103%" height="15" fill="rgb(244,72,36)" fg:x="4814" fg:w="2"/><text x="25.0568%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = ()&gt; (2 samples, 0.01%)</title><rect x="24.8068%" y="661" width="0.0103%" height="15" fill="rgb(213,53,17)" fg:x="4814" fg:w="2"/><text x="25.0568%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::inspector::handler_register::inspector_handle_register&lt;zilliqa::exec::PendingState,&amp;mut zilliqa::inspector::TouchedAddressInspector&gt;::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="24.8068%" y="645" width="0.0103%" height="15" fill="rgb(207,167,3)" fg:x="4814" fg:w="2"/><text x="25.0568%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = core::result::Result&lt;revm_interpreter::interpreter_action::create_outcome::CreateOutcome,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="24.8171%" y="709" width="0.0155%" height="15" fill="rgb(216,98,30)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="24.8171%" y="693" width="0.0155%" height="15" fill="rgb(236,123,15)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="24.8171%" y="677" width="0.0155%" height="15" fill="rgb(248,81,50)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="687.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="24.8171%" y="661" width="0.0155%" height="15" fill="rgb(214,120,4)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.02%)</title><rect x="24.8171%" y="645" width="0.0155%" height="15" fill="rgb(208,179,34)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="655.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="24.8171%" y="629" width="0.0155%" height="15" fill="rgb(227,140,7)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="24.8171%" y="613" width="0.0155%" height="15" fill="rgb(214,22,6)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="24.8171%" y="597" width="0.0155%" height="15" fill="rgb(207,137,27)" fg:x="4816" fg:w="3"/><text x="25.0671%" y="607.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::into_db_and_env_with_handler_cfg (75 samples, 0.39%)</title><rect x="24.4564%" y="741" width="0.3865%" height="15" fill="rgb(210,8,46)" fg:x="4746" fg:w="75"/><text x="24.7064%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (11 samples, 0.06%)</title><rect x="24.7861%" y="725" width="0.0567%" height="15" fill="rgb(240,16,54)" fg:x="4810" fg:w="11"/><text x="25.0361%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="24.8480%" y="629" width="0.0103%" height="15" fill="rgb(211,209,29)" fg:x="4822" fg:w="2"/><text x="25.0980%" y="639.50"></text></g><g><title>&lt;revm_primitives::state::Account as core::convert::From&lt;revm_primitives::state::AccountInfo&gt;&gt;::from (2 samples, 0.01%)</title><rect x="24.8480%" y="613" width="0.0103%" height="15" fill="rgb(226,228,24)" fg:x="4822" fg:w="2"/><text x="25.0980%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.04%)</title><rect x="24.8634%" y="533" width="0.0412%" height="15" fill="rgb(222,84,9)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.04%)</title><rect x="24.8634%" y="517" width="0.0412%" height="15" fill="rgb(234,203,30)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="24.8634%" y="501" width="0.0412%" height="15" fill="rgb(238,109,14)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.04%)</title><rect x="24.8634%" y="485" width="0.0412%" height="15" fill="rgb(233,206,34)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.04%)</title><rect x="24.8634%" y="469" width="0.0412%" height="15" fill="rgb(220,167,47)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="479.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.04%)</title><rect x="24.8634%" y="453" width="0.0412%" height="15" fill="rgb(238,105,10)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="463.50"></text></g><g><title>__rdl_realloc (8 samples, 0.04%)</title><rect x="24.8634%" y="437" width="0.0412%" height="15" fill="rgb(213,227,17)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.04%)</title><rect x="24.8634%" y="421" width="0.0412%" height="15" fill="rgb(217,132,38)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="431.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.04%)</title><rect x="24.8634%" y="405" width="0.0412%" height="15" fill="rgb(242,146,4)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="415.50"></text></g><g><title>_int_realloc (8 samples, 0.04%)</title><rect x="24.8634%" y="389" width="0.0412%" height="15" fill="rgb(212,61,9)" fg:x="4825" fg:w="8"/><text x="25.1134%" y="399.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="24.8738%" y="373" width="0.0309%" height="15" fill="rgb(247,126,22)" fg:x="4827" fg:w="6"/><text x="25.1238%" y="383.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (10 samples, 0.05%)</title><rect x="24.8634%" y="565" width="0.0515%" height="15" fill="rgb(220,196,2)" fg:x="4825" fg:w="10"/><text x="25.1134%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.05%)</title><rect x="24.8634%" y="549" width="0.0515%" height="15" fill="rgb(208,46,4)" fg:x="4825" fg:w="10"/><text x="25.1134%" y="559.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="24.9047%" y="533" width="0.0103%" height="15" fill="rgb(252,104,46)" fg:x="4833" fg:w="2"/><text x="25.1547%" y="543.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (12 samples, 0.06%)</title><rect x="24.8634%" y="581" width="0.0618%" height="15" fill="rgb(237,152,48)" fg:x="4825" fg:w="12"/><text x="25.1134%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="24.9150%" y="565" width="0.0103%" height="15" fill="rgb(221,59,37)" fg:x="4835" fg:w="2"/><text x="25.1650%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="24.9253%" y="581" width="0.0103%" height="15" fill="rgb(209,202,51)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="591.50"></text></g><g><title>zilliqa::state::State::get_account::{{closure}} (2 samples, 0.01%)</title><rect x="24.9253%" y="565" width="0.0103%" height="15" fill="rgb(228,81,30)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="575.50"></text></g><g><title>bincode::deserialize (2 samples, 0.01%)</title><rect x="24.9253%" y="549" width="0.0103%" height="15" fill="rgb(227,42,39)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="559.50"></text></g><g><title>bincode::config::Options::deserialize (2 samples, 0.01%)</title><rect x="24.9253%" y="533" width="0.0103%" height="15" fill="rgb(221,26,2)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="543.50"></text></g><g><title>bincode::internal::deserialize (2 samples, 0.01%)</title><rect x="24.9253%" y="517" width="0.0103%" height="15" fill="rgb(254,61,31)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="527.50"></text></g><g><title>bincode::internal::deserialize_seed (2 samples, 0.01%)</title><rect x="24.9253%" y="501" width="0.0103%" height="15" fill="rgb(222,173,38)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.01%)</title><rect x="24.9253%" y="485" width="0.0103%" height="15" fill="rgb(218,50,12)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="495.50"></text></g><g><title>zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize (2 samples, 0.01%)</title><rect x="24.9253%" y="469" width="0.0103%" height="15" fill="rgb(223,88,40)" fg:x="4837" fg:w="2"/><text x="25.1753%" y="479.50"></text></g><g><title>zilliqa::state::State::get_account (25 samples, 0.13%)</title><rect x="24.8634%" y="597" width="0.1288%" height="15" fill="rgb(237,54,19)" fg:x="4825" fg:w="25"/><text x="25.1134%" y="607.50"></text></g><g><title>zilliqa::state::State::account_key (11 samples, 0.06%)</title><rect x="24.9356%" y="581" width="0.0567%" height="15" fill="rgb(251,129,25)" fg:x="4839" fg:w="11"/><text x="25.1856%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (11 samples, 0.06%)</title><rect x="24.9356%" y="565" width="0.0567%" height="15" fill="rgb(238,97,19)" fg:x="4839" fg:w="11"/><text x="25.1856%" y="575.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (11 samples, 0.06%)</title><rect x="24.9356%" y="549" width="0.0567%" height="15" fill="rgb(240,169,18)" fg:x="4839" fg:w="11"/><text x="25.1856%" y="559.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (11 samples, 0.06%)</title><rect x="24.9356%" y="533" width="0.0567%" height="15" fill="rgb(230,187,49)" fg:x="4839" fg:w="11"/><text x="25.1856%" y="543.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (11 samples, 0.06%)</title><rect x="24.9356%" y="517" width="0.0567%" height="15" fill="rgb(209,44,26)" fg:x="4839" fg:w="11"/><text x="25.1856%" y="527.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (11 samples, 0.06%)</title><rect x="24.9356%" y="501" width="0.0567%" height="15" fill="rgb(244,0,6)" fg:x="4839" fg:w="11"/><text x="25.1856%" y="511.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (10 samples, 0.05%)</title><rect x="24.9407%" y="485" width="0.0515%" height="15" fill="rgb(248,18,21)" fg:x="4840" fg:w="10"/><text x="25.1907%" y="495.50"></text></g><g><title>keccak::p1600 (10 samples, 0.05%)</title><rect x="24.9407%" y="469" width="0.0515%" height="15" fill="rgb(245,180,19)" fg:x="4840" fg:w="10"/><text x="25.1907%" y="479.50"></text></g><g><title>keccak::keccak_p (10 samples, 0.05%)</title><rect x="24.9407%" y="453" width="0.0515%" height="15" fill="rgb(252,118,36)" fg:x="4840" fg:w="10"/><text x="25.1907%" y="463.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (10 samples, 0.05%)</title><rect x="24.9407%" y="437" width="0.0515%" height="15" fill="rgb(210,224,19)" fg:x="4840" fg:w="10"/><text x="25.1907%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::nibbles::Nibbles&gt; (2 samples, 0.01%)</title><rect x="24.9923%" y="565" width="0.0103%" height="15" fill="rgb(218,30,24)" fg:x="4850" fg:w="2"/><text x="25.2423%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="24.9923%" y="549" width="0.0103%" height="15" fill="rgb(219,75,50)" fg:x="4850" fg:w="2"/><text x="25.2423%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="24.9923%" y="533" width="0.0103%" height="15" fill="rgb(234,72,50)" fg:x="4850" fg:w="2"/><text x="25.2423%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="24.9923%" y="517" width="0.0103%" height="15" fill="rgb(219,100,48)" fg:x="4850" fg:w="2"/><text x="25.2423%" y="527.50"></text></g><g><title>_int_realloc (6 samples, 0.03%)</title><rect x="25.0026%" y="389" width="0.0309%" height="15" fill="rgb(253,5,41)" fg:x="4852" fg:w="6"/><text x="25.2526%" y="399.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="25.0180%" y="373" width="0.0155%" height="15" fill="rgb(247,181,11)" fg:x="4855" fg:w="3"/><text x="25.2680%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.04%)</title><rect x="25.0026%" y="485" width="0.0361%" height="15" fill="rgb(222,223,25)" fg:x="4852" fg:w="7"/><text x="25.2526%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.04%)</title><rect x="25.0026%" y="469" width="0.0361%" height="15" fill="rgb(214,198,28)" fg:x="4852" fg:w="7"/><text x="25.2526%" y="479.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.04%)</title><rect x="25.0026%" y="453" width="0.0361%" height="15" fill="rgb(230,46,43)" fg:x="4852" fg:w="7"/><text x="25.2526%" y="463.50"></text></g><g><title>__rdl_realloc (7 samples, 0.04%)</title><rect x="25.0026%" y="437" width="0.0361%" height="15" fill="rgb(233,65,53)" fg:x="4852" fg:w="7"/><text x="25.2526%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.04%)</title><rect x="25.0026%" y="421" width="0.0361%" height="15" fill="rgb(221,121,27)" fg:x="4852" fg:w="7"/><text x="25.2526%" y="431.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.04%)</title><rect x="25.0026%" y="405" width="0.0361%" height="15" fill="rgb(247,70,47)" fg:x="4852" fg:w="7"/><text x="25.2526%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.04%)</title><rect x="25.0026%" y="533" width="0.0412%" height="15" fill="rgb(228,85,35)" fg:x="4852" fg:w="8"/><text x="25.2526%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.04%)</title><rect x="25.0026%" y="517" width="0.0412%" height="15" fill="rgb(209,50,18)" fg:x="4852" fg:w="8"/><text x="25.2526%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="25.0026%" y="501" width="0.0412%" height="15" fill="rgb(250,19,35)" fg:x="4852" fg:w="8"/><text x="25.2526%" y="511.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (13 samples, 0.07%)</title><rect x="25.0026%" y="565" width="0.0670%" height="15" fill="rgb(253,107,29)" fg:x="4852" fg:w="13"/><text x="25.2526%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.07%)</title><rect x="25.0026%" y="549" width="0.0670%" height="15" fill="rgb(252,179,29)" fg:x="4852" fg:w="13"/><text x="25.2526%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.03%)</title><rect x="25.0438%" y="533" width="0.0258%" height="15" fill="rgb(238,194,6)" fg:x="4860" fg:w="5"/><text x="25.2938%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.03%)</title><rect x="25.0438%" y="517" width="0.0258%" height="15" fill="rgb(238,164,29)" fg:x="4860" fg:w="5"/><text x="25.2938%" y="527.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (17 samples, 0.09%)</title><rect x="24.9923%" y="581" width="0.0876%" height="15" fill="rgb(224,25,9)" fg:x="4850" fg:w="17"/><text x="25.2423%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="25.0696%" y="565" width="0.0103%" height="15" fill="rgb(244,153,23)" fg:x="4865" fg:w="2"/><text x="25.3196%" y="575.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (11 samples, 0.06%)</title><rect x="25.0799%" y="549" width="0.0567%" height="15" fill="rgb(212,203,14)" fg:x="4867" fg:w="11"/><text x="25.3299%" y="559.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (11 samples, 0.06%)</title><rect x="25.0799%" y="533" width="0.0567%" height="15" fill="rgb(220,164,20)" fg:x="4867" fg:w="11"/><text x="25.3299%" y="543.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (11 samples, 0.06%)</title><rect x="25.0799%" y="517" width="0.0567%" height="15" fill="rgb(222,203,48)" fg:x="4867" fg:w="11"/><text x="25.3299%" y="527.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (11 samples, 0.06%)</title><rect x="25.0799%" y="501" width="0.0567%" height="15" fill="rgb(215,159,22)" fg:x="4867" fg:w="11"/><text x="25.3299%" y="511.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (10 samples, 0.05%)</title><rect x="25.0850%" y="485" width="0.0515%" height="15" fill="rgb(216,183,47)" fg:x="4868" fg:w="10"/><text x="25.3350%" y="495.50"></text></g><g><title>keccak::p1600 (10 samples, 0.05%)</title><rect x="25.0850%" y="469" width="0.0515%" height="15" fill="rgb(229,195,25)" fg:x="4868" fg:w="10"/><text x="25.3350%" y="479.50"></text></g><g><title>keccak::keccak_p (10 samples, 0.05%)</title><rect x="25.0850%" y="453" width="0.0515%" height="15" fill="rgb(224,132,51)" fg:x="4868" fg:w="10"/><text x="25.3350%" y="463.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (10 samples, 0.05%)</title><rect x="25.0850%" y="437" width="0.0515%" height="15" fill="rgb(240,63,7)" fg:x="4868" fg:w="10"/><text x="25.3350%" y="447.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (58 samples, 0.30%)</title><rect x="24.8480%" y="661" width="0.2989%" height="15" fill="rgb(249,182,41)" fg:x="4822" fg:w="58"/><text x="25.0980%" y="671.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (58 samples, 0.30%)</title><rect x="24.8480%" y="645" width="0.2989%" height="15" fill="rgb(243,47,26)" fg:x="4822" fg:w="58"/><text x="25.0980%" y="655.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (56 samples, 0.29%)</title><rect x="24.8583%" y="629" width="0.2886%" height="15" fill="rgb(233,48,2)" fg:x="4824" fg:w="56"/><text x="25.1083%" y="639.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (56 samples, 0.29%)</title><rect x="24.8583%" y="613" width="0.2886%" height="15" fill="rgb(244,165,34)" fg:x="4824" fg:w="56"/><text x="25.1083%" y="623.50"></text></g><g><title>zilliqa::state::State::has_account (30 samples, 0.15%)</title><rect x="24.9923%" y="597" width="0.1546%" height="15" fill="rgb(207,89,7)" fg:x="4850" fg:w="30"/><text x="25.2423%" y="607.50"></text></g><g><title>zilliqa::state::State::account_key (13 samples, 0.07%)</title><rect x="25.0799%" y="581" width="0.0670%" height="15" fill="rgb(244,117,36)" fg:x="4867" fg:w="13"/><text x="25.3299%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (13 samples, 0.07%)</title><rect x="25.0799%" y="565" width="0.0670%" height="15" fill="rgb(226,144,34)" fg:x="4867" fg:w="13"/><text x="25.3299%" y="575.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::preverify_transaction_inner (61 samples, 0.31%)</title><rect x="24.8480%" y="725" width="0.3143%" height="15" fill="rgb(213,23,19)" fg:x="4822" fg:w="61"/><text x="25.0980%" y="735.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::tx_against_state (61 samples, 0.31%)</title><rect x="24.8480%" y="709" width="0.3143%" height="15" fill="rgb(217,75,12)" fg:x="4822" fg:w="61"/><text x="25.0980%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (61 samples, 0.31%)</title><rect x="24.8480%" y="693" width="0.3143%" height="15" fill="rgb(224,159,17)" fg:x="4822" fg:w="61"/><text x="25.0980%" y="703.50"></text></g><g><title>revm::handler::mainnet::validation::validate_tx_against_state (61 samples, 0.31%)</title><rect x="24.8480%" y="677" width="0.3143%" height="15" fill="rgb(217,118,1)" fg:x="4822" fg:w="61"/><text x="25.0980%" y="687.50"></text></g><g><title>revm_primitives::env::Env::validate_tx_against_state (3 samples, 0.02%)</title><rect x="25.1469%" y="661" width="0.0155%" height="15" fill="rgb(232,180,48)" fg:x="4880" fg:w="3"/><text x="25.3969%" y="671.50"></text></g><g><title>ruint::mul::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::checked_mul (3 samples, 0.02%)</title><rect x="25.1469%" y="645" width="0.0155%" height="15" fill="rgb(230,27,33)" fg:x="4880" fg:w="3"/><text x="25.3969%" y="655.50"></text></g><g><title>ruint::mul::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::overflowing_mul (3 samples, 0.02%)</title><rect x="25.1469%" y="629" width="0.0155%" height="15" fill="rgb(205,31,21)" fg:x="4880" fg:w="3"/><text x="25.3969%" y="639.50"></text></g><g><title>ruint::algorithms::mul::addmul (3 samples, 0.02%)</title><rect x="25.1469%" y="613" width="0.0155%" height="15" fill="rgb(253,59,4)" fg:x="4880" fg:w="3"/><text x="25.3969%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="25.1623%" y="469" width="0.0155%" height="15" fill="rgb(224,201,9)" fg:x="4883" fg:w="3"/><text x="25.4123%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="25.1623%" y="453" width="0.0155%" height="15" fill="rgb(229,206,30)" fg:x="4883" fg:w="3"/><text x="25.4123%" y="463.50"></text></g><g><title>&lt;foldhash::seed::fast::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="25.1623%" y="437" width="0.0155%" height="15" fill="rgb(212,67,47)" fg:x="4883" fg:w="3"/><text x="25.4123%" y="447.50"></text></g><g><title>foldhash::fast::FoldHasher::with_seed (3 samples, 0.02%)</title><rect x="25.1623%" y="421" width="0.0155%" height="15" fill="rgb(211,96,50)" fg:x="4883" fg:w="3"/><text x="25.4123%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.03%)</title><rect x="25.1623%" y="645" width="0.0309%" height="15" fill="rgb(252,114,18)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="25.1623%" y="629" width="0.0309%" height="15" fill="rgb(223,58,37)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="25.1623%" y="613" width="0.0309%" height="15" fill="rgb(237,70,4)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="623.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="25.1623%" y="597" width="0.0309%" height="15" fill="rgb(244,85,46)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="25.1623%" y="581" width="0.0309%" height="15" fill="rgb(223,39,52)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.03%)</title><rect x="25.1623%" y="565" width="0.0309%" height="15" fill="rgb(218,200,14)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="575.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (6 samples, 0.03%)</title><rect x="25.1623%" y="549" width="0.0309%" height="15" fill="rgb(208,171,16)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.03%)</title><rect x="25.1623%" y="533" width="0.0309%" height="15" fill="rgb(234,200,18)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.03%)</title><rect x="25.1623%" y="517" width="0.0309%" height="15" fill="rgb(228,45,11)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (6 samples, 0.03%)</title><rect x="25.1623%" y="501" width="0.0309%" height="15" fill="rgb(237,182,11)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.03%)</title><rect x="25.1623%" y="485" width="0.0309%" height="15" fill="rgb(241,175,49)" fg:x="4883" fg:w="6"/><text x="25.4123%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.02%)</title><rect x="25.1778%" y="469" width="0.0155%" height="15" fill="rgb(247,38,35)" fg:x="4886" fg:w="3"/><text x="25.4278%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="25.1778%" y="453" width="0.0155%" height="15" fill="rgb(228,39,49)" fg:x="4886" fg:w="3"/><text x="25.4278%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="25.1778%" y="437" width="0.0155%" height="15" fill="rgb(226,101,26)" fg:x="4886" fg:w="3"/><text x="25.4278%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.02%)</title><rect x="25.1778%" y="421" width="0.0155%" height="15" fill="rgb(206,141,19)" fg:x="4886" fg:w="3"/><text x="25.4278%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.02%)</title><rect x="25.1778%" y="405" width="0.0155%" height="15" fill="rgb(211,200,13)" fg:x="4886" fg:w="3"/><text x="25.4278%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (2 samples, 0.01%)</title><rect x="25.1829%" y="389" width="0.0103%" height="15" fill="rgb(241,121,6)" fg:x="4887" fg:w="2"/><text x="25.4329%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (2 samples, 0.01%)</title><rect x="25.1829%" y="373" width="0.0103%" height="15" fill="rgb(234,221,29)" fg:x="4887" fg:w="2"/><text x="25.4329%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="25.1829%" y="357" width="0.0103%" height="15" fill="rgb(229,136,5)" fg:x="4887" fg:w="2"/><text x="25.4329%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="25.1829%" y="341" width="0.0103%" height="15" fill="rgb(238,36,11)" fg:x="4887" fg:w="2"/><text x="25.4329%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="25.1829%" y="325" width="0.0103%" height="15" fill="rgb(251,55,41)" fg:x="4887" fg:w="2"/><text x="25.4329%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.04%)</title><rect x="25.1623%" y="693" width="0.0361%" height="15" fill="rgb(242,34,40)" fg:x="4883" fg:w="7"/><text x="25.4123%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.04%)</title><rect x="25.1623%" y="677" width="0.0361%" height="15" fill="rgb(215,42,17)" fg:x="4883" fg:w="7"/><text x="25.4123%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.04%)</title><rect x="25.1623%" y="661" width="0.0361%" height="15" fill="rgb(207,44,46)" fg:x="4883" fg:w="7"/><text x="25.4123%" y="671.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::set_precompiles (11 samples, 0.06%)</title><rect x="25.1623%" y="709" width="0.0567%" height="15" fill="rgb(211,206,28)" fg:x="4883" fg:w="11"/><text x="25.4123%" y="719.50"></text></g><g><title>revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt;::addresses_set (4 samples, 0.02%)</title><rect x="25.1984%" y="693" width="0.0206%" height="15" fill="rgb(237,167,16)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.02%)</title><rect x="25.1984%" y="677" width="0.0206%" height="15" fill="rgb(233,66,6)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="25.1984%" y="661" width="0.0206%" height="15" fill="rgb(246,123,29)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="25.1984%" y="645" width="0.0206%" height="15" fill="rgb(209,62,40)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="25.1984%" y="629" width="0.0206%" height="15" fill="rgb(218,4,25)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="25.1984%" y="613" width="0.0206%" height="15" fill="rgb(253,91,49)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="25.1984%" y="597" width="0.0206%" height="15" fill="rgb(228,155,29)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="581" width="0.0206%" height="15" fill="rgb(243,57,37)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="565" width="0.0206%" height="15" fill="rgb(244,167,17)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="549" width="0.0206%" height="15" fill="rgb(207,181,38)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="533" width="0.0206%" height="15" fill="rgb(211,8,23)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="517" width="0.0206%" height="15" fill="rgb(235,11,44)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="527.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="501" width="0.0206%" height="15" fill="rgb(248,18,52)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.1984%" y="485" width="0.0206%" height="15" fill="rgb(208,4,7)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (4 samples, 0.02%)</title><rect x="25.1984%" y="469" width="0.0206%" height="15" fill="rgb(240,17,39)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (4 samples, 0.02%)</title><rect x="25.1984%" y="453" width="0.0206%" height="15" fill="rgb(207,170,3)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (4 samples, 0.02%)</title><rect x="25.1984%" y="437" width="0.0206%" height="15" fill="rgb(236,100,52)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.02%)</title><rect x="25.1984%" y="421" width="0.0206%" height="15" fill="rgb(246,78,51)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.02%)</title><rect x="25.1984%" y="405" width="0.0206%" height="15" fill="rgb(211,17,15)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="25.1984%" y="389" width="0.0206%" height="15" fill="rgb(209,59,46)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (4 samples, 0.02%)</title><rect x="25.1984%" y="373" width="0.0206%" height="15" fill="rgb(210,92,25)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="25.1984%" y="357" width="0.0206%" height="15" fill="rgb(238,174,52)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.02%)</title><rect x="25.1984%" y="341" width="0.0206%" height="15" fill="rgb(230,73,7)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4 samples, 0.02%)</title><rect x="25.1984%" y="325" width="0.0206%" height="15" fill="rgb(243,124,40)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="25.1984%" y="309" width="0.0206%" height="15" fill="rgb(244,170,11)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.02%)</title><rect x="25.1984%" y="293" width="0.0206%" height="15" fill="rgb(207,114,54)" fg:x="4890" fg:w="4"/><text x="25.4484%" y="303.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::call (3 samples, 0.02%)</title><rect x="25.2190%" y="709" width="0.0155%" height="15" fill="rgb(205,42,20)" fg:x="4894" fg:w="3"/><text x="25.4690%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="25.2190%" y="693" width="0.0155%" height="15" fill="rgb(230,30,28)" fg:x="4894" fg:w="3"/><text x="25.4690%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.02%)</title><rect x="25.2190%" y="677" width="0.0155%" height="15" fill="rgb(205,73,54)" fg:x="4894" fg:w="3"/><text x="25.4690%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="25.2190%" y="661" width="0.0155%" height="15" fill="rgb(254,227,23)" fg:x="4894" fg:w="3"/><text x="25.4690%" y="671.50"></text></g><g><title>revm::journaled_state::JournaledState::finalize (2 samples, 0.01%)</title><rect x="25.2345%" y="661" width="0.0103%" height="15" fill="rgb(228,202,34)" fg:x="4897" fg:w="2"/><text x="25.4845%" y="671.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::output (3 samples, 0.02%)</title><rect x="25.2345%" y="709" width="0.0155%" height="15" fill="rgb(222,225,37)" fg:x="4897" fg:w="3"/><text x="25.4845%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="25.2345%" y="693" width="0.0155%" height="15" fill="rgb(221,14,54)" fg:x="4897" fg:w="3"/><text x="25.4845%" y="703.50"></text></g><g><title>revm::handler::mainnet::post_execution::output (3 samples, 0.02%)</title><rect x="25.2345%" y="677" width="0.0155%" height="15" fill="rgb(254,102,2)" fg:x="4897" fg:w="3"/><text x="25.4845%" y="687.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (3 samples, 0.02%)</title><rect x="25.2602%" y="581" width="0.0155%" height="15" fill="rgb(232,104,17)" fg:x="4902" fg:w="3"/><text x="25.5102%" y="591.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (6 samples, 0.03%)</title><rect x="25.2602%" y="597" width="0.0309%" height="15" fill="rgb(250,220,14)" fg:x="4902" fg:w="6"/><text x="25.5102%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (3 samples, 0.02%)</title><rect x="25.2757%" y="581" width="0.0155%" height="15" fill="rgb(241,158,9)" fg:x="4905" fg:w="3"/><text x="25.5257%" y="591.50"></text></g><g><title>zilliqa::state::State::get_account (12 samples, 0.06%)</title><rect x="25.2602%" y="613" width="0.0618%" height="15" fill="rgb(246,9,43)" fg:x="4902" fg:w="12"/><text x="25.5102%" y="623.50"></text></g><g><title>zilliqa::state::State::account_key (6 samples, 0.03%)</title><rect x="25.2911%" y="597" width="0.0309%" height="15" fill="rgb(206,73,33)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="607.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (6 samples, 0.03%)</title><rect x="25.2911%" y="581" width="0.0309%" height="15" fill="rgb(222,79,8)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (6 samples, 0.03%)</title><rect x="25.2911%" y="565" width="0.0309%" height="15" fill="rgb(234,8,54)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="575.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (6 samples, 0.03%)</title><rect x="25.2911%" y="549" width="0.0309%" height="15" fill="rgb(209,134,38)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="559.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (6 samples, 0.03%)</title><rect x="25.2911%" y="533" width="0.0309%" height="15" fill="rgb(230,127,29)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="543.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (6 samples, 0.03%)</title><rect x="25.2911%" y="517" width="0.0309%" height="15" fill="rgb(242,44,41)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="527.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (6 samples, 0.03%)</title><rect x="25.2911%" y="501" width="0.0309%" height="15" fill="rgb(222,56,43)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="511.50"></text></g><g><title>keccak::p1600 (6 samples, 0.03%)</title><rect x="25.2911%" y="485" width="0.0309%" height="15" fill="rgb(238,39,47)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="495.50"></text></g><g><title>keccak::keccak_p (6 samples, 0.03%)</title><rect x="25.2911%" y="469" width="0.0309%" height="15" fill="rgb(226,79,43)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="479.50"></text></g><g><title>&lt;u64 as keccak::LaneSize&gt;::rotate_left (6 samples, 0.03%)</title><rect x="25.2911%" y="453" width="0.0309%" height="15" fill="rgb(242,105,53)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.03%)</title><rect x="25.2911%" y="437" width="0.0309%" height="15" fill="rgb(251,132,46)" fg:x="4908" fg:w="6"/><text x="25.5411%" y="447.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (18 samples, 0.09%)</title><rect x="25.2551%" y="645" width="0.0928%" height="15" fill="rgb(231,77,14)" fg:x="4901" fg:w="18"/><text x="25.5051%" y="655.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (18 samples, 0.09%)</title><rect x="25.2551%" y="629" width="0.0928%" height="15" fill="rgb(240,135,9)" fg:x="4901" fg:w="18"/><text x="25.5051%" y="639.50"></text></g><g><title>zilliqa::state::State::has_account (5 samples, 0.03%)</title><rect x="25.3221%" y="613" width="0.0258%" height="15" fill="rgb(248,109,14)" fg:x="4914" fg:w="5"/><text x="25.5721%" y="623.50"></text></g><g><title>zilliqa::state::State::account_key (4 samples, 0.02%)</title><rect x="25.3272%" y="597" width="0.0206%" height="15" fill="rgb(227,146,52)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="607.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (4 samples, 0.02%)</title><rect x="25.3272%" y="581" width="0.0206%" height="15" fill="rgb(232,54,3)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (4 samples, 0.02%)</title><rect x="25.3272%" y="565" width="0.0206%" height="15" fill="rgb(229,201,43)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="575.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (4 samples, 0.02%)</title><rect x="25.3272%" y="549" width="0.0206%" height="15" fill="rgb(252,161,33)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="559.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (4 samples, 0.02%)</title><rect x="25.3272%" y="533" width="0.0206%" height="15" fill="rgb(226,146,40)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="543.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (4 samples, 0.02%)</title><rect x="25.3272%" y="517" width="0.0206%" height="15" fill="rgb(219,47,25)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="527.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (4 samples, 0.02%)</title><rect x="25.3272%" y="501" width="0.0206%" height="15" fill="rgb(250,135,13)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="511.50"></text></g><g><title>keccak::p1600 (4 samples, 0.02%)</title><rect x="25.3272%" y="485" width="0.0206%" height="15" fill="rgb(219,229,18)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="495.50"></text></g><g><title>keccak::keccak_p (4 samples, 0.02%)</title><rect x="25.3272%" y="469" width="0.0206%" height="15" fill="rgb(217,152,27)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="479.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (4 samples, 0.02%)</title><rect x="25.3272%" y="453" width="0.0206%" height="15" fill="rgb(225,71,47)" fg:x="4915" fg:w="4"/><text x="25.5772%" y="463.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::reward_beneficiary (20 samples, 0.10%)</title><rect x="25.2551%" y="709" width="0.1031%" height="15" fill="rgb(220,139,14)" fg:x="4901" fg:w="20"/><text x="25.5051%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (20 samples, 0.10%)</title><rect x="25.2551%" y="693" width="0.1031%" height="15" fill="rgb(247,54,32)" fg:x="4901" fg:w="20"/><text x="25.5051%" y="703.50"></text></g><g><title>revm::handler::mainnet::post_execution::reward_beneficiary (20 samples, 0.10%)</title><rect x="25.2551%" y="677" width="0.1031%" height="15" fill="rgb(252,131,39)" fg:x="4901" fg:w="20"/><text x="25.5051%" y="687.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (20 samples, 0.10%)</title><rect x="25.2551%" y="661" width="0.1031%" height="15" fill="rgb(210,108,39)" fg:x="4901" fg:w="20"/><text x="25.5051%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="25.3478%" y="645" width="0.0103%" height="15" fill="rgb(205,23,29)" fg:x="4919" fg:w="2"/><text x="25.5978%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="25.3478%" y="629" width="0.0103%" height="15" fill="rgb(246,139,46)" fg:x="4919" fg:w="2"/><text x="25.5978%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="25.3478%" y="613" width="0.0103%" height="15" fill="rgb(250,81,26)" fg:x="4919" fg:w="2"/><text x="25.5978%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="25.3478%" y="597" width="0.0103%" height="15" fill="rgb(214,104,7)" fg:x="4919" fg:w="2"/><text x="25.5978%" y="607.50"></text></g><g><title>&lt;foldhash::seed::fast::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="25.3478%" y="581" width="0.0103%" height="15" fill="rgb(233,189,8)" fg:x="4919" fg:w="2"/><text x="25.5978%" y="591.50"></text></g><g><title>foldhash::fast::FoldHasher::with_seed (2 samples, 0.01%)</title><rect x="25.3478%" y="565" width="0.0103%" height="15" fill="rgb(228,141,17)" fg:x="4919" fg:w="2"/><text x="25.5978%" y="575.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::deduct_caller (2 samples, 0.01%)</title><rect x="25.3581%" y="709" width="0.0103%" height="15" fill="rgb(247,157,1)" fg:x="4921" fg:w="2"/><text x="25.6081%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="25.3581%" y="693" width="0.0103%" height="15" fill="rgb(249,225,5)" fg:x="4921" fg:w="2"/><text x="25.6081%" y="703.50"></text></g><g><title>revm::handler::mainnet::pre_execution::deduct_caller (2 samples, 0.01%)</title><rect x="25.3581%" y="677" width="0.0103%" height="15" fill="rgb(242,55,13)" fg:x="4921" fg:w="2"/><text x="25.6081%" y="687.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::load_accounts (3 samples, 0.02%)</title><rect x="25.3684%" y="709" width="0.0155%" height="15" fill="rgb(230,49,50)" fg:x="4923" fg:w="3"/><text x="25.6184%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="25.3684%" y="693" width="0.0155%" height="15" fill="rgb(241,111,38)" fg:x="4923" fg:w="3"/><text x="25.6184%" y="703.50"></text></g><g><title>revm::handler::mainnet::pre_execution::load_accounts (2 samples, 0.01%)</title><rect x="25.3736%" y="677" width="0.0103%" height="15" fill="rgb(252,155,4)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.01%)</title><rect x="25.3736%" y="661" width="0.0103%" height="15" fill="rgb(212,69,32)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="25.3736%" y="645" width="0.0103%" height="15" fill="rgb(243,107,47)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="25.3736%" y="629" width="0.0103%" height="15" fill="rgb(247,130,12)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="25.3736%" y="613" width="0.0103%" height="15" fill="rgb(233,74,16)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="25.3736%" y="597" width="0.0103%" height="15" fill="rgb(208,58,18)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="607.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="25.3736%" y="581" width="0.0103%" height="15" fill="rgb(242,225,1)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="591.50"></text></g><g><title>foldhash::folded_multiply (2 samples, 0.01%)</title><rect x="25.3736%" y="565" width="0.0103%" height="15" fill="rgb(249,39,40)" fg:x="4924" fg:w="2"/><text x="25.6236%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="25.3891%" y="661" width="0.0103%" height="15" fill="rgb(207,72,44)" fg:x="4927" fg:w="2"/><text x="25.6391%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="25.3891%" y="645" width="0.0103%" height="15" fill="rgb(215,193,12)" fg:x="4927" fg:w="2"/><text x="25.6391%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="25.3891%" y="629" width="0.0103%" height="15" fill="rgb(248,41,39)" fg:x="4927" fg:w="2"/><text x="25.6391%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="25.3891%" y="613" width="0.0103%" height="15" fill="rgb(253,85,4)" fg:x="4927" fg:w="2"/><text x="25.6391%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="25.3891%" y="597" width="0.0103%" height="15" fill="rgb(243,70,31)" fg:x="4927" fg:w="2"/><text x="25.6391%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="25.4097%" y="565" width="0.0206%" height="15" fill="rgb(253,195,26)" fg:x="4931" fg:w="4"/><text x="25.6597%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.4097%" y="549" width="0.0206%" height="15" fill="rgb(243,42,11)" fg:x="4931" fg:w="4"/><text x="25.6597%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.4097%" y="533" width="0.0206%" height="15" fill="rgb(239,66,17)" fg:x="4931" fg:w="4"/><text x="25.6597%" y="543.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="25.4097%" y="517" width="0.0206%" height="15" fill="rgb(217,132,21)" fg:x="4931" fg:w="4"/><text x="25.6597%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="25.4148%" y="501" width="0.0155%" height="15" fill="rgb(252,202,21)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3 samples, 0.02%)</title><rect x="25.4148%" y="485" width="0.0155%" height="15" fill="rgb(233,98,36)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.02%)</title><rect x="25.4148%" y="469" width="0.0155%" height="15" fill="rgb(216,153,54)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="25.4148%" y="453" width="0.0155%" height="15" fill="rgb(250,99,7)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="25.4148%" y="437" width="0.0155%" height="15" fill="rgb(207,56,50)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="25.4148%" y="421" width="0.0155%" height="15" fill="rgb(244,61,34)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="25.4148%" y="405" width="0.0155%" height="15" fill="rgb(241,50,38)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="25.4148%" y="389" width="0.0155%" height="15" fill="rgb(212,166,30)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="25.4148%" y="373" width="0.0155%" height="15" fill="rgb(249,127,32)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="383.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="25.4148%" y="357" width="0.0155%" height="15" fill="rgb(209,103,0)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="367.50"></text></g><g><title>foldhash::folded_multiply (3 samples, 0.02%)</title><rect x="25.4148%" y="341" width="0.0155%" height="15" fill="rgb(238,209,51)" fg:x="4932" fg:w="3"/><text x="25.6648%" y="351.50"></text></g><g><title>&lt;revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt; as core::iter::traits::collect::Extend&lt;(alloy_primitives::bits::address::Address,revm::context::context_precompiles::ContextPrecompile&lt;DB&gt;)&gt;&gt;::extend (9 samples, 0.05%)</title><rect x="25.3891%" y="677" width="0.0464%" height="15" fill="rgb(237,56,23)" fg:x="4927" fg:w="9"/><text x="25.6391%" y="687.50"></text></g><g><title>revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt;::to_mut (7 samples, 0.04%)</title><rect x="25.3994%" y="661" width="0.0361%" height="15" fill="rgb(215,153,46)" fg:x="4929" fg:w="7"/><text x="25.6494%" y="671.50"></text></g><g><title>revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt;::mutate_into_owned (7 samples, 0.04%)</title><rect x="25.3994%" y="645" width="0.0361%" height="15" fill="rgb(224,49,31)" fg:x="4929" fg:w="7"/><text x="25.6494%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.04%)</title><rect x="25.3994%" y="629" width="0.0361%" height="15" fill="rgb(250,18,42)" fg:x="4929" fg:w="7"/><text x="25.6494%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.04%)</title><rect x="25.3994%" y="613" width="0.0361%" height="15" fill="rgb(215,176,39)" fg:x="4929" fg:w="7"/><text x="25.6494%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.03%)</title><rect x="25.4097%" y="597" width="0.0258%" height="15" fill="rgb(223,77,29)" fg:x="4931" fg:w="5"/><text x="25.6597%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.03%)</title><rect x="25.4097%" y="581" width="0.0258%" height="15" fill="rgb(234,94,52)" fg:x="4931" fg:w="5"/><text x="25.6597%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="25.4354%" y="661" width="0.0103%" height="15" fill="rgb(220,154,50)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="25.4354%" y="645" width="0.0103%" height="15" fill="rgb(212,11,10)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="25.4354%" y="629" width="0.0103%" height="15" fill="rgb(205,166,19)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="25.4354%" y="613" width="0.0103%" height="15" fill="rgb(244,198,16)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="623.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="25.4354%" y="597" width="0.0103%" height="15" fill="rgb(219,69,12)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="607.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="25.4354%" y="581" width="0.0103%" height="15" fill="rgb(245,30,7)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="25.4354%" y="565" width="0.0103%" height="15" fill="rgb(218,221,48)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="575.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="25.4354%" y="549" width="0.0103%" height="15" fill="rgb(216,66,15)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="559.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="25.4354%" y="533" width="0.0103%" height="15" fill="rgb(226,122,50)" fg:x="4936" fg:w="2"/><text x="25.6854%" y="543.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::load_precompiles (15 samples, 0.08%)</title><rect x="25.3839%" y="709" width="0.0773%" height="15" fill="rgb(239,156,16)" fg:x="4926" fg:w="15"/><text x="25.6339%" y="719.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm::{{closure}}::{{closure}} (15 samples, 0.08%)</title><rect x="25.3839%" y="693" width="0.0773%" height="15" fill="rgb(224,27,38)" fg:x="4926" fg:w="15"/><text x="25.6339%" y="703.50"></text></g><g><title>zilliqa::precompiles::get_custom_precompiles (5 samples, 0.03%)</title><rect x="25.4354%" y="677" width="0.0258%" height="15" fill="rgb(224,39,27)" fg:x="4936" fg:w="5"/><text x="25.6854%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="25.4457%" y="661" width="0.0155%" height="15" fill="rgb(215,92,29)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="25.4457%" y="645" width="0.0155%" height="15" fill="rgb(207,159,16)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="25.4457%" y="629" width="0.0155%" height="15" fill="rgb(238,163,47)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="25.4457%" y="613" width="0.0155%" height="15" fill="rgb(219,91,49)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="25.4457%" y="597" width="0.0155%" height="15" fill="rgb(227,167,31)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="25.4457%" y="581" width="0.0155%" height="15" fill="rgb(234,80,54)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="591.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="25.4457%" y="565" width="0.0155%" height="15" fill="rgb(212,114,2)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="25.4457%" y="549" width="0.0155%" height="15" fill="rgb(234,50,24)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="25.4457%" y="533" width="0.0155%" height="15" fill="rgb(221,68,8)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="543.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="25.4457%" y="517" width="0.0155%" height="15" fill="rgb(254,180,31)" fg:x="4938" fg:w="3"/><text x="25.6957%" y="527.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::call (2 samples, 0.01%)</title><rect x="25.4664%" y="693" width="0.0103%" height="15" fill="rgb(247,130,50)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="703.50"></text></g><g><title>&lt;zilliqa::inspector::TouchedAddressInspector as revm::inspector::Inspector&lt;DB&gt;&gt;::call (2 samples, 0.01%)</title><rect x="25.4664%" y="677" width="0.0103%" height="15" fill="rgb(211,109,4)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.01%)</title><rect x="25.4664%" y="661" width="0.0103%" height="15" fill="rgb(238,50,21)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="25.4664%" y="645" width="0.0103%" height="15" fill="rgb(225,57,45)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="25.4664%" y="629" width="0.0103%" height="15" fill="rgb(209,196,50)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="25.4664%" y="613" width="0.0103%" height="15" fill="rgb(242,140,13)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="25.4664%" y="597" width="0.0103%" height="15" fill="rgb(217,111,7)" fg:x="4942" fg:w="2"/><text x="25.7164%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm_interpreter::interpreter_action::call_inputs::CallInputs&gt;&gt; (2 samples, 0.01%)</title><rect x="25.4767%" y="645" width="0.0103%" height="15" fill="rgb(253,193,51)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="25.4767%" y="629" width="0.0103%" height="15" fill="rgb(252,70,29)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="25.4767%" y="613" width="0.0103%" height="15" fill="rgb(232,127,12)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="25.4767%" y="597" width="0.0103%" height="15" fill="rgb(211,180,21)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="607.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="25.4767%" y="581" width="0.0103%" height="15" fill="rgb(229,72,13)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="25.4767%" y="565" width="0.0103%" height="15" fill="rgb(240,211,49)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="575.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="25.4767%" y="549" width="0.0103%" height="15" fill="rgb(219,149,40)" fg:x="4944" fg:w="2"/><text x="25.7267%" y="559.50"></text></g><g><title>revm::journaled_state::JournaledState::checkpoint (2 samples, 0.01%)</title><rect x="25.4870%" y="629" width="0.0103%" height="15" fill="rgb(210,127,46)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="25.4870%" y="613" width="0.0103%" height="15" fill="rgb(220,106,7)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="25.4870%" y="597" width="0.0103%" height="15" fill="rgb(249,31,22)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="25.4870%" y="581" width="0.0103%" height="15" fill="rgb(253,1,49)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="25.4870%" y="565" width="0.0103%" height="15" fill="rgb(227,144,33)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="25.4870%" y="549" width="0.0103%" height="15" fill="rgb(249,163,44)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="25.4870%" y="533" width="0.0103%" height="15" fill="rgb(234,15,39)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="25.4870%" y="517" width="0.0103%" height="15" fill="rgb(207,66,16)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="527.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="25.4870%" y="501" width="0.0103%" height="15" fill="rgb(233,112,24)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="25.4870%" y="485" width="0.0103%" height="15" fill="rgb(230,90,22)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="495.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="25.4870%" y="469" width="0.0103%" height="15" fill="rgb(229,61,13)" fg:x="4946" fg:w="2"/><text x="25.7370%" y="479.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (6 samples, 0.03%)</title><rect x="25.5024%" y="517" width="0.0309%" height="15" fill="rgb(225,57,24)" fg:x="4949" fg:w="6"/><text x="25.7524%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.03%)</title><rect x="25.5024%" y="501" width="0.0309%" height="15" fill="rgb(208,169,48)" fg:x="4949" fg:w="6"/><text x="25.7524%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.03%)</title><rect x="25.5076%" y="485" width="0.0258%" height="15" fill="rgb(244,218,51)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="25.5076%" y="469" width="0.0258%" height="15" fill="rgb(214,148,10)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="25.5076%" y="453" width="0.0258%" height="15" fill="rgb(225,174,27)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="25.5076%" y="437" width="0.0258%" height="15" fill="rgb(230,96,26)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="25.5076%" y="421" width="0.0258%" height="15" fill="rgb(232,10,30)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="431.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="25.5076%" y="405" width="0.0258%" height="15" fill="rgb(222,8,50)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="415.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="25.5076%" y="389" width="0.0258%" height="15" fill="rgb(213,81,27)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.03%)</title><rect x="25.5076%" y="373" width="0.0258%" height="15" fill="rgb(245,50,10)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="383.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="25.5076%" y="357" width="0.0258%" height="15" fill="rgb(216,100,18)" fg:x="4950" fg:w="5"/><text x="25.7576%" y="367.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="25.5127%" y="341" width="0.0206%" height="15" fill="rgb(236,147,54)" fg:x="4951" fg:w="4"/><text x="25.7627%" y="351.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="25.5127%" y="325" width="0.0206%" height="15" fill="rgb(205,143,26)" fg:x="4951" fg:w="4"/><text x="25.7627%" y="335.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (8 samples, 0.04%)</title><rect x="25.5024%" y="533" width="0.0412%" height="15" fill="rgb(236,26,9)" fg:x="4949" fg:w="8"/><text x="25.7524%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="25.5333%" y="517" width="0.0103%" height="15" fill="rgb(221,165,53)" fg:x="4955" fg:w="2"/><text x="25.7833%" y="527.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (9 samples, 0.05%)</title><rect x="25.5488%" y="501" width="0.0464%" height="15" fill="rgb(214,110,17)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="511.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (9 samples, 0.05%)</title><rect x="25.5488%" y="485" width="0.0464%" height="15" fill="rgb(237,197,12)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="495.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (9 samples, 0.05%)</title><rect x="25.5488%" y="469" width="0.0464%" height="15" fill="rgb(205,84,17)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="479.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (9 samples, 0.05%)</title><rect x="25.5488%" y="453" width="0.0464%" height="15" fill="rgb(237,18,45)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="463.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (9 samples, 0.05%)</title><rect x="25.5488%" y="437" width="0.0464%" height="15" fill="rgb(221,87,14)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="447.50"></text></g><g><title>keccak::p1600 (9 samples, 0.05%)</title><rect x="25.5488%" y="421" width="0.0464%" height="15" fill="rgb(238,186,15)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="431.50"></text></g><g><title>keccak::keccak_p (9 samples, 0.05%)</title><rect x="25.5488%" y="405" width="0.0464%" height="15" fill="rgb(208,115,11)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="415.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (9 samples, 0.05%)</title><rect x="25.5488%" y="389" width="0.0464%" height="15" fill="rgb(254,175,0)" fg:x="4958" fg:w="9"/><text x="25.7988%" y="399.50"></text></g><g><title>zilliqa::state::State::get_account (19 samples, 0.10%)</title><rect x="25.5024%" y="549" width="0.0979%" height="15" fill="rgb(227,24,42)" fg:x="4949" fg:w="19"/><text x="25.7524%" y="559.50"></text></g><g><title>zilliqa::state::State::account_key (10 samples, 0.05%)</title><rect x="25.5488%" y="533" width="0.0515%" height="15" fill="rgb(223,211,37)" fg:x="4958" fg:w="10"/><text x="25.7988%" y="543.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (10 samples, 0.05%)</title><rect x="25.5488%" y="517" width="0.0515%" height="15" fill="rgb(235,49,27)" fg:x="4958" fg:w="10"/><text x="25.7988%" y="527.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (5 samples, 0.03%)</title><rect x="25.6003%" y="517" width="0.0258%" height="15" fill="rgb(254,97,51)" fg:x="4968" fg:w="5"/><text x="25.8503%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="25.6003%" y="501" width="0.0258%" height="15" fill="rgb(249,51,40)" fg:x="4968" fg:w="5"/><text x="25.8503%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="25.6055%" y="485" width="0.0206%" height="15" fill="rgb(210,128,45)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="25.6055%" y="469" width="0.0206%" height="15" fill="rgb(224,137,50)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="25.6055%" y="453" width="0.0206%" height="15" fill="rgb(242,15,9)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="25.6055%" y="437" width="0.0206%" height="15" fill="rgb(233,187,41)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="25.6055%" y="421" width="0.0206%" height="15" fill="rgb(227,2,29)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="431.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="25.6055%" y="405" width="0.0206%" height="15" fill="rgb(222,70,3)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="415.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="25.6055%" y="389" width="0.0206%" height="15" fill="rgb(213,11,42)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="25.6055%" y="373" width="0.0206%" height="15" fill="rgb(225,150,9)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="383.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="25.6055%" y="357" width="0.0206%" height="15" fill="rgb(230,162,45)" fg:x="4969" fg:w="4"/><text x="25.8555%" y="367.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (7 samples, 0.04%)</title><rect x="25.6003%" y="533" width="0.0361%" height="15" fill="rgb(222,14,52)" fg:x="4968" fg:w="7"/><text x="25.8503%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="25.6261%" y="517" width="0.0103%" height="15" fill="rgb(254,198,14)" fg:x="4973" fg:w="2"/><text x="25.8761%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="25.6261%" y="501" width="0.0103%" height="15" fill="rgb(220,217,30)" fg:x="4973" fg:w="2"/><text x="25.8761%" y="511.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (36 samples, 0.19%)</title><rect x="25.4973%" y="581" width="0.1855%" height="15" fill="rgb(215,146,41)" fg:x="4948" fg:w="36"/><text x="25.7473%" y="591.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (36 samples, 0.19%)</title><rect x="25.4973%" y="565" width="0.1855%" height="15" fill="rgb(217,27,36)" fg:x="4948" fg:w="36"/><text x="25.7473%" y="575.50"></text></g><g><title>zilliqa::state::State::has_account (16 samples, 0.08%)</title><rect x="25.6003%" y="549" width="0.0824%" height="15" fill="rgb(219,218,39)" fg:x="4968" fg:w="16"/><text x="25.8503%" y="559.50"></text></g><g><title>zilliqa::state::State::account_key (9 samples, 0.05%)</title><rect x="25.6364%" y="533" width="0.0464%" height="15" fill="rgb(219,4,42)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="543.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (9 samples, 0.05%)</title><rect x="25.6364%" y="517" width="0.0464%" height="15" fill="rgb(249,119,36)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="527.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (9 samples, 0.05%)</title><rect x="25.6364%" y="501" width="0.0464%" height="15" fill="rgb(209,23,33)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="511.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (9 samples, 0.05%)</title><rect x="25.6364%" y="485" width="0.0464%" height="15" fill="rgb(211,10,0)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="495.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (9 samples, 0.05%)</title><rect x="25.6364%" y="469" width="0.0464%" height="15" fill="rgb(208,99,37)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="479.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (9 samples, 0.05%)</title><rect x="25.6364%" y="453" width="0.0464%" height="15" fill="rgb(213,132,31)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="463.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (9 samples, 0.05%)</title><rect x="25.6364%" y="437" width="0.0464%" height="15" fill="rgb(243,129,40)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="447.50"></text></g><g><title>keccak::p1600 (9 samples, 0.05%)</title><rect x="25.6364%" y="421" width="0.0464%" height="15" fill="rgb(210,66,33)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="431.50"></text></g><g><title>keccak::keccak_p (9 samples, 0.05%)</title><rect x="25.6364%" y="405" width="0.0464%" height="15" fill="rgb(209,189,4)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="415.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (9 samples, 0.05%)</title><rect x="25.6364%" y="389" width="0.0464%" height="15" fill="rgb(214,107,37)" fg:x="4975" fg:w="9"/><text x="25.8864%" y="399.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_delegated (39 samples, 0.20%)</title><rect x="25.4973%" y="629" width="0.2010%" height="15" fill="rgb(245,88,54)" fg:x="4948" fg:w="39"/><text x="25.7473%" y="639.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (39 samples, 0.20%)</title><rect x="25.4973%" y="613" width="0.2010%" height="15" fill="rgb(205,146,20)" fg:x="4948" fg:w="39"/><text x="25.7473%" y="623.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (39 samples, 0.20%)</title><rect x="25.4973%" y="597" width="0.2010%" height="15" fill="rgb(220,161,25)" fg:x="4948" fg:w="39"/><text x="25.7473%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.01%)</title><rect x="25.6879%" y="581" width="0.0103%" height="15" fill="rgb(215,152,15)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.01%)</title><rect x="25.6879%" y="565" width="0.0103%" height="15" fill="rgb(233,192,44)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.01%)</title><rect x="25.6879%" y="549" width="0.0103%" height="15" fill="rgb(240,170,46)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="25.6879%" y="533" width="0.0103%" height="15" fill="rgb(207,104,33)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="25.6879%" y="517" width="0.0103%" height="15" fill="rgb(219,21,39)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="25.6879%" y="501" width="0.0103%" height="15" fill="rgb(214,133,29)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.01%)</title><rect x="25.6879%" y="485" width="0.0103%" height="15" fill="rgb(226,93,6)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.01%)</title><rect x="25.6879%" y="469" width="0.0103%" height="15" fill="rgb(252,222,34)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="25.6879%" y="453" width="0.0103%" height="15" fill="rgb(252,92,48)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="25.6879%" y="437" width="0.0103%" height="15" fill="rgb(245,223,24)" fg:x="4985" fg:w="2"/><text x="25.9379%" y="447.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register::{{closure}} (51 samples, 0.26%)</title><rect x="25.4612%" y="709" width="0.2628%" height="15" fill="rgb(205,176,3)" fg:x="4941" fg:w="51"/><text x="25.7112%" y="719.50"></text></g><g><title>zilliqa::precompiles::scilla::scilla_call_handle_register::{{closure}} (48 samples, 0.25%)</title><rect x="25.4767%" y="693" width="0.2473%" height="15" fill="rgb(235,151,15)" fg:x="4944" fg:w="48"/><text x="25.7267%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (48 samples, 0.25%)</title><rect x="25.4767%" y="677" width="0.2473%" height="15" fill="rgb(237,209,11)" fg:x="4944" fg:w="48"/><text x="25.7267%" y="687.50"></text></g><g><title>revm::handler::mainnet::execution::call (48 samples, 0.25%)</title><rect x="25.4767%" y="661" width="0.2473%" height="15" fill="rgb(243,227,24)" fg:x="4944" fg:w="48"/><text x="25.7267%" y="671.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::make_call_frame (46 samples, 0.24%)</title><rect x="25.4870%" y="645" width="0.2370%" height="15" fill="rgb(239,193,16)" fg:x="4946" fg:w="46"/><text x="25.7370%" y="655.50"></text></g><g><title>revm_primitives::state::AccountInfo::code_hash (4 samples, 0.02%)</title><rect x="25.7034%" y="629" width="0.0206%" height="15" fill="rgb(231,27,9)" fg:x="4988" fg:w="4"/><text x="25.9534%" y="639.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (173 samples, 0.89%)</title><rect x="24.8428%" y="741" width="0.8915%" height="15" fill="rgb(219,169,10)" fg:x="4821" fg:w="173"/><text x="25.0928%" y="751.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (111 samples, 0.57%)</title><rect x="25.1623%" y="725" width="0.5720%" height="15" fill="rgb(244,229,43)" fg:x="4883" fg:w="111"/><text x="25.4123%" y="735.50"></text></g><g><title>revm_interpreter::interpreter_action::call_inputs::CallInputs::new_boxed (2 samples, 0.01%)</title><rect x="25.7240%" y="709" width="0.0103%" height="15" fill="rgb(254,38,20)" fg:x="4992" fg:w="2"/><text x="25.9740%" y="719.50"></text></g><g><title>zilliqa::crypto::HashBuilder::finalize (6 samples, 0.03%)</title><rect x="25.7343%" y="741" width="0.0309%" height="15" fill="rgb(250,47,30)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="751.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (6 samples, 0.03%)</title><rect x="25.7343%" y="725" width="0.0309%" height="15" fill="rgb(224,124,36)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="735.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (6 samples, 0.03%)</title><rect x="25.7343%" y="709" width="0.0309%" height="15" fill="rgb(246,68,51)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="719.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (6 samples, 0.03%)</title><rect x="25.7343%" y="693" width="0.0309%" height="15" fill="rgb(253,43,49)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="703.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (6 samples, 0.03%)</title><rect x="25.7343%" y="677" width="0.0309%" height="15" fill="rgb(219,54,36)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="687.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (6 samples, 0.03%)</title><rect x="25.7343%" y="661" width="0.0309%" height="15" fill="rgb(227,133,34)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="671.50"></text></g><g><title>keccak::p1600 (6 samples, 0.03%)</title><rect x="25.7343%" y="645" width="0.0309%" height="15" fill="rgb(247,227,15)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="655.50"></text></g><g><title>keccak::keccak_p (6 samples, 0.03%)</title><rect x="25.7343%" y="629" width="0.0309%" height="15" fill="rgb(229,96,14)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="639.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (6 samples, 0.03%)</title><rect x="25.7343%" y="613" width="0.0309%" height="15" fill="rgb(220,79,17)" fg:x="4994" fg:w="6"/><text x="25.9843%" y="623.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_transaction (621 samples, 3.20%)</title><rect x="22.5755%" y="805" width="3.2000%" height="15" fill="rgb(205,131,53)" fg:x="4381" fg:w="621"/><text x="22.8255%" y="815.50">zil..</text></g><g><title>zilliqa::consensus::Consensus::apply_transaction_at (621 samples, 3.20%)</title><rect x="22.5755%" y="789" width="3.2000%" height="15" fill="rgb(209,50,29)" fg:x="4381" fg:w="621"/><text x="22.8255%" y="799.50">zil..</text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction (618 samples, 3.18%)</title><rect x="22.5910%" y="773" width="3.1846%" height="15" fill="rgb(245,86,46)" fg:x="4384" fg:w="618"/><text x="22.8410%" y="783.50">zil..</text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (456 samples, 2.35%)</title><rect x="23.4257%" y="757" width="2.3498%" height="15" fill="rgb(235,66,46)" fg:x="4546" fg:w="456"/><text x="23.6757%" y="767.50">z..</text></g><g><title>zilliqa::crypto::HashBuilder::with (2 samples, 0.01%)</title><rect x="25.7652%" y="741" width="0.0103%" height="15" fill="rgb(232,148,31)" fg:x="5000" fg:w="2"/><text x="26.0152%" y="751.50"></text></g><g><title>Unknown (2 samples, 0.01%)</title><rect x="25.7652%" y="725" width="0.0103%" height="15" fill="rgb(217,149,8)" fg:x="5000" fg:w="2"/><text x="26.0152%" y="735.50"></text></g><g><title>doWalCallbacks (3 samples, 0.02%)</title><rect x="25.7807%" y="533" width="0.0155%" height="15" fill="rgb(209,183,11)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="543.50"></text></g><g><title>sqlite3WalDefaultHook (3 samples, 0.02%)</title><rect x="25.7807%" y="517" width="0.0155%" height="15" fill="rgb(208,55,20)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="527.50"></text></g><g><title>sqlite3WalDefaultHook (3 samples, 0.02%)</title><rect x="25.7807%" y="501" width="0.0155%" height="15" fill="rgb(218,39,14)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="511.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (3 samples, 0.02%)</title><rect x="25.7807%" y="485" width="0.0155%" height="15" fill="rgb(216,169,33)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="495.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (3 samples, 0.02%)</title><rect x="25.7807%" y="469" width="0.0155%" height="15" fill="rgb(233,80,24)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="479.50"></text></g><g><title>sqlite3Checkpoint (3 samples, 0.02%)</title><rect x="25.7807%" y="453" width="0.0155%" height="15" fill="rgb(213,179,31)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="463.50"></text></g><g><title>sqlite3BtreeCheckpoint (3 samples, 0.02%)</title><rect x="25.7807%" y="437" width="0.0155%" height="15" fill="rgb(209,19,5)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="447.50"></text></g><g><title>sqlite3PagerCheckpoint (3 samples, 0.02%)</title><rect x="25.7807%" y="421" width="0.0155%" height="15" fill="rgb(219,18,35)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="431.50"></text></g><g><title>sqlite3WalCheckpoint (3 samples, 0.02%)</title><rect x="25.7807%" y="405" width="0.0155%" height="15" fill="rgb(209,169,16)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="415.50"></text></g><g><title>walCheckpoint (3 samples, 0.02%)</title><rect x="25.7807%" y="389" width="0.0155%" height="15" fill="rgb(245,90,51)" fg:x="5003" fg:w="3"/><text x="26.0307%" y="399.50"></text></g><g><title>sqlite3OsSync (2 samples, 0.01%)</title><rect x="25.7858%" y="373" width="0.0103%" height="15" fill="rgb(220,99,45)" fg:x="5004" fg:w="2"/><text x="26.0358%" y="383.50"></text></g><g><title>sqlite3OsSync (2 samples, 0.01%)</title><rect x="25.7858%" y="357" width="0.0103%" height="15" fill="rgb(249,89,25)" fg:x="5004" fg:w="2"/><text x="26.0358%" y="367.50"></text></g><g><title>unixSync (2 samples, 0.01%)</title><rect x="25.7858%" y="341" width="0.0103%" height="15" fill="rgb(239,193,0)" fg:x="5004" fg:w="2"/><text x="26.0358%" y="351.50"></text></g><g><title>full_fsync (2 samples, 0.01%)</title><rect x="25.7858%" y="325" width="0.0103%" height="15" fill="rgb(231,126,1)" fg:x="5004" fg:w="2"/><text x="26.0358%" y="335.50"></text></g><g><title>__GI_fsync (2 samples, 0.01%)</title><rect x="25.7858%" y="309" width="0.0103%" height="15" fill="rgb(243,166,3)" fg:x="5004" fg:w="2"/><text x="26.0358%" y="319.50"></text></g><g><title>zilliqa::consensus::Consensus::add_block (8 samples, 0.04%)</title><rect x="25.7807%" y="789" width="0.0412%" height="15" fill="rgb(223,22,34)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="799.50"></text></g><g><title>zilliqa::block_store::BlockStore::process_block (8 samples, 0.04%)</title><rect x="25.7807%" y="773" width="0.0412%" height="15" fill="rgb(251,52,51)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="783.50"></text></g><g><title>zilliqa::db::Db::insert_block (8 samples, 0.04%)</title><rect x="25.7807%" y="757" width="0.0412%" height="15" fill="rgb(221,165,28)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="767.50"></text></g><g><title>zilliqa::db::Db::insert_block_with_db_tx (8 samples, 0.04%)</title><rect x="25.7807%" y="741" width="0.0412%" height="15" fill="rgb(218,121,47)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="751.50"></text></g><g><title>zilliqa::db::Db::insert_block_with_hash_with_db_tx (8 samples, 0.04%)</title><rect x="25.7807%" y="725" width="0.0412%" height="15" fill="rgb(209,120,9)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="735.50"></text></g><g><title>rusqlite::Connection::execute (8 samples, 0.04%)</title><rect x="25.7807%" y="709" width="0.0412%" height="15" fill="rgb(236,68,12)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.04%)</title><rect x="25.7807%" y="693" width="0.0412%" height="15" fill="rgb(225,194,26)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="703.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (8 samples, 0.04%)</title><rect x="25.7807%" y="677" width="0.0412%" height="15" fill="rgb(231,84,39)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.04%)</title><rect x="25.7807%" y="661" width="0.0412%" height="15" fill="rgb(210,11,45)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="671.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (8 samples, 0.04%)</title><rect x="25.7807%" y="645" width="0.0412%" height="15" fill="rgb(224,54,52)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::execute (8 samples, 0.04%)</title><rect x="25.7807%" y="629" width="0.0412%" height="15" fill="rgb(238,102,14)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="639.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (8 samples, 0.04%)</title><rect x="25.7807%" y="613" width="0.0412%" height="15" fill="rgb(243,160,52)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="623.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (8 samples, 0.04%)</title><rect x="25.7807%" y="597" width="0.0412%" height="15" fill="rgb(216,114,19)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="607.50"></text></g><g><title>sqlite3_step (8 samples, 0.04%)</title><rect x="25.7807%" y="581" width="0.0412%" height="15" fill="rgb(244,166,37)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="591.50"></text></g><g><title>sqlite3_step (8 samples, 0.04%)</title><rect x="25.7807%" y="565" width="0.0412%" height="15" fill="rgb(246,29,44)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="575.50"></text></g><g><title>sqlite3Step (8 samples, 0.04%)</title><rect x="25.7807%" y="549" width="0.0412%" height="15" fill="rgb(215,56,53)" fg:x="5003" fg:w="8"/><text x="26.0307%" y="559.50"></text></g><g><title>sqlite3VdbeExec (5 samples, 0.03%)</title><rect x="25.7961%" y="533" width="0.0258%" height="15" fill="rgb(217,60,2)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="543.50"></text></g><g><title>sqlite3VdbeHalt (5 samples, 0.03%)</title><rect x="25.7961%" y="517" width="0.0258%" height="15" fill="rgb(207,26,24)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="527.50"></text></g><g><title>vdbeCommit (5 samples, 0.03%)</title><rect x="25.7961%" y="501" width="0.0258%" height="15" fill="rgb(252,210,15)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="511.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (5 samples, 0.03%)</title><rect x="25.7961%" y="485" width="0.0258%" height="15" fill="rgb(253,209,26)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="495.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (5 samples, 0.03%)</title><rect x="25.7961%" y="469" width="0.0258%" height="15" fill="rgb(238,170,14)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="479.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (5 samples, 0.03%)</title><rect x="25.7961%" y="453" width="0.0258%" height="15" fill="rgb(216,178,15)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="463.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (5 samples, 0.03%)</title><rect x="25.7961%" y="437" width="0.0258%" height="15" fill="rgb(250,197,2)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="447.50"></text></g><g><title>pagerWalFrames (5 samples, 0.03%)</title><rect x="25.7961%" y="421" width="0.0258%" height="15" fill="rgb(212,70,42)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="431.50"></text></g><g><title>sqlite3WalFrames (5 samples, 0.03%)</title><rect x="25.7961%" y="405" width="0.0258%" height="15" fill="rgb(227,213,9)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="415.50"></text></g><g><title>walFrames (5 samples, 0.03%)</title><rect x="25.7961%" y="389" width="0.0258%" height="15" fill="rgb(245,99,25)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="399.50"></text></g><g><title>walLimitSize (5 samples, 0.03%)</title><rect x="25.7961%" y="373" width="0.0258%" height="15" fill="rgb(250,82,29)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="383.50"></text></g><g><title>sqlite3OsTruncate (5 samples, 0.03%)</title><rect x="25.7961%" y="357" width="0.0258%" height="15" fill="rgb(241,226,54)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="367.50"></text></g><g><title>unixTruncate (5 samples, 0.03%)</title><rect x="25.7961%" y="341" width="0.0258%" height="15" fill="rgb(221,99,41)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="351.50"></text></g><g><title>robust_ftruncate (5 samples, 0.03%)</title><rect x="25.7961%" y="325" width="0.0258%" height="15" fill="rgb(213,90,21)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="335.50"></text></g><g><title>__ftruncate64 (5 samples, 0.03%)</title><rect x="25.7961%" y="309" width="0.0258%" height="15" fill="rgb(205,208,24)" fg:x="5006" fg:w="5"/><text x="26.0461%" y="319.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.01%)</title><rect x="25.8219%" y="485" width="0.0103%" height="15" fill="rgb(246,31,12)" fg:x="5011" fg:w="2"/><text x="26.0719%" y="495.50"></text></g><g><title>unixRead (2 samples, 0.01%)</title><rect x="25.8219%" y="469" width="0.0103%" height="15" fill="rgb(213,154,6)" fg:x="5011" fg:w="2"/><text x="26.0719%" y="479.50"></text></g><g><title>seekAndRead (2 samples, 0.01%)</title><rect x="25.8219%" y="453" width="0.0103%" height="15" fill="rgb(222,163,29)" fg:x="5011" fg:w="2"/><text x="26.0719%" y="463.50"></text></g><g><title>__libc_pread64 (2 samples, 0.01%)</title><rect x="25.8219%" y="437" width="0.0103%" height="15" fill="rgb(227,201,8)" fg:x="5011" fg:w="2"/><text x="26.0719%" y="447.50"></text></g><g><title>__libc_pread64 (2 samples, 0.01%)</title><rect x="25.8219%" y="421" width="0.0103%" height="15" fill="rgb(233,9,32)" fg:x="5011" fg:w="2"/><text x="26.0719%" y="431.50"></text></g><g><title>sqlite3OsSync (9 samples, 0.05%)</title><rect x="25.8322%" y="485" width="0.0464%" height="15" fill="rgb(217,54,24)" fg:x="5013" fg:w="9"/><text x="26.0822%" y="495.50"></text></g><g><title>sqlite3OsSync (9 samples, 0.05%)</title><rect x="25.8322%" y="469" width="0.0464%" height="15" fill="rgb(235,192,0)" fg:x="5013" fg:w="9"/><text x="26.0822%" y="479.50"></text></g><g><title>unixSync (9 samples, 0.05%)</title><rect x="25.8322%" y="453" width="0.0464%" height="15" fill="rgb(235,45,9)" fg:x="5013" fg:w="9"/><text x="26.0822%" y="463.50"></text></g><g><title>full_fsync (9 samples, 0.05%)</title><rect x="25.8322%" y="437" width="0.0464%" height="15" fill="rgb(246,42,40)" fg:x="5013" fg:w="9"/><text x="26.0822%" y="447.50"></text></g><g><title>__GI_fsync (9 samples, 0.05%)</title><rect x="25.8322%" y="421" width="0.0464%" height="15" fill="rgb(248,111,24)" fg:x="5013" fg:w="9"/><text x="26.0822%" y="431.50"></text></g><g><title>doWalCallbacks (16 samples, 0.08%)</title><rect x="25.8219%" y="645" width="0.0824%" height="15" fill="rgb(249,65,22)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="655.50"></text></g><g><title>sqlite3WalDefaultHook (16 samples, 0.08%)</title><rect x="25.8219%" y="629" width="0.0824%" height="15" fill="rgb(238,111,51)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="639.50"></text></g><g><title>sqlite3WalDefaultHook (16 samples, 0.08%)</title><rect x="25.8219%" y="613" width="0.0824%" height="15" fill="rgb(250,118,22)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="623.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (16 samples, 0.08%)</title><rect x="25.8219%" y="597" width="0.0824%" height="15" fill="rgb(234,84,26)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="607.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (16 samples, 0.08%)</title><rect x="25.8219%" y="581" width="0.0824%" height="15" fill="rgb(243,172,12)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="591.50"></text></g><g><title>sqlite3Checkpoint (16 samples, 0.08%)</title><rect x="25.8219%" y="565" width="0.0824%" height="15" fill="rgb(236,150,49)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="575.50"></text></g><g><title>sqlite3BtreeCheckpoint (16 samples, 0.08%)</title><rect x="25.8219%" y="549" width="0.0824%" height="15" fill="rgb(225,197,26)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="559.50"></text></g><g><title>sqlite3PagerCheckpoint (16 samples, 0.08%)</title><rect x="25.8219%" y="533" width="0.0824%" height="15" fill="rgb(214,17,42)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="543.50"></text></g><g><title>sqlite3WalCheckpoint (16 samples, 0.08%)</title><rect x="25.8219%" y="517" width="0.0824%" height="15" fill="rgb(224,165,40)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="527.50"></text></g><g><title>walCheckpoint (16 samples, 0.08%)</title><rect x="25.8219%" y="501" width="0.0824%" height="15" fill="rgb(246,100,4)" fg:x="5011" fg:w="16"/><text x="26.0719%" y="511.50"></text></g><g><title>sqlite3OsWrite (5 samples, 0.03%)</title><rect x="25.8786%" y="485" width="0.0258%" height="15" fill="rgb(222,103,0)" fg:x="5022" fg:w="5"/><text x="26.1286%" y="495.50"></text></g><g><title>unixWrite (5 samples, 0.03%)</title><rect x="25.8786%" y="469" width="0.0258%" height="15" fill="rgb(227,189,26)" fg:x="5022" fg:w="5"/><text x="26.1286%" y="479.50"></text></g><g><title>seekAndWrite (5 samples, 0.03%)</title><rect x="25.8786%" y="453" width="0.0258%" height="15" fill="rgb(214,202,17)" fg:x="5022" fg:w="5"/><text x="26.1286%" y="463.50"></text></g><g><title>seekAndWriteFd (5 samples, 0.03%)</title><rect x="25.8786%" y="437" width="0.0258%" height="15" fill="rgb(229,111,3)" fg:x="5022" fg:w="5"/><text x="26.1286%" y="447.50"></text></g><g><title>__libc_pwrite64 (5 samples, 0.03%)</title><rect x="25.8786%" y="421" width="0.0258%" height="15" fill="rgb(229,172,15)" fg:x="5022" fg:w="5"/><text x="26.1286%" y="431.50"></text></g><g><title>__libc_pwrite64 (5 samples, 0.03%)</title><rect x="25.8786%" y="405" width="0.0258%" height="15" fill="rgb(230,224,35)" fg:x="5022" fg:w="5"/><text x="26.1286%" y="415.50"></text></g><g><title>sqlite3OsRead (4 samples, 0.02%)</title><rect x="25.9044%" y="469" width="0.0206%" height="15" fill="rgb(251,141,6)" fg:x="5027" fg:w="4"/><text x="26.1544%" y="479.50"></text></g><g><title>unixRead (4 samples, 0.02%)</title><rect x="25.9044%" y="453" width="0.0206%" height="15" fill="rgb(225,208,6)" fg:x="5027" fg:w="4"/><text x="26.1544%" y="463.50"></text></g><g><title>seekAndRead (4 samples, 0.02%)</title><rect x="25.9044%" y="437" width="0.0206%" height="15" fill="rgb(246,181,16)" fg:x="5027" fg:w="4"/><text x="26.1544%" y="447.50"></text></g><g><title>__libc_pread64 (4 samples, 0.02%)</title><rect x="25.9044%" y="421" width="0.0206%" height="15" fill="rgb(227,129,36)" fg:x="5027" fg:w="4"/><text x="26.1544%" y="431.50"></text></g><g><title>__libc_pread64 (4 samples, 0.02%)</title><rect x="25.9044%" y="405" width="0.0206%" height="15" fill="rgb(248,117,24)" fg:x="5027" fg:w="4"/><text x="26.1544%" y="415.50"></text></g><g><title>walRewriteChecksums (5 samples, 0.03%)</title><rect x="25.9044%" y="485" width="0.0258%" height="15" fill="rgb(214,185,35)" fg:x="5027" fg:w="5"/><text x="26.1544%" y="495.50"></text></g><g><title>rusqlite::transaction::Transaction::commit (24 samples, 0.12%)</title><rect x="25.8219%" y="773" width="0.1237%" height="15" fill="rgb(236,150,34)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="783.50"></text></g><g><title>rusqlite::transaction::Transaction::commit_ (24 samples, 0.12%)</title><rect x="25.8219%" y="757" width="0.1237%" height="15" fill="rgb(243,228,27)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="767.50"></text></g><g><title>rusqlite::Connection::execute_batch (24 samples, 0.12%)</title><rect x="25.8219%" y="741" width="0.1237%" height="15" fill="rgb(245,77,44)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="751.50"></text></g><g><title>rusqlite::statement::Statement::step (24 samples, 0.12%)</title><rect x="25.8219%" y="725" width="0.1237%" height="15" fill="rgb(235,214,42)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="735.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (24 samples, 0.12%)</title><rect x="25.8219%" y="709" width="0.1237%" height="15" fill="rgb(221,74,3)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="719.50"></text></g><g><title>sqlite3_step (24 samples, 0.12%)</title><rect x="25.8219%" y="693" width="0.1237%" height="15" fill="rgb(206,121,29)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="703.50"></text></g><g><title>sqlite3_step (24 samples, 0.12%)</title><rect x="25.8219%" y="677" width="0.1237%" height="15" fill="rgb(249,131,53)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="687.50"></text></g><g><title>sqlite3Step (24 samples, 0.12%)</title><rect x="25.8219%" y="661" width="0.1237%" height="15" fill="rgb(236,170,29)" fg:x="5011" fg:w="24"/><text x="26.0719%" y="671.50"></text></g><g><title>sqlite3VdbeExec (8 samples, 0.04%)</title><rect x="25.9044%" y="645" width="0.0412%" height="15" fill="rgb(247,96,15)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="655.50"></text></g><g><title>sqlite3VdbeHalt (8 samples, 0.04%)</title><rect x="25.9044%" y="629" width="0.0412%" height="15" fill="rgb(211,210,7)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="639.50"></text></g><g><title>vdbeCommit (8 samples, 0.04%)</title><rect x="25.9044%" y="613" width="0.0412%" height="15" fill="rgb(240,88,50)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="623.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (8 samples, 0.04%)</title><rect x="25.9044%" y="597" width="0.0412%" height="15" fill="rgb(209,229,26)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="607.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (8 samples, 0.04%)</title><rect x="25.9044%" y="581" width="0.0412%" height="15" fill="rgb(210,68,23)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="591.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (8 samples, 0.04%)</title><rect x="25.9044%" y="565" width="0.0412%" height="15" fill="rgb(229,180,13)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="575.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (8 samples, 0.04%)</title><rect x="25.9044%" y="549" width="0.0412%" height="15" fill="rgb(236,53,44)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="559.50"></text></g><g><title>pagerWalFrames (8 samples, 0.04%)</title><rect x="25.9044%" y="533" width="0.0412%" height="15" fill="rgb(244,214,29)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="543.50"></text></g><g><title>sqlite3WalFrames (8 samples, 0.04%)</title><rect x="25.9044%" y="517" width="0.0412%" height="15" fill="rgb(220,75,29)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="527.50"></text></g><g><title>walFrames (8 samples, 0.04%)</title><rect x="25.9044%" y="501" width="0.0412%" height="15" fill="rgb(214,183,37)" fg:x="5027" fg:w="8"/><text x="26.1544%" y="511.50"></text></g><g><title>walWriteOneFrame (3 samples, 0.02%)</title><rect x="25.9301%" y="485" width="0.0155%" height="15" fill="rgb(239,117,29)" fg:x="5032" fg:w="3"/><text x="26.1801%" y="495.50"></text></g><g><title>unixWrite (3 samples, 0.02%)</title><rect x="25.9301%" y="469" width="0.0155%" height="15" fill="rgb(237,171,35)" fg:x="5032" fg:w="3"/><text x="26.1801%" y="479.50"></text></g><g><title>seekAndWrite (3 samples, 0.02%)</title><rect x="25.9301%" y="453" width="0.0155%" height="15" fill="rgb(229,178,53)" fg:x="5032" fg:w="3"/><text x="26.1801%" y="463.50"></text></g><g><title>seekAndWriteFd (3 samples, 0.02%)</title><rect x="25.9301%" y="437" width="0.0155%" height="15" fill="rgb(210,102,19)" fg:x="5032" fg:w="3"/><text x="26.1801%" y="447.50"></text></g><g><title>__libc_pwrite64 (3 samples, 0.02%)</title><rect x="25.9301%" y="421" width="0.0155%" height="15" fill="rgb(235,127,22)" fg:x="5032" fg:w="3"/><text x="26.1801%" y="431.50"></text></g><g><title>__libc_pwrite64 (3 samples, 0.02%)</title><rect x="25.9301%" y="405" width="0.0155%" height="15" fill="rgb(244,31,31)" fg:x="5032" fg:w="3"/><text x="26.1801%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (4 samples, 0.02%)</title><rect x="25.9559%" y="693" width="0.0206%" height="15" fill="rgb(231,43,21)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="703.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="25.9559%" y="677" width="0.0206%" height="15" fill="rgb(217,131,35)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="687.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (4 samples, 0.02%)</title><rect x="25.9559%" y="661" width="0.0206%" height="15" fill="rgb(221,149,4)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="671.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (4 samples, 0.02%)</title><rect x="25.9559%" y="645" width="0.0206%" height="15" fill="rgb(232,170,28)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="655.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (4 samples, 0.02%)</title><rect x="25.9559%" y="629" width="0.0206%" height="15" fill="rgb(238,56,10)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="639.50"></text></g><g><title>sqlite3_finalize (4 samples, 0.02%)</title><rect x="25.9559%" y="613" width="0.0206%" height="15" fill="rgb(235,196,14)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="623.50"></text></g><g><title>sqlite3VdbeDelete (4 samples, 0.02%)</title><rect x="25.9559%" y="597" width="0.0206%" height="15" fill="rgb(216,45,48)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="607.50"></text></g><g><title>sqlite3VdbeClearObject (4 samples, 0.02%)</title><rect x="25.9559%" y="581" width="0.0206%" height="15" fill="rgb(238,213,17)" fg:x="5037" fg:w="4"/><text x="26.2059%" y="591.50"></text></g><g><title>vdbeFreeOpArray (3 samples, 0.02%)</title><rect x="25.9610%" y="565" width="0.0155%" height="15" fill="rgb(212,13,2)" fg:x="5038" fg:w="3"/><text x="26.2110%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="25.9765%" y="613" width="0.0206%" height="15" fill="rgb(240,114,20)" fg:x="5041" fg:w="4"/><text x="26.2265%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::types::to_sql::ToSqlOutput&gt; (6 samples, 0.03%)</title><rect x="26.0023%" y="597" width="0.0309%" height="15" fill="rgb(228,41,40)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::types::value::Value&gt; (6 samples, 0.03%)</title><rect x="26.0023%" y="581" width="0.0309%" height="15" fill="rgb(244,132,35)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="26.0023%" y="565" width="0.0309%" height="15" fill="rgb(253,189,4)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="26.0023%" y="549" width="0.0309%" height="15" fill="rgb(224,37,19)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="26.0023%" y="533" width="0.0309%" height="15" fill="rgb(235,223,18)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="543.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.03%)</title><rect x="26.0023%" y="517" width="0.0309%" height="15" fill="rgb(235,163,25)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.03%)</title><rect x="26.0023%" y="501" width="0.0309%" height="15" fill="rgb(217,145,28)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="511.50"></text></g><g><title>__GI___libc_free (6 samples, 0.03%)</title><rect x="26.0023%" y="485" width="0.0309%" height="15" fill="rgb(223,223,32)" fg:x="5046" fg:w="6"/><text x="26.2523%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="26.0229%" y="469" width="0.0103%" height="15" fill="rgb(227,189,39)" fg:x="5050" fg:w="2"/><text x="26.2729%" y="479.50"></text></g><g><title>bindText (3 samples, 0.02%)</title><rect x="26.0332%" y="565" width="0.0155%" height="15" fill="rgb(248,10,22)" fg:x="5052" fg:w="3"/><text x="26.2832%" y="575.50"></text></g><g><title>sqlite3VdbeMemSetStr (3 samples, 0.02%)</title><rect x="26.0332%" y="549" width="0.0155%" height="15" fill="rgb(248,46,39)" fg:x="5052" fg:w="3"/><text x="26.2832%" y="559.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (12 samples, 0.06%)</title><rect x="25.9971%" y="613" width="0.0618%" height="15" fill="rgb(248,113,48)" fg:x="5045" fg:w="12"/><text x="26.2471%" y="623.50"></text></g><g><title>sqlite3_bind_blob (5 samples, 0.03%)</title><rect x="26.0332%" y="597" width="0.0258%" height="15" fill="rgb(245,16,25)" fg:x="5052" fg:w="5"/><text x="26.2832%" y="607.50"></text></g><g><title>bindText (5 samples, 0.03%)</title><rect x="26.0332%" y="581" width="0.0258%" height="15" fill="rgb(249,152,16)" fg:x="5052" fg:w="5"/><text x="26.2832%" y="591.50"></text></g><g><title>vdbeUnbind (2 samples, 0.01%)</title><rect x="26.0486%" y="565" width="0.0103%" height="15" fill="rgb(250,16,1)" fg:x="5055" fg:w="2"/><text x="26.2986%" y="575.50"></text></g><g><title>vdbeUnbind (2 samples, 0.01%)</title><rect x="26.0486%" y="549" width="0.0103%" height="15" fill="rgb(249,138,3)" fg:x="5055" fg:w="2"/><text x="26.2986%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (4 samples, 0.02%)</title><rect x="26.0590%" y="565" width="0.0206%" height="15" fill="rgb(227,71,41)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 0.02%)</title><rect x="26.0590%" y="549" width="0.0206%" height="15" fill="rgb(209,184,23)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (4 samples, 0.02%)</title><rect x="26.0590%" y="533" width="0.0206%" height="15" fill="rgb(223,215,31)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (4 samples, 0.02%)</title><rect x="26.0590%" y="517" width="0.0206%" height="15" fill="rgb(210,146,28)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (4 samples, 0.02%)</title><rect x="26.0590%" y="501" width="0.0206%" height="15" fill="rgb(209,183,41)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (4 samples, 0.02%)</title><rect x="26.0590%" y="485" width="0.0206%" height="15" fill="rgb(209,224,45)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (4 samples, 0.02%)</title><rect x="26.0590%" y="469" width="0.0206%" height="15" fill="rgb(224,209,51)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="479.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="26.0590%" y="453" width="0.0206%" height="15" fill="rgb(223,17,39)" fg:x="5057" fg:w="4"/><text x="26.3090%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.06%)</title><rect x="26.0796%" y="485" width="0.0567%" height="15" fill="rgb(234,204,37)" fg:x="5061" fg:w="11"/><text x="26.3296%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.06%)</title><rect x="26.0796%" y="469" width="0.0567%" height="15" fill="rgb(236,120,5)" fg:x="5061" fg:w="11"/><text x="26.3296%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (15 samples, 0.08%)</title><rect x="26.0796%" y="549" width="0.0773%" height="15" fill="rgb(248,97,27)" fg:x="5061" fg:w="15"/><text x="26.3296%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.08%)</title><rect x="26.0796%" y="533" width="0.0773%" height="15" fill="rgb(240,66,17)" fg:x="5061" fg:w="15"/><text x="26.3296%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.08%)</title><rect x="26.0796%" y="517" width="0.0773%" height="15" fill="rgb(210,79,3)" fg:x="5061" fg:w="15"/><text x="26.3296%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.08%)</title><rect x="26.0796%" y="501" width="0.0773%" height="15" fill="rgb(214,176,27)" fg:x="5061" fg:w="15"/><text x="26.3296%" y="511.50"></text></g><g><title>&lt;rusqlite::util::small_cstr::SmallCString as core::cmp::Ord&gt;::cmp (4 samples, 0.02%)</title><rect x="26.1362%" y="485" width="0.0206%" height="15" fill="rgb(235,185,3)" fg:x="5072" fg:w="4"/><text x="26.3862%" y="495.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.02%)</title><rect x="26.1362%" y="469" width="0.0206%" height="15" fill="rgb(227,24,12)" fg:x="5072" fg:w="4"/><text x="26.3862%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (4 samples, 0.02%)</title><rect x="26.1362%" y="453" width="0.0206%" height="15" fill="rgb(252,169,48)" fg:x="5072" fg:w="4"/><text x="26.3862%" y="463.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (4 samples, 0.02%)</title><rect x="26.1362%" y="437" width="0.0206%" height="15" fill="rgb(212,65,1)" fg:x="5072" fg:w="4"/><text x="26.3862%" y="447.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="26.1362%" y="421" width="0.0206%" height="15" fill="rgb(242,39,24)" fg:x="5072" fg:w="4"/><text x="26.3862%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (18 samples, 0.09%)</title><rect x="26.0796%" y="565" width="0.0928%" height="15" fill="rgb(249,32,23)" fg:x="5061" fg:w="18"/><text x="26.3296%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.02%)</title><rect x="26.1569%" y="549" width="0.0155%" height="15" fill="rgb(251,195,23)" fg:x="5076" fg:w="3"/><text x="26.4069%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.01%)</title><rect x="26.1620%" y="533" width="0.0103%" height="15" fill="rgb(236,174,8)" fg:x="5077" fg:w="2"/><text x="26.4120%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (2 samples, 0.01%)</title><rect x="26.1620%" y="517" width="0.0103%" height="15" fill="rgb(220,197,8)" fg:x="5077" fg:w="2"/><text x="26.4120%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (2 samples, 0.01%)</title><rect x="26.1620%" y="501" width="0.0103%" height="15" fill="rgb(240,108,37)" fg:x="5077" fg:w="2"/><text x="26.4120%" y="511.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (2 samples, 0.01%)</title><rect x="26.1620%" y="485" width="0.0103%" height="15" fill="rgb(232,176,24)" fg:x="5077" fg:w="2"/><text x="26.4120%" y="495.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::bind_parameter_index::{{closure}} (6 samples, 0.03%)</title><rect x="26.1723%" y="565" width="0.0309%" height="15" fill="rgb(243,35,29)" fg:x="5079" fg:w="6"/><text x="26.4223%" y="575.50"></text></g><g><title>sqlite3_bind_parameter_index (6 samples, 0.03%)</title><rect x="26.1723%" y="549" width="0.0309%" height="15" fill="rgb(210,37,18)" fg:x="5079" fg:w="6"/><text x="26.4223%" y="559.50"></text></g><g><title>sqlite3VdbeParameterIndex (6 samples, 0.03%)</title><rect x="26.1723%" y="533" width="0.0309%" height="15" fill="rgb(224,184,40)" fg:x="5079" fg:w="6"/><text x="26.4223%" y="543.50"></text></g><g><title>sqlite3VdbeParameterIndex (6 samples, 0.03%)</title><rect x="26.1723%" y="517" width="0.0309%" height="15" fill="rgb(236,39,29)" fg:x="5079" fg:w="6"/><text x="26.4223%" y="527.50"></text></g><g><title>sqlite3VListNameToNum (6 samples, 0.03%)</title><rect x="26.1723%" y="501" width="0.0309%" height="15" fill="rgb(232,48,39)" fg:x="5079" fg:w="6"/><text x="26.4223%" y="511.50"></text></g><g><title>__strncmp_avx2 (5 samples, 0.03%)</title><rect x="26.1775%" y="485" width="0.0258%" height="15" fill="rgb(236,34,42)" fg:x="5080" fg:w="5"/><text x="26.4275%" y="495.50"></text></g><g><title>&lt;&amp;[(&amp;str,&amp;dyn rusqlite::types::to_sql::ToSql)] as rusqlite::params::Params&gt;::__bind_in (51 samples, 0.26%)</title><rect x="25.9765%" y="645" width="0.2628%" height="15" fill="rgb(243,106,37)" fg:x="5041" fg:w="51"/><text x="26.2265%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameters_named (51 samples, 0.26%)</title><rect x="25.9765%" y="629" width="0.2628%" height="15" fill="rgb(218,96,6)" fg:x="5041" fg:w="51"/><text x="26.2265%" y="639.50"></text></g><g><title>rusqlite::statement::Statement::parameter_index (35 samples, 0.18%)</title><rect x="26.0590%" y="613" width="0.1804%" height="15" fill="rgb(235,130,12)" fg:x="5057" fg:w="35"/><text x="26.3090%" y="623.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::bind_parameter_index (35 samples, 0.18%)</title><rect x="26.0590%" y="597" width="0.1804%" height="15" fill="rgb(231,95,0)" fg:x="5057" fg:w="35"/><text x="26.3090%" y="607.50"></text></g><g><title>rusqlite::util::param_cache::ParamIndexCache::get_or_insert_with (35 samples, 0.18%)</title><rect x="26.0590%" y="581" width="0.1804%" height="15" fill="rgb(228,12,23)" fg:x="5057" fg:w="35"/><text x="26.3090%" y="591.50"></text></g><g><title>rusqlite::util::small_cstr::SmallCString::new (7 samples, 0.04%)</title><rect x="26.2032%" y="565" width="0.0361%" height="15" fill="rgb(216,12,1)" fg:x="5085" fg:w="7"/><text x="26.4532%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::with_capacity (7 samples, 0.04%)</title><rect x="26.2032%" y="549" width="0.0361%" height="15" fill="rgb(219,59,3)" fg:x="5085" fg:w="7"/><text x="26.4532%" y="559.50"></text></g><g><title>sqlite3OsRead (173 samples, 0.89%)</title><rect x="26.3939%" y="469" width="0.8915%" height="15" fill="rgb(215,208,46)" fg:x="5122" fg:w="173"/><text x="26.6439%" y="479.50"></text></g><g><title>unixRead (173 samples, 0.89%)</title><rect x="26.3939%" y="453" width="0.8915%" height="15" fill="rgb(254,224,29)" fg:x="5122" fg:w="173"/><text x="26.6439%" y="463.50"></text></g><g><title>seekAndRead (173 samples, 0.89%)</title><rect x="26.3939%" y="437" width="0.8915%" height="15" fill="rgb(232,14,29)" fg:x="5122" fg:w="173"/><text x="26.6439%" y="447.50"></text></g><g><title>__libc_pread64 (173 samples, 0.89%)</title><rect x="26.3939%" y="421" width="0.8915%" height="15" fill="rgb(208,45,52)" fg:x="5122" fg:w="173"/><text x="26.6439%" y="431.50"></text></g><g><title>__libc_pread64 (173 samples, 0.89%)</title><rect x="26.3939%" y="405" width="0.8915%" height="15" fill="rgb(234,191,28)" fg:x="5122" fg:w="173"/><text x="26.6439%" y="415.50"></text></g><g><title>readDbPage (175 samples, 0.90%)</title><rect x="26.3939%" y="485" width="0.9018%" height="15" fill="rgb(244,67,43)" fg:x="5122" fg:w="175"/><text x="26.6439%" y="495.50"></text></g><g><title>sqlite3WalReadFrame (2 samples, 0.01%)</title><rect x="27.2854%" y="469" width="0.0103%" height="15" fill="rgb(236,189,24)" fg:x="5295" fg:w="2"/><text x="27.5354%" y="479.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.01%)</title><rect x="27.2854%" y="453" width="0.0103%" height="15" fill="rgb(239,214,33)" fg:x="5295" fg:w="2"/><text x="27.5354%" y="463.50"></text></g><g><title>unixRead (2 samples, 0.01%)</title><rect x="27.2854%" y="437" width="0.0103%" height="15" fill="rgb(226,176,41)" fg:x="5295" fg:w="2"/><text x="27.5354%" y="447.50"></text></g><g><title>seekAndRead (2 samples, 0.01%)</title><rect x="27.2854%" y="421" width="0.0103%" height="15" fill="rgb(248,47,8)" fg:x="5295" fg:w="2"/><text x="27.5354%" y="431.50"></text></g><g><title>sqlite3PcacheFetch (4 samples, 0.02%)</title><rect x="27.2957%" y="485" width="0.0206%" height="15" fill="rgb(218,81,44)" fg:x="5297" fg:w="4"/><text x="27.5457%" y="495.50"></text></g><g><title>pcache1Fetch (4 samples, 0.02%)</title><rect x="27.2957%" y="469" width="0.0206%" height="15" fill="rgb(213,98,6)" fg:x="5297" fg:w="4"/><text x="27.5457%" y="479.50"></text></g><g><title>pcache1FetchWithMutex (4 samples, 0.02%)</title><rect x="27.2957%" y="453" width="0.0206%" height="15" fill="rgb(222,85,22)" fg:x="5297" fg:w="4"/><text x="27.5457%" y="463.50"></text></g><g><title>getAndInitPage (262 samples, 1.35%)</title><rect x="26.3939%" y="533" width="1.3501%" height="15" fill="rgb(239,46,39)" fg:x="5122" fg:w="262"/><text x="26.6439%" y="543.50"></text></g><g><title>sqlite3PagerGet (262 samples, 1.35%)</title><rect x="26.3939%" y="517" width="1.3501%" height="15" fill="rgb(237,12,29)" fg:x="5122" fg:w="262"/><text x="26.6439%" y="527.50"></text></g><g><title>getPageNormal (262 samples, 1.35%)</title><rect x="26.3939%" y="501" width="1.3501%" height="15" fill="rgb(214,77,8)" fg:x="5122" fg:w="262"/><text x="26.6439%" y="511.50"></text></g><g><title>sqlite3PcacheFetchStress (83 samples, 0.43%)</title><rect x="27.3163%" y="485" width="0.4277%" height="15" fill="rgb(217,168,37)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="495.50"></text></g><g><title>pagerStress (83 samples, 0.43%)</title><rect x="27.3163%" y="469" width="0.4277%" height="15" fill="rgb(221,217,23)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="479.50"></text></g><g><title>pagerStress (83 samples, 0.43%)</title><rect x="27.3163%" y="453" width="0.4277%" height="15" fill="rgb(243,229,36)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="463.50"></text></g><g><title>pagerWalFrames (83 samples, 0.43%)</title><rect x="27.3163%" y="437" width="0.4277%" height="15" fill="rgb(251,163,40)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="447.50"></text></g><g><title>sqlite3WalFrames (83 samples, 0.43%)</title><rect x="27.3163%" y="421" width="0.4277%" height="15" fill="rgb(237,222,12)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="431.50"></text></g><g><title>walFrames (83 samples, 0.43%)</title><rect x="27.3163%" y="405" width="0.4277%" height="15" fill="rgb(248,132,6)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="415.50"></text></g><g><title>sqlite3OsWrite (83 samples, 0.43%)</title><rect x="27.3163%" y="389" width="0.4277%" height="15" fill="rgb(227,167,50)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="399.50"></text></g><g><title>unixWrite (83 samples, 0.43%)</title><rect x="27.3163%" y="373" width="0.4277%" height="15" fill="rgb(242,84,37)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="383.50"></text></g><g><title>seekAndWrite (83 samples, 0.43%)</title><rect x="27.3163%" y="357" width="0.4277%" height="15" fill="rgb(212,4,50)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="367.50"></text></g><g><title>seekAndWriteFd (83 samples, 0.43%)</title><rect x="27.3163%" y="341" width="0.4277%" height="15" fill="rgb(230,228,32)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="351.50"></text></g><g><title>__libc_pwrite64 (83 samples, 0.43%)</title><rect x="27.3163%" y="325" width="0.4277%" height="15" fill="rgb(248,217,23)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="335.50"></text></g><g><title>__libc_pwrite64 (83 samples, 0.43%)</title><rect x="27.3163%" y="309" width="0.4277%" height="15" fill="rgb(238,197,32)" fg:x="5301" fg:w="83"/><text x="27.5663%" y="319.50"></text></g><g><title>moveToRoot (3 samples, 0.02%)</title><rect x="27.7440%" y="533" width="0.0155%" height="15" fill="rgb(236,106,1)" fg:x="5384" fg:w="3"/><text x="27.9940%" y="543.50"></text></g><g><title>getAndInitPage (3 samples, 0.02%)</title><rect x="27.7440%" y="517" width="0.0155%" height="15" fill="rgb(219,228,13)" fg:x="5384" fg:w="3"/><text x="27.9940%" y="527.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="27.7491%" y="501" width="0.0103%" height="15" fill="rgb(238,30,35)" fg:x="5385" fg:w="2"/><text x="27.9991%" y="511.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="27.7491%" y="485" width="0.0103%" height="15" fill="rgb(236,70,23)" fg:x="5385" fg:w="2"/><text x="27.9991%" y="495.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="27.7491%" y="469" width="0.0103%" height="15" fill="rgb(249,104,48)" fg:x="5385" fg:w="2"/><text x="27.9991%" y="479.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="27.7491%" y="453" width="0.0103%" height="15" fill="rgb(254,117,50)" fg:x="5385" fg:w="2"/><text x="27.9991%" y="463.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="27.7491%" y="437" width="0.0103%" height="15" fill="rgb(223,152,4)" fg:x="5385" fg:w="2"/><text x="27.9991%" y="447.50"></text></g><g><title>sqlite3BtreeIndexMoveto (281 samples, 1.45%)</title><rect x="26.3321%" y="549" width="1.4480%" height="15" fill="rgb(245,6,2)" fg:x="5110" fg:w="281"/><text x="26.5821%" y="559.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (4 samples, 0.02%)</title><rect x="27.7595%" y="533" width="0.0206%" height="15" fill="rgb(249,150,24)" fg:x="5387" fg:w="4"/><text x="28.0095%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.02%)</title><rect x="27.7646%" y="517" width="0.0155%" height="15" fill="rgb(228,185,42)" fg:x="5388" fg:w="3"/><text x="28.0146%" y="527.50"></text></g><g><title>memmove (2 samples, 0.01%)</title><rect x="27.8058%" y="485" width="0.0103%" height="15" fill="rgb(226,39,33)" fg:x="5396" fg:w="2"/><text x="28.0558%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="27.8058%" y="469" width="0.0103%" height="15" fill="rgb(221,166,19)" fg:x="5396" fg:w="2"/><text x="28.0558%" y="479.50"></text></g><g><title>pageFreeArray (2 samples, 0.01%)</title><rect x="27.8161%" y="485" width="0.0103%" height="15" fill="rgb(209,109,2)" fg:x="5398" fg:w="2"/><text x="28.0661%" y="495.50"></text></g><g><title>editPage (7 samples, 0.04%)</title><rect x="27.8058%" y="501" width="0.0361%" height="15" fill="rgb(252,216,26)" fg:x="5396" fg:w="7"/><text x="28.0558%" y="511.50"></text></g><g><title>rebuildPage (3 samples, 0.02%)</title><rect x="27.8264%" y="485" width="0.0155%" height="15" fill="rgb(227,173,36)" fg:x="5400" fg:w="3"/><text x="28.0764%" y="495.50"></text></g><g><title>memmove (3 samples, 0.02%)</title><rect x="27.8264%" y="469" width="0.0155%" height="15" fill="rgb(209,90,7)" fg:x="5400" fg:w="3"/><text x="28.0764%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="27.8264%" y="453" width="0.0155%" height="15" fill="rgb(250,194,11)" fg:x="5400" fg:w="3"/><text x="28.0764%" y="463.50"></text></g><g><title>balance (12 samples, 0.06%)</title><rect x="27.7955%" y="533" width="0.0618%" height="15" fill="rgb(220,72,50)" fg:x="5394" fg:w="12"/><text x="28.0455%" y="543.50"></text></g><g><title>balance_nonroot (12 samples, 0.06%)</title><rect x="27.7955%" y="517" width="0.0618%" height="15" fill="rgb(222,106,48)" fg:x="5394" fg:w="12"/><text x="28.0455%" y="527.50"></text></g><g><title>getAndInitPage (3 samples, 0.02%)</title><rect x="27.8419%" y="501" width="0.0155%" height="15" fill="rgb(216,220,45)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="511.50"></text></g><g><title>sqlite3PagerGet (3 samples, 0.02%)</title><rect x="27.8419%" y="485" width="0.0155%" height="15" fill="rgb(234,112,18)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="495.50"></text></g><g><title>getPageNormal (3 samples, 0.02%)</title><rect x="27.8419%" y="469" width="0.0155%" height="15" fill="rgb(206,179,9)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="479.50"></text></g><g><title>readDbPage (3 samples, 0.02%)</title><rect x="27.8419%" y="453" width="0.0155%" height="15" fill="rgb(215,115,40)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="463.50"></text></g><g><title>sqlite3WalReadFrame (3 samples, 0.02%)</title><rect x="27.8419%" y="437" width="0.0155%" height="15" fill="rgb(222,69,34)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="447.50"></text></g><g><title>sqlite3OsRead (3 samples, 0.02%)</title><rect x="27.8419%" y="421" width="0.0155%" height="15" fill="rgb(209,161,10)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="431.50"></text></g><g><title>unixRead (3 samples, 0.02%)</title><rect x="27.8419%" y="405" width="0.0155%" height="15" fill="rgb(217,6,38)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="415.50"></text></g><g><title>seekAndRead (3 samples, 0.02%)</title><rect x="27.8419%" y="389" width="0.0155%" height="15" fill="rgb(229,229,48)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="399.50"></text></g><g><title>__libc_pread64 (3 samples, 0.02%)</title><rect x="27.8419%" y="373" width="0.0155%" height="15" fill="rgb(225,21,28)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="383.50"></text></g><g><title>__libc_pread64 (3 samples, 0.02%)</title><rect x="27.8419%" y="357" width="0.0155%" height="15" fill="rgb(206,33,13)" fg:x="5403" fg:w="3"/><text x="28.0919%" y="367.50"></text></g><g><title>allocateSpace (2 samples, 0.01%)</title><rect x="27.8625%" y="517" width="0.0103%" height="15" fill="rgb(242,178,17)" fg:x="5407" fg:w="2"/><text x="28.1125%" y="527.50"></text></g><g><title>insertCellFast (7 samples, 0.04%)</title><rect x="27.8625%" y="533" width="0.0361%" height="15" fill="rgb(220,162,5)" fg:x="5407" fg:w="7"/><text x="28.1125%" y="543.50"></text></g><g><title>memcpy (5 samples, 0.03%)</title><rect x="27.8728%" y="517" width="0.0258%" height="15" fill="rgb(210,33,43)" fg:x="5409" fg:w="5"/><text x="28.1228%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="27.8780%" y="501" width="0.0206%" height="15" fill="rgb(216,116,54)" fg:x="5410" fg:w="4"/><text x="28.1280%" y="511.50"></text></g><g><title>getAndInitPage (2 samples, 0.01%)</title><rect x="27.9244%" y="517" width="0.0103%" height="15" fill="rgb(249,92,24)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="527.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="27.9244%" y="501" width="0.0103%" height="15" fill="rgb(231,189,14)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="511.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="27.9244%" y="485" width="0.0103%" height="15" fill="rgb(230,8,41)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="495.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="27.9244%" y="469" width="0.0103%" height="15" fill="rgb(249,7,27)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="479.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="27.9244%" y="453" width="0.0103%" height="15" fill="rgb(232,86,5)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="463.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="27.9244%" y="437" width="0.0103%" height="15" fill="rgb(224,175,18)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="447.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.01%)</title><rect x="27.9244%" y="421" width="0.0103%" height="15" fill="rgb(220,129,12)" fg:x="5419" fg:w="2"/><text x="28.1744%" y="431.50"></text></g><g><title>sqlite3BtreeInsert (34 samples, 0.18%)</title><rect x="27.7801%" y="549" width="0.1752%" height="15" fill="rgb(210,19,36)" fg:x="5391" fg:w="34"/><text x="28.0301%" y="559.50"></text></g><g><title>sqlite3BtreeIndexMoveto (11 samples, 0.06%)</title><rect x="27.8986%" y="533" width="0.0567%" height="15" fill="rgb(219,96,14)" fg:x="5414" fg:w="11"/><text x="28.1486%" y="543.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (4 samples, 0.02%)</title><rect x="27.9347%" y="517" width="0.0206%" height="15" fill="rgb(249,106,1)" fg:x="5421" fg:w="4"/><text x="28.1847%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="27.9450%" y="501" width="0.0103%" height="15" fill="rgb(249,155,20)" fg:x="5423" fg:w="2"/><text x="28.1950%" y="511.50"></text></g><g><title>sqlite3BtreeLast (2 samples, 0.01%)</title><rect x="27.9553%" y="549" width="0.0103%" height="15" fill="rgb(244,168,9)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="559.50"></text></g><g><title>btreeLast (2 samples, 0.01%)</title><rect x="27.9553%" y="533" width="0.0103%" height="15" fill="rgb(216,23,50)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="543.50"></text></g><g><title>moveToRightmost (2 samples, 0.01%)</title><rect x="27.9553%" y="517" width="0.0103%" height="15" fill="rgb(224,219,20)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="527.50"></text></g><g><title>moveToChild (2 samples, 0.01%)</title><rect x="27.9553%" y="501" width="0.0103%" height="15" fill="rgb(222,156,15)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="511.50"></text></g><g><title>getAndInitPage (2 samples, 0.01%)</title><rect x="27.9553%" y="485" width="0.0103%" height="15" fill="rgb(231,97,17)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="495.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="27.9553%" y="469" width="0.0103%" height="15" fill="rgb(218,70,48)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="479.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="27.9553%" y="453" width="0.0103%" height="15" fill="rgb(212,196,52)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="463.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="27.9553%" y="437" width="0.0103%" height="15" fill="rgb(243,203,18)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="447.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="27.9553%" y="421" width="0.0103%" height="15" fill="rgb(252,125,41)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="431.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="27.9553%" y="405" width="0.0103%" height="15" fill="rgb(223,180,33)" fg:x="5425" fg:w="2"/><text x="28.2053%" y="415.50"></text></g><g><title>enlargeAndAppend (3 samples, 0.02%)</title><rect x="27.9707%" y="533" width="0.0155%" height="15" fill="rgb(254,159,46)" fg:x="5428" fg:w="3"/><text x="28.2207%" y="543.50"></text></g><g><title>sqlite3StrAccumEnlarge (3 samples, 0.02%)</title><rect x="27.9707%" y="517" width="0.0155%" height="15" fill="rgb(254,38,10)" fg:x="5428" fg:w="3"/><text x="28.2207%" y="527.50"></text></g><g><title>sqlite3Realloc (2 samples, 0.01%)</title><rect x="27.9759%" y="501" width="0.0103%" height="15" fill="rgb(208,217,32)" fg:x="5429" fg:w="2"/><text x="28.2259%" y="511.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.01%)</title><rect x="27.9759%" y="485" width="0.0103%" height="15" fill="rgb(221,120,13)" fg:x="5429" fg:w="2"/><text x="28.2259%" y="495.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="28.0532%" y="517" width="0.0103%" height="15" fill="rgb(246,54,52)" fg:x="5444" fg:w="2"/><text x="28.3032%" y="527.50"></text></g><g><title>findNextHostParameter (22 samples, 0.11%)</title><rect x="27.9862%" y="533" width="0.1134%" height="15" fill="rgb(242,34,25)" fg:x="5431" fg:w="22"/><text x="28.2362%" y="543.50"></text></g><g><title>sqlite3GetToken (7 samples, 0.04%)</title><rect x="28.0635%" y="517" width="0.0361%" height="15" fill="rgb(247,209,9)" fg:x="5446" fg:w="7"/><text x="28.3135%" y="527.50"></text></g><g><title>sqlite3VdbeParameterIndex (11 samples, 0.06%)</title><rect x="28.0996%" y="533" width="0.0567%" height="15" fill="rgb(228,71,26)" fg:x="5453" fg:w="11"/><text x="28.3496%" y="543.50"></text></g><g><title>sqlite3VdbeParameterIndex (11 samples, 0.06%)</title><rect x="28.0996%" y="517" width="0.0567%" height="15" fill="rgb(222,145,49)" fg:x="5453" fg:w="11"/><text x="28.3496%" y="527.50"></text></g><g><title>sqlite3VListNameToNum (11 samples, 0.06%)</title><rect x="28.0996%" y="501" width="0.0567%" height="15" fill="rgb(218,121,17)" fg:x="5453" fg:w="11"/><text x="28.3496%" y="511.50"></text></g><g><title>__strncmp_avx2 (11 samples, 0.06%)</title><rect x="28.0996%" y="485" width="0.0567%" height="15" fill="rgb(244,50,7)" fg:x="5453" fg:w="11"/><text x="28.3496%" y="495.50"></text></g><g><title>enlargeAndAppend (6 samples, 0.03%)</title><rect x="28.3984%" y="501" width="0.0309%" height="15" fill="rgb(246,229,37)" fg:x="5511" fg:w="6"/><text x="28.6484%" y="511.50"></text></g><g><title>sqlite3StrAccumEnlarge (6 samples, 0.03%)</title><rect x="28.3984%" y="485" width="0.0309%" height="15" fill="rgb(225,18,5)" fg:x="5511" fg:w="6"/><text x="28.6484%" y="495.50"></text></g><g><title>sqlite3Realloc (6 samples, 0.03%)</title><rect x="28.3984%" y="469" width="0.0309%" height="15" fill="rgb(213,204,8)" fg:x="5511" fg:w="6"/><text x="28.6484%" y="479.50"></text></g><g><title>sqlite3MemRealloc (5 samples, 0.03%)</title><rect x="28.4036%" y="453" width="0.0258%" height="15" fill="rgb(238,103,6)" fg:x="5512" fg:w="5"/><text x="28.6536%" y="463.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="28.4036%" y="437" width="0.0258%" height="15" fill="rgb(222,25,35)" fg:x="5512" fg:w="5"/><text x="28.6536%" y="447.50"></text></g><g><title>_int_realloc (5 samples, 0.03%)</title><rect x="28.4036%" y="421" width="0.0258%" height="15" fill="rgb(213,203,35)" fg:x="5512" fg:w="5"/><text x="28.6536%" y="431.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="28.4087%" y="405" width="0.0206%" height="15" fill="rgb(221,79,53)" fg:x="5513" fg:w="4"/><text x="28.6587%" y="415.50"></text></g><g><title>sqlite3VdbeExpandSql (91 samples, 0.47%)</title><rect x="27.9656%" y="549" width="0.4689%" height="15" fill="rgb(243,200,35)" fg:x="5427" fg:w="91"/><text x="28.2156%" y="559.50"></text></g><g><title>sqlite3_str_appendf (54 samples, 0.28%)</title><rect x="28.1562%" y="533" width="0.2783%" height="15" fill="rgb(248,60,25)" fg:x="5464" fg:w="54"/><text x="28.4062%" y="543.50"></text></g><g><title>sqlite3_str_vappendf (50 samples, 0.26%)</title><rect x="28.1769%" y="517" width="0.2577%" height="15" fill="rgb(227,53,46)" fg:x="5468" fg:w="50"/><text x="28.4269%" y="527.50"></text></g><g><title>sqlite3VdbeFreeCursor (4 samples, 0.02%)</title><rect x="28.4345%" y="549" width="0.0206%" height="15" fill="rgb(216,120,32)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="559.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (4 samples, 0.02%)</title><rect x="28.4345%" y="533" width="0.0206%" height="15" fill="rgb(220,134,1)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="543.50"></text></g><g><title>sqlite3BtreeCloseCursor (4 samples, 0.02%)</title><rect x="28.4345%" y="517" width="0.0206%" height="15" fill="rgb(237,168,5)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="527.50"></text></g><g><title>btreeReleaseAllCursorPages (4 samples, 0.02%)</title><rect x="28.4345%" y="501" width="0.0206%" height="15" fill="rgb(231,100,33)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="511.50"></text></g><g><title>btreeReleaseAllCursorPages (4 samples, 0.02%)</title><rect x="28.4345%" y="485" width="0.0206%" height="15" fill="rgb(236,177,47)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="495.50"></text></g><g><title>releasePageNotNull (4 samples, 0.02%)</title><rect x="28.4345%" y="469" width="0.0206%" height="15" fill="rgb(235,7,49)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="479.50"></text></g><g><title>sqlite3PagerUnrefNotNull (4 samples, 0.02%)</title><rect x="28.4345%" y="453" width="0.0206%" height="15" fill="rgb(232,119,22)" fg:x="5518" fg:w="4"/><text x="28.6845%" y="463.50"></text></g><g><title>pcache1Unpin (3 samples, 0.02%)</title><rect x="28.4397%" y="437" width="0.0155%" height="15" fill="rgb(254,73,53)" fg:x="5519" fg:w="3"/><text x="28.6897%" y="447.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="28.4448%" y="421" width="0.0103%" height="15" fill="rgb(251,35,20)" fg:x="5520" fg:w="2"/><text x="28.6948%" y="431.50"></text></g><g><title>lll_mutex_lock_optimized (2 samples, 0.01%)</title><rect x="28.4448%" y="405" width="0.0103%" height="15" fill="rgb(241,119,20)" fg:x="5520" fg:w="2"/><text x="28.6948%" y="415.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="28.4603%" y="517" width="0.0103%" height="15" fill="rgb(207,102,14)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="527.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="28.4603%" y="501" width="0.0103%" height="15" fill="rgb(248,201,50)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="511.50"></text></g><g><title>sqlite3BtreeCloseCursor (2 samples, 0.01%)</title><rect x="28.4603%" y="485" width="0.0103%" height="15" fill="rgb(222,185,44)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="495.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="28.4603%" y="469" width="0.0103%" height="15" fill="rgb(218,107,18)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="479.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="28.4603%" y="453" width="0.0103%" height="15" fill="rgb(237,177,39)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="463.50"></text></g><g><title>releasePageNotNull (2 samples, 0.01%)</title><rect x="28.4603%" y="437" width="0.0103%" height="15" fill="rgb(246,69,6)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="447.50"></text></g><g><title>sqlite3PagerUnrefNotNull (2 samples, 0.01%)</title><rect x="28.4603%" y="421" width="0.0103%" height="15" fill="rgb(234,208,37)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="431.50"></text></g><g><title>sqlite3PcacheRelease (2 samples, 0.01%)</title><rect x="28.4603%" y="405" width="0.0103%" height="15" fill="rgb(225,4,6)" fg:x="5523" fg:w="2"/><text x="28.7103%" y="415.50"></text></g><g><title>sqlite3VdbeHalt (5 samples, 0.03%)</title><rect x="28.4551%" y="549" width="0.0258%" height="15" fill="rgb(233,45,0)" fg:x="5522" fg:w="5"/><text x="28.7051%" y="559.50"></text></g><g><title>closeAllCursors (4 samples, 0.02%)</title><rect x="28.4603%" y="533" width="0.0206%" height="15" fill="rgb(226,136,5)" fg:x="5523" fg:w="4"/><text x="28.7103%" y="543.50"></text></g><g><title>releaseMemArray (2 samples, 0.01%)</title><rect x="28.4706%" y="517" width="0.0103%" height="15" fill="rgb(211,91,47)" fg:x="5525" fg:w="2"/><text x="28.7206%" y="527.50"></text></g><g><title>releaseMemArray (2 samples, 0.01%)</title><rect x="28.4706%" y="501" width="0.0103%" height="15" fill="rgb(242,88,51)" fg:x="5525" fg:w="2"/><text x="28.7206%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (491 samples, 2.53%)</title><rect x="25.9559%" y="725" width="2.5301%" height="15" fill="rgb(230,91,28)" fg:x="5037" fg:w="491"/><text x="26.2059%" y="735.50">co..</text></g><g><title>rusqlite::Connection::execute::{{closure}} (491 samples, 2.53%)</title><rect x="25.9559%" y="709" width="2.5301%" height="15" fill="rgb(254,186,29)" fg:x="5037" fg:w="491"/><text x="26.2059%" y="719.50">ru..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (487 samples, 2.51%)</title><rect x="25.9765%" y="693" width="2.5095%" height="15" fill="rgb(238,6,4)" fg:x="5041" fg:w="487"/><text x="26.2265%" y="703.50">co..</text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (487 samples, 2.51%)</title><rect x="25.9765%" y="677" width="2.5095%" height="15" fill="rgb(221,151,16)" fg:x="5041" fg:w="487"/><text x="26.2265%" y="687.50">ru..</text></g><g><title>rusqlite::statement::Statement::execute (487 samples, 2.51%)</title><rect x="25.9765%" y="661" width="2.5095%" height="15" fill="rgb(251,143,52)" fg:x="5041" fg:w="487"/><text x="26.2265%" y="671.50">ru..</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (436 samples, 2.25%)</title><rect x="26.2393%" y="645" width="2.2467%" height="15" fill="rgb(206,90,15)" fg:x="5092" fg:w="436"/><text x="26.4893%" y="655.50">r..</text></g><g><title>rusqlite::raw_statement::RawStatement::step (434 samples, 2.24%)</title><rect x="26.2496%" y="629" width="2.2364%" height="15" fill="rgb(218,35,8)" fg:x="5094" fg:w="434"/><text x="26.4996%" y="639.50">r..</text></g><g><title>sqlite3_step (434 samples, 2.24%)</title><rect x="26.2496%" y="613" width="2.2364%" height="15" fill="rgb(239,215,6)" fg:x="5094" fg:w="434"/><text x="26.4996%" y="623.50">s..</text></g><g><title>sqlite3_step (434 samples, 2.24%)</title><rect x="26.2496%" y="597" width="2.2364%" height="15" fill="rgb(245,116,39)" fg:x="5094" fg:w="434"/><text x="26.4996%" y="607.50">s..</text></g><g><title>sqlite3Step (434 samples, 2.24%)</title><rect x="26.2496%" y="581" width="2.2364%" height="15" fill="rgb(242,65,28)" fg:x="5094" fg:w="434"/><text x="26.4996%" y="591.50">s..</text></g><g><title>sqlite3VdbeExec (434 samples, 2.24%)</title><rect x="26.2496%" y="565" width="2.2364%" height="15" fill="rgb(252,132,53)" fg:x="5094" fg:w="434"/><text x="26.4996%" y="575.50">s..</text></g><g><title>keywordCode (3 samples, 0.02%)</title><rect x="28.5066%" y="581" width="0.0155%" height="15" fill="rgb(224,159,50)" fg:x="5532" fg:w="3"/><text x="28.7566%" y="591.50"></text></g><g><title>sqlite3GetToken (12 samples, 0.06%)</title><rect x="28.5221%" y="581" width="0.0618%" height="15" fill="rgb(224,93,4)" fg:x="5535" fg:w="12"/><text x="28.7721%" y="591.50"></text></g><g><title>yy_find_shift_action (22 samples, 0.11%)</title><rect x="28.5839%" y="565" width="0.1134%" height="15" fill="rgb(208,81,34)" fg:x="5547" fg:w="22"/><text x="28.8339%" y="575.50"></text></g><g><title>sqlite3ExprAssignVarNumber (13 samples, 0.07%)</title><rect x="28.8004%" y="549" width="0.0670%" height="15" fill="rgb(233,92,54)" fg:x="5589" fg:w="13"/><text x="29.0504%" y="559.50"></text></g><g><title>sqlite3VListNameToNum (13 samples, 0.07%)</title><rect x="28.8004%" y="533" width="0.0670%" height="15" fill="rgb(237,21,14)" fg:x="5589" fg:w="13"/><text x="29.0504%" y="543.50"></text></g><g><title>__strncmp_avx2 (13 samples, 0.07%)</title><rect x="28.8004%" y="517" width="0.0670%" height="15" fill="rgb(249,128,51)" fg:x="5589" fg:w="13"/><text x="29.0504%" y="527.50"></text></g><g><title>sqlite3FinishCoding (3 samples, 0.02%)</title><rect x="28.8725%" y="549" width="0.0155%" height="15" fill="rgb(223,129,24)" fg:x="5603" fg:w="3"/><text x="29.1225%" y="559.50"></text></g><g><title>sqlite3VdbeMakeReady (3 samples, 0.02%)</title><rect x="28.8725%" y="533" width="0.0155%" height="15" fill="rgb(231,168,25)" fg:x="5603" fg:w="3"/><text x="29.1225%" y="543.50"></text></g><g><title>sqlite3IdListAppend (4 samples, 0.02%)</title><rect x="28.8880%" y="549" width="0.0206%" height="15" fill="rgb(224,39,20)" fg:x="5606" fg:w="4"/><text x="29.1380%" y="559.50"></text></g><g><title>sqlite3NameFromToken (3 samples, 0.02%)</title><rect x="28.8931%" y="533" width="0.0155%" height="15" fill="rgb(225,152,53)" fg:x="5607" fg:w="3"/><text x="29.1431%" y="543.50"></text></g><g><title>sqlite3Dequote (3 samples, 0.02%)</title><rect x="28.8931%" y="517" width="0.0155%" height="15" fill="rgb(252,17,24)" fg:x="5607" fg:w="3"/><text x="29.1431%" y="527.50"></text></g><g><title>sqlite3CompleteInsertion (2 samples, 0.01%)</title><rect x="28.9086%" y="533" width="0.0103%" height="15" fill="rgb(250,114,30)" fg:x="5610" fg:w="2"/><text x="29.1586%" y="543.50"></text></g><g><title>sqlite3VdbeAddOp3 (2 samples, 0.01%)</title><rect x="28.9086%" y="517" width="0.0103%" height="15" fill="rgb(229,5,4)" fg:x="5610" fg:w="2"/><text x="29.1586%" y="527.50"></text></g><g><title>growOp3 (2 samples, 0.01%)</title><rect x="28.9086%" y="501" width="0.0103%" height="15" fill="rgb(225,176,49)" fg:x="5610" fg:w="2"/><text x="29.1586%" y="511.50"></text></g><g><title>sqlite3ExprCodeTarget (2 samples, 0.01%)</title><rect x="28.9240%" y="533" width="0.0103%" height="15" fill="rgb(224,221,49)" fg:x="5613" fg:w="2"/><text x="29.1740%" y="543.50"></text></g><g><title>fkLookupParent (2 samples, 0.01%)</title><rect x="28.9395%" y="517" width="0.0103%" height="15" fill="rgb(253,169,27)" fg:x="5616" fg:w="2"/><text x="29.1895%" y="527.50"></text></g><g><title>sqlite3FkLocateIndex (3 samples, 0.02%)</title><rect x="28.9498%" y="517" width="0.0155%" height="15" fill="rgb(211,206,16)" fg:x="5618" fg:w="3"/><text x="29.1998%" y="527.50"></text></g><g><title>sqlite3ColumnColl (3 samples, 0.02%)</title><rect x="28.9498%" y="501" width="0.0155%" height="15" fill="rgb(244,87,35)" fg:x="5618" fg:w="3"/><text x="29.1998%" y="511.50"></text></g><g><title>sqlite3FkCheck (6 samples, 0.03%)</title><rect x="28.9395%" y="533" width="0.0309%" height="15" fill="rgb(246,28,10)" fg:x="5616" fg:w="6"/><text x="29.1895%" y="543.50"></text></g><g><title>sqlite3MPrintf (5 samples, 0.03%)</title><rect x="28.9704%" y="517" width="0.0258%" height="15" fill="rgb(229,12,44)" fg:x="5622" fg:w="5"/><text x="29.2204%" y="527.50"></text></g><g><title>sqlite3VMPrintf (5 samples, 0.03%)</title><rect x="28.9704%" y="501" width="0.0258%" height="15" fill="rgb(210,145,37)" fg:x="5622" fg:w="5"/><text x="29.2204%" y="511.50"></text></g><g><title>sqlite3_str_vappendf (4 samples, 0.02%)</title><rect x="28.9756%" y="485" width="0.0206%" height="15" fill="rgb(227,112,52)" fg:x="5623" fg:w="4"/><text x="29.2256%" y="495.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.01%)</title><rect x="28.9859%" y="469" width="0.0103%" height="15" fill="rgb(238,155,34)" fg:x="5625" fg:w="2"/><text x="29.2359%" y="479.50"></text></g><g><title>sqlite3GenerateConstraintChecks (6 samples, 0.03%)</title><rect x="28.9704%" y="533" width="0.0309%" height="15" fill="rgb(239,226,36)" fg:x="5622" fg:w="6"/><text x="29.2204%" y="543.50"></text></g><g><title>sqlite3GetVdbe (2 samples, 0.01%)</title><rect x="29.0013%" y="533" width="0.0103%" height="15" fill="rgb(230,16,23)" fg:x="5628" fg:w="2"/><text x="29.2513%" y="543.50"></text></g><g><title>sqlite3GetVdbe (2 samples, 0.01%)</title><rect x="29.0013%" y="517" width="0.0103%" height="15" fill="rgb(236,171,36)" fg:x="5628" fg:w="2"/><text x="29.2513%" y="527.50"></text></g><g><title>sqlite3VdbeCreate (2 samples, 0.01%)</title><rect x="29.0013%" y="501" width="0.0103%" height="15" fill="rgb(221,22,14)" fg:x="5628" fg:w="2"/><text x="29.2513%" y="511.50"></text></g><g><title>memset (2 samples, 0.01%)</title><rect x="29.0013%" y="485" width="0.0103%" height="15" fill="rgb(242,43,11)" fg:x="5628" fg:w="2"/><text x="29.2513%" y="495.50"></text></g><g><title>sqlite3Insert (30 samples, 0.15%)</title><rect x="28.9086%" y="549" width="0.1546%" height="15" fill="rgb(232,69,23)" fg:x="5610" fg:w="30"/><text x="29.1586%" y="559.50"></text></g><g><title>sqlite3StrICmp (8 samples, 0.04%)</title><rect x="29.0220%" y="533" width="0.0412%" height="15" fill="rgb(216,180,54)" fg:x="5632" fg:w="8"/><text x="29.2720%" y="543.50"></text></g><g><title>zilliqa::consensus::Consensus::broadcast_commit_receipts (640 samples, 3.30%)</title><rect x="25.7755%" y="805" width="3.2979%" height="15" fill="rgb(216,5,24)" fg:x="5002" fg:w="640"/><text x="26.0255%" y="815.50">zil..</text></g><g><title>zilliqa::db::Db::with_sqlite_tx (631 samples, 3.25%)</title><rect x="25.8219%" y="789" width="3.2516%" height="15" fill="rgb(225,89,9)" fg:x="5011" fg:w="631"/><text x="26.0719%" y="799.50">zil..</text></g><g><title>zilliqa::consensus::Consensus::broadcast_commit_receipts::{{closure}} (607 samples, 3.13%)</title><rect x="25.9456%" y="773" width="3.1279%" height="15" fill="rgb(243,75,33)" fg:x="5035" fg:w="607"/><text x="26.1956%" y="783.50">zil..</text></g><g><title>zilliqa::db::Db::insert_transaction_receipt_with_db_tx (607 samples, 3.13%)</title><rect x="25.9456%" y="757" width="3.1279%" height="15" fill="rgb(247,141,45)" fg:x="5035" fg:w="607"/><text x="26.1956%" y="767.50">zil..</text></g><g><title>rusqlite::Connection::execute (605 samples, 3.12%)</title><rect x="25.9559%" y="741" width="3.1176%" height="15" fill="rgb(232,177,36)" fg:x="5037" fg:w="605"/><text x="26.2059%" y="751.50">rus..</text></g><g><title>rusqlite::Connection::prepare (114 samples, 0.59%)</title><rect x="28.4860%" y="725" width="0.5874%" height="15" fill="rgb(219,125,36)" fg:x="5528" fg:w="114"/><text x="28.7360%" y="735.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (114 samples, 0.59%)</title><rect x="28.4860%" y="709" width="0.5874%" height="15" fill="rgb(227,94,9)" fg:x="5528" fg:w="114"/><text x="28.7360%" y="719.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (114 samples, 0.59%)</title><rect x="28.4860%" y="693" width="0.5874%" height="15" fill="rgb(240,34,52)" fg:x="5528" fg:w="114"/><text x="28.7360%" y="703.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (114 samples, 0.59%)</title><rect x="28.4860%" y="677" width="0.5874%" height="15" fill="rgb(216,45,12)" fg:x="5528" fg:w="114"/><text x="28.7360%" y="687.50"></text></g><g><title>sqlite3_prepare_v3 (114 samples, 0.59%)</title><rect x="28.4860%" y="661" width="0.5874%" height="15" fill="rgb(246,21,19)" fg:x="5528" fg:w="114"/><text x="28.7360%" y="671.50"></text></g><g><title>sqlite3LockAndPrepare (114 samples, 0.59%)</title><rect x="28.4860%" y="645" width="0.5874%" height="15" fill="rgb(213,98,42)" fg:x="5528" fg:w="114"/><text x="28.7360%" y="655.50"></text></g><g><title>sqlite3LockAndPrepare (113 samples, 0.58%)</title><rect x="28.4912%" y="629" width="0.5823%" height="15" fill="rgb(250,136,47)" fg:x="5529" fg:w="113"/><text x="28.7412%" y="639.50"></text></g><g><title>sqlite3Prepare (113 samples, 0.58%)</title><rect x="28.4912%" y="613" width="0.5823%" height="15" fill="rgb(251,124,27)" fg:x="5529" fg:w="113"/><text x="28.7412%" y="623.50"></text></g><g><title>sqlite3RunParser (110 samples, 0.57%)</title><rect x="28.5066%" y="597" width="0.5668%" height="15" fill="rgb(229,180,14)" fg:x="5532" fg:w="110"/><text x="28.7566%" y="607.50"></text></g><g><title>sqlite3Parser (95 samples, 0.49%)</title><rect x="28.5839%" y="581" width="0.4895%" height="15" fill="rgb(245,216,25)" fg:x="5547" fg:w="95"/><text x="28.8339%" y="591.50"></text></g><g><title>yy_reduce (73 samples, 0.38%)</title><rect x="28.6973%" y="565" width="0.3762%" height="15" fill="rgb(251,43,5)" fg:x="5569" fg:w="73"/><text x="28.9473%" y="575.50"></text></g><g><title>tokenExpr (2 samples, 0.01%)</title><rect x="29.0632%" y="549" width="0.0103%" height="15" fill="rgb(250,128,24)" fg:x="5640" fg:w="2"/><text x="29.3132%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloy_primitives::bits::address::Address,revm_primitives::state::Account,foldhash::seed::fast::RandomState&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0786%" y="773" width="0.0103%" height="15" fill="rgb(217,117,27)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloy_primitives::bits::address::Address,revm_primitives::state::Account,foldhash::seed::fast::RandomState&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0786%" y="757" width="0.0103%" height="15" fill="rgb(245,147,4)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloy_primitives::bits::address::Address,revm_primitives::state::Account)&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0786%" y="741" width="0.0103%" height="15" fill="rgb(242,201,35)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="29.0786%" y="725" width="0.0103%" height="15" fill="rgb(218,181,1)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.01%)</title><rect x="29.0786%" y="709" width="0.0103%" height="15" fill="rgb(222,6,29)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.01%)</title><rect x="29.0786%" y="693" width="0.0103%" height="15" fill="rgb(208,186,3)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.01%)</title><rect x="29.0786%" y="677" width="0.0103%" height="15" fill="rgb(216,36,26)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.01%)</title><rect x="29.0786%" y="661" width="0.0103%" height="15" fill="rgb(248,201,23)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloy_primitives::bits::address::Address,revm_primitives::state::Account)&gt; (2 samples, 0.01%)</title><rect x="29.0786%" y="645" width="0.0103%" height="15" fill="rgb(251,170,31)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::state::Account&gt; (2 samples, 0.01%)</title><rect x="29.0786%" y="629" width="0.0103%" height="15" fill="rgb(207,110,25)" fg:x="5643" fg:w="2"/><text x="29.3286%" y="639.50"></text></g><g><title>zilliqa::consensus::Consensus::create_txn_receipt (5 samples, 0.03%)</title><rect x="29.0735%" y="805" width="0.0258%" height="15" fill="rgb(250,54,15)" fg:x="5642" fg:w="5"/><text x="29.3235%" y="815.50"></text></g><g><title>zilliqa::exec::TransactionApplyResult::into_parts (5 samples, 0.03%)</title><rect x="29.0735%" y="789" width="0.0258%" height="15" fill="rgb(227,68,33)" fg:x="5642" fg:w="5"/><text x="29.3235%" y="799.50"></text></g><g><title>revm_primitives::result::ExecutionResult::into_logs (2 samples, 0.01%)</title><rect x="29.0889%" y="773" width="0.0103%" height="15" fill="rgb(238,34,41)" fg:x="5645" fg:w="2"/><text x="29.3389%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="29.0992%" y="789" width="0.0103%" height="15" fill="rgb(220,11,15)" fg:x="5647" fg:w="2"/><text x="29.3492%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (4 samples, 0.02%)</title><rect x="29.1302%" y="757" width="0.0206%" height="15" fill="rgb(246,111,35)" fg:x="5653" fg:w="4"/><text x="29.3802%" y="767.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="29.1302%" y="741" width="0.0206%" height="15" fill="rgb(209,88,53)" fg:x="5653" fg:w="4"/><text x="29.3802%" y="751.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (4 samples, 0.02%)</title><rect x="29.1302%" y="725" width="0.0206%" height="15" fill="rgb(231,185,47)" fg:x="5653" fg:w="4"/><text x="29.3802%" y="735.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (4 samples, 0.02%)</title><rect x="29.1302%" y="709" width="0.0206%" height="15" fill="rgb(233,154,1)" fg:x="5653" fg:w="4"/><text x="29.3802%" y="719.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (3 samples, 0.02%)</title><rect x="29.1353%" y="693" width="0.0155%" height="15" fill="rgb(225,15,46)" fg:x="5654" fg:w="3"/><text x="29.3853%" y="703.50"></text></g><g><title>sqlite3_finalize (3 samples, 0.02%)</title><rect x="29.1353%" y="677" width="0.0155%" height="15" fill="rgb(211,135,41)" fg:x="5654" fg:w="3"/><text x="29.3853%" y="687.50"></text></g><g><title>sqlite3VdbeDelete (2 samples, 0.01%)</title><rect x="29.1405%" y="661" width="0.0103%" height="15" fill="rgb(208,54,0)" fg:x="5655" fg:w="2"/><text x="29.3905%" y="671.50"></text></g><g><title>sqlite3VdbeClearObject (2 samples, 0.01%)</title><rect x="29.1405%" y="645" width="0.0103%" height="15" fill="rgb(244,136,14)" fg:x="5655" fg:w="2"/><text x="29.3905%" y="655.50"></text></g><g><title>vdbeFreeOpArray (2 samples, 0.01%)</title><rect x="29.1405%" y="629" width="0.0103%" height="15" fill="rgb(241,56,14)" fg:x="5655" fg:w="2"/><text x="29.3905%" y="639.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="29.1662%" y="613" width="0.0103%" height="15" fill="rgb(205,80,24)" fg:x="5660" fg:w="2"/><text x="29.4162%" y="623.50"></text></g><g><title>yy_find_shift_action (11 samples, 0.06%)</title><rect x="29.1765%" y="597" width="0.0567%" height="15" fill="rgb(220,57,4)" fg:x="5662" fg:w="11"/><text x="29.4265%" y="607.50"></text></g><g><title>sqlite3GenerateColumnNames (2 samples, 0.01%)</title><rect x="29.3054%" y="565" width="0.0103%" height="15" fill="rgb(226,193,50)" fg:x="5687" fg:w="2"/><text x="29.5554%" y="575.50"></text></g><g><title>sqlite3ResolveSelectNames (12 samples, 0.06%)</title><rect x="29.3311%" y="549" width="0.0618%" height="15" fill="rgb(231,168,22)" fg:x="5692" fg:w="12"/><text x="29.5811%" y="559.50"></text></g><g><title>sqlite3WalkSelect (12 samples, 0.06%)</title><rect x="29.3311%" y="533" width="0.0618%" height="15" fill="rgb(254,215,14)" fg:x="5692" fg:w="12"/><text x="29.5811%" y="543.50"></text></g><g><title>resolveSelectStep (12 samples, 0.06%)</title><rect x="29.3311%" y="517" width="0.0618%" height="15" fill="rgb(211,115,16)" fg:x="5692" fg:w="12"/><text x="29.5811%" y="527.50"></text></g><g><title>sqlite3ResolveExprNames (8 samples, 0.04%)</title><rect x="29.3517%" y="501" width="0.0412%" height="15" fill="rgb(236,210,16)" fg:x="5696" fg:w="8"/><text x="29.6017%" y="511.50"></text></g><g><title>sqlite3WalkExprNN (7 samples, 0.04%)</title><rect x="29.3569%" y="485" width="0.0361%" height="15" fill="rgb(221,94,12)" fg:x="5697" fg:w="7"/><text x="29.6069%" y="495.50"></text></g><g><title>sqlite3WalkExprNN (6 samples, 0.03%)</title><rect x="29.3621%" y="469" width="0.0309%" height="15" fill="rgb(235,218,49)" fg:x="5698" fg:w="6"/><text x="29.6121%" y="479.50"></text></g><g><title>resolveExprStep (5 samples, 0.03%)</title><rect x="29.3672%" y="453" width="0.0258%" height="15" fill="rgb(217,114,14)" fg:x="5699" fg:w="5"/><text x="29.6172%" y="463.50"></text></g><g><title>lookupName (5 samples, 0.03%)</title><rect x="29.3672%" y="437" width="0.0258%" height="15" fill="rgb(216,145,22)" fg:x="5699" fg:w="5"/><text x="29.6172%" y="447.50"></text></g><g><title>sqlite3SelectExpand (6 samples, 0.03%)</title><rect x="29.3930%" y="549" width="0.0309%" height="15" fill="rgb(217,112,39)" fg:x="5704" fg:w="6"/><text x="29.6430%" y="559.50"></text></g><g><title>sqlite3WalkSelect (6 samples, 0.03%)</title><rect x="29.3930%" y="533" width="0.0309%" height="15" fill="rgb(225,85,32)" fg:x="5704" fg:w="6"/><text x="29.6430%" y="543.50"></text></g><g><title>selectExpander (5 samples, 0.03%)</title><rect x="29.3981%" y="517" width="0.0258%" height="15" fill="rgb(245,209,47)" fg:x="5705" fg:w="5"/><text x="29.6481%" y="527.50"></text></g><g><title>sqlite3SelectPrep (21 samples, 0.11%)</title><rect x="29.3208%" y="565" width="0.1082%" height="15" fill="rgb(218,220,15)" fg:x="5690" fg:w="21"/><text x="29.5708%" y="575.50"></text></g><g><title>sqlite3VdbeExplainPop (2 samples, 0.01%)</title><rect x="29.4290%" y="565" width="0.0103%" height="15" fill="rgb(222,202,31)" fg:x="5711" fg:w="2"/><text x="29.6790%" y="575.50"></text></g><g><title>sqlite3TableLock (3 samples, 0.02%)</title><rect x="29.4393%" y="549" width="0.0155%" height="15" fill="rgb(243,203,4)" fg:x="5713" fg:w="3"/><text x="29.6893%" y="559.50"></text></g><g><title>sqlite3BtreeSharable (3 samples, 0.02%)</title><rect x="29.4393%" y="533" width="0.0155%" height="15" fill="rgb(237,92,17)" fg:x="5713" fg:w="3"/><text x="29.6893%" y="543.50"></text></g><g><title>sqlite3VdbeSetP4KeyInfo (2 samples, 0.01%)</title><rect x="29.4548%" y="549" width="0.0103%" height="15" fill="rgb(231,119,7)" fg:x="5716" fg:w="2"/><text x="29.7048%" y="559.50"></text></g><g><title>sqlite3KeyInfoOfIndex (2 samples, 0.01%)</title><rect x="29.4548%" y="533" width="0.0103%" height="15" fill="rgb(237,82,41)" fg:x="5716" fg:w="2"/><text x="29.7048%" y="543.50"></text></g><g><title>sqlite3LocateCollSeq (2 samples, 0.01%)</title><rect x="29.4548%" y="517" width="0.0103%" height="15" fill="rgb(226,81,48)" fg:x="5716" fg:w="2"/><text x="29.7048%" y="527.50"></text></g><g><title>codeEqualityTerm (3 samples, 0.02%)</title><rect x="29.4909%" y="517" width="0.0155%" height="15" fill="rgb(234,70,51)" fg:x="5723" fg:w="3"/><text x="29.7409%" y="527.50"></text></g><g><title>sqlite3ExprCodeTarget (3 samples, 0.02%)</title><rect x="29.4909%" y="501" width="0.0155%" height="15" fill="rgb(251,86,4)" fg:x="5723" fg:w="3"/><text x="29.7409%" y="511.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (9 samples, 0.05%)</title><rect x="29.4651%" y="549" width="0.0464%" height="15" fill="rgb(244,144,28)" fg:x="5718" fg:w="9"/><text x="29.7151%" y="559.50"></text></g><g><title>codeAllEqualityTerms (5 samples, 0.03%)</title><rect x="29.4857%" y="533" width="0.0258%" height="15" fill="rgb(232,161,39)" fg:x="5722" fg:w="5"/><text x="29.7357%" y="543.50"></text></g><g><title>sqlite3WhereBegin (19 samples, 0.10%)</title><rect x="29.4393%" y="565" width="0.0979%" height="15" fill="rgb(247,34,51)" fg:x="5713" fg:w="19"/><text x="29.6893%" y="575.50"></text></g><g><title>whereShortCut (3 samples, 0.02%)</title><rect x="29.5218%" y="549" width="0.0155%" height="15" fill="rgb(225,132,2)" fg:x="5729" fg:w="3"/><text x="29.7718%" y="559.50"></text></g><g><title>whereScanNext (3 samples, 0.02%)</title><rect x="29.5218%" y="533" width="0.0155%" height="15" fill="rgb(209,159,44)" fg:x="5729" fg:w="3"/><text x="29.7718%" y="543.50"></text></g><g><title>sqlite3StrICmp (2 samples, 0.01%)</title><rect x="29.5270%" y="517" width="0.0103%" height="15" fill="rgb(251,214,1)" fg:x="5730" fg:w="2"/><text x="29.7770%" y="527.50"></text></g><g><title>sqlite3Select (47 samples, 0.24%)</title><rect x="29.3002%" y="581" width="0.2422%" height="15" fill="rgb(247,84,47)" fg:x="5686" fg:w="47"/><text x="29.5502%" y="591.50"></text></g><g><title>sqlite3SrcListAppendFromTerm (2 samples, 0.01%)</title><rect x="29.5476%" y="581" width="0.0103%" height="15" fill="rgb(240,111,43)" fg:x="5734" fg:w="2"/><text x="29.7976%" y="591.50"></text></g><g><title>sqlite3SrcListAppend (2 samples, 0.01%)</title><rect x="29.5476%" y="565" width="0.0103%" height="15" fill="rgb(215,214,35)" fg:x="5734" fg:w="2"/><text x="29.7976%" y="575.50"></text></g><g><title>sqlite3NameFromToken (2 samples, 0.01%)</title><rect x="29.5476%" y="549" width="0.0103%" height="15" fill="rgb(248,207,23)" fg:x="5734" fg:w="2"/><text x="29.7976%" y="559.50"></text></g><g><title>sqlite3DbStrNDup (2 samples, 0.01%)</title><rect x="29.5476%" y="533" width="0.0103%" height="15" fill="rgb(214,186,4)" fg:x="5734" fg:w="2"/><text x="29.7976%" y="543.50"></text></g><g><title>rusqlite::Connection::prepare (80 samples, 0.41%)</title><rect x="29.1508%" y="757" width="0.4122%" height="15" fill="rgb(220,133,22)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="767.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (80 samples, 0.41%)</title><rect x="29.1508%" y="741" width="0.4122%" height="15" fill="rgb(239,134,19)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="751.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (80 samples, 0.41%)</title><rect x="29.1508%" y="725" width="0.4122%" height="15" fill="rgb(250,140,9)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="735.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (80 samples, 0.41%)</title><rect x="29.1508%" y="709" width="0.4122%" height="15" fill="rgb(225,59,14)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="719.50"></text></g><g><title>sqlite3_prepare_v3 (80 samples, 0.41%)</title><rect x="29.1508%" y="693" width="0.4122%" height="15" fill="rgb(214,152,51)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="703.50"></text></g><g><title>sqlite3LockAndPrepare (80 samples, 0.41%)</title><rect x="29.1508%" y="677" width="0.4122%" height="15" fill="rgb(251,227,43)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="687.50"></text></g><g><title>sqlite3LockAndPrepare (80 samples, 0.41%)</title><rect x="29.1508%" y="661" width="0.4122%" height="15" fill="rgb(241,96,17)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="671.50"></text></g><g><title>sqlite3Prepare (80 samples, 0.41%)</title><rect x="29.1508%" y="645" width="0.4122%" height="15" fill="rgb(234,198,43)" fg:x="5657" fg:w="80"/><text x="29.4008%" y="655.50"></text></g><g><title>sqlite3RunParser (77 samples, 0.40%)</title><rect x="29.1662%" y="629" width="0.3968%" height="15" fill="rgb(220,108,29)" fg:x="5660" fg:w="77"/><text x="29.4162%" y="639.50"></text></g><g><title>sqlite3Parser (75 samples, 0.39%)</title><rect x="29.1765%" y="613" width="0.3865%" height="15" fill="rgb(226,163,33)" fg:x="5662" fg:w="75"/><text x="29.4265%" y="623.50"></text></g><g><title>yy_reduce (64 samples, 0.33%)</title><rect x="29.2332%" y="597" width="0.3298%" height="15" fill="rgb(205,194,45)" fg:x="5673" fg:w="64"/><text x="29.4832%" y="607.50"></text></g><g><title>closeAllCursors (2 samples, 0.01%)</title><rect x="29.5888%" y="597" width="0.0103%" height="15" fill="rgb(206,143,44)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="607.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="29.5888%" y="581" width="0.0103%" height="15" fill="rgb(236,136,36)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="591.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="29.5888%" y="565" width="0.0103%" height="15" fill="rgb(249,172,42)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="575.50"></text></g><g><title>sqlite3BtreeCloseCursor (2 samples, 0.01%)</title><rect x="29.5888%" y="549" width="0.0103%" height="15" fill="rgb(216,139,23)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="559.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="29.5888%" y="533" width="0.0103%" height="15" fill="rgb(207,166,20)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="543.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="29.5888%" y="517" width="0.0103%" height="15" fill="rgb(210,209,22)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="527.50"></text></g><g><title>releasePageNotNull (2 samples, 0.01%)</title><rect x="29.5888%" y="501" width="0.0103%" height="15" fill="rgb(232,118,20)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="511.50"></text></g><g><title>sqlite3PagerUnrefNotNull (2 samples, 0.01%)</title><rect x="29.5888%" y="485" width="0.0103%" height="15" fill="rgb(238,113,42)" fg:x="5742" fg:w="2"/><text x="29.8388%" y="495.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (22 samples, 0.11%)</title><rect x="29.5991%" y="581" width="0.1134%" height="15" fill="rgb(231,42,5)" fg:x="5744" fg:w="22"/><text x="29.8491%" y="591.50"></text></g><g><title>pager_unlock (21 samples, 0.11%)</title><rect x="29.6042%" y="565" width="0.1082%" height="15" fill="rgb(243,166,24)" fg:x="5745" fg:w="21"/><text x="29.8542%" y="575.50"></text></g><g><title>sqlite3WalEndReadTransaction (21 samples, 0.11%)</title><rect x="29.6042%" y="549" width="0.1082%" height="15" fill="rgb(237,226,12)" fg:x="5745" fg:w="21"/><text x="29.8542%" y="559.50"></text></g><g><title>walUnlockShared (21 samples, 0.11%)</title><rect x="29.6042%" y="533" width="0.1082%" height="15" fill="rgb(229,133,24)" fg:x="5745" fg:w="21"/><text x="29.8542%" y="543.50"></text></g><g><title>walUnlockShared (21 samples, 0.11%)</title><rect x="29.6042%" y="517" width="0.1082%" height="15" fill="rgb(238,33,43)" fg:x="5745" fg:w="21"/><text x="29.8542%" y="527.50"></text></g><g><title>sqlite3OsShmLock (21 samples, 0.11%)</title><rect x="29.6042%" y="501" width="0.1082%" height="15" fill="rgb(227,59,38)" fg:x="5745" fg:w="21"/><text x="29.8542%" y="511.50"></text></g><g><title>unixShmLock (21 samples, 0.11%)</title><rect x="29.6042%" y="485" width="0.1082%" height="15" fill="rgb(230,97,0)" fg:x="5745" fg:w="21"/><text x="29.8542%" y="495.50"></text></g><g><title>unixShmSystemLock (20 samples, 0.10%)</title><rect x="29.6094%" y="469" width="0.1031%" height="15" fill="rgb(250,173,50)" fg:x="5746" fg:w="20"/><text x="29.8594%" y="479.50"></text></g><g><title>__GI___libc_fcntl64 (20 samples, 0.10%)</title><rect x="29.6094%" y="453" width="0.1031%" height="15" fill="rgb(240,15,50)" fg:x="5746" fg:w="20"/><text x="29.8594%" y="463.50"></text></g><g><title>__fcntl64_nocancel_adjusted (19 samples, 0.10%)</title><rect x="29.6146%" y="437" width="0.0979%" height="15" fill="rgb(221,93,22)" fg:x="5747" fg:w="19"/><text x="29.8646%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (30 samples, 0.15%)</title><rect x="29.5630%" y="741" width="0.1546%" height="15" fill="rgb(245,180,53)" fg:x="5737" fg:w="30"/><text x="29.8130%" y="751.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (30 samples, 0.15%)</title><rect x="29.5630%" y="725" width="0.1546%" height="15" fill="rgb(231,88,51)" fg:x="5737" fg:w="30"/><text x="29.8130%" y="735.50"></text></g><g><title>rusqlite::row::Rows::reset (30 samples, 0.15%)</title><rect x="29.5630%" y="709" width="0.1546%" height="15" fill="rgb(240,58,21)" fg:x="5737" fg:w="30"/><text x="29.8130%" y="719.50"></text></g><g><title>rusqlite::statement::Statement::reset (30 samples, 0.15%)</title><rect x="29.5630%" y="693" width="0.1546%" height="15" fill="rgb(237,21,10)" fg:x="5737" fg:w="30"/><text x="29.8130%" y="703.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (30 samples, 0.15%)</title><rect x="29.5630%" y="677" width="0.1546%" height="15" fill="rgb(218,43,11)" fg:x="5737" fg:w="30"/><text x="29.8130%" y="687.50"></text></g><g><title>sqlite3_reset (29 samples, 0.15%)</title><rect x="29.5682%" y="661" width="0.1494%" height="15" fill="rgb(218,221,29)" fg:x="5738" fg:w="29"/><text x="29.8182%" y="671.50"></text></g><g><title>sqlite3_reset (29 samples, 0.15%)</title><rect x="29.5682%" y="645" width="0.1494%" height="15" fill="rgb(214,118,42)" fg:x="5738" fg:w="29"/><text x="29.8182%" y="655.50"></text></g><g><title>sqlite3VdbeReset (29 samples, 0.15%)</title><rect x="29.5682%" y="629" width="0.1494%" height="15" fill="rgb(251,200,26)" fg:x="5738" fg:w="29"/><text x="29.8182%" y="639.50"></text></g><g><title>sqlite3VdbeHalt (29 samples, 0.15%)</title><rect x="29.5682%" y="613" width="0.1494%" height="15" fill="rgb(237,101,39)" fg:x="5738" fg:w="29"/><text x="29.8182%" y="623.50"></text></g><g><title>vdbeCommit (23 samples, 0.12%)</title><rect x="29.5991%" y="597" width="0.1185%" height="15" fill="rgb(251,117,11)" fg:x="5744" fg:w="23"/><text x="29.8491%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="29.7176%" y="741" width="0.0103%" height="15" fill="rgb(216,223,23)" fg:x="5767" fg:w="2"/><text x="29.9676%" y="751.50"></text></g><g><title>zilliqa::db::Db::contains_transaction::{{closure}} (2 samples, 0.01%)</title><rect x="29.7176%" y="725" width="0.0103%" height="15" fill="rgb(251,54,12)" fg:x="5767" fg:w="2"/><text x="29.9676%" y="735.50"></text></g><g><title>rusqlite::row::Row::get (2 samples, 0.01%)</title><rect x="29.7176%" y="709" width="0.0103%" height="15" fill="rgb(254,176,54)" fg:x="5767" fg:w="2"/><text x="29.9676%" y="719.50"></text></g><g><title>rusqlite::statement::Statement::value_ref (2 samples, 0.01%)</title><rect x="29.7176%" y="693" width="0.0103%" height="15" fill="rgb(210,32,8)" fg:x="5767" fg:w="2"/><text x="29.9676%" y="703.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (2 samples, 0.01%)</title><rect x="29.7898%" y="597" width="0.0103%" height="15" fill="rgb(235,52,38)" fg:x="5781" fg:w="2"/><text x="30.0398%" y="607.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl core::ffi::c_str::CStr&gt;::to_string_lossy (2 samples, 0.01%)</title><rect x="29.7898%" y="581" width="0.0103%" height="15" fill="rgb(231,4,44)" fg:x="5781" fg:w="2"/><text x="30.0398%" y="591.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.01%)</title><rect x="29.7898%" y="565" width="0.0103%" height="15" fill="rgb(249,2,32)" fg:x="5781" fg:w="2"/><text x="30.0398%" y="575.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="29.7898%" y="549" width="0.0103%" height="15" fill="rgb(224,65,26)" fg:x="5781" fg:w="2"/><text x="30.0398%" y="559.50"></text></g><g><title>walLockShared (24 samples, 0.12%)</title><rect x="29.8361%" y="469" width="0.1237%" height="15" fill="rgb(250,73,40)" fg:x="5790" fg:w="24"/><text x="30.0861%" y="479.50"></text></g><g><title>walLockShared (24 samples, 0.12%)</title><rect x="29.8361%" y="453" width="0.1237%" height="15" fill="rgb(253,177,16)" fg:x="5790" fg:w="24"/><text x="30.0861%" y="463.50"></text></g><g><title>sqlite3OsShmLock (24 samples, 0.12%)</title><rect x="29.8361%" y="437" width="0.1237%" height="15" fill="rgb(217,32,34)" fg:x="5790" fg:w="24"/><text x="30.0861%" y="447.50"></text></g><g><title>unixShmLock (24 samples, 0.12%)</title><rect x="29.8361%" y="421" width="0.1237%" height="15" fill="rgb(212,7,10)" fg:x="5790" fg:w="24"/><text x="30.0861%" y="431.50"></text></g><g><title>unixShmSystemLock (21 samples, 0.11%)</title><rect x="29.8516%" y="405" width="0.1082%" height="15" fill="rgb(245,89,8)" fg:x="5793" fg:w="21"/><text x="30.1016%" y="415.50"></text></g><g><title>__GI___libc_fcntl64 (21 samples, 0.11%)</title><rect x="29.8516%" y="389" width="0.1082%" height="15" fill="rgb(237,16,53)" fg:x="5793" fg:w="21"/><text x="30.1016%" y="399.50"></text></g><g><title>__fcntl64_nocancel_adjusted (21 samples, 0.11%)</title><rect x="29.8516%" y="373" width="0.1082%" height="15" fill="rgb(250,204,30)" fg:x="5793" fg:w="21"/><text x="30.1016%" y="383.50"></text></g><g><title>sqlite3BtreeBeginTrans (32 samples, 0.16%)</title><rect x="29.8001%" y="597" width="0.1649%" height="15" fill="rgb(208,77,27)" fg:x="5783" fg:w="32"/><text x="30.0501%" y="607.50"></text></g><g><title>btreeBeginTrans (32 samples, 0.16%)</title><rect x="29.8001%" y="581" width="0.1649%" height="15" fill="rgb(250,204,28)" fg:x="5783" fg:w="32"/><text x="30.0501%" y="591.50"></text></g><g><title>lockBtree (28 samples, 0.14%)</title><rect x="29.8207%" y="565" width="0.1443%" height="15" fill="rgb(244,63,21)" fg:x="5787" fg:w="28"/><text x="30.0707%" y="575.50"></text></g><g><title>sqlite3PagerSharedLock (26 samples, 0.13%)</title><rect x="29.8310%" y="549" width="0.1340%" height="15" fill="rgb(236,85,44)" fg:x="5789" fg:w="26"/><text x="30.0810%" y="559.50"></text></g><g><title>pagerBeginReadTransaction (26 samples, 0.13%)</title><rect x="29.8310%" y="533" width="0.1340%" height="15" fill="rgb(215,98,4)" fg:x="5789" fg:w="26"/><text x="30.0810%" y="543.50"></text></g><g><title>sqlite3WalBeginReadTransaction (26 samples, 0.13%)</title><rect x="29.8310%" y="517" width="0.1340%" height="15" fill="rgb(235,38,11)" fg:x="5789" fg:w="26"/><text x="30.0810%" y="527.50"></text></g><g><title>walBeginReadTransaction (26 samples, 0.13%)</title><rect x="29.8310%" y="501" width="0.1340%" height="15" fill="rgb(254,186,25)" fg:x="5789" fg:w="26"/><text x="30.0810%" y="511.50"></text></g><g><title>walTryBeginRead (26 samples, 0.13%)</title><rect x="29.8310%" y="485" width="0.1340%" height="15" fill="rgb(225,55,31)" fg:x="5789" fg:w="26"/><text x="30.0810%" y="495.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.01%)</title><rect x="29.9959%" y="517" width="0.0103%" height="15" fill="rgb(211,15,21)" fg:x="5821" fg:w="2"/><text x="30.2459%" y="527.50"></text></g><g><title>unixRead (2 samples, 0.01%)</title><rect x="29.9959%" y="501" width="0.0103%" height="15" fill="rgb(215,187,41)" fg:x="5821" fg:w="2"/><text x="30.2459%" y="511.50"></text></g><g><title>readDbPage (82 samples, 0.42%)</title><rect x="29.9959%" y="533" width="0.4225%" height="15" fill="rgb(248,69,32)" fg:x="5821" fg:w="82"/><text x="30.2459%" y="543.50"></text></g><g><title>sqlite3WalReadFrame (79 samples, 0.41%)</title><rect x="30.0113%" y="517" width="0.4071%" height="15" fill="rgb(252,102,52)" fg:x="5824" fg:w="79"/><text x="30.2613%" y="527.50"></text></g><g><title>sqlite3OsRead (79 samples, 0.41%)</title><rect x="30.0113%" y="501" width="0.4071%" height="15" fill="rgb(253,140,32)" fg:x="5824" fg:w="79"/><text x="30.2613%" y="511.50"></text></g><g><title>unixRead (79 samples, 0.41%)</title><rect x="30.0113%" y="485" width="0.4071%" height="15" fill="rgb(216,56,42)" fg:x="5824" fg:w="79"/><text x="30.2613%" y="495.50"></text></g><g><title>seekAndRead (79 samples, 0.41%)</title><rect x="30.0113%" y="469" width="0.4071%" height="15" fill="rgb(216,184,14)" fg:x="5824" fg:w="79"/><text x="30.2613%" y="479.50"></text></g><g><title>__libc_pread64 (79 samples, 0.41%)</title><rect x="30.0113%" y="453" width="0.4071%" height="15" fill="rgb(237,187,27)" fg:x="5824" fg:w="79"/><text x="30.2613%" y="463.50"></text></g><g><title>__libc_pread64 (79 samples, 0.41%)</title><rect x="30.0113%" y="437" width="0.4071%" height="15" fill="rgb(219,65,3)" fg:x="5824" fg:w="79"/><text x="30.2613%" y="447.50"></text></g><g><title>sqlite3PcacheFetch (4 samples, 0.02%)</title><rect x="30.4184%" y="533" width="0.0206%" height="15" fill="rgb(245,83,25)" fg:x="5903" fg:w="4"/><text x="30.6684%" y="543.50"></text></g><g><title>pcache1Fetch (4 samples, 0.02%)</title><rect x="30.4184%" y="517" width="0.0206%" height="15" fill="rgb(214,205,45)" fg:x="5903" fg:w="4"/><text x="30.6684%" y="527.50"></text></g><g><title>pcache1FetchWithMutex (4 samples, 0.02%)</title><rect x="30.4184%" y="501" width="0.0206%" height="15" fill="rgb(241,20,18)" fg:x="5903" fg:w="4"/><text x="30.6684%" y="511.50"></text></g><g><title>pcache1FetchNoMutex (3 samples, 0.02%)</title><rect x="30.4236%" y="485" width="0.0155%" height="15" fill="rgb(232,163,23)" fg:x="5904" fg:w="3"/><text x="30.6736%" y="495.50"></text></g><g><title>getAndInitPage (89 samples, 0.46%)</title><rect x="29.9856%" y="581" width="0.4586%" height="15" fill="rgb(214,5,46)" fg:x="5819" fg:w="89"/><text x="30.2356%" y="591.50"></text></g><g><title>sqlite3PagerGet (88 samples, 0.45%)</title><rect x="29.9907%" y="565" width="0.4535%" height="15" fill="rgb(229,78,17)" fg:x="5820" fg:w="88"/><text x="30.2407%" y="575.50"></text></g><g><title>getPageNormal (88 samples, 0.45%)</title><rect x="29.9907%" y="549" width="0.4535%" height="15" fill="rgb(248,89,10)" fg:x="5820" fg:w="88"/><text x="30.2407%" y="559.50"></text></g><g><title>sqlite3BtreeIndexMoveto (97 samples, 0.50%)</title><rect x="29.9650%" y="597" width="0.4998%" height="15" fill="rgb(248,54,15)" fg:x="5815" fg:w="97"/><text x="30.2150%" y="607.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (3 samples, 0.02%)</title><rect x="30.4493%" y="581" width="0.0155%" height="15" fill="rgb(223,116,6)" fg:x="5909" fg:w="3"/><text x="30.6993%" y="591.50"></text></g><g><title>enlargeAndAppend (5 samples, 0.03%)</title><rect x="30.4803%" y="581" width="0.0258%" height="15" fill="rgb(205,125,38)" fg:x="5915" fg:w="5"/><text x="30.7303%" y="591.50"></text></g><g><title>sqlite3StrAccumEnlarge (5 samples, 0.03%)</title><rect x="30.4803%" y="565" width="0.0258%" height="15" fill="rgb(251,78,38)" fg:x="5915" fg:w="5"/><text x="30.7303%" y="575.50"></text></g><g><title>sqlite3Malloc (5 samples, 0.03%)</title><rect x="30.4803%" y="549" width="0.0258%" height="15" fill="rgb(253,78,28)" fg:x="5915" fg:w="5"/><text x="30.7303%" y="559.50"></text></g><g><title>mallocWithAlarm (2 samples, 0.01%)</title><rect x="30.4957%" y="533" width="0.0103%" height="15" fill="rgb(209,120,3)" fg:x="5918" fg:w="2"/><text x="30.7457%" y="543.50"></text></g><g><title>sqlite3MemMalloc (2 samples, 0.01%)</title><rect x="30.4957%" y="517" width="0.0103%" height="15" fill="rgb(238,229,9)" fg:x="5918" fg:w="2"/><text x="30.7457%" y="527.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="30.5060%" y="565" width="0.0103%" height="15" fill="rgb(253,159,18)" fg:x="5920" fg:w="2"/><text x="30.7560%" y="575.50"></text></g><g><title>findNextHostParameter (8 samples, 0.04%)</title><rect x="30.5060%" y="581" width="0.0412%" height="15" fill="rgb(244,42,34)" fg:x="5920" fg:w="8"/><text x="30.7560%" y="591.50"></text></g><g><title>sqlite3GetToken (6 samples, 0.03%)</title><rect x="30.5163%" y="565" width="0.0309%" height="15" fill="rgb(224,8,7)" fg:x="5922" fg:w="6"/><text x="30.7663%" y="575.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (186 samples, 0.96%)</title><rect x="29.7279%" y="741" width="0.9585%" height="15" fill="rgb(210,201,45)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="751.50"></text></g><g><title>rusqlite::row::Rows::next (186 samples, 0.96%)</title><rect x="29.7279%" y="725" width="0.9585%" height="15" fill="rgb(252,185,21)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="735.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (186 samples, 0.96%)</title><rect x="29.7279%" y="709" width="0.9585%" height="15" fill="rgb(223,131,1)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="719.50"></text></g><g><title>rusqlite::statement::Statement::step (186 samples, 0.96%)</title><rect x="29.7279%" y="693" width="0.9585%" height="15" fill="rgb(245,141,16)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="703.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (186 samples, 0.96%)</title><rect x="29.7279%" y="677" width="0.9585%" height="15" fill="rgb(229,55,45)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="687.50"></text></g><g><title>sqlite3_step (186 samples, 0.96%)</title><rect x="29.7279%" y="661" width="0.9585%" height="15" fill="rgb(208,92,15)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="671.50"></text></g><g><title>sqlite3_step (186 samples, 0.96%)</title><rect x="29.7279%" y="645" width="0.9585%" height="15" fill="rgb(234,185,47)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="655.50"></text></g><g><title>sqlite3Step (186 samples, 0.96%)</title><rect x="29.7279%" y="629" width="0.9585%" height="15" fill="rgb(253,104,50)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="639.50"></text></g><g><title>sqlite3VdbeExec (186 samples, 0.96%)</title><rect x="29.7279%" y="613" width="0.9585%" height="15" fill="rgb(205,70,7)" fg:x="5769" fg:w="186"/><text x="29.9779%" y="623.50"></text></g><g><title>sqlite3VdbeExpandSql (43 samples, 0.22%)</title><rect x="30.4648%" y="597" width="0.2216%" height="15" fill="rgb(240,178,43)" fg:x="5912" fg:w="43"/><text x="30.7148%" y="607.50"></text></g><g><title>sqlite3_str_appendf (27 samples, 0.14%)</title><rect x="30.5473%" y="581" width="0.1391%" height="15" fill="rgb(214,112,2)" fg:x="5928" fg:w="27"/><text x="30.7973%" y="591.50"></text></g><g><title>sqlite3_str_vappendf (27 samples, 0.14%)</title><rect x="30.5473%" y="565" width="0.1391%" height="15" fill="rgb(206,46,17)" fg:x="5928" fg:w="27"/><text x="30.7973%" y="575.50"></text></g><g><title>enlargeAndAppend (5 samples, 0.03%)</title><rect x="30.6606%" y="549" width="0.0258%" height="15" fill="rgb(225,220,16)" fg:x="5950" fg:w="5"/><text x="30.9106%" y="559.50"></text></g><g><title>sqlite3StrAccumEnlarge (5 samples, 0.03%)</title><rect x="30.6606%" y="533" width="0.0258%" height="15" fill="rgb(238,65,40)" fg:x="5950" fg:w="5"/><text x="30.9106%" y="543.50"></text></g><g><title>sqlite3Realloc (5 samples, 0.03%)</title><rect x="30.6606%" y="517" width="0.0258%" height="15" fill="rgb(230,151,21)" fg:x="5950" fg:w="5"/><text x="30.9106%" y="527.50"></text></g><g><title>sqlite3MemRealloc (5 samples, 0.03%)</title><rect x="30.6606%" y="501" width="0.0258%" height="15" fill="rgb(218,58,49)" fg:x="5950" fg:w="5"/><text x="30.9106%" y="511.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="30.6606%" y="485" width="0.0258%" height="15" fill="rgb(219,179,14)" fg:x="5950" fg:w="5"/><text x="30.9106%" y="495.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="30.6658%" y="469" width="0.0206%" height="15" fill="rgb(223,72,1)" fg:x="5951" fg:w="4"/><text x="30.9158%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="30.6709%" y="453" width="0.0155%" height="15" fill="rgb(238,126,10)" fg:x="5952" fg:w="3"/><text x="30.9209%" y="463.50"></text></g><g><title>zilliqa::consensus::Consensus::new_transaction (313 samples, 1.61%)</title><rect x="29.0992%" y="805" width="1.6129%" height="15" fill="rgb(224,206,38)" fg:x="5647" fg:w="313"/><text x="29.3492%" y="815.50"></text></g><g><title>zilliqa::db::Db::contains_transaction (310 samples, 1.60%)</title><rect x="29.1147%" y="789" width="1.5974%" height="15" fill="rgb(212,201,54)" fg:x="5650" fg:w="310"/><text x="29.3647%" y="799.50"></text></g><g><title>rusqlite::Connection::query_row (310 samples, 1.60%)</title><rect x="29.1147%" y="773" width="1.5974%" height="15" fill="rgb(218,154,48)" fg:x="5650" fg:w="310"/><text x="29.3647%" y="783.50"></text></g><g><title>rusqlite::statement::Statement::query_row (223 samples, 1.15%)</title><rect x="29.5630%" y="757" width="1.1491%" height="15" fill="rgb(232,93,24)" fg:x="5737" fg:w="223"/><text x="29.8130%" y="767.50"></text></g><g><title>rusqlite::statement::Statement::query (5 samples, 0.03%)</title><rect x="30.6864%" y="741" width="0.0258%" height="15" fill="rgb(245,30,21)" fg:x="5955" fg:w="5"/><text x="30.9364%" y="751.50"></text></g><g><title>&lt;[T (5 samples, 0.03%)</title><rect x="30.6864%" y="725" width="0.0258%" height="15" fill="rgb(242,148,29)" fg:x="5955" fg:w="5"/><text x="30.9364%" y="735.50"></text></g><g><title> 1] as rusqlite::params::Params&gt;::__bind_in (5 samples, 0.03%)</title><rect x="30.6864%" y="709" width="0.0258%" height="15" fill="rgb(244,153,54)" fg:x="5955" fg:w="5"/><text x="30.9364%" y="719.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameters (5 samples, 0.03%)</title><rect x="30.6864%" y="693" width="0.0258%" height="15" fill="rgb(252,87,22)" fg:x="5955" fg:w="5"/><text x="30.9364%" y="703.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (4 samples, 0.02%)</title><rect x="30.6915%" y="677" width="0.0206%" height="15" fill="rgb(210,51,29)" fg:x="5956" fg:w="4"/><text x="30.9415%" y="687.50"></text></g><g><title>sqlite3_bind_blob (4 samples, 0.02%)</title><rect x="30.6915%" y="661" width="0.0206%" height="15" fill="rgb(242,136,47)" fg:x="5956" fg:w="4"/><text x="30.9415%" y="671.50"></text></g><g><title>bindText (2 samples, 0.01%)</title><rect x="30.7018%" y="645" width="0.0103%" height="15" fill="rgb(238,68,4)" fg:x="5958" fg:w="2"/><text x="30.9518%" y="655.50"></text></g><g><title>bindText (2 samples, 0.01%)</title><rect x="30.7018%" y="629" width="0.0103%" height="15" fill="rgb(242,161,30)" fg:x="5958" fg:w="2"/><text x="30.9518%" y="639.50"></text></g><g><title>sqlite3VdbeMemSetStr (2 samples, 0.01%)</title><rect x="30.7018%" y="613" width="0.0103%" height="15" fill="rgb(218,58,44)" fg:x="5958" fg:w="2"/><text x="30.9518%" y="623.50"></text></g><g><title>sqlite3OsRead (9 samples, 0.05%)</title><rect x="30.7122%" y="501" width="0.0464%" height="15" fill="rgb(252,125,32)" fg:x="5960" fg:w="9"/><text x="30.9622%" y="511.50"></text></g><g><title>unixRead (9 samples, 0.05%)</title><rect x="30.7122%" y="485" width="0.0464%" height="15" fill="rgb(219,178,0)" fg:x="5960" fg:w="9"/><text x="30.9622%" y="495.50"></text></g><g><title>seekAndRead (9 samples, 0.05%)</title><rect x="30.7122%" y="469" width="0.0464%" height="15" fill="rgb(213,152,7)" fg:x="5960" fg:w="9"/><text x="30.9622%" y="479.50"></text></g><g><title>__libc_pread64 (9 samples, 0.05%)</title><rect x="30.7122%" y="453" width="0.0464%" height="15" fill="rgb(249,109,34)" fg:x="5960" fg:w="9"/><text x="30.9622%" y="463.50"></text></g><g><title>__libc_pread64 (9 samples, 0.05%)</title><rect x="30.7122%" y="437" width="0.0464%" height="15" fill="rgb(232,96,21)" fg:x="5960" fg:w="9"/><text x="30.9622%" y="447.50"></text></g><g><title>sqlite3OsSync (42 samples, 0.22%)</title><rect x="30.7585%" y="501" width="0.2164%" height="15" fill="rgb(228,27,39)" fg:x="5969" fg:w="42"/><text x="31.0085%" y="511.50"></text></g><g><title>sqlite3OsSync (42 samples, 0.22%)</title><rect x="30.7585%" y="485" width="0.2164%" height="15" fill="rgb(211,182,52)" fg:x="5969" fg:w="42"/><text x="31.0085%" y="495.50"></text></g><g><title>unixSync (42 samples, 0.22%)</title><rect x="30.7585%" y="469" width="0.2164%" height="15" fill="rgb(234,178,38)" fg:x="5969" fg:w="42"/><text x="31.0085%" y="479.50"></text></g><g><title>full_fsync (42 samples, 0.22%)</title><rect x="30.7585%" y="453" width="0.2164%" height="15" fill="rgb(221,111,3)" fg:x="5969" fg:w="42"/><text x="31.0085%" y="463.50"></text></g><g><title>__GI_fsync (42 samples, 0.22%)</title><rect x="30.7585%" y="437" width="0.2164%" height="15" fill="rgb(228,175,21)" fg:x="5969" fg:w="42"/><text x="31.0085%" y="447.50"></text></g><g><title>doWalCallbacks (88 samples, 0.45%)</title><rect x="30.7122%" y="661" width="0.4535%" height="15" fill="rgb(228,174,43)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="671.50"></text></g><g><title>sqlite3WalDefaultHook (88 samples, 0.45%)</title><rect x="30.7122%" y="645" width="0.4535%" height="15" fill="rgb(211,191,0)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="655.50"></text></g><g><title>sqlite3WalDefaultHook (88 samples, 0.45%)</title><rect x="30.7122%" y="629" width="0.4535%" height="15" fill="rgb(253,117,3)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="639.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (88 samples, 0.45%)</title><rect x="30.7122%" y="613" width="0.4535%" height="15" fill="rgb(241,127,19)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="623.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (88 samples, 0.45%)</title><rect x="30.7122%" y="597" width="0.4535%" height="15" fill="rgb(218,103,12)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="607.50"></text></g><g><title>sqlite3Checkpoint (88 samples, 0.45%)</title><rect x="30.7122%" y="581" width="0.4535%" height="15" fill="rgb(236,214,43)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="591.50"></text></g><g><title>sqlite3BtreeCheckpoint (88 samples, 0.45%)</title><rect x="30.7122%" y="565" width="0.4535%" height="15" fill="rgb(244,144,19)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="575.50"></text></g><g><title>sqlite3PagerCheckpoint (88 samples, 0.45%)</title><rect x="30.7122%" y="549" width="0.4535%" height="15" fill="rgb(246,188,10)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="559.50"></text></g><g><title>sqlite3WalCheckpoint (88 samples, 0.45%)</title><rect x="30.7122%" y="533" width="0.4535%" height="15" fill="rgb(212,193,33)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="543.50"></text></g><g><title>walCheckpoint (88 samples, 0.45%)</title><rect x="30.7122%" y="517" width="0.4535%" height="15" fill="rgb(241,51,29)" fg:x="5960" fg:w="88"/><text x="30.9622%" y="527.50"></text></g><g><title>sqlite3OsWrite (37 samples, 0.19%)</title><rect x="30.9750%" y="501" width="0.1907%" height="15" fill="rgb(211,58,19)" fg:x="6011" fg:w="37"/><text x="31.2250%" y="511.50"></text></g><g><title>unixWrite (36 samples, 0.19%)</title><rect x="30.9801%" y="485" width="0.1855%" height="15" fill="rgb(229,111,26)" fg:x="6012" fg:w="36"/><text x="31.2301%" y="495.50"></text></g><g><title>seekAndWrite (36 samples, 0.19%)</title><rect x="30.9801%" y="469" width="0.1855%" height="15" fill="rgb(213,115,40)" fg:x="6012" fg:w="36"/><text x="31.2301%" y="479.50"></text></g><g><title>seekAndWriteFd (36 samples, 0.19%)</title><rect x="30.9801%" y="453" width="0.1855%" height="15" fill="rgb(209,56,44)" fg:x="6012" fg:w="36"/><text x="31.2301%" y="463.50"></text></g><g><title>__libc_pwrite64 (36 samples, 0.19%)</title><rect x="30.9801%" y="437" width="0.1855%" height="15" fill="rgb(230,108,32)" fg:x="6012" fg:w="36"/><text x="31.2301%" y="447.50"></text></g><g><title>__libc_pwrite64 (36 samples, 0.19%)</title><rect x="30.9801%" y="421" width="0.1855%" height="15" fill="rgb(216,165,31)" fg:x="6012" fg:w="36"/><text x="31.2301%" y="431.50"></text></g><g><title>sqlite3OsWrite (3 samples, 0.02%)</title><rect x="31.1656%" y="501" width="0.0155%" height="15" fill="rgb(218,122,21)" fg:x="6048" fg:w="3"/><text x="31.4156%" y="511.50"></text></g><g><title>unixWrite (3 samples, 0.02%)</title><rect x="31.1656%" y="485" width="0.0155%" height="15" fill="rgb(223,224,47)" fg:x="6048" fg:w="3"/><text x="31.4156%" y="495.50"></text></g><g><title>seekAndWrite (3 samples, 0.02%)</title><rect x="31.1656%" y="469" width="0.0155%" height="15" fill="rgb(238,102,44)" fg:x="6048" fg:w="3"/><text x="31.4156%" y="479.50"></text></g><g><title>seekAndWriteFd (3 samples, 0.02%)</title><rect x="31.1656%" y="453" width="0.0155%" height="15" fill="rgb(236,46,40)" fg:x="6048" fg:w="3"/><text x="31.4156%" y="463.50"></text></g><g><title>__libc_pwrite64 (3 samples, 0.02%)</title><rect x="31.1656%" y="437" width="0.0155%" height="15" fill="rgb(247,202,50)" fg:x="6048" fg:w="3"/><text x="31.4156%" y="447.50"></text></g><g><title>__libc_pwrite64 (3 samples, 0.02%)</title><rect x="31.1656%" y="421" width="0.0155%" height="15" fill="rgb(209,99,20)" fg:x="6048" fg:w="3"/><text x="31.4156%" y="431.50"></text></g><g><title>sqlite3OsRead (8 samples, 0.04%)</title><rect x="31.1811%" y="485" width="0.0412%" height="15" fill="rgb(252,27,34)" fg:x="6051" fg:w="8"/><text x="31.4311%" y="495.50"></text></g><g><title>unixRead (8 samples, 0.04%)</title><rect x="31.1811%" y="469" width="0.0412%" height="15" fill="rgb(215,206,23)" fg:x="6051" fg:w="8"/><text x="31.4311%" y="479.50"></text></g><g><title>seekAndRead (8 samples, 0.04%)</title><rect x="31.1811%" y="453" width="0.0412%" height="15" fill="rgb(212,135,36)" fg:x="6051" fg:w="8"/><text x="31.4311%" y="463.50"></text></g><g><title>__libc_pread64 (8 samples, 0.04%)</title><rect x="31.1811%" y="437" width="0.0412%" height="15" fill="rgb(240,189,1)" fg:x="6051" fg:w="8"/><text x="31.4311%" y="447.50"></text></g><g><title>__libc_pread64 (8 samples, 0.04%)</title><rect x="31.1811%" y="421" width="0.0412%" height="15" fill="rgb(242,56,20)" fg:x="6051" fg:w="8"/><text x="31.4311%" y="431.50"></text></g><g><title>rusqlite::transaction::Transaction::commit (102 samples, 0.53%)</title><rect x="30.7122%" y="789" width="0.5256%" height="15" fill="rgb(247,132,33)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="799.50"></text></g><g><title>rusqlite::transaction::Transaction::commit_ (102 samples, 0.53%)</title><rect x="30.7122%" y="773" width="0.5256%" height="15" fill="rgb(208,149,11)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="783.50"></text></g><g><title>rusqlite::Connection::execute_batch (102 samples, 0.53%)</title><rect x="30.7122%" y="757" width="0.5256%" height="15" fill="rgb(211,33,11)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="767.50"></text></g><g><title>rusqlite::statement::Statement::step (102 samples, 0.53%)</title><rect x="30.7122%" y="741" width="0.5256%" height="15" fill="rgb(221,29,38)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="751.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (102 samples, 0.53%)</title><rect x="30.7122%" y="725" width="0.5256%" height="15" fill="rgb(206,182,49)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="735.50"></text></g><g><title>sqlite3_step (102 samples, 0.53%)</title><rect x="30.7122%" y="709" width="0.5256%" height="15" fill="rgb(216,140,1)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="719.50"></text></g><g><title>sqlite3_step (102 samples, 0.53%)</title><rect x="30.7122%" y="693" width="0.5256%" height="15" fill="rgb(232,57,40)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="703.50"></text></g><g><title>sqlite3Step (102 samples, 0.53%)</title><rect x="30.7122%" y="677" width="0.5256%" height="15" fill="rgb(224,186,18)" fg:x="5960" fg:w="102"/><text x="30.9622%" y="687.50"></text></g><g><title>sqlite3VdbeExec (14 samples, 0.07%)</title><rect x="31.1656%" y="661" width="0.0721%" height="15" fill="rgb(215,121,11)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="671.50"></text></g><g><title>sqlite3VdbeHalt (14 samples, 0.07%)</title><rect x="31.1656%" y="645" width="0.0721%" height="15" fill="rgb(245,147,10)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="655.50"></text></g><g><title>vdbeCommit (14 samples, 0.07%)</title><rect x="31.1656%" y="629" width="0.0721%" height="15" fill="rgb(238,153,13)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="639.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (14 samples, 0.07%)</title><rect x="31.1656%" y="613" width="0.0721%" height="15" fill="rgb(233,108,0)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="623.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (14 samples, 0.07%)</title><rect x="31.1656%" y="597" width="0.0721%" height="15" fill="rgb(212,157,17)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="607.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (14 samples, 0.07%)</title><rect x="31.1656%" y="581" width="0.0721%" height="15" fill="rgb(225,213,38)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="591.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (14 samples, 0.07%)</title><rect x="31.1656%" y="565" width="0.0721%" height="15" fill="rgb(248,16,11)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="575.50"></text></g><g><title>pagerWalFrames (14 samples, 0.07%)</title><rect x="31.1656%" y="549" width="0.0721%" height="15" fill="rgb(241,33,4)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="559.50"></text></g><g><title>sqlite3WalFrames (14 samples, 0.07%)</title><rect x="31.1656%" y="533" width="0.0721%" height="15" fill="rgb(222,26,43)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="543.50"></text></g><g><title>walFrames (14 samples, 0.07%)</title><rect x="31.1656%" y="517" width="0.0721%" height="15" fill="rgb(243,29,36)" fg:x="6048" fg:w="14"/><text x="31.4156%" y="527.50"></text></g><g><title>walRewriteChecksums (11 samples, 0.06%)</title><rect x="31.1811%" y="501" width="0.0567%" height="15" fill="rgb(241,9,27)" fg:x="6051" fg:w="11"/><text x="31.4311%" y="511.50"></text></g><g><title>walEncodeFrame (3 samples, 0.02%)</title><rect x="31.2223%" y="485" width="0.0155%" height="15" fill="rgb(205,117,26)" fg:x="6059" fg:w="3"/><text x="31.4723%" y="495.50"></text></g><g><title>walChecksumBytes (3 samples, 0.02%)</title><rect x="31.2223%" y="469" width="0.0155%" height="15" fill="rgb(209,80,39)" fg:x="6059" fg:w="3"/><text x="31.4723%" y="479.50"></text></g><g><title>core::mem::swap (3 samples, 0.02%)</title><rect x="31.2429%" y="661" width="0.0155%" height="15" fill="rgb(239,155,6)" fg:x="6063" fg:w="3"/><text x="31.4929%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (6 samples, 0.03%)</title><rect x="31.2429%" y="709" width="0.0309%" height="15" fill="rgb(212,104,12)" fg:x="6063" fg:w="6"/><text x="31.4929%" y="719.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="31.2429%" y="693" width="0.0309%" height="15" fill="rgb(234,204,3)" fg:x="6063" fg:w="6"/><text x="31.4929%" y="703.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (6 samples, 0.03%)</title><rect x="31.2429%" y="677" width="0.0309%" height="15" fill="rgb(251,218,7)" fg:x="6063" fg:w="6"/><text x="31.4929%" y="687.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (3 samples, 0.02%)</title><rect x="31.2584%" y="661" width="0.0155%" height="15" fill="rgb(221,81,32)" fg:x="6066" fg:w="3"/><text x="31.5084%" y="671.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (2 samples, 0.01%)</title><rect x="31.2635%" y="645" width="0.0103%" height="15" fill="rgb(214,152,26)" fg:x="6067" fg:w="2"/><text x="31.5135%" y="655.50"></text></g><g><title>sqlite3_finalize (2 samples, 0.01%)</title><rect x="31.2635%" y="629" width="0.0103%" height="15" fill="rgb(223,22,3)" fg:x="6067" fg:w="2"/><text x="31.5135%" y="639.50"></text></g><g><title>sqlite3VdbeDelete (2 samples, 0.01%)</title><rect x="31.2635%" y="613" width="0.0103%" height="15" fill="rgb(207,174,7)" fg:x="6067" fg:w="2"/><text x="31.5135%" y="623.50"></text></g><g><title>sqlite3VdbeClearObject (2 samples, 0.01%)</title><rect x="31.2635%" y="597" width="0.0103%" height="15" fill="rgb(224,19,52)" fg:x="6067" fg:w="2"/><text x="31.5135%" y="607.50"></text></g><g><title>vdbeFreeOpArray (2 samples, 0.01%)</title><rect x="31.2635%" y="581" width="0.0103%" height="15" fill="rgb(228,24,14)" fg:x="6067" fg:w="2"/><text x="31.5135%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::types::to_sql::ToSqlOutput&gt; (2 samples, 0.01%)</title><rect x="31.2790%" y="613" width="0.0103%" height="15" fill="rgb(230,153,43)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::types::value::Value&gt; (2 samples, 0.01%)</title><rect x="31.2790%" y="597" width="0.0103%" height="15" fill="rgb(231,106,12)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="31.2790%" y="581" width="0.0103%" height="15" fill="rgb(215,92,2)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="31.2790%" y="565" width="0.0103%" height="15" fill="rgb(249,143,25)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="31.2790%" y="549" width="0.0103%" height="15" fill="rgb(252,7,35)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="559.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="31.2790%" y="533" width="0.0103%" height="15" fill="rgb(216,69,40)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="31.2790%" y="517" width="0.0103%" height="15" fill="rgb(240,36,33)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="31.2790%" y="501" width="0.0103%" height="15" fill="rgb(231,128,14)" fg:x="6070" fg:w="2"/><text x="31.5290%" y="511.50"></text></g><g><title>memcpy (2 samples, 0.01%)</title><rect x="31.3048%" y="549" width="0.0103%" height="15" fill="rgb(245,143,14)" fg:x="6075" fg:w="2"/><text x="31.5548%" y="559.50"></text></g><g><title>bindText (6 samples, 0.03%)</title><rect x="31.2893%" y="581" width="0.0309%" height="15" fill="rgb(222,130,28)" fg:x="6072" fg:w="6"/><text x="31.5393%" y="591.50"></text></g><g><title>sqlite3VdbeMemSetStr (4 samples, 0.02%)</title><rect x="31.2996%" y="565" width="0.0206%" height="15" fill="rgb(212,10,48)" fg:x="6074" fg:w="4"/><text x="31.5496%" y="575.50"></text></g><g><title>sqlite3_bind_blob (7 samples, 0.04%)</title><rect x="31.2893%" y="613" width="0.0361%" height="15" fill="rgb(254,118,45)" fg:x="6072" fg:w="7"/><text x="31.5393%" y="623.50"></text></g><g><title>bindText (7 samples, 0.04%)</title><rect x="31.2893%" y="597" width="0.0361%" height="15" fill="rgb(228,6,45)" fg:x="6072" fg:w="7"/><text x="31.5393%" y="607.50"></text></g><g><title>&lt;(A,B) as rusqlite::params::Params&gt;::__bind_in (12 samples, 0.06%)</title><rect x="31.2738%" y="661" width="0.0618%" height="15" fill="rgb(241,18,35)" fg:x="6069" fg:w="12"/><text x="31.5238%" y="671.50"></text></g><g><title>rusqlite::statement::Statement::raw_bind_parameter (11 samples, 0.06%)</title><rect x="31.2790%" y="645" width="0.0567%" height="15" fill="rgb(227,214,53)" fg:x="6070" fg:w="11"/><text x="31.5290%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (11 samples, 0.06%)</title><rect x="31.2790%" y="629" width="0.0567%" height="15" fill="rgb(224,107,51)" fg:x="6070" fg:w="11"/><text x="31.5290%" y="639.50"></text></g><g><title>zilliqa::db::&lt;impl rusqlite::types::to_sql::ToSql for zilliqa::crypto::Hash&gt;::to_sql (2 samples, 0.01%)</title><rect x="31.3254%" y="613" width="0.0103%" height="15" fill="rgb(248,60,28)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="31.3254%" y="597" width="0.0103%" height="15" fill="rgb(249,101,23)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="31.3254%" y="581" width="0.0103%" height="15" fill="rgb(228,51,19)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="31.3254%" y="565" width="0.0103%" height="15" fill="rgb(213,20,6)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="31.3254%" y="549" width="0.0103%" height="15" fill="rgb(212,124,10)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="31.3254%" y="533" width="0.0103%" height="15" fill="rgb(248,3,40)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="31.3254%" y="517" width="0.0103%" height="15" fill="rgb(223,178,23)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="31.3254%" y="501" width="0.0103%" height="15" fill="rgb(240,132,45)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="31.3254%" y="485" width="0.0103%" height="15" fill="rgb(245,164,36)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="31.3254%" y="469" width="0.0103%" height="15" fill="rgb(231,188,53)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="31.3254%" y="453" width="0.0103%" height="15" fill="rgb(237,198,39)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="463.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="31.3254%" y="437" width="0.0103%" height="15" fill="rgb(223,120,35)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="31.3254%" y="421" width="0.0103%" height="15" fill="rgb(253,107,49)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="431.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="31.3254%" y="405" width="0.0103%" height="15" fill="rgb(216,44,31)" fg:x="6079" fg:w="2"/><text x="31.5754%" y="415.50"></text></g><g><title>allocateCursor (2 samples, 0.01%)</title><rect x="31.4181%" y="565" width="0.0103%" height="15" fill="rgb(253,87,21)" fg:x="6097" fg:w="2"/><text x="31.6681%" y="575.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl core::ffi::c_str::CStr&gt;::to_string_lossy (2 samples, 0.01%)</title><rect x="31.4284%" y="549" width="0.0103%" height="15" fill="rgb(226,18,2)" fg:x="6099" fg:w="2"/><text x="31.6784%" y="559.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (3 samples, 0.02%)</title><rect x="31.4284%" y="565" width="0.0155%" height="15" fill="rgb(216,8,46)" fg:x="6099" fg:w="3"/><text x="31.6784%" y="575.50"></text></g><g><title>readDbPage (298 samples, 1.54%)</title><rect x="31.5624%" y="501" width="1.5356%" height="15" fill="rgb(226,140,39)" fg:x="6125" fg:w="298"/><text x="31.8124%" y="511.50"></text></g><g><title>sqlite3WalReadFrame (297 samples, 1.53%)</title><rect x="31.5676%" y="485" width="1.5305%" height="15" fill="rgb(221,194,54)" fg:x="6126" fg:w="297"/><text x="31.8176%" y="495.50"></text></g><g><title>sqlite3OsRead (297 samples, 1.53%)</title><rect x="31.5676%" y="469" width="1.5305%" height="15" fill="rgb(213,92,11)" fg:x="6126" fg:w="297"/><text x="31.8176%" y="479.50"></text></g><g><title>unixRead (297 samples, 1.53%)</title><rect x="31.5676%" y="453" width="1.5305%" height="15" fill="rgb(229,162,46)" fg:x="6126" fg:w="297"/><text x="31.8176%" y="463.50"></text></g><g><title>seekAndRead (297 samples, 1.53%)</title><rect x="31.5676%" y="437" width="1.5305%" height="15" fill="rgb(214,111,36)" fg:x="6126" fg:w="297"/><text x="31.8176%" y="447.50"></text></g><g><title>__libc_pread64 (297 samples, 1.53%)</title><rect x="31.5676%" y="421" width="1.5305%" height="15" fill="rgb(207,6,21)" fg:x="6126" fg:w="297"/><text x="31.8176%" y="431.50"></text></g><g><title>__libc_pread64 (297 samples, 1.53%)</title><rect x="31.5676%" y="405" width="1.5305%" height="15" fill="rgb(213,127,38)" fg:x="6126" fg:w="297"/><text x="31.8176%" y="415.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="33.1032%" y="453" width="0.0103%" height="15" fill="rgb(238,118,32)" fg:x="6424" fg:w="2"/><text x="33.3532%" y="463.50"></text></g><g><title>lll_mutex_lock_optimized (2 samples, 0.01%)</title><rect x="33.1032%" y="437" width="0.0103%" height="15" fill="rgb(240,139,39)" fg:x="6424" fg:w="2"/><text x="33.3532%" y="447.50"></text></g><g><title>sqlite3PcacheFetch (5 samples, 0.03%)</title><rect x="33.0980%" y="501" width="0.0258%" height="15" fill="rgb(235,10,37)" fg:x="6423" fg:w="5"/><text x="33.3480%" y="511.50"></text></g><g><title>pcache1Fetch (4 samples, 0.02%)</title><rect x="33.1032%" y="485" width="0.0206%" height="15" fill="rgb(249,171,38)" fg:x="6424" fg:w="4"/><text x="33.3532%" y="495.50"></text></g><g><title>pcache1FetchWithMutex (4 samples, 0.02%)</title><rect x="33.1032%" y="469" width="0.0206%" height="15" fill="rgb(242,144,32)" fg:x="6424" fg:w="4"/><text x="33.3532%" y="479.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.01%)</title><rect x="33.1135%" y="453" width="0.0103%" height="15" fill="rgb(217,117,21)" fg:x="6426" fg:w="2"/><text x="33.3635%" y="463.50"></text></g><g><title>pagerWalFrames (276 samples, 1.42%)</title><rect x="33.1289%" y="453" width="1.4222%" height="15" fill="rgb(249,87,1)" fg:x="6429" fg:w="276"/><text x="33.3789%" y="463.50"></text></g><g><title>sqlite3WalFrames (275 samples, 1.42%)</title><rect x="33.1341%" y="437" width="1.4171%" height="15" fill="rgb(248,196,48)" fg:x="6430" fg:w="275"/><text x="33.3841%" y="447.50"></text></g><g><title>walFrames (275 samples, 1.42%)</title><rect x="33.1341%" y="421" width="1.4171%" height="15" fill="rgb(251,206,33)" fg:x="6430" fg:w="275"/><text x="33.3841%" y="431.50"></text></g><g><title>walWriteOneFrame (274 samples, 1.41%)</title><rect x="33.1392%" y="405" width="1.4119%" height="15" fill="rgb(232,141,28)" fg:x="6431" fg:w="274"/><text x="33.3892%" y="415.50"></text></g><g><title>unixWrite (274 samples, 1.41%)</title><rect x="33.1392%" y="389" width="1.4119%" height="15" fill="rgb(209,167,14)" fg:x="6431" fg:w="274"/><text x="33.3892%" y="399.50"></text></g><g><title>seekAndWrite (274 samples, 1.41%)</title><rect x="33.1392%" y="373" width="1.4119%" height="15" fill="rgb(225,11,50)" fg:x="6431" fg:w="274"/><text x="33.3892%" y="383.50"></text></g><g><title>seekAndWriteFd (274 samples, 1.41%)</title><rect x="33.1392%" y="357" width="1.4119%" height="15" fill="rgb(209,50,20)" fg:x="6431" fg:w="274"/><text x="33.3892%" y="367.50"></text></g><g><title>__libc_pwrite64 (274 samples, 1.41%)</title><rect x="33.1392%" y="341" width="1.4119%" height="15" fill="rgb(212,17,46)" fg:x="6431" fg:w="274"/><text x="33.3892%" y="351.50"></text></g><g><title>__libc_pwrite64 (274 samples, 1.41%)</title><rect x="33.1392%" y="325" width="1.4119%" height="15" fill="rgb(216,101,39)" fg:x="6431" fg:w="274"/><text x="33.3892%" y="335.50"></text></g><g><title>pagerStress (278 samples, 1.43%)</title><rect x="33.1289%" y="485" width="1.4325%" height="15" fill="rgb(212,228,48)" fg:x="6429" fg:w="278"/><text x="33.3789%" y="495.50"></text></g><g><title>pagerStress (278 samples, 1.43%)</title><rect x="33.1289%" y="469" width="1.4325%" height="15" fill="rgb(250,6,50)" fg:x="6429" fg:w="278"/><text x="33.3789%" y="479.50"></text></g><g><title>getAndInitPage (588 samples, 3.03%)</title><rect x="31.5469%" y="549" width="3.0300%" height="15" fill="rgb(250,160,48)" fg:x="6122" fg:w="588"/><text x="31.7969%" y="559.50">get..</text></g><g><title>sqlite3PagerGet (586 samples, 3.02%)</title><rect x="31.5573%" y="533" width="3.0197%" height="15" fill="rgb(244,216,33)" fg:x="6124" fg:w="586"/><text x="31.8073%" y="543.50">sql..</text></g><g><title>getPageNormal (585 samples, 3.01%)</title><rect x="31.5624%" y="517" width="3.0145%" height="15" fill="rgb(207,157,5)" fg:x="6125" fg:w="585"/><text x="31.8124%" y="527.50">get..</text></g><g><title>sqlite3PcacheFetchStress (281 samples, 1.45%)</title><rect x="33.1289%" y="501" width="1.4480%" height="15" fill="rgb(228,199,8)" fg:x="6429" fg:w="281"/><text x="33.3789%" y="511.50"></text></g><g><title>sqlite3PcachePagecount (2 samples, 0.01%)</title><rect x="34.5666%" y="485" width="0.0103%" height="15" fill="rgb(227,80,20)" fg:x="6708" fg:w="2"/><text x="34.8166%" y="495.50"></text></g><g><title>pcache1Pagecount (2 samples, 0.01%)</title><rect x="34.5666%" y="469" width="0.0103%" height="15" fill="rgb(222,9,33)" fg:x="6708" fg:w="2"/><text x="34.8166%" y="479.50"></text></g><g><title>sqlite3BtreeIndexMoveto (621 samples, 3.20%)</title><rect x="31.4490%" y="565" width="3.2000%" height="15" fill="rgb(239,44,28)" fg:x="6103" fg:w="621"/><text x="31.6990%" y="575.50">sql..</text></g><g><title>sqlite3VdbeRecordCompareWithSkip (13 samples, 0.07%)</title><rect x="34.5821%" y="549" width="0.0670%" height="15" fill="rgb(249,187,43)" fg:x="6711" fg:w="13"/><text x="34.8321%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.04%)</title><rect x="34.6130%" y="533" width="0.0361%" height="15" fill="rgb(216,141,28)" fg:x="6717" fg:w="7"/><text x="34.8630%" y="543.50"></text></g><g><title>pageFreeArray (3 samples, 0.02%)</title><rect x="34.6800%" y="501" width="0.0155%" height="15" fill="rgb(230,154,53)" fg:x="6730" fg:w="3"/><text x="34.9300%" y="511.50"></text></g><g><title>freeSpace (2 samples, 0.01%)</title><rect x="34.6851%" y="485" width="0.0103%" height="15" fill="rgb(227,82,4)" fg:x="6731" fg:w="2"/><text x="34.9351%" y="495.50"></text></g><g><title>editPage (4 samples, 0.02%)</title><rect x="34.6800%" y="517" width="0.0206%" height="15" fill="rgb(220,107,16)" fg:x="6730" fg:w="4"/><text x="34.9300%" y="527.50"></text></g><g><title>readDbPage (7 samples, 0.04%)</title><rect x="34.7006%" y="469" width="0.0361%" height="15" fill="rgb(207,187,2)" fg:x="6734" fg:w="7"/><text x="34.9506%" y="479.50"></text></g><g><title>sqlite3WalReadFrame (6 samples, 0.03%)</title><rect x="34.7058%" y="453" width="0.0309%" height="15" fill="rgb(210,162,52)" fg:x="6735" fg:w="6"/><text x="34.9558%" y="463.50"></text></g><g><title>sqlite3OsRead (6 samples, 0.03%)</title><rect x="34.7058%" y="437" width="0.0309%" height="15" fill="rgb(217,216,49)" fg:x="6735" fg:w="6"/><text x="34.9558%" y="447.50"></text></g><g><title>unixRead (6 samples, 0.03%)</title><rect x="34.7058%" y="421" width="0.0309%" height="15" fill="rgb(218,146,49)" fg:x="6735" fg:w="6"/><text x="34.9558%" y="431.50"></text></g><g><title>seekAndRead (6 samples, 0.03%)</title><rect x="34.7058%" y="405" width="0.0309%" height="15" fill="rgb(216,55,40)" fg:x="6735" fg:w="6"/><text x="34.9558%" y="415.50"></text></g><g><title>__libc_pread64 (6 samples, 0.03%)</title><rect x="34.7058%" y="389" width="0.0309%" height="15" fill="rgb(208,196,21)" fg:x="6735" fg:w="6"/><text x="34.9558%" y="399.50"></text></g><g><title>__libc_pread64 (6 samples, 0.03%)</title><rect x="34.7058%" y="373" width="0.0309%" height="15" fill="rgb(242,117,42)" fg:x="6735" fg:w="6"/><text x="34.9558%" y="383.50"></text></g><g><title>getAndInitPage (8 samples, 0.04%)</title><rect x="34.7006%" y="517" width="0.0412%" height="15" fill="rgb(210,11,23)" fg:x="6734" fg:w="8"/><text x="34.9506%" y="527.50"></text></g><g><title>sqlite3PagerGet (8 samples, 0.04%)</title><rect x="34.7006%" y="501" width="0.0412%" height="15" fill="rgb(217,110,2)" fg:x="6734" fg:w="8"/><text x="34.9506%" y="511.50"></text></g><g><title>getPageNormal (8 samples, 0.04%)</title><rect x="34.7006%" y="485" width="0.0412%" height="15" fill="rgb(229,77,54)" fg:x="6734" fg:w="8"/><text x="34.9506%" y="495.50"></text></g><g><title>balance_nonroot (18 samples, 0.09%)</title><rect x="34.6542%" y="533" width="0.0928%" height="15" fill="rgb(218,53,16)" fg:x="6725" fg:w="18"/><text x="34.9042%" y="543.50"></text></g><g><title>balance (22 samples, 0.11%)</title><rect x="34.6542%" y="549" width="0.1134%" height="15" fill="rgb(215,38,13)" fg:x="6725" fg:w="22"/><text x="34.9042%" y="559.50"></text></g><g><title>sqlite3PageMalloc (3 samples, 0.02%)</title><rect x="34.7521%" y="533" width="0.0155%" height="15" fill="rgb(235,42,18)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="543.50"></text></g><g><title>pcache1Alloc (3 samples, 0.02%)</title><rect x="34.7521%" y="517" width="0.0155%" height="15" fill="rgb(219,66,54)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="527.50"></text></g><g><title>pcache1Alloc (3 samples, 0.02%)</title><rect x="34.7521%" y="501" width="0.0155%" height="15" fill="rgb(222,205,4)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="511.50"></text></g><g><title>sqlite3Malloc (3 samples, 0.02%)</title><rect x="34.7521%" y="485" width="0.0155%" height="15" fill="rgb(227,213,46)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="495.50"></text></g><g><title>sqlite3Malloc (3 samples, 0.02%)</title><rect x="34.7521%" y="469" width="0.0155%" height="15" fill="rgb(250,145,42)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="479.50"></text></g><g><title>mallocWithAlarm (3 samples, 0.02%)</title><rect x="34.7521%" y="453" width="0.0155%" height="15" fill="rgb(219,15,2)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="463.50"></text></g><g><title>sqlite3MemMalloc (3 samples, 0.02%)</title><rect x="34.7521%" y="437" width="0.0155%" height="15" fill="rgb(231,181,52)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="447.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="34.7521%" y="421" width="0.0155%" height="15" fill="rgb(235,1,42)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="431.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="34.7521%" y="405" width="0.0155%" height="15" fill="rgb(249,88,27)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="415.50"></text></g><g><title>malloc_consolidate (3 samples, 0.02%)</title><rect x="34.7521%" y="389" width="0.0155%" height="15" fill="rgb(235,145,16)" fg:x="6744" fg:w="3"/><text x="35.0021%" y="399.50"></text></g><g><title>sqlite3BtreeInsert (26 samples, 0.13%)</title><rect x="34.6491%" y="565" width="0.1340%" height="15" fill="rgb(237,114,19)" fg:x="6724" fg:w="26"/><text x="34.8991%" y="575.50"></text></g><g><title>insertCellFast (2 samples, 0.01%)</title><rect x="34.7728%" y="549" width="0.0103%" height="15" fill="rgb(238,51,50)" fg:x="6748" fg:w="2"/><text x="35.0228%" y="559.50"></text></g><g><title>memmove (2 samples, 0.01%)</title><rect x="34.7728%" y="533" width="0.0103%" height="15" fill="rgb(205,194,25)" fg:x="6748" fg:w="2"/><text x="35.0228%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="34.7728%" y="517" width="0.0103%" height="15" fill="rgb(215,203,17)" fg:x="6748" fg:w="2"/><text x="35.0228%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="34.8088%" y="549" width="0.0103%" height="15" fill="rgb(233,112,49)" fg:x="6755" fg:w="2"/><text x="35.0588%" y="559.50"></text></g><g><title>enlargeAndAppend (7 samples, 0.04%)</title><rect x="34.8191%" y="549" width="0.0361%" height="15" fill="rgb(241,130,26)" fg:x="6757" fg:w="7"/><text x="35.0691%" y="559.50"></text></g><g><title>sqlite3StrAccumEnlarge (7 samples, 0.04%)</title><rect x="34.8191%" y="533" width="0.0361%" height="15" fill="rgb(252,223,19)" fg:x="6757" fg:w="7"/><text x="35.0691%" y="543.50"></text></g><g><title>sqlite3Realloc (4 samples, 0.02%)</title><rect x="34.8346%" y="517" width="0.0206%" height="15" fill="rgb(211,95,25)" fg:x="6760" fg:w="4"/><text x="35.0846%" y="527.50"></text></g><g><title>findNextHostParameter (8 samples, 0.04%)</title><rect x="34.8552%" y="549" width="0.0412%" height="15" fill="rgb(251,182,27)" fg:x="6764" fg:w="8"/><text x="35.1052%" y="559.50"></text></g><g><title>sqlite3GetToken (7 samples, 0.04%)</title><rect x="34.8604%" y="533" width="0.0361%" height="15" fill="rgb(238,24,4)" fg:x="6765" fg:w="7"/><text x="35.1104%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="35.1850%" y="517" width="0.0258%" height="15" fill="rgb(224,220,25)" fg:x="6828" fg:w="5"/><text x="35.4350%" y="527.50"></text></g><g><title>enlargeAndAppend (3 samples, 0.02%)</title><rect x="35.2108%" y="517" width="0.0155%" height="15" fill="rgb(239,133,26)" fg:x="6833" fg:w="3"/><text x="35.4608%" y="527.50"></text></g><g><title>sqlite3StrAccumEnlarge (3 samples, 0.02%)</title><rect x="35.2108%" y="501" width="0.0155%" height="15" fill="rgb(211,94,48)" fg:x="6833" fg:w="3"/><text x="35.4608%" y="511.50"></text></g><g><title>sqlite3Realloc (2 samples, 0.01%)</title><rect x="35.2159%" y="485" width="0.0103%" height="15" fill="rgb(239,87,6)" fg:x="6834" fg:w="2"/><text x="35.4659%" y="495.50"></text></g><g><title>sqlite3MemRealloc (2 samples, 0.01%)</title><rect x="35.2159%" y="469" width="0.0103%" height="15" fill="rgb(227,62,0)" fg:x="6834" fg:w="2"/><text x="35.4659%" y="479.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="35.2159%" y="453" width="0.0103%" height="15" fill="rgb(211,226,4)" fg:x="6834" fg:w="2"/><text x="35.4659%" y="463.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="35.2159%" y="437" width="0.0103%" height="15" fill="rgb(253,38,52)" fg:x="6834" fg:w="2"/><text x="35.4659%" y="447.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="35.2159%" y="421" width="0.0103%" height="15" fill="rgb(229,126,40)" fg:x="6834" fg:w="2"/><text x="35.4659%" y="431.50"></text></g><g><title>sqlite3VdbeExpandSql (87 samples, 0.45%)</title><rect x="34.7831%" y="565" width="0.4483%" height="15" fill="rgb(229,165,44)" fg:x="6750" fg:w="87"/><text x="35.0331%" y="575.50"></text></g><g><title>sqlite3_str_appendf (65 samples, 0.33%)</title><rect x="34.8964%" y="549" width="0.3349%" height="15" fill="rgb(247,95,47)" fg:x="6772" fg:w="65"/><text x="35.1464%" y="559.50"></text></g><g><title>sqlite3_str_vappendf (63 samples, 0.32%)</title><rect x="34.9067%" y="533" width="0.3246%" height="15" fill="rgb(216,140,30)" fg:x="6774" fg:w="63"/><text x="35.1567%" y="543.50"></text></g><g><title>sqlite3VdbeFreeCursor (2 samples, 0.01%)</title><rect x="35.2314%" y="565" width="0.0103%" height="15" fill="rgb(246,214,8)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="575.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="35.2314%" y="549" width="0.0103%" height="15" fill="rgb(227,224,15)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="559.50"></text></g><g><title>sqlite3BtreeCloseCursor (2 samples, 0.01%)</title><rect x="35.2314%" y="533" width="0.0103%" height="15" fill="rgb(233,175,4)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="543.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="35.2314%" y="517" width="0.0103%" height="15" fill="rgb(221,66,45)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="527.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="35.2314%" y="501" width="0.0103%" height="15" fill="rgb(221,178,18)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="511.50"></text></g><g><title>releasePageNotNull (2 samples, 0.01%)</title><rect x="35.2314%" y="485" width="0.0103%" height="15" fill="rgb(213,81,29)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="495.50"></text></g><g><title>sqlite3PagerUnrefNotNull (2 samples, 0.01%)</title><rect x="35.2314%" y="469" width="0.0103%" height="15" fill="rgb(220,89,49)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="479.50"></text></g><g><title>pcache1Unpin (2 samples, 0.01%)</title><rect x="35.2314%" y="453" width="0.0103%" height="15" fill="rgb(227,60,33)" fg:x="6837" fg:w="2"/><text x="35.4814%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (778 samples, 4.01%)</title><rect x="31.2429%" y="741" width="4.0091%" height="15" fill="rgb(205,113,12)" fg:x="6063" fg:w="778"/><text x="31.4929%" y="751.50">core..</text></g><g><title>rusqlite::Connection::execute::{{closure}} (778 samples, 4.01%)</title><rect x="31.2429%" y="725" width="4.0091%" height="15" fill="rgb(211,32,1)" fg:x="6063" fg:w="778"/><text x="31.4929%" y="735.50">rusq..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (772 samples, 3.98%)</title><rect x="31.2738%" y="709" width="3.9782%" height="15" fill="rgb(246,2,12)" fg:x="6069" fg:w="772"/><text x="31.5238%" y="719.50">core..</text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (772 samples, 3.98%)</title><rect x="31.2738%" y="693" width="3.9782%" height="15" fill="rgb(243,37,27)" fg:x="6069" fg:w="772"/><text x="31.5238%" y="703.50">rusq..</text></g><g><title>rusqlite::statement::Statement::execute (772 samples, 3.98%)</title><rect x="31.2738%" y="677" width="3.9782%" height="15" fill="rgb(248,211,31)" fg:x="6069" fg:w="772"/><text x="31.5238%" y="687.50">rusq..</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (760 samples, 3.92%)</title><rect x="31.3357%" y="661" width="3.9163%" height="15" fill="rgb(242,146,47)" fg:x="6081" fg:w="760"/><text x="31.5857%" y="671.50">rusq..</text></g><g><title>rusqlite::raw_statement::RawStatement::step (759 samples, 3.91%)</title><rect x="31.3408%" y="645" width="3.9112%" height="15" fill="rgb(206,70,20)" fg:x="6082" fg:w="759"/><text x="31.5908%" y="655.50">rusq..</text></g><g><title>sqlite3_step (759 samples, 3.91%)</title><rect x="31.3408%" y="629" width="3.9112%" height="15" fill="rgb(215,10,51)" fg:x="6082" fg:w="759"/><text x="31.5908%" y="639.50">sqli..</text></g><g><title>sqlite3_step (759 samples, 3.91%)</title><rect x="31.3408%" y="613" width="3.9112%" height="15" fill="rgb(243,178,53)" fg:x="6082" fg:w="759"/><text x="31.5908%" y="623.50">sqli..</text></g><g><title>sqlite3Step (759 samples, 3.91%)</title><rect x="31.3408%" y="597" width="3.9112%" height="15" fill="rgb(233,221,20)" fg:x="6082" fg:w="759"/><text x="31.5908%" y="607.50">sqli..</text></g><g><title>sqlite3VdbeExec (759 samples, 3.91%)</title><rect x="31.3408%" y="581" width="3.9112%" height="15" fill="rgb(218,95,35)" fg:x="6082" fg:w="759"/><text x="31.5908%" y="591.50">sqli..</text></g><g><title>sqlite3VdbeHalt (2 samples, 0.01%)</title><rect x="35.2417%" y="565" width="0.0103%" height="15" fill="rgb(229,13,5)" fg:x="6839" fg:w="2"/><text x="35.4917%" y="575.50"></text></g><g><title>keywordCode (6 samples, 0.03%)</title><rect x="35.3138%" y="597" width="0.0309%" height="15" fill="rgb(252,164,30)" fg:x="6853" fg:w="6"/><text x="35.5638%" y="607.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.01%)</title><rect x="35.3447%" y="597" width="0.0103%" height="15" fill="rgb(232,68,36)" fg:x="6859" fg:w="2"/><text x="35.5947%" y="607.50"></text></g><g><title>sqlite3FinishCoding (5 samples, 0.03%)</title><rect x="35.4066%" y="565" width="0.0258%" height="15" fill="rgb(219,59,54)" fg:x="6871" fg:w="5"/><text x="35.6566%" y="575.50"></text></g><g><title>fkLookupParent (4 samples, 0.02%)</title><rect x="35.4530%" y="533" width="0.0206%" height="15" fill="rgb(250,92,33)" fg:x="6880" fg:w="4"/><text x="35.7030%" y="543.50"></text></g><g><title>sqlite3FkCheck (6 samples, 0.03%)</title><rect x="35.4530%" y="549" width="0.0309%" height="15" fill="rgb(229,162,54)" fg:x="6880" fg:w="6"/><text x="35.7030%" y="559.50"></text></g><g><title>sqlite3GenerateConstraintChecks (2 samples, 0.01%)</title><rect x="35.4839%" y="549" width="0.0103%" height="15" fill="rgb(244,114,52)" fg:x="6886" fg:w="2"/><text x="35.7339%" y="559.50"></text></g><g><title>sqlite3FkRequired (2 samples, 0.01%)</title><rect x="35.4839%" y="533" width="0.0103%" height="15" fill="rgb(212,211,43)" fg:x="6886" fg:w="2"/><text x="35.7339%" y="543.50"></text></g><g><title>sqlite3GetVdbe (2 samples, 0.01%)</title><rect x="35.4942%" y="549" width="0.0103%" height="15" fill="rgb(226,147,8)" fg:x="6888" fg:w="2"/><text x="35.7442%" y="559.50"></text></g><g><title>sqlite3GetVdbe (2 samples, 0.01%)</title><rect x="35.4942%" y="533" width="0.0103%" height="15" fill="rgb(226,23,13)" fg:x="6888" fg:w="2"/><text x="35.7442%" y="543.50"></text></g><g><title>sqlite3VdbeCreate (2 samples, 0.01%)</title><rect x="35.4942%" y="517" width="0.0103%" height="15" fill="rgb(240,63,4)" fg:x="6888" fg:w="2"/><text x="35.7442%" y="527.50"></text></g><g><title>sqlite3Insert (17 samples, 0.09%)</title><rect x="35.4375%" y="565" width="0.0876%" height="15" fill="rgb(221,1,32)" fg:x="6877" fg:w="17"/><text x="35.6875%" y="575.50"></text></g><g><title>sqlite3SelectNew (2 samples, 0.01%)</title><rect x="35.5251%" y="565" width="0.0103%" height="15" fill="rgb(242,117,10)" fg:x="6894" fg:w="2"/><text x="35.7751%" y="575.50"></text></g><g><title>zilliqa::db::Db::add_touched_address_with_db_tx (835 samples, 4.30%)</title><rect x="31.2378%" y="773" width="4.3028%" height="15" fill="rgb(249,172,44)" fg:x="6062" fg:w="835"/><text x="31.4878%" y="783.50">zilli..</text></g><g><title>rusqlite::Connection::execute (834 samples, 4.30%)</title><rect x="31.2429%" y="757" width="4.2976%" height="15" fill="rgb(244,46,45)" fg:x="6063" fg:w="834"/><text x="31.4929%" y="767.50">rusql..</text></g><g><title>rusqlite::Connection::prepare (56 samples, 0.29%)</title><rect x="35.2520%" y="741" width="0.2886%" height="15" fill="rgb(206,43,17)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="751.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (56 samples, 0.29%)</title><rect x="35.2520%" y="725" width="0.2886%" height="15" fill="rgb(239,218,39)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="735.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (56 samples, 0.29%)</title><rect x="35.2520%" y="709" width="0.2886%" height="15" fill="rgb(208,169,54)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="719.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (56 samples, 0.29%)</title><rect x="35.2520%" y="693" width="0.2886%" height="15" fill="rgb(247,25,42)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="703.50"></text></g><g><title>sqlite3_prepare_v3 (56 samples, 0.29%)</title><rect x="35.2520%" y="677" width="0.2886%" height="15" fill="rgb(226,23,31)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="687.50"></text></g><g><title>sqlite3LockAndPrepare (56 samples, 0.29%)</title><rect x="35.2520%" y="661" width="0.2886%" height="15" fill="rgb(247,16,28)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="671.50"></text></g><g><title>sqlite3LockAndPrepare (56 samples, 0.29%)</title><rect x="35.2520%" y="645" width="0.2886%" height="15" fill="rgb(231,147,38)" fg:x="6841" fg:w="56"/><text x="35.5020%" y="655.50"></text></g><g><title>sqlite3Prepare (55 samples, 0.28%)</title><rect x="35.2571%" y="629" width="0.2834%" height="15" fill="rgb(253,81,48)" fg:x="6842" fg:w="55"/><text x="35.5071%" y="639.50"></text></g><g><title>sqlite3RunParser (53 samples, 0.27%)</title><rect x="35.2674%" y="613" width="0.2731%" height="15" fill="rgb(249,222,43)" fg:x="6844" fg:w="53"/><text x="35.5174%" y="623.50"></text></g><g><title>sqlite3Parser (36 samples, 0.19%)</title><rect x="35.3550%" y="597" width="0.1855%" height="15" fill="rgb(221,3,27)" fg:x="6861" fg:w="36"/><text x="35.6050%" y="607.50"></text></g><g><title>yy_reduce (36 samples, 0.19%)</title><rect x="35.3550%" y="581" width="0.1855%" height="15" fill="rgb(228,180,5)" fg:x="6861" fg:w="36"/><text x="35.6050%" y="591.50"></text></g><g><title>&lt;zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (2 samples, 0.01%)</title><rect x="35.5457%" y="485" width="0.0103%" height="15" fill="rgb(227,131,42)" fg:x="6898" fg:w="2"/><text x="35.7957%" y="495.50"></text></g><g><title>zilliqa::transaction::ser_rlp::serialize (2 samples, 0.01%)</title><rect x="35.5457%" y="469" width="0.0103%" height="15" fill="rgb(212,3,39)" fg:x="6898" fg:w="2"/><text x="35.7957%" y="479.50"></text></g><g><title>bincode::internal::serialize_into (4 samples, 0.02%)</title><rect x="35.5457%" y="533" width="0.0206%" height="15" fill="rgb(226,45,5)" fg:x="6898" fg:w="4"/><text x="35.7957%" y="543.50"></text></g><g><title>zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize (4 samples, 0.02%)</title><rect x="35.5457%" y="517" width="0.0206%" height="15" fill="rgb(215,167,45)" fg:x="6898" fg:w="4"/><text x="35.7957%" y="527.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (4 samples, 0.02%)</title><rect x="35.5457%" y="501" width="0.0206%" height="15" fill="rgb(250,218,53)" fg:x="6898" fg:w="4"/><text x="35.7957%" y="511.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::signature_serde::&lt;impl serde::ser::Serialize for alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;::serialize (2 samples, 0.01%)</title><rect x="35.5560%" y="485" width="0.0103%" height="15" fill="rgb(207,140,0)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="495.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::signature_serde::_::&lt;impl serde::ser::Serialize for alloy_primitives::signature::primitive_sig::signature_serde::NonHumanReadableRepr&gt;::serialize (2 samples, 0.01%)</title><rect x="35.5560%" y="469" width="0.0103%" height="15" fill="rgb(238,133,51)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for (T0,T1,T2)&gt;::serialize (2 samples, 0.01%)</title><rect x="35.5560%" y="453" width="0.0103%" height="15" fill="rgb(218,203,53)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="463.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTuple&gt;::serialize_element (2 samples, 0.01%)</title><rect x="35.5560%" y="437" width="0.0103%" height="15" fill="rgb(226,184,25)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="447.50"></text></g><g><title>ruint::support::serde::&lt;impl serde::ser::Serialize for ruint::Uint&lt;_,_&gt;&gt;::serialize (2 samples, 0.01%)</title><rect x="35.5560%" y="421" width="0.0103%" height="15" fill="rgb(231,121,21)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="431.50"></text></g><g><title>ruint::support::serde::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::serialize_binary (2 samples, 0.01%)</title><rect x="35.5560%" y="405" width="0.0103%" height="15" fill="rgb(251,14,34)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="35.5560%" y="389" width="0.0103%" height="15" fill="rgb(249,193,11)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="35.5560%" y="373" width="0.0103%" height="15" fill="rgb(220,172,37)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="35.5560%" y="357" width="0.0103%" height="15" fill="rgb(231,229,43)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="35.5560%" y="341" width="0.0103%" height="15" fill="rgb(250,161,5)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="35.5560%" y="325" width="0.0103%" height="15" fill="rgb(218,225,18)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="335.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="35.5560%" y="309" width="0.0103%" height="15" fill="rgb(245,45,42)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="319.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="35.5560%" y="293" width="0.0103%" height="15" fill="rgb(211,115,1)" fg:x="6900" fg:w="2"/><text x="35.8060%" y="303.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="35.5766%" y="453" width="0.0103%" height="15" fill="rgb(248,133,52)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="463.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::SignableTransaction&lt;alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;&gt;::encode_for_signing (2 samples, 0.01%)</title><rect x="35.5766%" y="437" width="0.0103%" height="15" fill="rgb(238,100,21)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="447.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::rlp_encode_fields (2 samples, 0.01%)</title><rect x="35.5766%" y="421" width="0.0103%" height="15" fill="rgb(247,144,11)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="431.50"></text></g><g><title>&lt;u64 as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="35.5766%" y="405" width="0.0103%" height="15" fill="rgb(206,164,16)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.01%)</title><rect x="35.5766%" y="389" width="0.0103%" height="15" fill="rgb(222,34,3)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="35.5766%" y="373" width="0.0103%" height="15" fill="rgb(248,82,4)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="35.5766%" y="357" width="0.0103%" height="15" fill="rgb(228,81,46)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="35.5766%" y="341" width="0.0103%" height="15" fill="rgb(227,67,47)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="35.5766%" y="325" width="0.0103%" height="15" fill="rgb(215,93,53)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="35.5766%" y="309" width="0.0103%" height="15" fill="rgb(248,194,39)" fg:x="6904" fg:w="2"/><text x="35.8266%" y="319.50"></text></g><g><title>&lt;&amp;T as rusqlite::types::to_sql::ToSql&gt;::to_sql (9 samples, 0.05%)</title><rect x="35.5457%" y="613" width="0.0464%" height="15" fill="rgb(215,5,19)" fg:x="6898" fg:w="9"/><text x="35.7957%" y="623.50"></text></g><g><title>zilliqa::db::&lt;impl rusqlite::types::to_sql::ToSql for zilliqa::transaction::SignedTransaction&gt;::to_sql (9 samples, 0.05%)</title><rect x="35.5457%" y="597" width="0.0464%" height="15" fill="rgb(226,215,51)" fg:x="6898" fg:w="9"/><text x="35.7957%" y="607.50"></text></g><g><title>bincode::serialize (9 samples, 0.05%)</title><rect x="35.5457%" y="581" width="0.0464%" height="15" fill="rgb(225,56,26)" fg:x="6898" fg:w="9"/><text x="35.7957%" y="591.50"></text></g><g><title>bincode::config::Options::serialize (9 samples, 0.05%)</title><rect x="35.5457%" y="565" width="0.0464%" height="15" fill="rgb(222,75,29)" fg:x="6898" fg:w="9"/><text x="35.7957%" y="575.50"></text></g><g><title>bincode::internal::serialize (9 samples, 0.05%)</title><rect x="35.5457%" y="549" width="0.0464%" height="15" fill="rgb(236,139,6)" fg:x="6898" fg:w="9"/><text x="35.7957%" y="559.50"></text></g><g><title>bincode::internal::serialized_size (5 samples, 0.03%)</title><rect x="35.5663%" y="533" width="0.0258%" height="15" fill="rgb(223,137,36)" fg:x="6902" fg:w="5"/><text x="35.8163%" y="543.50"></text></g><g><title>zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize (4 samples, 0.02%)</title><rect x="35.5715%" y="517" width="0.0206%" height="15" fill="rgb(226,99,2)" fg:x="6903" fg:w="4"/><text x="35.8215%" y="527.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (3 samples, 0.02%)</title><rect x="35.5766%" y="501" width="0.0155%" height="15" fill="rgb(206,133,23)" fg:x="6904" fg:w="3"/><text x="35.8266%" y="511.50"></text></g><g><title>&lt;zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (3 samples, 0.02%)</title><rect x="35.5766%" y="485" width="0.0155%" height="15" fill="rgb(243,173,15)" fg:x="6904" fg:w="3"/><text x="35.8266%" y="495.50"></text></g><g><title>zilliqa::transaction::ser_rlp::serialize (3 samples, 0.02%)</title><rect x="35.5766%" y="469" width="0.0155%" height="15" fill="rgb(228,69,28)" fg:x="6904" fg:w="3"/><text x="35.8266%" y="479.50"></text></g><g><title>&lt;(A,B) as rusqlite::params::Params&gt;::__bind_in (10 samples, 0.05%)</title><rect x="35.5457%" y="661" width="0.0515%" height="15" fill="rgb(212,51,22)" fg:x="6898" fg:w="10"/><text x="35.7957%" y="671.50"></text></g><g><title>rusqlite::statement::Statement::raw_bind_parameter (10 samples, 0.05%)</title><rect x="35.5457%" y="645" width="0.0515%" height="15" fill="rgb(227,113,0)" fg:x="6898" fg:w="10"/><text x="35.7957%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (10 samples, 0.05%)</title><rect x="35.5457%" y="629" width="0.0515%" height="15" fill="rgb(252,84,27)" fg:x="6898" fg:w="10"/><text x="35.7957%" y="639.50"></text></g><g><title>out2Prerelease (5 samples, 0.03%)</title><rect x="35.6179%" y="565" width="0.0258%" height="15" fill="rgb(223,145,39)" fg:x="6912" fg:w="5"/><text x="35.8679%" y="575.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (3 samples, 0.02%)</title><rect x="35.6436%" y="565" width="0.0155%" height="15" fill="rgb(239,219,30)" fg:x="6917" fg:w="3"/><text x="35.8936%" y="575.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl core::ffi::c_str::CStr&gt;::to_string_lossy (3 samples, 0.02%)</title><rect x="35.6436%" y="549" width="0.0155%" height="15" fill="rgb(224,196,39)" fg:x="6917" fg:w="3"/><text x="35.8936%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (3 samples, 0.02%)</title><rect x="35.6436%" y="533" width="0.0155%" height="15" fill="rgb(205,35,43)" fg:x="6917" fg:w="3"/><text x="35.8936%" y="543.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="35.6436%" y="517" width="0.0155%" height="15" fill="rgb(228,201,21)" fg:x="6917" fg:w="3"/><text x="35.8936%" y="527.50"></text></g><g><title>readDbPage (76 samples, 0.39%)</title><rect x="35.6848%" y="501" width="0.3916%" height="15" fill="rgb(237,118,16)" fg:x="6925" fg:w="76"/><text x="35.9348%" y="511.50"></text></g><g><title>sqlite3OsRead (76 samples, 0.39%)</title><rect x="35.6848%" y="485" width="0.3916%" height="15" fill="rgb(241,17,19)" fg:x="6925" fg:w="76"/><text x="35.9348%" y="495.50"></text></g><g><title>unixRead (76 samples, 0.39%)</title><rect x="35.6848%" y="469" width="0.3916%" height="15" fill="rgb(214,10,25)" fg:x="6925" fg:w="76"/><text x="35.9348%" y="479.50"></text></g><g><title>seekAndRead (76 samples, 0.39%)</title><rect x="35.6848%" y="453" width="0.3916%" height="15" fill="rgb(238,37,29)" fg:x="6925" fg:w="76"/><text x="35.9348%" y="463.50"></text></g><g><title>__libc_pread64 (76 samples, 0.39%)</title><rect x="35.6848%" y="437" width="0.3916%" height="15" fill="rgb(253,83,25)" fg:x="6925" fg:w="76"/><text x="35.9348%" y="447.50"></text></g><g><title>__libc_pread64 (76 samples, 0.39%)</title><rect x="35.6848%" y="421" width="0.3916%" height="15" fill="rgb(234,192,12)" fg:x="6925" fg:w="76"/><text x="35.9348%" y="431.50"></text></g><g><title>getAndInitPage (77 samples, 0.40%)</title><rect x="35.6848%" y="549" width="0.3968%" height="15" fill="rgb(241,216,45)" fg:x="6925" fg:w="77"/><text x="35.9348%" y="559.50"></text></g><g><title>sqlite3PagerGet (77 samples, 0.40%)</title><rect x="35.6848%" y="533" width="0.3968%" height="15" fill="rgb(242,22,33)" fg:x="6925" fg:w="77"/><text x="35.9348%" y="543.50"></text></g><g><title>getPageNormal (77 samples, 0.40%)</title><rect x="35.6848%" y="517" width="0.3968%" height="15" fill="rgb(231,105,49)" fg:x="6925" fg:w="77"/><text x="35.9348%" y="527.50"></text></g><g><title>moveToRoot (2 samples, 0.01%)</title><rect x="36.0816%" y="549" width="0.0103%" height="15" fill="rgb(218,204,15)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="559.50"></text></g><g><title>getAndInitPage (2 samples, 0.01%)</title><rect x="36.0816%" y="533" width="0.0103%" height="15" fill="rgb(235,138,41)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="543.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="36.0816%" y="517" width="0.0103%" height="15" fill="rgb(246,0,9)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="527.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="36.0816%" y="501" width="0.0103%" height="15" fill="rgb(210,74,4)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="511.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="36.0816%" y="485" width="0.0103%" height="15" fill="rgb(250,60,41)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="495.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="36.0816%" y="469" width="0.0103%" height="15" fill="rgb(220,115,12)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="479.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="36.0816%" y="453" width="0.0103%" height="15" fill="rgb(237,100,13)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="463.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="36.0816%" y="437" width="0.0103%" height="15" fill="rgb(213,55,26)" fg:x="7002" fg:w="2"/><text x="36.3316%" y="447.50"></text></g><g><title>sqlite3BtreeIndexMoveto (86 samples, 0.44%)</title><rect x="35.6642%" y="565" width="0.4432%" height="15" fill="rgb(216,17,4)" fg:x="6921" fg:w="86"/><text x="35.9142%" y="575.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (3 samples, 0.02%)</title><rect x="36.0919%" y="549" width="0.0155%" height="15" fill="rgb(220,153,47)" fg:x="7004" fg:w="3"/><text x="36.3419%" y="559.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="36.1383%" y="533" width="0.0103%" height="15" fill="rgb(215,131,9)" fg:x="7013" fg:w="2"/><text x="36.3883%" y="543.50"></text></g><g><title>findNextHostParameter (5 samples, 0.03%)</title><rect x="36.1383%" y="549" width="0.0258%" height="15" fill="rgb(233,46,42)" fg:x="7013" fg:w="5"/><text x="36.3883%" y="559.50"></text></g><g><title>sqlite3GetToken (3 samples, 0.02%)</title><rect x="36.1486%" y="533" width="0.0155%" height="15" fill="rgb(226,86,7)" fg:x="7015" fg:w="3"/><text x="36.3986%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="36.6382%" y="517" width="0.0103%" height="15" fill="rgb(239,226,21)" fg:x="7110" fg:w="2"/><text x="36.8882%" y="527.50"></text></g><g><title>sqlite3VdbeExpandSql (116 samples, 0.60%)</title><rect x="36.1074%" y="565" width="0.5978%" height="15" fill="rgb(244,137,22)" fg:x="7007" fg:w="116"/><text x="36.3574%" y="575.50"></text></g><g><title>sqlite3_str_appendf (103 samples, 0.53%)</title><rect x="36.1744%" y="549" width="0.5308%" height="15" fill="rgb(211,139,35)" fg:x="7020" fg:w="103"/><text x="36.4244%" y="559.50"></text></g><g><title>sqlite3_str_vappendf (96 samples, 0.49%)</title><rect x="36.2105%" y="533" width="0.4947%" height="15" fill="rgb(214,62,50)" fg:x="7027" fg:w="96"/><text x="36.4605%" y="543.50"></text></g><g><title>enlargeAndAppend (10 samples, 0.05%)</title><rect x="36.6536%" y="517" width="0.0515%" height="15" fill="rgb(212,113,44)" fg:x="7113" fg:w="10"/><text x="36.9036%" y="527.50"></text></g><g><title>sqlite3StrAccumEnlarge (10 samples, 0.05%)</title><rect x="36.6536%" y="501" width="0.0515%" height="15" fill="rgb(226,150,43)" fg:x="7113" fg:w="10"/><text x="36.9036%" y="511.50"></text></g><g><title>sqlite3Realloc (10 samples, 0.05%)</title><rect x="36.6536%" y="485" width="0.0515%" height="15" fill="rgb(250,71,37)" fg:x="7113" fg:w="10"/><text x="36.9036%" y="495.50"></text></g><g><title>sqlite3MemRealloc (9 samples, 0.05%)</title><rect x="36.6588%" y="469" width="0.0464%" height="15" fill="rgb(219,76,19)" fg:x="7114" fg:w="9"/><text x="36.9088%" y="479.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.05%)</title><rect x="36.6588%" y="453" width="0.0464%" height="15" fill="rgb(250,39,11)" fg:x="7114" fg:w="9"/><text x="36.9088%" y="463.50"></text></g><g><title>_int_realloc (7 samples, 0.04%)</title><rect x="36.6691%" y="437" width="0.0361%" height="15" fill="rgb(230,64,31)" fg:x="7116" fg:w="7"/><text x="36.9191%" y="447.50"></text></g><g><title>_int_malloc (5 samples, 0.03%)</title><rect x="36.6794%" y="421" width="0.0258%" height="15" fill="rgb(208,222,23)" fg:x="7118" fg:w="5"/><text x="36.9294%" y="431.50"></text></g><g><title>unlink_chunk (5 samples, 0.03%)</title><rect x="36.6794%" y="405" width="0.0258%" height="15" fill="rgb(227,125,18)" fg:x="7118" fg:w="5"/><text x="36.9294%" y="415.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="36.7051%" y="533" width="0.0103%" height="15" fill="rgb(234,210,9)" fg:x="7123" fg:w="2"/><text x="36.9551%" y="543.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="36.7051%" y="517" width="0.0103%" height="15" fill="rgb(217,127,24)" fg:x="7123" fg:w="2"/><text x="36.9551%" y="527.50"></text></g><g><title>sqlite3BtreeCloseCursor (2 samples, 0.01%)</title><rect x="36.7051%" y="501" width="0.0103%" height="15" fill="rgb(239,141,48)" fg:x="7123" fg:w="2"/><text x="36.9551%" y="511.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="36.7051%" y="485" width="0.0103%" height="15" fill="rgb(227,109,8)" fg:x="7123" fg:w="2"/><text x="36.9551%" y="495.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="36.7051%" y="469" width="0.0103%" height="15" fill="rgb(235,184,23)" fg:x="7123" fg:w="2"/><text x="36.9551%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (229 samples, 1.18%)</title><rect x="35.5406%" y="741" width="1.1800%" height="15" fill="rgb(227,226,48)" fg:x="6897" fg:w="229"/><text x="35.7906%" y="751.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (229 samples, 1.18%)</title><rect x="35.5406%" y="725" width="1.1800%" height="15" fill="rgb(206,150,11)" fg:x="6897" fg:w="229"/><text x="35.7906%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (228 samples, 1.17%)</title><rect x="35.5457%" y="709" width="1.1749%" height="15" fill="rgb(254,2,33)" fg:x="6898" fg:w="228"/><text x="35.7957%" y="719.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (228 samples, 1.17%)</title><rect x="35.5457%" y="693" width="1.1749%" height="15" fill="rgb(243,160,20)" fg:x="6898" fg:w="228"/><text x="35.7957%" y="703.50"></text></g><g><title>rusqlite::statement::Statement::execute (228 samples, 1.17%)</title><rect x="35.5457%" y="677" width="1.1749%" height="15" fill="rgb(218,208,30)" fg:x="6898" fg:w="228"/><text x="35.7957%" y="687.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (217 samples, 1.12%)</title><rect x="35.6024%" y="661" width="1.1182%" height="15" fill="rgb(224,120,49)" fg:x="6909" fg:w="217"/><text x="35.8524%" y="671.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (216 samples, 1.11%)</title><rect x="35.6075%" y="645" width="1.1131%" height="15" fill="rgb(246,12,2)" fg:x="6910" fg:w="216"/><text x="35.8575%" y="655.50"></text></g><g><title>sqlite3_step (216 samples, 1.11%)</title><rect x="35.6075%" y="629" width="1.1131%" height="15" fill="rgb(236,117,3)" fg:x="6910" fg:w="216"/><text x="35.8575%" y="639.50"></text></g><g><title>sqlite3_step (216 samples, 1.11%)</title><rect x="35.6075%" y="613" width="1.1131%" height="15" fill="rgb(216,128,52)" fg:x="6910" fg:w="216"/><text x="35.8575%" y="623.50"></text></g><g><title>sqlite3Step (216 samples, 1.11%)</title><rect x="35.6075%" y="597" width="1.1131%" height="15" fill="rgb(246,145,19)" fg:x="6910" fg:w="216"/><text x="35.8575%" y="607.50"></text></g><g><title>sqlite3VdbeExec (216 samples, 1.11%)</title><rect x="35.6075%" y="581" width="1.1131%" height="15" fill="rgb(222,11,46)" fg:x="6910" fg:w="216"/><text x="35.8575%" y="591.50"></text></g><g><title>sqlite3VdbeHalt (3 samples, 0.02%)</title><rect x="36.7051%" y="565" width="0.0155%" height="15" fill="rgb(245,82,36)" fg:x="7123" fg:w="3"/><text x="36.9551%" y="575.50"></text></g><g><title>closeAllCursors (3 samples, 0.02%)</title><rect x="36.7051%" y="549" width="0.0155%" height="15" fill="rgb(250,73,51)" fg:x="7123" fg:w="3"/><text x="36.9551%" y="559.50"></text></g><g><title>sqlite3GetToken (3 samples, 0.02%)</title><rect x="36.7309%" y="597" width="0.0155%" height="15" fill="rgb(221,189,23)" fg:x="7128" fg:w="3"/><text x="36.9809%" y="607.50"></text></g><g><title>yy_find_shift_action (4 samples, 0.02%)</title><rect x="36.7464%" y="581" width="0.0206%" height="15" fill="rgb(210,33,7)" fg:x="7131" fg:w="4"/><text x="36.9964%" y="591.50"></text></g><g><title>sqlite3FinishCoding (3 samples, 0.02%)</title><rect x="36.7670%" y="565" width="0.0155%" height="15" fill="rgb(210,107,22)" fg:x="7135" fg:w="3"/><text x="37.0170%" y="575.50"></text></g><g><title>sqlite3VdbeMakeReady (3 samples, 0.02%)</title><rect x="36.7670%" y="549" width="0.0155%" height="15" fill="rgb(222,116,37)" fg:x="7135" fg:w="3"/><text x="37.0170%" y="559.50"></text></g><g><title>resolveP2Values (2 samples, 0.01%)</title><rect x="36.7721%" y="533" width="0.0103%" height="15" fill="rgb(254,17,48)" fg:x="7136" fg:w="2"/><text x="37.0221%" y="543.50"></text></g><g><title>sqlite3Insert (7 samples, 0.04%)</title><rect x="36.7824%" y="565" width="0.0361%" height="15" fill="rgb(224,36,32)" fg:x="7138" fg:w="7"/><text x="37.0324%" y="575.50"></text></g><g><title>zilliqa::db::Db::with_sqlite_tx (1,189 samples, 6.13%)</title><rect x="30.7122%" y="805" width="6.1270%" height="15" fill="rgb(232,90,46)" fg:x="5960" fg:w="1189"/><text x="30.9622%" y="815.50">zilliqa:..</text></g><g><title>zilliqa::consensus::Consensus::execute_block::{{closure}} (1,087 samples, 5.60%)</title><rect x="31.2378%" y="789" width="5.6014%" height="15" fill="rgb(241,66,40)" fg:x="6062" fg:w="1087"/><text x="31.4878%" y="799.50">zilliqa..</text></g><g><title>zilliqa::db::Db::insert_transaction_with_db_tx (252 samples, 1.30%)</title><rect x="35.5406%" y="773" width="1.2986%" height="15" fill="rgb(249,184,29)" fg:x="6897" fg:w="252"/><text x="35.7906%" y="783.50"></text></g><g><title>rusqlite::Connection::execute (252 samples, 1.30%)</title><rect x="35.5406%" y="757" width="1.2986%" height="15" fill="rgb(231,181,1)" fg:x="6897" fg:w="252"/><text x="35.7906%" y="767.50"></text></g><g><title>rusqlite::Connection::prepare (23 samples, 0.12%)</title><rect x="36.7206%" y="741" width="0.1185%" height="15" fill="rgb(224,94,2)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="751.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (23 samples, 0.12%)</title><rect x="36.7206%" y="725" width="0.1185%" height="15" fill="rgb(229,170,15)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="735.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (23 samples, 0.12%)</title><rect x="36.7206%" y="709" width="0.1185%" height="15" fill="rgb(240,127,35)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="719.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (23 samples, 0.12%)</title><rect x="36.7206%" y="693" width="0.1185%" height="15" fill="rgb(248,196,34)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="703.50"></text></g><g><title>sqlite3_prepare_v3 (23 samples, 0.12%)</title><rect x="36.7206%" y="677" width="0.1185%" height="15" fill="rgb(236,137,7)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="687.50"></text></g><g><title>sqlite3LockAndPrepare (23 samples, 0.12%)</title><rect x="36.7206%" y="661" width="0.1185%" height="15" fill="rgb(235,127,16)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="671.50"></text></g><g><title>sqlite3LockAndPrepare (23 samples, 0.12%)</title><rect x="36.7206%" y="645" width="0.1185%" height="15" fill="rgb(250,192,54)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="655.50"></text></g><g><title>sqlite3Prepare (23 samples, 0.12%)</title><rect x="36.7206%" y="629" width="0.1185%" height="15" fill="rgb(218,98,20)" fg:x="7126" fg:w="23"/><text x="36.9706%" y="639.50"></text></g><g><title>sqlite3RunParser (22 samples, 0.11%)</title><rect x="36.7258%" y="613" width="0.1134%" height="15" fill="rgb(230,176,47)" fg:x="7127" fg:w="22"/><text x="36.9758%" y="623.50"></text></g><g><title>sqlite3Parser (18 samples, 0.09%)</title><rect x="36.7464%" y="597" width="0.0928%" height="15" fill="rgb(244,2,33)" fg:x="7131" fg:w="18"/><text x="36.9964%" y="607.50"></text></g><g><title>yy_reduce (14 samples, 0.07%)</title><rect x="36.7670%" y="581" width="0.0721%" height="15" fill="rgb(231,100,17)" fg:x="7135" fg:w="14"/><text x="37.0170%" y="591.50"></text></g><g><title>yy_find_reduce_action (3 samples, 0.02%)</title><rect x="36.8237%" y="565" width="0.0155%" height="15" fill="rgb(245,23,12)" fg:x="7146" fg:w="3"/><text x="37.0737%" y="575.50"></text></g><g><title>&lt;zilliqa::crypto::Hash as core::cmp::Ord&gt;::cmp (7 samples, 0.04%)</title><rect x="36.8391%" y="725" width="0.0361%" height="15" fill="rgb(249,55,22)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="735.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T (7 samples, 0.04%)</title><rect x="36.8391%" y="709" width="0.0361%" height="15" fill="rgb(207,134,9)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="719.50"></text></g><g><title> N]&gt;::cmp (7 samples, 0.04%)</title><rect x="36.8391%" y="693" width="0.0361%" height="15" fill="rgb(218,134,0)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (7 samples, 0.04%)</title><rect x="36.8391%" y="677" width="0.0361%" height="15" fill="rgb(213,212,33)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (7 samples, 0.04%)</title><rect x="36.8391%" y="661" width="0.0361%" height="15" fill="rgb(252,106,18)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="671.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (7 samples, 0.04%)</title><rect x="36.8391%" y="645" width="0.0361%" height="15" fill="rgb(208,126,42)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.04%)</title><rect x="36.8391%" y="629" width="0.0361%" height="15" fill="rgb(246,175,29)" fg:x="7149" fg:w="7"/><text x="37.0891%" y="639.50"></text></g><g><title>zilliqa::pool::TransactionPool::get_transaction (33 samples, 0.17%)</title><rect x="36.8391%" y="805" width="0.1701%" height="15" fill="rgb(215,13,50)" fg:x="7149" fg:w="33"/><text x="37.0891%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (33 samples, 0.17%)</title><rect x="36.8391%" y="789" width="0.1701%" height="15" fill="rgb(216,172,15)" fg:x="7149" fg:w="33"/><text x="37.0891%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (33 samples, 0.17%)</title><rect x="36.8391%" y="773" width="0.1701%" height="15" fill="rgb(212,103,13)" fg:x="7149" fg:w="33"/><text x="37.0891%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (33 samples, 0.17%)</title><rect x="36.8391%" y="757" width="0.1701%" height="15" fill="rgb(231,171,36)" fg:x="7149" fg:w="33"/><text x="37.0891%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (33 samples, 0.17%)</title><rect x="36.8391%" y="741" width="0.1701%" height="15" fill="rgb(250,123,20)" fg:x="7149" fg:w="33"/><text x="37.0891%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (26 samples, 0.13%)</title><rect x="36.8752%" y="725" width="0.1340%" height="15" fill="rgb(212,53,50)" fg:x="7156" fg:w="26"/><text x="37.1252%" y="735.50"></text></g><g><title>&lt;zilliqa::transaction::VerifiedTransaction as zilliqa::pool::MempoolIndex&gt;::mempool_index (2 samples, 0.01%)</title><rect x="37.0092%" y="789" width="0.0103%" height="15" fill="rgb(243,54,12)" fg:x="7182" fg:w="2"/><text x="37.2592%" y="799.50"></text></g><g><title>&lt;zilliqa::crypto::Hash as core::cmp::Ord&gt;::cmp (6 samples, 0.03%)</title><rect x="37.0195%" y="709" width="0.0309%" height="15" fill="rgb(234,101,34)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="719.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T (6 samples, 0.03%)</title><rect x="37.0195%" y="693" width="0.0309%" height="15" fill="rgb(254,67,22)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="703.50"></text></g><g><title> N]&gt;::cmp (6 samples, 0.03%)</title><rect x="37.0195%" y="677" width="0.0309%" height="15" fill="rgb(250,35,47)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (6 samples, 0.03%)</title><rect x="37.0195%" y="661" width="0.0309%" height="15" fill="rgb(226,126,38)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (6 samples, 0.03%)</title><rect x="37.0195%" y="645" width="0.0309%" height="15" fill="rgb(216,138,53)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="655.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (6 samples, 0.03%)</title><rect x="37.0195%" y="629" width="0.0309%" height="15" fill="rgb(246,199,43)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.03%)</title><rect x="37.0195%" y="613" width="0.0309%" height="15" fill="rgb(232,125,11)" fg:x="7184" fg:w="6"/><text x="37.2695%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (19 samples, 0.10%)</title><rect x="37.0195%" y="789" width="0.0979%" height="15" fill="rgb(218,219,45)" fg:x="7184" fg:w="19"/><text x="37.2695%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (19 samples, 0.10%)</title><rect x="37.0195%" y="773" width="0.0979%" height="15" fill="rgb(216,102,54)" fg:x="7184" fg:w="19"/><text x="37.2695%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19 samples, 0.10%)</title><rect x="37.0195%" y="757" width="0.0979%" height="15" fill="rgb(250,228,7)" fg:x="7184" fg:w="19"/><text x="37.2695%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.10%)</title><rect x="37.0195%" y="741" width="0.0979%" height="15" fill="rgb(226,125,25)" fg:x="7184" fg:w="19"/><text x="37.2695%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.10%)</title><rect x="37.0195%" y="725" width="0.0979%" height="15" fill="rgb(224,165,27)" fg:x="7184" fg:w="19"/><text x="37.2695%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.07%)</title><rect x="37.0504%" y="709" width="0.0670%" height="15" fill="rgb(233,86,3)" fg:x="7190" fg:w="13"/><text x="37.3004%" y="719.50"></text></g><g><title>zilliqa::pool::TransactionPool::mark_executed (22 samples, 0.11%)</title><rect x="37.0092%" y="805" width="0.1134%" height="15" fill="rgb(228,116,20)" fg:x="7182" fg:w="22"/><text x="37.2592%" y="815.50"></text></g><g><title>itertools::Itertools::concat (2 samples, 0.01%)</title><rect x="37.1225%" y="789" width="0.0103%" height="15" fill="rgb(209,192,17)" fg:x="7204" fg:w="2"/><text x="37.3725%" y="799.50"></text></g><g><title>itertools::concat_impl::concat (2 samples, 0.01%)</title><rect x="37.1225%" y="773" width="0.0103%" height="15" fill="rgb(224,88,34)" fg:x="7204" fg:w="2"/><text x="37.3725%" y="783.50"></text></g><g><title>itertools::Itertools::fold1 (2 samples, 0.01%)</title><rect x="37.1225%" y="757" width="0.0103%" height="15" fill="rgb(233,38,6)" fg:x="7204" fg:w="2"/><text x="37.3725%" y="767.50"></text></g><g><title>zilliqa::crypto::HashBuilder::finalize (11 samples, 0.06%)</title><rect x="37.1328%" y="789" width="0.0567%" height="15" fill="rgb(212,59,30)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="799.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (11 samples, 0.06%)</title><rect x="37.1328%" y="773" width="0.0567%" height="15" fill="rgb(213,80,3)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="783.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (11 samples, 0.06%)</title><rect x="37.1328%" y="757" width="0.0567%" height="15" fill="rgb(251,178,7)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="767.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (11 samples, 0.06%)</title><rect x="37.1328%" y="741" width="0.0567%" height="15" fill="rgb(213,154,26)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="751.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (11 samples, 0.06%)</title><rect x="37.1328%" y="725" width="0.0567%" height="15" fill="rgb(238,165,49)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="735.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (11 samples, 0.06%)</title><rect x="37.1328%" y="709" width="0.0567%" height="15" fill="rgb(248,91,46)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="719.50"></text></g><g><title>keccak::p1600 (11 samples, 0.06%)</title><rect x="37.1328%" y="693" width="0.0567%" height="15" fill="rgb(244,21,52)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="703.50"></text></g><g><title>keccak::keccak_p (11 samples, 0.06%)</title><rect x="37.1328%" y="677" width="0.0567%" height="15" fill="rgb(247,122,20)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="687.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (11 samples, 0.06%)</title><rect x="37.1328%" y="661" width="0.0567%" height="15" fill="rgb(218,27,9)" fg:x="7206" fg:w="11"/><text x="37.3828%" y="671.50"></text></g><g><title>zilliqa::consensus::Consensus::execute_block (7,137 samples, 36.78%)</title><rect x="0.4432%" y="821" width="36.7773%" height="15" fill="rgb(246,7,6)" fg:x="86" fg:w="7137"/><text x="0.6932%" y="831.50">zilliqa::consensus::Consensus::execute_block</text></g><g><title>zilliqa::transaction::TransactionReceipt::compute_hash (19 samples, 0.10%)</title><rect x="37.1225%" y="805" width="0.0979%" height="15" fill="rgb(227,135,54)" fg:x="7204" fg:w="19"/><text x="37.3725%" y="815.50"></text></g><g><title>zilliqa::crypto::HashBuilder::with (6 samples, 0.03%)</title><rect x="37.1895%" y="789" width="0.0309%" height="15" fill="rgb(247,14,11)" fg:x="7217" fg:w="6"/><text x="37.4395%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="37.2204%" y="597" width="0.0103%" height="15" fill="rgb(206,149,34)" fg:x="7223" fg:w="2"/><text x="37.4704%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.01%)</title><rect x="37.2204%" y="581" width="0.0103%" height="15" fill="rgb(227,228,4)" fg:x="7223" fg:w="2"/><text x="37.4704%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="37.2204%" y="565" width="0.0103%" height="15" fill="rgb(238,218,28)" fg:x="7223" fg:w="2"/><text x="37.4704%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="37.2204%" y="549" width="0.0103%" height="15" fill="rgb(252,86,40)" fg:x="7223" fg:w="2"/><text x="37.4704%" y="559.50"></text></g><g><title>&lt;rusqlite::row::MappedRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="37.2204%" y="533" width="0.0103%" height="15" fill="rgb(251,225,11)" fg:x="7223" fg:w="2"/><text x="37.4704%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="37.2204%" y="757" width="0.0155%" height="15" fill="rgb(206,46,49)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="37.2204%" y="741" width="0.0155%" height="15" fill="rgb(245,128,24)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.02%)</title><rect x="37.2204%" y="725" width="0.0155%" height="15" fill="rgb(219,177,34)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3 samples, 0.02%)</title><rect x="37.2204%" y="709" width="0.0155%" height="15" fill="rgb(218,60,48)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="37.2204%" y="693" width="0.0155%" height="15" fill="rgb(221,11,5)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="37.2204%" y="677" width="0.0155%" height="15" fill="rgb(220,148,13)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="37.2204%" y="661" width="0.0155%" height="15" fill="rgb(210,16,3)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="37.2204%" y="645" width="0.0155%" height="15" fill="rgb(236,80,2)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="37.2204%" y="629" width="0.0155%" height="15" fill="rgb(239,129,19)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.02%)</title><rect x="37.2204%" y="613" width="0.0155%" height="15" fill="rgb(220,106,35)" fg:x="7223" fg:w="3"/><text x="37.4704%" y="623.50"></text></g><g><title>zilliqa::consensus::Consensus::head_block (6 samples, 0.03%)</title><rect x="37.2204%" y="821" width="0.0309%" height="15" fill="rgb(252,139,45)" fg:x="7223" fg:w="6"/><text x="37.4704%" y="831.50"></text></g><g><title>zilliqa::block_store::BlockStore::get_canonical_block_by_number (6 samples, 0.03%)</title><rect x="37.2204%" y="805" width="0.0309%" height="15" fill="rgb(229,8,36)" fg:x="7223" fg:w="6"/><text x="37.4704%" y="815.50"></text></g><g><title>zilliqa::db::Db::get_canonical_block_by_number (6 samples, 0.03%)</title><rect x="37.2204%" y="789" width="0.0309%" height="15" fill="rgb(230,126,33)" fg:x="7223" fg:w="6"/><text x="37.4704%" y="799.50"></text></g><g><title>zilliqa::db::Db::get_block (6 samples, 0.03%)</title><rect x="37.2204%" y="773" width="0.0309%" height="15" fill="rgb(239,140,21)" fg:x="7223" fg:w="6"/><text x="37.4704%" y="783.50"></text></g><g><title>zilliqa::db::Db::get_transactionless_block (3 samples, 0.02%)</title><rect x="37.2359%" y="757" width="0.0155%" height="15" fill="rgb(254,104,9)" fg:x="7226" fg:w="3"/><text x="37.4859%" y="767.50"></text></g><g><title>rusqlite::Connection::query_row (3 samples, 0.02%)</title><rect x="37.2359%" y="741" width="0.0155%" height="15" fill="rgb(239,52,14)" fg:x="7226" fg:w="3"/><text x="37.4859%" y="751.50"></text></g><g><title>rusqlite::statement::Statement::query_row (2 samples, 0.01%)</title><rect x="37.2411%" y="725" width="0.0103%" height="15" fill="rgb(208,227,44)" fg:x="7227" fg:w="2"/><text x="37.4911%" y="735.50"></text></g><g><title>zilliqa::consensus::Consensus::leader_at_block (4 samples, 0.02%)</title><rect x="37.2514%" y="821" width="0.0206%" height="15" fill="rgb(246,18,19)" fg:x="7229" fg:w="4"/><text x="37.5014%" y="831.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::leader (2 samples, 0.01%)</title><rect x="37.2617%" y="805" width="0.0103%" height="15" fill="rgb(235,228,25)" fg:x="7231" fg:w="2"/><text x="37.5117%" y="815.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (2 samples, 0.01%)</title><rect x="37.2617%" y="789" width="0.0103%" height="15" fill="rgb(240,156,20)" fg:x="7231" fg:w="2"/><text x="37.5117%" y="799.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (2 samples, 0.01%)</title><rect x="37.2617%" y="773" width="0.0103%" height="15" fill="rgb(224,8,20)" fg:x="7231" fg:w="2"/><text x="37.5117%" y="783.50"></text></g><g><title>zilliqa::consensus::Consensus::vote_from_block (3 samples, 0.02%)</title><rect x="37.2771%" y="821" width="0.0155%" height="15" fill="rgb(214,12,52)" fg:x="7234" fg:w="3"/><text x="37.5271%" y="831.50"></text></g><g><title>zilliqa::message::Vote::new (2 samples, 0.01%)</title><rect x="37.2823%" y="805" width="0.0103%" height="15" fill="rgb(211,220,47)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="815.50"></text></g><g><title>zilliqa::crypto::SecretKey::sign (2 samples, 0.01%)</title><rect x="37.2823%" y="789" width="0.0103%" height="15" fill="rgb(250,173,5)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="799.50"></text></g><g><title>blsful::secret_key::SecretKey&lt;C&gt;::sign (2 samples, 0.01%)</title><rect x="37.2823%" y="773" width="0.0103%" height="15" fill="rgb(250,125,52)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="783.50"></text></g><g><title>blsful::traits::sig_basic::BlsSignatureBasic::sign (2 samples, 0.01%)</title><rect x="37.2823%" y="757" width="0.0103%" height="15" fill="rgb(209,133,18)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="767.50"></text></g><g><title>blsful::traits::sig_core::BlsSignatureCore::core_sign (2 samples, 0.01%)</title><rect x="37.2823%" y="741" width="0.0103%" height="15" fill="rgb(216,173,22)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="751.50"></text></g><g><title>&lt;blsful::impls::g2::Bls12381G2Impl as blsful::traits::hash_to_point::HashToPoint&gt;::hash_to_point (2 samples, 0.01%)</title><rect x="37.2823%" y="725" width="0.0103%" height="15" fill="rgb(205,3,22)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="735.50"></text></g><g><title>blstrs_plus::g2::G2Projective::hash (2 samples, 0.01%)</title><rect x="37.2823%" y="709" width="0.0103%" height="15" fill="rgb(248,22,20)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="719.50"></text></g><g><title>map_to_g2 (2 samples, 0.01%)</title><rect x="37.2823%" y="693" width="0.0103%" height="15" fill="rgb(233,6,29)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="703.50"></text></g><g><title>clear_cofactor (2 samples, 0.01%)</title><rect x="37.2823%" y="677" width="0.0103%" height="15" fill="rgb(240,22,54)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="687.50"></text></g><g><title>POINTonE2_times_minus_z (2 samples, 0.01%)</title><rect x="37.2823%" y="661" width="0.0103%" height="15" fill="rgb(231,133,32)" fg:x="7235" fg:w="2"/><text x="37.5323%" y="671.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_stakers (2 samples, 0.01%)</title><rect x="37.2926%" y="821" width="0.0103%" height="15" fill="rgb(248,193,4)" fg:x="7237" fg:w="2"/><text x="37.5426%" y="831.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (2 samples, 0.01%)</title><rect x="37.2926%" y="805" width="0.0103%" height="15" fill="rgb(211,178,46)" fg:x="7237" fg:w="2"/><text x="37.5426%" y="815.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (2 samples, 0.01%)</title><rect x="37.2926%" y="789" width="0.0103%" height="15" fill="rgb(224,5,42)" fg:x="7237" fg:w="2"/><text x="37.5426%" y="799.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::rlp_encode_signed (2 samples, 0.01%)</title><rect x="37.3029%" y="565" width="0.0103%" height="15" fill="rgb(239,176,25)" fg:x="7239" fg:w="2"/><text x="37.5529%" y="575.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::PrimitiveSignature::write_rlp_vrs (2 samples, 0.01%)</title><rect x="37.3029%" y="549" width="0.0103%" height="15" fill="rgb(245,187,50)" fg:x="7239" fg:w="2"/><text x="37.5529%" y="559.50"></text></g><g><title>zilliqa::consensus::Consensus::proposal (7,203 samples, 37.12%)</title><rect x="0.2422%" y="837" width="37.1174%" height="15" fill="rgb(248,24,15)" fg:x="47" fg:w="7203"/><text x="0.4922%" y="847.50">zilliqa::consensus::Consensus::proposal</text></g><g><title>zilliqa::message::Proposal::into_parts (11 samples, 0.06%)</title><rect x="37.3029%" y="821" width="0.0567%" height="15" fill="rgb(205,166,13)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.06%)</title><rect x="37.3029%" y="805" width="0.0567%" height="15" fill="rgb(208,114,23)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.06%)</title><rect x="37.3029%" y="789" width="0.0567%" height="15" fill="rgb(239,127,18)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.06%)</title><rect x="37.3029%" y="773" width="0.0567%" height="15" fill="rgb(219,154,28)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.06%)</title><rect x="37.3029%" y="757" width="0.0567%" height="15" fill="rgb(225,157,23)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.06%)</title><rect x="37.3029%" y="741" width="0.0567%" height="15" fill="rgb(219,8,6)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11 samples, 0.06%)</title><rect x="37.3029%" y="725" width="0.0567%" height="15" fill="rgb(212,47,6)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.06%)</title><rect x="37.3029%" y="709" width="0.0567%" height="15" fill="rgb(224,190,4)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.06%)</title><rect x="37.3029%" y="693" width="0.0567%" height="15" fill="rgb(239,183,29)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.06%)</title><rect x="37.3029%" y="677" width="0.0567%" height="15" fill="rgb(213,57,7)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.06%)</title><rect x="37.3029%" y="661" width="0.0567%" height="15" fill="rgb(216,148,1)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.06%)</title><rect x="37.3029%" y="645" width="0.0567%" height="15" fill="rgb(236,182,29)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="655.50"></text></g><g><title>zilliqa::message::Proposal::into_parts::{{closure}} (11 samples, 0.06%)</title><rect x="37.3029%" y="629" width="0.0567%" height="15" fill="rgb(244,120,48)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="639.50"></text></g><g><title>zilliqa::transaction::SignedTransaction::calculate_hash (11 samples, 0.06%)</title><rect x="37.3029%" y="613" width="0.0567%" height="15" fill="rgb(206,71,34)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="623.50"></text></g><g><title>alloy_consensus::transaction::rlp::RlpEcdsaTx::tx_hash (11 samples, 0.06%)</title><rect x="37.3029%" y="597" width="0.0567%" height="15" fill="rgb(242,32,6)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="607.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::tx_hash_with_type (11 samples, 0.06%)</title><rect x="37.3029%" y="581" width="0.0567%" height="15" fill="rgb(241,35,3)" fg:x="7239" fg:w="11"/><text x="37.5529%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="37.3184%" y="565" width="0.0412%" height="15" fill="rgb(222,62,19)" fg:x="7242" fg:w="8"/><text x="37.5684%" y="575.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="37.3184%" y="549" width="0.0412%" height="15" fill="rgb(223,110,41)" fg:x="7242" fg:w="8"/><text x="37.5684%" y="559.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="37.3235%" y="533" width="0.0361%" height="15" fill="rgb(208,224,4)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="543.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="37.3235%" y="517" width="0.0361%" height="15" fill="rgb(241,137,19)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="37.3235%" y="501" width="0.0361%" height="15" fill="rgb(244,24,17)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="511.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="37.3235%" y="485" width="0.0361%" height="15" fill="rgb(245,178,49)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="37.3235%" y="469" width="0.0361%" height="15" fill="rgb(219,160,38)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="37.3235%" y="453" width="0.0361%" height="15" fill="rgb(228,137,14)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="37.3235%" y="437" width="0.0361%" height="15" fill="rgb(237,134,11)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="37.3235%" y="421" width="0.0361%" height="15" fill="rgb(211,126,44)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="37.3235%" y="405" width="0.0361%" height="15" fill="rgb(226,171,33)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="415.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="37.3235%" y="389" width="0.0361%" height="15" fill="rgb(253,99,13)" fg:x="7243" fg:w="7"/><text x="37.5735%" y="399.50"></text></g><g><title>__GI___libc_free (6 samples, 0.03%)</title><rect x="37.3647%" y="805" width="0.0309%" height="15" fill="rgb(244,48,7)" fg:x="7251" fg:w="6"/><text x="37.6147%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="37.3647%" y="789" width="0.0309%" height="15" fill="rgb(244,217,54)" fg:x="7251" fg:w="6"/><text x="37.6147%" y="799.50"></text></g><g><title>_int_free_maybe_consolidate (6 samples, 0.03%)</title><rect x="37.3647%" y="773" width="0.0309%" height="15" fill="rgb(224,15,18)" fg:x="7251" fg:w="6"/><text x="37.6147%" y="783.50"></text></g><g><title>malloc_consolidate (6 samples, 0.03%)</title><rect x="37.3647%" y="757" width="0.0309%" height="15" fill="rgb(244,99,12)" fg:x="7251" fg:w="6"/><text x="37.6147%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (2 samples, 0.01%)</title><rect x="37.3957%" y="805" width="0.0103%" height="15" fill="rgb(233,226,8)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (2 samples, 0.01%)</title><rect x="37.3957%" y="789" width="0.0103%" height="15" fill="rgb(229,211,3)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (2 samples, 0.01%)</title><rect x="37.3957%" y="773" width="0.0103%" height="15" fill="rgb(216,140,21)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.01%)</title><rect x="37.3957%" y="757" width="0.0103%" height="15" fill="rgb(234,122,30)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.01%)</title><rect x="37.3957%" y="741" width="0.0103%" height="15" fill="rgb(236,25,46)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.01%)</title><rect x="37.3957%" y="725" width="0.0103%" height="15" fill="rgb(217,52,54)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(zilliqa::crypto::Hash,(zilliqa::transaction::TransactionReceipt,alloc::vec::Vec&lt;alloy_primitives::bits::address::Address&gt;))&gt; (2 samples, 0.01%)</title><rect x="37.3957%" y="709" width="0.0103%" height="15" fill="rgb(222,29,26)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(zilliqa::transaction::TransactionReceipt,alloc::vec::Vec&lt;alloy_primitives::bits::address::Address&gt;)&gt; (2 samples, 0.01%)</title><rect x="37.3957%" y="693" width="0.0103%" height="15" fill="rgb(216,177,29)" fg:x="7257" fg:w="2"/><text x="37.6457%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="37.4060%" y="789" width="0.0155%" height="15" fill="rgb(247,136,51)" fg:x="7259" fg:w="3"/><text x="37.6560%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.02%)</title><rect x="37.4060%" y="773" width="0.0155%" height="15" fill="rgb(231,47,47)" fg:x="7259" fg:w="3"/><text x="37.6560%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="37.4060%" y="757" width="0.0155%" height="15" fill="rgb(211,192,36)" fg:x="7259" fg:w="3"/><text x="37.6560%" y="767.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (18 samples, 0.09%)</title><rect x="37.4420%" y="773" width="0.0928%" height="15" fill="rgb(229,156,32)" fg:x="7266" fg:w="18"/><text x="37.6920%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.08%)</title><rect x="37.4575%" y="757" width="0.0773%" height="15" fill="rgb(248,213,20)" fg:x="7269" fg:w="15"/><text x="37.7075%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.08%)</title><rect x="37.4575%" y="741" width="0.0773%" height="15" fill="rgb(217,64,7)" fg:x="7269" fg:w="15"/><text x="37.7075%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.08%)</title><rect x="37.4575%" y="725" width="0.0773%" height="15" fill="rgb(232,142,8)" fg:x="7269" fg:w="15"/><text x="37.7075%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.07%)</title><rect x="37.4626%" y="709" width="0.0721%" height="15" fill="rgb(224,92,44)" fg:x="7270" fg:w="14"/><text x="37.7126%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.07%)</title><rect x="37.4678%" y="693" width="0.0670%" height="15" fill="rgb(214,169,17)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.07%)</title><rect x="37.4678%" y="677" width="0.0670%" height="15" fill="rgb(210,59,37)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="687.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.07%)</title><rect x="37.4678%" y="661" width="0.0670%" height="15" fill="rgb(214,116,48)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="671.50"></text></g><g><title>__rdl_realloc (13 samples, 0.07%)</title><rect x="37.4678%" y="645" width="0.0670%" height="15" fill="rgb(244,191,6)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="655.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (13 samples, 0.07%)</title><rect x="37.4678%" y="629" width="0.0670%" height="15" fill="rgb(241,50,52)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="639.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.07%)</title><rect x="37.4678%" y="613" width="0.0670%" height="15" fill="rgb(236,75,39)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="623.50"></text></g><g><title>_int_realloc (13 samples, 0.07%)</title><rect x="37.4678%" y="597" width="0.0670%" height="15" fill="rgb(236,99,0)" fg:x="7271" fg:w="13"/><text x="37.7178%" y="607.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="37.4987%" y="581" width="0.0361%" height="15" fill="rgb(207,202,15)" fg:x="7277" fg:w="7"/><text x="37.7487%" y="591.50"></text></g><g><title>&lt;eth_trie::node::Node as core::clone::Clone&gt;::clone (10 samples, 0.05%)</title><rect x="37.5348%" y="757" width="0.0515%" height="15" fill="rgb(233,207,14)" fg:x="7284" fg:w="10"/><text x="37.7848%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="37.5863%" y="741" width="0.0103%" height="15" fill="rgb(226,27,51)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="37.5863%" y="725" width="0.0103%" height="15" fill="rgb(206,104,42)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="37.5863%" y="709" width="0.0103%" height="15" fill="rgb(212,225,4)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="37.5863%" y="693" width="0.0103%" height="15" fill="rgb(233,96,42)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="37.5863%" y="677" width="0.0103%" height="15" fill="rgb(229,21,32)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="37.5863%" y="661" width="0.0103%" height="15" fill="rgb(226,216,24)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="37.5863%" y="645" width="0.0103%" height="15" fill="rgb(221,163,17)" fg:x="7294" fg:w="2"/><text x="37.8363%" y="655.50"></text></g><g><title>&lt;eth_trie::node::Node as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="37.5966%" y="741" width="0.0258%" height="15" fill="rgb(216,216,42)" fg:x="7296" fg:w="5"/><text x="37.8466%" y="751.50"></text></g><g><title>eth_trie::nibbles::Nibbles::common_prefix (2 samples, 0.01%)</title><rect x="37.6378%" y="725" width="0.0103%" height="15" fill="rgb(240,118,7)" fg:x="7304" fg:w="2"/><text x="37.8878%" y="735.50"></text></g><g><title>eth_trie::nibbles::Nibbles::common_prefix (3 samples, 0.02%)</title><rect x="37.6533%" y="709" width="0.0155%" height="15" fill="rgb(221,67,37)" fg:x="7307" fg:w="3"/><text x="37.9033%" y="719.50"></text></g><g><title>eth_trie::nibbles::Nibbles::offset (2 samples, 0.01%)</title><rect x="37.6688%" y="709" width="0.0103%" height="15" fill="rgb(241,32,44)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="719.50"></text></g><g><title>eth_trie::nibbles::Nibbles::slice (2 samples, 0.01%)</title><rect x="37.6688%" y="693" width="0.0103%" height="15" fill="rgb(235,204,43)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="703.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_hex (2 samples, 0.01%)</title><rect x="37.6688%" y="677" width="0.0103%" height="15" fill="rgb(213,116,10)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="37.6688%" y="661" width="0.0103%" height="15" fill="rgb(239,15,48)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="37.6688%" y="645" width="0.0103%" height="15" fill="rgb(207,123,36)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="37.6688%" y="629" width="0.0103%" height="15" fill="rgb(209,103,30)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="37.6688%" y="613" width="0.0103%" height="15" fill="rgb(238,100,19)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="37.6688%" y="597" width="0.0103%" height="15" fill="rgb(244,30,14)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="37.6688%" y="581" width="0.0103%" height="15" fill="rgb(249,174,6)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="37.6688%" y="565" width="0.0103%" height="15" fill="rgb(235,213,41)" fg:x="7310" fg:w="2"/><text x="37.9188%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (9 samples, 0.05%)</title><rect x="37.6482%" y="725" width="0.0464%" height="15" fill="rgb(213,118,6)" fg:x="7306" fg:w="9"/><text x="37.8982%" y="735.50"></text></g><g><title>eth_trie::node::Node::from_leaf (3 samples, 0.02%)</title><rect x="37.6791%" y="709" width="0.0155%" height="15" fill="rgb(235,44,51)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="37.6791%" y="693" width="0.0155%" height="15" fill="rgb(217,9,53)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="37.6791%" y="677" width="0.0155%" height="15" fill="rgb(237,172,34)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="37.6791%" y="661" width="0.0155%" height="15" fill="rgb(206,206,11)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="37.6791%" y="645" width="0.0155%" height="15" fill="rgb(214,149,29)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="37.6791%" y="629" width="0.0155%" height="15" fill="rgb(208,123,3)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="37.6791%" y="613" width="0.0155%" height="15" fill="rgb(229,126,4)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="623.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="37.6791%" y="597" width="0.0155%" height="15" fill="rgb(222,92,36)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="607.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="37.6791%" y="581" width="0.0155%" height="15" fill="rgb(216,39,41)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="37.6791%" y="565" width="0.0155%" height="15" fill="rgb(253,127,28)" fg:x="7312" fg:w="3"/><text x="37.9291%" y="575.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::insert (56 samples, 0.29%)</title><rect x="37.4214%" y="789" width="0.2886%" height="15" fill="rgb(249,152,51)" fg:x="7262" fg:w="56"/><text x="37.6714%" y="799.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (34 samples, 0.18%)</title><rect x="37.5348%" y="773" width="0.1752%" height="15" fill="rgb(209,123,42)" fg:x="7284" fg:w="34"/><text x="37.7848%" y="783.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (24 samples, 0.12%)</title><rect x="37.5863%" y="757" width="0.1237%" height="15" fill="rgb(241,118,22)" fg:x="7294" fg:w="24"/><text x="37.8363%" y="767.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (17 samples, 0.09%)</title><rect x="37.6224%" y="741" width="0.0876%" height="15" fill="rgb(208,25,7)" fg:x="7301" fg:w="17"/><text x="37.8724%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="37.6945%" y="725" width="0.0155%" height="15" fill="rgb(243,144,39)" fg:x="7315" fg:w="3"/><text x="37.9445%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="37.6997%" y="709" width="0.0103%" height="15" fill="rgb(250,50,5)" fg:x="7316" fg:w="2"/><text x="37.9497%" y="719.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="37.7151%" y="757" width="0.0206%" height="15" fill="rgb(207,67,11)" fg:x="7319" fg:w="4"/><text x="37.9651%" y="767.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="37.7151%" y="741" width="0.0206%" height="15" fill="rgb(245,204,40)" fg:x="7319" fg:w="4"/><text x="37.9651%" y="751.50"></text></g><g><title>_int_free_maybe_consolidate (4 samples, 0.02%)</title><rect x="37.7151%" y="725" width="0.0206%" height="15" fill="rgb(238,228,24)" fg:x="7319" fg:w="4"/><text x="37.9651%" y="735.50"></text></g><g><title>malloc_consolidate (4 samples, 0.02%)</title><rect x="37.7151%" y="709" width="0.0206%" height="15" fill="rgb(217,116,22)" fg:x="7319" fg:w="4"/><text x="37.9651%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="37.7358%" y="757" width="0.0103%" height="15" fill="rgb(234,98,12)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="37.7358%" y="741" width="0.0103%" height="15" fill="rgb(242,170,50)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="37.7358%" y="725" width="0.0103%" height="15" fill="rgb(235,7,5)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="37.7358%" y="709" width="0.0103%" height="15" fill="rgb(241,114,28)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="37.7358%" y="693" width="0.0103%" height="15" fill="rgb(246,112,42)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="37.7358%" y="677" width="0.0103%" height="15" fill="rgb(248,228,14)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="37.7358%" y="661" width="0.0103%" height="15" fill="rgb(208,133,18)" fg:x="7323" fg:w="2"/><text x="37.9858%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::node::LeafNode&gt;&gt; (3 samples, 0.02%)</title><rect x="37.7461%" y="357" width="0.0155%" height="15" fill="rgb(207,35,49)" fg:x="7325" fg:w="3"/><text x="37.9961%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="37.7461%" y="341" width="0.0155%" height="15" fill="rgb(205,68,36)" fg:x="7325" fg:w="3"/><text x="37.9961%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="37.7461%" y="757" width="0.0309%" height="15" fill="rgb(245,62,40)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="741" width="0.0309%" height="15" fill="rgb(228,27,24)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="725" width="0.0309%" height="15" fill="rgb(253,19,12)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="709" width="0.0309%" height="15" fill="rgb(232,28,20)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="37.7461%" y="693" width="0.0309%" height="15" fill="rgb(218,35,51)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="703.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="677" width="0.0309%" height="15" fill="rgb(212,90,40)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="661" width="0.0309%" height="15" fill="rgb(220,172,12)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="645" width="0.0309%" height="15" fill="rgb(226,159,20)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="37.7461%" y="629" width="0.0309%" height="15" fill="rgb(234,205,16)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="37.7461%" y="613" width="0.0309%" height="15" fill="rgb(207,9,39)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="597" width="0.0309%" height="15" fill="rgb(249,143,15)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="581" width="0.0309%" height="15" fill="rgb(253,133,29)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="565" width="0.0309%" height="15" fill="rgb(221,187,0)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="37.7461%" y="549" width="0.0309%" height="15" fill="rgb(205,204,26)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="559.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="533" width="0.0309%" height="15" fill="rgb(224,68,54)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="517" width="0.0309%" height="15" fill="rgb(209,67,4)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="501" width="0.0309%" height="15" fill="rgb(228,229,18)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="37.7461%" y="485" width="0.0309%" height="15" fill="rgb(231,89,13)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="37.7461%" y="469" width="0.0309%" height="15" fill="rgb(210,182,18)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="453" width="0.0309%" height="15" fill="rgb(240,105,2)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="437" width="0.0309%" height="15" fill="rgb(207,170,50)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="421" width="0.0309%" height="15" fill="rgb(232,133,24)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="37.7461%" y="405" width="0.0309%" height="15" fill="rgb(235,166,27)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="415.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="389" width="0.0309%" height="15" fill="rgb(209,19,13)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="37.7461%" y="373" width="0.0309%" height="15" fill="rgb(226,79,39)" fg:x="7325" fg:w="6"/><text x="37.9961%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="357" width="0.0155%" height="15" fill="rgb(222,163,10)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="37.7615%" y="341" width="0.0155%" height="15" fill="rgb(214,44,19)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="37.7615%" y="325" width="0.0155%" height="15" fill="rgb(210,217,13)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="309" width="0.0155%" height="15" fill="rgb(237,61,54)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="293" width="0.0155%" height="15" fill="rgb(226,184,24)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="277" width="0.0155%" height="15" fill="rgb(223,226,4)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (3 samples, 0.02%)</title><rect x="37.7615%" y="261" width="0.0155%" height="15" fill="rgb(210,26,41)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="271.50"></text></g><g><title> 16]&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="245" width="0.0155%" height="15" fill="rgb(220,221,6)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="229" width="0.0155%" height="15" fill="rgb(225,89,49)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::node::LeafNode&gt;&gt; (3 samples, 0.02%)</title><rect x="37.7615%" y="213" width="0.0155%" height="15" fill="rgb(218,70,45)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="223.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="37.7615%" y="197" width="0.0155%" height="15" fill="rgb(238,166,21)" fg:x="7328" fg:w="3"/><text x="38.0115%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="37.7770%" y="677" width="0.0103%" height="15" fill="rgb(224,141,44)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="37.7770%" y="661" width="0.0103%" height="15" fill="rgb(230,12,49)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="37.7770%" y="645" width="0.0103%" height="15" fill="rgb(212,174,12)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="37.7770%" y="629" width="0.0103%" height="15" fill="rgb(246,67,9)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="37.7770%" y="613" width="0.0103%" height="15" fill="rgb(239,35,23)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="37.7770%" y="597" width="0.0103%" height="15" fill="rgb(211,167,0)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="607.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="37.7770%" y="581" width="0.0103%" height="15" fill="rgb(225,119,45)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="37.7770%" y="565" width="0.0103%" height="15" fill="rgb(210,162,6)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="37.7770%" y="549" width="0.0103%" height="15" fill="rgb(208,118,35)" fg:x="7331" fg:w="2"/><text x="38.0270%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="37.7770%" y="741" width="0.0206%" height="15" fill="rgb(239,4,53)" fg:x="7331" fg:w="4"/><text x="38.0270%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="37.7770%" y="725" width="0.0206%" height="15" fill="rgb(213,130,21)" fg:x="7331" fg:w="4"/><text x="38.0270%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="37.7770%" y="709" width="0.0206%" height="15" fill="rgb(235,148,0)" fg:x="7331" fg:w="4"/><text x="38.0270%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="37.7770%" y="693" width="0.0206%" height="15" fill="rgb(244,224,18)" fg:x="7331" fg:w="4"/><text x="38.0270%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="37.7873%" y="677" width="0.0103%" height="15" fill="rgb(211,214,4)" fg:x="7333" fg:w="2"/><text x="38.0373%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="37.7873%" y="661" width="0.0103%" height="15" fill="rgb(206,119,25)" fg:x="7333" fg:w="2"/><text x="38.0373%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="37.7873%" y="645" width="0.0103%" height="15" fill="rgb(243,93,47)" fg:x="7333" fg:w="2"/><text x="38.0373%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="37.7976%" y="677" width="0.0103%" height="15" fill="rgb(224,194,6)" fg:x="7335" fg:w="2"/><text x="38.0476%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="37.7976%" y="661" width="0.0103%" height="15" fill="rgb(243,229,6)" fg:x="7335" fg:w="2"/><text x="38.0476%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.01%)</title><rect x="37.7976%" y="645" width="0.0103%" height="15" fill="rgb(207,23,50)" fg:x="7335" fg:w="2"/><text x="38.0476%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.01%)</title><rect x="37.7976%" y="629" width="0.0103%" height="15" fill="rgb(253,192,32)" fg:x="7335" fg:w="2"/><text x="38.0476%" y="639.50"></text></g><g><title>&lt;eth_trie::db::MemoryDB as eth_trie::db::DB&gt;::insert (3 samples, 0.02%)</title><rect x="37.7976%" y="741" width="0.0155%" height="15" fill="rgb(213,21,6)" fg:x="7335" fg:w="3"/><text x="38.0476%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.02%)</title><rect x="37.7976%" y="725" width="0.0155%" height="15" fill="rgb(243,151,13)" fg:x="7335" fg:w="3"/><text x="38.0476%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="37.7976%" y="709" width="0.0155%" height="15" fill="rgb(233,165,41)" fg:x="7335" fg:w="3"/><text x="38.0476%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.02%)</title><rect x="37.7976%" y="693" width="0.0155%" height="15" fill="rgb(246,176,45)" fg:x="7335" fg:w="3"/><text x="38.0476%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="37.8130%" y="725" width="0.0103%" height="15" fill="rgb(217,170,52)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (2 samples, 0.01%)</title><rect x="37.8130%" y="709" width="0.0103%" height="15" fill="rgb(214,203,54)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="37.8130%" y="693" width="0.0103%" height="15" fill="rgb(248,215,49)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="37.8130%" y="677" width="0.0103%" height="15" fill="rgb(208,46,10)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="37.8130%" y="661" width="0.0103%" height="15" fill="rgb(254,5,31)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="37.8130%" y="645" width="0.0103%" height="15" fill="rgb(222,104,33)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="37.8130%" y="629" width="0.0103%" height="15" fill="rgb(248,49,16)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="639.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="37.8130%" y="613" width="0.0103%" height="15" fill="rgb(232,198,41)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="623.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="37.8130%" y="597" width="0.0103%" height="15" fill="rgb(214,125,3)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="37.8130%" y="581" width="0.0103%" height="15" fill="rgb(229,220,28)" fg:x="7338" fg:w="2"/><text x="38.0630%" y="591.50"></text></g><g><title>eth_trie::db::DB::insert_batch (10 samples, 0.05%)</title><rect x="37.7770%" y="757" width="0.0515%" height="15" fill="rgb(222,64,37)" fg:x="7331" fg:w="10"/><text x="38.0270%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="37.8130%" y="741" width="0.0155%" height="15" fill="rgb(249,184,13)" fg:x="7338" fg:w="3"/><text x="38.0630%" y="751.50"></text></g><g><title>alloy_primitives::utils::keccak256 (11 samples, 0.06%)</title><rect x="37.8440%" y="645" width="0.0567%" height="15" fill="rgb(252,176,6)" fg:x="7344" fg:w="11"/><text x="38.0940%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (11 samples, 0.06%)</title><rect x="37.8440%" y="629" width="0.0567%" height="15" fill="rgb(228,153,7)" fg:x="7344" fg:w="11"/><text x="38.0940%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (10 samples, 0.05%)</title><rect x="37.8491%" y="613" width="0.0515%" height="15" fill="rgb(242,193,5)" fg:x="7345" fg:w="10"/><text x="38.0991%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (10 samples, 0.05%)</title><rect x="37.8491%" y="597" width="0.0515%" height="15" fill="rgb(232,140,9)" fg:x="7345" fg:w="10"/><text x="38.0991%" y="607.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (10 samples, 0.05%)</title><rect x="37.8491%" y="581" width="0.0515%" height="15" fill="rgb(213,222,16)" fg:x="7345" fg:w="10"/><text x="38.0991%" y="591.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (9 samples, 0.05%)</title><rect x="37.8543%" y="565" width="0.0464%" height="15" fill="rgb(222,75,50)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (9 samples, 0.05%)</title><rect x="37.8543%" y="549" width="0.0464%" height="15" fill="rgb(205,180,2)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (9 samples, 0.05%)</title><rect x="37.8543%" y="533" width="0.0464%" height="15" fill="rgb(216,34,7)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (9 samples, 0.05%)</title><rect x="37.8543%" y="517" width="0.0464%" height="15" fill="rgb(253,16,32)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.05%)</title><rect x="37.8543%" y="501" width="0.0464%" height="15" fill="rgb(208,97,28)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="511.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.05%)</title><rect x="37.8543%" y="485" width="0.0464%" height="15" fill="rgb(225,92,11)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="495.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="37.8543%" y="469" width="0.0464%" height="15" fill="rgb(243,38,12)" fg:x="7346" fg:w="9"/><text x="38.1043%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (3 samples, 0.02%)</title><rect x="37.9058%" y="629" width="0.0155%" height="15" fill="rgb(208,139,16)" fg:x="7356" fg:w="3"/><text x="38.1558%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="37.9058%" y="613" width="0.0155%" height="15" fill="rgb(227,24,9)" fg:x="7356" fg:w="3"/><text x="38.1558%" y="623.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="37.9058%" y="597" width="0.0155%" height="15" fill="rgb(206,62,11)" fg:x="7356" fg:w="3"/><text x="38.1558%" y="607.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="37.9058%" y="581" width="0.0155%" height="15" fill="rgb(228,134,27)" fg:x="7356" fg:w="3"/><text x="38.1558%" y="591.50"></text></g><g><title>eth_trie::nibbles::Nibbles::encode_compact (3 samples, 0.02%)</title><rect x="37.9213%" y="629" width="0.0155%" height="15" fill="rgb(205,55,33)" fg:x="7359" fg:w="3"/><text x="38.1713%" y="639.50"></text></g><g><title>eth_trie::nibbles::Nibbles::is_leaf (2 samples, 0.01%)</title><rect x="37.9264%" y="613" width="0.0103%" height="15" fill="rgb(243,75,43)" fg:x="7360" fg:w="2"/><text x="38.1764%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.01%)</title><rect x="37.9264%" y="597" width="0.0103%" height="15" fill="rgb(223,27,42)" fg:x="7360" fg:w="2"/><text x="38.1764%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.02%)</title><rect x="37.9367%" y="613" width="0.0206%" height="15" fill="rgb(232,189,33)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="37.9367%" y="597" width="0.0206%" height="15" fill="rgb(210,9,39)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="37.9367%" y="581" width="0.0206%" height="15" fill="rgb(242,85,26)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="37.9367%" y="565" width="0.0206%" height="15" fill="rgb(248,44,4)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="37.9367%" y="549" width="0.0206%" height="15" fill="rgb(250,96,46)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="37.9367%" y="533" width="0.0206%" height="15" fill="rgb(229,116,26)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.02%)</title><rect x="37.9367%" y="517" width="0.0206%" height="15" fill="rgb(246,94,34)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="37.9367%" y="501" width="0.0206%" height="15" fill="rgb(251,73,21)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="37.9367%" y="485" width="0.0206%" height="15" fill="rgb(254,121,25)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="495.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="37.9367%" y="469" width="0.0206%" height="15" fill="rgb(215,161,49)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="479.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="37.9367%" y="453" width="0.0206%" height="15" fill="rgb(221,43,13)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="463.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="37.9367%" y="437" width="0.0206%" height="15" fill="rgb(249,5,37)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="37.9367%" y="421" width="0.0206%" height="15" fill="rgb(226,25,44)" fg:x="7362" fg:w="4"/><text x="38.1867%" y="431.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="37.9470%" y="405" width="0.0103%" height="15" fill="rgb(238,189,16)" fg:x="7364" fg:w="2"/><text x="38.1970%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="37.9625%" y="485" width="0.0206%" height="15" fill="rgb(251,186,8)" fg:x="7367" fg:w="4"/><text x="38.2125%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="37.9625%" y="469" width="0.0206%" height="15" fill="rgb(254,34,31)" fg:x="7367" fg:w="4"/><text x="38.2125%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="37.9625%" y="453" width="0.0206%" height="15" fill="rgb(225,215,27)" fg:x="7367" fg:w="4"/><text x="38.2125%" y="463.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="37.9625%" y="437" width="0.0206%" height="15" fill="rgb(221,192,48)" fg:x="7367" fg:w="4"/><text x="38.2125%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256 (6 samples, 0.03%)</title><rect x="37.9573%" y="613" width="0.0309%" height="15" fill="rgb(219,137,20)" fg:x="7366" fg:w="6"/><text x="38.2073%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (6 samples, 0.03%)</title><rect x="37.9573%" y="597" width="0.0309%" height="15" fill="rgb(219,84,11)" fg:x="7366" fg:w="6"/><text x="38.2073%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="37.9625%" y="581" width="0.0258%" height="15" fill="rgb(224,10,23)" fg:x="7367" fg:w="5"/><text x="38.2125%" y="591.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="37.9625%" y="565" width="0.0258%" height="15" fill="rgb(248,22,39)" fg:x="7367" fg:w="5"/><text x="38.2125%" y="575.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="37.9625%" y="549" width="0.0258%" height="15" fill="rgb(212,154,20)" fg:x="7367" fg:w="5"/><text x="38.2125%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="37.9625%" y="533" width="0.0258%" height="15" fill="rgb(236,199,50)" fg:x="7367" fg:w="5"/><text x="38.2125%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="37.9625%" y="517" width="0.0258%" height="15" fill="rgb(211,9,17)" fg:x="7367" fg:w="5"/><text x="38.2125%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="37.9625%" y="501" width="0.0258%" height="15" fill="rgb(243,216,36)" fg:x="7367" fg:w="5"/><text x="38.2125%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="37.9934%" y="581" width="0.0103%" height="15" fill="rgb(250,2,10)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="37.9934%" y="565" width="0.0103%" height="15" fill="rgb(226,50,48)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="37.9934%" y="549" width="0.0103%" height="15" fill="rgb(243,81,16)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="37.9934%" y="533" width="0.0103%" height="15" fill="rgb(250,14,2)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="37.9934%" y="517" width="0.0103%" height="15" fill="rgb(233,135,29)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="37.9934%" y="501" width="0.0103%" height="15" fill="rgb(224,64,43)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="511.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="37.9934%" y="485" width="0.0103%" height="15" fill="rgb(238,84,13)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="495.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="37.9934%" y="469" width="0.0103%" height="15" fill="rgb(253,48,26)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="479.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="37.9934%" y="453" width="0.0103%" height="15" fill="rgb(205,223,31)" fg:x="7373" fg:w="2"/><text x="38.2434%" y="463.50"></text></g><g><title>eth_trie::nibbles::Nibbles::encode_compact (5 samples, 0.03%)</title><rect x="37.9934%" y="597" width="0.0258%" height="15" fill="rgb(221,41,32)" fg:x="7373" fg:w="5"/><text x="38.2434%" y="607.50"></text></g><g><title>eth_trie::nibbles::Nibbles::is_leaf (3 samples, 0.02%)</title><rect x="38.0037%" y="581" width="0.0155%" height="15" fill="rgb(213,158,31)" fg:x="7375" fg:w="3"/><text x="38.2537%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (2 samples, 0.01%)</title><rect x="38.0243%" y="581" width="0.0103%" height="15" fill="rgb(245,126,43)" fg:x="7379" fg:w="2"/><text x="38.2743%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (5 samples, 0.03%)</title><rect x="38.0192%" y="597" width="0.0258%" height="15" fill="rgb(227,7,22)" fg:x="7378" fg:w="5"/><text x="38.2692%" y="607.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (4 samples, 0.02%)</title><rect x="38.0449%" y="581" width="0.0206%" height="15" fill="rgb(252,90,44)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="591.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (4 samples, 0.02%)</title><rect x="38.0449%" y="565" width="0.0206%" height="15" fill="rgb(253,91,0)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="575.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (4 samples, 0.02%)</title><rect x="38.0449%" y="549" width="0.0206%" height="15" fill="rgb(252,175,49)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="559.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="38.0449%" y="533" width="0.0206%" height="15" fill="rgb(246,150,1)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="543.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (4 samples, 0.02%)</title><rect x="38.0449%" y="517" width="0.0206%" height="15" fill="rgb(241,192,25)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="527.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (4 samples, 0.02%)</title><rect x="38.0449%" y="501" width="0.0206%" height="15" fill="rgb(239,187,11)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="511.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (4 samples, 0.02%)</title><rect x="38.0449%" y="485" width="0.0206%" height="15" fill="rgb(218,202,51)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="495.50"></text></g><g><title>bytes::bytes_mut::BytesMut::spare_capacity_mut (4 samples, 0.02%)</title><rect x="38.0449%" y="469" width="0.0206%" height="15" fill="rgb(225,176,8)" fg:x="7383" fg:w="4"/><text x="38.2949%" y="479.50"></text></g><g><title>rlp::stream::RlpStream::append (6 samples, 0.03%)</title><rect x="38.0449%" y="597" width="0.0309%" height="15" fill="rgb(219,122,41)" fg:x="7383" fg:w="6"/><text x="38.2949%" y="607.50"></text></g><g><title>rlp::stream::RlpStream::note_appended (2 samples, 0.01%)</title><rect x="38.0655%" y="581" width="0.0103%" height="15" fill="rgb(248,140,20)" fg:x="7387" fg:w="2"/><text x="38.3155%" y="591.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_list_payload (2 samples, 0.01%)</title><rect x="38.0655%" y="565" width="0.0103%" height="15" fill="rgb(245,41,37)" fg:x="7387" fg:w="2"/><text x="38.3155%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (20 samples, 0.10%)</title><rect x="37.9883%" y="613" width="0.1031%" height="15" fill="rgb(235,82,39)" fg:x="7372" fg:w="20"/><text x="38.2383%" y="623.50"></text></g><g><title>rlp::stream::RlpStream::out (3 samples, 0.02%)</title><rect x="38.0759%" y="597" width="0.0155%" height="15" fill="rgb(230,108,42)" fg:x="7389" fg:w="3"/><text x="38.3259%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="38.0913%" y="613" width="0.0103%" height="15" fill="rgb(215,150,50)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="38.0913%" y="597" width="0.0103%" height="15" fill="rgb(233,212,5)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="38.0913%" y="581" width="0.0103%" height="15" fill="rgb(245,80,22)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="38.0913%" y="565" width="0.0103%" height="15" fill="rgb(238,129,16)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="38.0913%" y="549" width="0.0103%" height="15" fill="rgb(240,19,0)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.01%)</title><rect x="38.0913%" y="533" width="0.0103%" height="15" fill="rgb(232,42,35)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.01%)</title><rect x="38.0913%" y="517" width="0.0103%" height="15" fill="rgb(223,130,24)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2 samples, 0.01%)</title><rect x="38.0913%" y="501" width="0.0103%" height="15" fill="rgb(237,16,22)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.01%)</title><rect x="38.0913%" y="485" width="0.0103%" height="15" fill="rgb(248,192,20)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.01%)</title><rect x="38.0913%" y="469" width="0.0103%" height="15" fill="rgb(233,167,2)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.01%)</title><rect x="38.0913%" y="453" width="0.0103%" height="15" fill="rgb(252,71,44)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="463.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="38.0913%" y="437" width="0.0103%" height="15" fill="rgb(238,37,47)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="447.50"></text></g><g><title>allocator_api2::stable::alloc::global::Global::alloc_impl (2 samples, 0.01%)</title><rect x="38.0913%" y="421" width="0.0103%" height="15" fill="rgb(214,202,54)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="38.0913%" y="405" width="0.0103%" height="15" fill="rgb(254,165,40)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="415.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="38.0913%" y="389" width="0.0103%" height="15" fill="rgb(246,173,38)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="38.0913%" y="373" width="0.0103%" height="15" fill="rgb(215,3,27)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="38.0913%" y="357" width="0.0103%" height="15" fill="rgb(239,169,51)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="367.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="38.0913%" y="341" width="0.0103%" height="15" fill="rgb(212,5,25)" fg:x="7392" fg:w="2"/><text x="38.3413%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (34 samples, 0.18%)</title><rect x="37.9367%" y="629" width="0.1752%" height="15" fill="rgb(243,45,17)" fg:x="7362" fg:w="34"/><text x="38.1867%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="38.1016%" y="613" width="0.0103%" height="15" fill="rgb(242,97,9)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="38.1016%" y="597" width="0.0103%" height="15" fill="rgb(228,71,31)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="38.1016%" y="581" width="0.0103%" height="15" fill="rgb(252,184,16)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="38.1016%" y="565" width="0.0103%" height="15" fill="rgb(236,169,46)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="38.1016%" y="549" width="0.0103%" height="15" fill="rgb(207,17,47)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="38.1016%" y="533" width="0.0103%" height="15" fill="rgb(206,201,28)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.01%)</title><rect x="38.1016%" y="517" width="0.0103%" height="15" fill="rgb(224,184,23)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.01%)</title><rect x="38.1016%" y="501" width="0.0103%" height="15" fill="rgb(208,139,48)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (2 samples, 0.01%)</title><rect x="38.1016%" y="485" width="0.0103%" height="15" fill="rgb(208,130,10)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="495.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.01%)</title><rect x="38.1016%" y="469" width="0.0103%" height="15" fill="rgb(211,213,45)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="38.1016%" y="453" width="0.0103%" height="15" fill="rgb(235,100,30)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="38.1016%" y="437" width="0.0103%" height="15" fill="rgb(206,144,31)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.01%)</title><rect x="38.1016%" y="421" width="0.0103%" height="15" fill="rgb(224,200,26)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.01%)</title><rect x="38.1016%" y="405" width="0.0103%" height="15" fill="rgb(247,104,53)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="415.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="38.1016%" y="389" width="0.0103%" height="15" fill="rgb(220,14,17)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="399.50"></text></g><g><title>foldhash::hash_bytes_medium (2 samples, 0.01%)</title><rect x="38.1016%" y="373" width="0.0103%" height="15" fill="rgb(230,140,40)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="383.50"></text></g><g><title>foldhash::folded_multiply (2 samples, 0.01%)</title><rect x="38.1016%" y="357" width="0.0103%" height="15" fill="rgb(229,2,41)" fg:x="7394" fg:w="2"/><text x="38.3516%" y="367.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (4 samples, 0.02%)</title><rect x="38.1119%" y="613" width="0.0206%" height="15" fill="rgb(232,89,16)" fg:x="7396" fg:w="4"/><text x="38.3619%" y="623.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (4 samples, 0.02%)</title><rect x="38.1119%" y="597" width="0.0206%" height="15" fill="rgb(247,59,52)" fg:x="7396" fg:w="4"/><text x="38.3619%" y="607.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (4 samples, 0.02%)</title><rect x="38.1119%" y="581" width="0.0206%" height="15" fill="rgb(226,110,21)" fg:x="7396" fg:w="4"/><text x="38.3619%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="38.1119%" y="565" width="0.0206%" height="15" fill="rgb(224,176,43)" fg:x="7396" fg:w="4"/><text x="38.3619%" y="575.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.02%)</title><rect x="38.1119%" y="549" width="0.0206%" height="15" fill="rgb(221,73,6)" fg:x="7396" fg:w="4"/><text x="38.3619%" y="559.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (4 samples, 0.02%)</title><rect x="38.1119%" y="533" width="0.0206%" height="15" fill="rgb(232,78,19)" fg:x="7396" fg:w="4"/><text x="38.3619%" y="543.50"></text></g><g><title>rlp::stream::RlpStream::append (5 samples, 0.03%)</title><rect x="38.1119%" y="629" width="0.0258%" height="15" fill="rgb(233,112,48)" fg:x="7396" fg:w="5"/><text x="38.3619%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (49 samples, 0.25%)</title><rect x="37.9006%" y="645" width="0.2525%" height="15" fill="rgb(243,131,47)" fg:x="7355" fg:w="49"/><text x="38.1506%" y="655.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (2 samples, 0.01%)</title><rect x="38.1428%" y="629" width="0.0103%" height="15" fill="rgb(226,51,1)" fg:x="7402" fg:w="2"/><text x="38.3928%" y="639.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (2 samples, 0.01%)</title><rect x="38.1428%" y="613" width="0.0103%" height="15" fill="rgb(247,58,7)" fg:x="7402" fg:w="2"/><text x="38.3928%" y="623.50"></text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (2 samples, 0.01%)</title><rect x="38.1428%" y="597" width="0.0103%" height="15" fill="rgb(209,7,32)" fg:x="7402" fg:w="2"/><text x="38.3928%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (3 samples, 0.02%)</title><rect x="38.1531%" y="533" width="0.0155%" height="15" fill="rgb(209,39,41)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="543.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.02%)</title><rect x="38.1531%" y="517" width="0.0155%" height="15" fill="rgb(226,182,46)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="38.1531%" y="501" width="0.0155%" height="15" fill="rgb(230,219,10)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="38.1531%" y="485" width="0.0155%" height="15" fill="rgb(227,175,30)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.02%)</title><rect x="38.1531%" y="469" width="0.0155%" height="15" fill="rgb(217,2,50)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (3 samples, 0.02%)</title><rect x="38.1531%" y="453" width="0.0155%" height="15" fill="rgb(229,160,0)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="463.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="38.1531%" y="437" width="0.0155%" height="15" fill="rgb(207,78,37)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="447.50"></text></g><g><title>foldhash::hash_bytes_medium (3 samples, 0.02%)</title><rect x="38.1531%" y="421" width="0.0155%" height="15" fill="rgb(225,57,0)" fg:x="7404" fg:w="3"/><text x="38.4031%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="38.1531%" y="597" width="0.0309%" height="15" fill="rgb(232,154,2)" fg:x="7404" fg:w="6"/><text x="38.4031%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.03%)</title><rect x="38.1531%" y="581" width="0.0309%" height="15" fill="rgb(241,212,25)" fg:x="7404" fg:w="6"/><text x="38.4031%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (6 samples, 0.03%)</title><rect x="38.1531%" y="565" width="0.0309%" height="15" fill="rgb(226,69,20)" fg:x="7404" fg:w="6"/><text x="38.4031%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (6 samples, 0.03%)</title><rect x="38.1531%" y="549" width="0.0309%" height="15" fill="rgb(247,184,54)" fg:x="7404" fg:w="6"/><text x="38.4031%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (3 samples, 0.02%)</title><rect x="38.1686%" y="533" width="0.0155%" height="15" fill="rgb(210,145,0)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (3 samples, 0.02%)</title><rect x="38.1686%" y="517" width="0.0155%" height="15" fill="rgb(253,82,12)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.02%)</title><rect x="38.1686%" y="501" width="0.0155%" height="15" fill="rgb(245,42,11)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="511.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.02%)</title><rect x="38.1686%" y="485" width="0.0155%" height="15" fill="rgb(219,147,32)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="495.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="38.1686%" y="469" width="0.0155%" height="15" fill="rgb(246,12,7)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="479.50"></text></g><g><title>allocator_api2::stable::alloc::global::Global::alloc_impl (3 samples, 0.02%)</title><rect x="38.1686%" y="453" width="0.0155%" height="15" fill="rgb(243,50,9)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="38.1686%" y="437" width="0.0155%" height="15" fill="rgb(219,149,6)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="447.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="38.1686%" y="421" width="0.0155%" height="15" fill="rgb(241,51,42)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="431.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="38.1686%" y="405" width="0.0155%" height="15" fill="rgb(226,128,27)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="415.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="38.1686%" y="389" width="0.0155%" height="15" fill="rgb(244,144,4)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="399.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="38.1686%" y="373" width="0.0155%" height="15" fill="rgb(221,4,13)" fg:x="7407" fg:w="3"/><text x="38.4186%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.04%)</title><rect x="38.1531%" y="645" width="0.0412%" height="15" fill="rgb(208,170,28)" fg:x="7404" fg:w="8"/><text x="38.4031%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (8 samples, 0.04%)</title><rect x="38.1531%" y="629" width="0.0412%" height="15" fill="rgb(226,131,13)" fg:x="7404" fg:w="8"/><text x="38.4031%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.04%)</title><rect x="38.1531%" y="613" width="0.0412%" height="15" fill="rgb(215,72,41)" fg:x="7404" fg:w="8"/><text x="38.4031%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.01%)</title><rect x="38.1841%" y="597" width="0.0103%" height="15" fill="rgb(243,108,20)" fg:x="7410" fg:w="2"/><text x="38.4341%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (70 samples, 0.36%)</title><rect x="37.8388%" y="661" width="0.3607%" height="15" fill="rgb(230,189,17)" fg:x="7343" fg:w="70"/><text x="38.0888%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (73 samples, 0.38%)</title><rect x="37.8337%" y="677" width="0.3762%" height="15" fill="rgb(220,50,17)" fg:x="7342" fg:w="73"/><text x="38.0837%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (75 samples, 0.39%)</title><rect x="37.8285%" y="693" width="0.3865%" height="15" fill="rgb(248,152,48)" fg:x="7341" fg:w="75"/><text x="38.0785%" y="703.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (99 samples, 0.51%)</title><rect x="37.7100%" y="789" width="0.5102%" height="15" fill="rgb(244,91,11)" fg:x="7318" fg:w="99"/><text x="37.9600%" y="799.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (99 samples, 0.51%)</title><rect x="37.7100%" y="773" width="0.5102%" height="15" fill="rgb(220,157,5)" fg:x="7318" fg:w="99"/><text x="37.9600%" y="783.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (76 samples, 0.39%)</title><rect x="37.8285%" y="757" width="0.3916%" height="15" fill="rgb(253,137,8)" fg:x="7341" fg:w="76"/><text x="38.0785%" y="767.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (76 samples, 0.39%)</title><rect x="37.8285%" y="741" width="0.3916%" height="15" fill="rgb(217,137,51)" fg:x="7341" fg:w="76"/><text x="38.0785%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (76 samples, 0.39%)</title><rect x="37.8285%" y="725" width="0.3916%" height="15" fill="rgb(218,209,53)" fg:x="7341" fg:w="76"/><text x="38.0785%" y="735.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (76 samples, 0.39%)</title><rect x="37.8285%" y="709" width="0.3916%" height="15" fill="rgb(249,137,25)" fg:x="7341" fg:w="76"/><text x="38.0785%" y="719.50"></text></g><g><title>&lt;zilliqa::transaction::VerifiedTransaction as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="38.2253%" y="789" width="0.0155%" height="15" fill="rgb(239,155,26)" fg:x="7418" fg:w="3"/><text x="38.4753%" y="799.50"></text></g><g><title>&lt;zilliqa::transaction::SignedTransaction as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="38.2253%" y="773" width="0.0155%" height="15" fill="rgb(227,85,46)" fg:x="7418" fg:w="3"/><text x="38.4753%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="38.2408%" y="789" width="0.0155%" height="15" fill="rgb(251,107,43)" fg:x="7421" fg:w="3"/><text x="38.4908%" y="799.50"></text></g><g><title>itertools::Itertools::collect_vec (3 samples, 0.02%)</title><rect x="38.2614%" y="789" width="0.0155%" height="15" fill="rgb(234,170,33)" fg:x="7425" fg:w="3"/><text x="38.5114%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="38.2614%" y="773" width="0.0155%" height="15" fill="rgb(206,29,35)" fg:x="7425" fg:w="3"/><text x="38.5114%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="38.2614%" y="757" width="0.0155%" height="15" fill="rgb(227,138,25)" fg:x="7425" fg:w="3"/><text x="38.5114%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="38.2614%" y="741" width="0.0155%" height="15" fill="rgb(249,131,35)" fg:x="7425" fg:w="3"/><text x="38.5114%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.02%)</title><rect x="38.2768%" y="789" width="0.0206%" height="15" fill="rgb(239,6,40)" fg:x="7428" fg:w="4"/><text x="38.5268%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="38.2768%" y="773" width="0.0206%" height="15" fill="rgb(246,136,47)" fg:x="7428" fg:w="4"/><text x="38.5268%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (3 samples, 0.02%)</title><rect x="38.2820%" y="757" width="0.0155%" height="15" fill="rgb(253,58,26)" fg:x="7429" fg:w="3"/><text x="38.5320%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="38.2820%" y="741" width="0.0155%" height="15" fill="rgb(237,141,10)" fg:x="7429" fg:w="3"/><text x="38.5320%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.02%)</title><rect x="38.2820%" y="725" width="0.0155%" height="15" fill="rgb(234,156,12)" fg:x="7429" fg:w="3"/><text x="38.5320%" y="735.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="38.2820%" y="709" width="0.0155%" height="15" fill="rgb(243,224,36)" fg:x="7429" fg:w="3"/><text x="38.5320%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="38.2820%" y="693" width="0.0155%" height="15" fill="rgb(205,229,51)" fg:x="7429" fg:w="3"/><text x="38.5320%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::transaction::Transaction&gt; (2 samples, 0.01%)</title><rect x="38.3284%" y="757" width="0.0103%" height="15" fill="rgb(223,189,4)" fg:x="7438" fg:w="2"/><text x="38.5784%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_consensus::transaction::legacy::TxLegacy&gt; (2 samples, 0.01%)</title><rect x="38.3284%" y="741" width="0.0103%" height="15" fill="rgb(249,167,54)" fg:x="7438" fg:w="2"/><text x="38.5784%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (2 samples, 0.01%)</title><rect x="38.3284%" y="725" width="0.0103%" height="15" fill="rgb(218,34,28)" fg:x="7438" fg:w="2"/><text x="38.5784%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.01%)</title><rect x="38.3284%" y="709" width="0.0103%" height="15" fill="rgb(232,109,42)" fg:x="7438" fg:w="2"/><text x="38.5784%" y="719.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="38.3284%" y="693" width="0.0103%" height="15" fill="rgb(248,214,46)" fg:x="7438" fg:w="2"/><text x="38.5784%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.02%)</title><rect x="38.3387%" y="709" width="0.0155%" height="15" fill="rgb(244,216,40)" fg:x="7440" fg:w="3"/><text x="38.5887%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="38.3387%" y="693" width="0.0155%" height="15" fill="rgb(231,226,31)" fg:x="7440" fg:w="3"/><text x="38.5887%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="38.3747%" y="597" width="0.0103%" height="15" fill="rgb(238,38,43)" fg:x="7447" fg:w="2"/><text x="38.6247%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (21 samples, 0.11%)</title><rect x="38.3593%" y="709" width="0.1082%" height="15" fill="rgb(208,88,43)" fg:x="7444" fg:w="21"/><text x="38.6093%" y="719.50"></text></g><g><title>alloy_primitives::utils::keccak256 (19 samples, 0.10%)</title><rect x="38.3696%" y="693" width="0.0979%" height="15" fill="rgb(205,136,37)" fg:x="7446" fg:w="19"/><text x="38.6196%" y="703.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (19 samples, 0.10%)</title><rect x="38.3696%" y="677" width="0.0979%" height="15" fill="rgb(237,34,14)" fg:x="7446" fg:w="19"/><text x="38.6196%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (18 samples, 0.09%)</title><rect x="38.3747%" y="661" width="0.0928%" height="15" fill="rgb(236,193,44)" fg:x="7447" fg:w="18"/><text x="38.6247%" y="671.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (18 samples, 0.09%)</title><rect x="38.3747%" y="645" width="0.0928%" height="15" fill="rgb(231,48,10)" fg:x="7447" fg:w="18"/><text x="38.6247%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (18 samples, 0.09%)</title><rect x="38.3747%" y="629" width="0.0928%" height="15" fill="rgb(213,141,34)" fg:x="7447" fg:w="18"/><text x="38.6247%" y="639.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (18 samples, 0.09%)</title><rect x="38.3747%" y="613" width="0.0928%" height="15" fill="rgb(249,130,34)" fg:x="7447" fg:w="18"/><text x="38.6247%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (16 samples, 0.08%)</title><rect x="38.3850%" y="597" width="0.0824%" height="15" fill="rgb(219,42,41)" fg:x="7449" fg:w="16"/><text x="38.6350%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (16 samples, 0.08%)</title><rect x="38.3850%" y="581" width="0.0824%" height="15" fill="rgb(224,100,54)" fg:x="7449" fg:w="16"/><text x="38.6350%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (16 samples, 0.08%)</title><rect x="38.3850%" y="565" width="0.0824%" height="15" fill="rgb(229,200,27)" fg:x="7449" fg:w="16"/><text x="38.6350%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (16 samples, 0.08%)</title><rect x="38.3850%" y="549" width="0.0824%" height="15" fill="rgb(217,118,10)" fg:x="7449" fg:w="16"/><text x="38.6350%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (16 samples, 0.08%)</title><rect x="38.3850%" y="533" width="0.0824%" height="15" fill="rgb(206,22,3)" fg:x="7449" fg:w="16"/><text x="38.6350%" y="543.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (16 samples, 0.08%)</title><rect x="38.3850%" y="517" width="0.0824%" height="15" fill="rgb(232,163,46)" fg:x="7449" fg:w="16"/><text x="38.6350%" y="527.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (26 samples, 0.13%)</title><rect x="38.3387%" y="741" width="0.1340%" height="15" fill="rgb(206,95,13)" fg:x="7440" fg:w="26"/><text x="38.5887%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (26 samples, 0.13%)</title><rect x="38.3387%" y="725" width="0.1340%" height="15" fill="rgb(253,154,18)" fg:x="7440" fg:w="26"/><text x="38.5887%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::trie::EthTrie&lt;zilliqa::db::TrieStorage&gt;&gt; (2 samples, 0.01%)</title><rect x="38.4726%" y="741" width="0.0103%" height="15" fill="rgb(219,32,23)" fg:x="7466" fg:w="2"/><text x="38.7226%" y="751.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::original_bytes (4 samples, 0.02%)</title><rect x="38.4829%" y="741" width="0.0206%" height="15" fill="rgb(230,191,45)" fg:x="7468" fg:w="4"/><text x="38.7329%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::new (20 samples, 0.10%)</title><rect x="38.5190%" y="725" width="0.1031%" height="15" fill="rgb(229,64,36)" fg:x="7475" fg:w="20"/><text x="38.7690%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256 (19 samples, 0.10%)</title><rect x="38.5242%" y="709" width="0.0979%" height="15" fill="rgb(205,129,25)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="719.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (19 samples, 0.10%)</title><rect x="38.5242%" y="693" width="0.0979%" height="15" fill="rgb(254,112,7)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="703.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (19 samples, 0.10%)</title><rect x="38.5242%" y="677" width="0.0979%" height="15" fill="rgb(226,53,48)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (19 samples, 0.10%)</title><rect x="38.5242%" y="661" width="0.0979%" height="15" fill="rgb(214,153,38)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (19 samples, 0.10%)</title><rect x="38.5242%" y="645" width="0.0979%" height="15" fill="rgb(243,101,7)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="655.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (19 samples, 0.10%)</title><rect x="38.5242%" y="629" width="0.0979%" height="15" fill="rgb(240,140,22)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (19 samples, 0.10%)</title><rect x="38.5242%" y="613" width="0.0979%" height="15" fill="rgb(235,114,2)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (19 samples, 0.10%)</title><rect x="38.5242%" y="597" width="0.0979%" height="15" fill="rgb(242,59,12)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (19 samples, 0.10%)</title><rect x="38.5242%" y="581" width="0.0979%" height="15" fill="rgb(252,134,9)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (19 samples, 0.10%)</title><rect x="38.5242%" y="565" width="0.0979%" height="15" fill="rgb(236,4,44)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (19 samples, 0.10%)</title><rect x="38.5242%" y="549" width="0.0979%" height="15" fill="rgb(254,172,41)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="559.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (19 samples, 0.10%)</title><rect x="38.5242%" y="533" width="0.0979%" height="15" fill="rgb(244,63,20)" fg:x="7476" fg:w="19"/><text x="38.7742%" y="543.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (15 samples, 0.08%)</title><rect x="38.6324%" y="693" width="0.0773%" height="15" fill="rgb(250,73,31)" fg:x="7497" fg:w="15"/><text x="38.8824%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.08%)</title><rect x="38.6324%" y="677" width="0.0773%" height="15" fill="rgb(241,38,36)" fg:x="7497" fg:w="15"/><text x="38.8824%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.07%)</title><rect x="38.6427%" y="661" width="0.0670%" height="15" fill="rgb(245,211,2)" fg:x="7499" fg:w="13"/><text x="38.8927%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.06%)</title><rect x="38.6478%" y="645" width="0.0618%" height="15" fill="rgb(206,120,28)" fg:x="7500" fg:w="12"/><text x="38.8978%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.06%)</title><rect x="38.6478%" y="629" width="0.0618%" height="15" fill="rgb(211,59,34)" fg:x="7500" fg:w="12"/><text x="38.8978%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.05%)</title><rect x="38.6581%" y="613" width="0.0515%" height="15" fill="rgb(233,168,5)" fg:x="7502" fg:w="10"/><text x="38.9081%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.05%)</title><rect x="38.6581%" y="597" width="0.0515%" height="15" fill="rgb(234,33,13)" fg:x="7502" fg:w="10"/><text x="38.9081%" y="607.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.05%)</title><rect x="38.6581%" y="581" width="0.0515%" height="15" fill="rgb(231,150,26)" fg:x="7502" fg:w="10"/><text x="38.9081%" y="591.50"></text></g><g><title>__rdl_realloc (10 samples, 0.05%)</title><rect x="38.6581%" y="565" width="0.0515%" height="15" fill="rgb(217,191,4)" fg:x="7502" fg:w="10"/><text x="38.9081%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (10 samples, 0.05%)</title><rect x="38.6581%" y="549" width="0.0515%" height="15" fill="rgb(246,198,38)" fg:x="7502" fg:w="10"/><text x="38.9081%" y="559.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.05%)</title><rect x="38.6581%" y="533" width="0.0515%" height="15" fill="rgb(245,64,37)" fg:x="7502" fg:w="10"/><text x="38.9081%" y="543.50"></text></g><g><title>_int_realloc (9 samples, 0.05%)</title><rect x="38.6633%" y="517" width="0.0464%" height="15" fill="rgb(250,30,36)" fg:x="7503" fg:w="9"/><text x="38.9133%" y="527.50"></text></g><g><title>_int_malloc (8 samples, 0.04%)</title><rect x="38.6685%" y="501" width="0.0412%" height="15" fill="rgb(217,86,53)" fg:x="7504" fg:w="8"/><text x="38.9185%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256 (10 samples, 0.05%)</title><rect x="38.7200%" y="661" width="0.0515%" height="15" fill="rgb(228,157,16)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (10 samples, 0.05%)</title><rect x="38.7200%" y="645" width="0.0515%" height="15" fill="rgb(217,59,31)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="655.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (10 samples, 0.05%)</title><rect x="38.7200%" y="629" width="0.0515%" height="15" fill="rgb(237,138,41)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (10 samples, 0.05%)</title><rect x="38.7200%" y="613" width="0.0515%" height="15" fill="rgb(227,91,49)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (10 samples, 0.05%)</title><rect x="38.7200%" y="597" width="0.0515%" height="15" fill="rgb(247,21,44)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (10 samples, 0.05%)</title><rect x="38.7200%" y="581" width="0.0515%" height="15" fill="rgb(219,210,51)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (10 samples, 0.05%)</title><rect x="38.7200%" y="565" width="0.0515%" height="15" fill="rgb(209,140,6)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (10 samples, 0.05%)</title><rect x="38.7200%" y="549" width="0.0515%" height="15" fill="rgb(221,188,24)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (10 samples, 0.05%)</title><rect x="38.7200%" y="533" width="0.0515%" height="15" fill="rgb(232,154,20)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.05%)</title><rect x="38.7200%" y="517" width="0.0515%" height="15" fill="rgb(244,137,50)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.05%)</title><rect x="38.7200%" y="501" width="0.0515%" height="15" fill="rgb(225,185,43)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="511.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.05%)</title><rect x="38.7200%" y="485" width="0.0515%" height="15" fill="rgb(213,205,38)" fg:x="7514" fg:w="10"/><text x="38.9700%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256 (14 samples, 0.07%)</title><rect x="38.8024%" y="629" width="0.0721%" height="15" fill="rgb(236,73,12)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="639.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (14 samples, 0.07%)</title><rect x="38.8024%" y="613" width="0.0721%" height="15" fill="rgb(235,219,13)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (14 samples, 0.07%)</title><rect x="38.8024%" y="597" width="0.0721%" height="15" fill="rgb(218,59,36)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (14 samples, 0.07%)</title><rect x="38.8024%" y="581" width="0.0721%" height="15" fill="rgb(205,110,39)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (14 samples, 0.07%)</title><rect x="38.8024%" y="565" width="0.0721%" height="15" fill="rgb(218,206,42)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (14 samples, 0.07%)</title><rect x="38.8024%" y="549" width="0.0721%" height="15" fill="rgb(248,125,24)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (14 samples, 0.07%)</title><rect x="38.8024%" y="533" width="0.0721%" height="15" fill="rgb(242,28,27)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (14 samples, 0.07%)</title><rect x="38.8024%" y="517" width="0.0721%" height="15" fill="rgb(216,228,15)" fg:x="7530" fg:w="14"/><text x="39.0524%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (13 samples, 0.07%)</title><rect x="38.8076%" y="501" width="0.0670%" height="15" fill="rgb(235,116,46)" fg:x="7531" fg:w="13"/><text x="39.0576%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (13 samples, 0.07%)</title><rect x="38.8076%" y="485" width="0.0670%" height="15" fill="rgb(224,18,32)" fg:x="7531" fg:w="13"/><text x="39.0576%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (13 samples, 0.07%)</title><rect x="38.8076%" y="469" width="0.0670%" height="15" fill="rgb(252,5,12)" fg:x="7531" fg:w="13"/><text x="39.0576%" y="479.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (13 samples, 0.07%)</title><rect x="38.8076%" y="453" width="0.0670%" height="15" fill="rgb(251,36,5)" fg:x="7531" fg:w="13"/><text x="39.0576%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256 (4 samples, 0.02%)</title><rect x="38.8849%" y="597" width="0.0206%" height="15" fill="rgb(217,53,14)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="607.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (4 samples, 0.02%)</title><rect x="38.8849%" y="581" width="0.0206%" height="15" fill="rgb(215,86,45)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="591.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (4 samples, 0.02%)</title><rect x="38.8849%" y="565" width="0.0206%" height="15" fill="rgb(242,169,11)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="575.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (4 samples, 0.02%)</title><rect x="38.8849%" y="549" width="0.0206%" height="15" fill="rgb(211,213,45)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (4 samples, 0.02%)</title><rect x="38.8849%" y="533" width="0.0206%" height="15" fill="rgb(205,88,11)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="543.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 0.02%)</title><rect x="38.8849%" y="517" width="0.0206%" height="15" fill="rgb(252,69,26)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="38.8849%" y="501" width="0.0206%" height="15" fill="rgb(246,123,37)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="38.8849%" y="485" width="0.0206%" height="15" fill="rgb(212,205,5)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="38.8849%" y="469" width="0.0206%" height="15" fill="rgb(253,148,0)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="38.8849%" y="453" width="0.0206%" height="15" fill="rgb(239,22,4)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="463.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="38.8849%" y="437" width="0.0206%" height="15" fill="rgb(226,26,53)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="447.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="38.8849%" y="421" width="0.0206%" height="15" fill="rgb(225,229,45)" fg:x="7546" fg:w="4"/><text x="39.1349%" y="431.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (3 samples, 0.02%)</title><rect x="38.9106%" y="581" width="0.0155%" height="15" fill="rgb(220,60,37)" fg:x="7551" fg:w="3"/><text x="39.1606%" y="591.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="38.9158%" y="565" width="0.0103%" height="15" fill="rgb(217,180,35)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="575.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_entry (2 samples, 0.01%)</title><rect x="38.9158%" y="549" width="0.0103%" height="15" fill="rgb(229,7,53)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="559.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_mut_from_table (2 samples, 0.01%)</title><rect x="38.9158%" y="533" width="0.0103%" height="15" fill="rgb(254,137,3)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="543.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="38.9158%" y="517" width="0.0103%" height="15" fill="rgb(215,140,41)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="527.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="38.9158%" y="501" width="0.0103%" height="15" fill="rgb(250,80,15)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="511.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (2 samples, 0.01%)</title><rect x="38.9158%" y="485" width="0.0103%" height="15" fill="rgb(252,191,6)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="38.9158%" y="469" width="0.0103%" height="15" fill="rgb(246,217,18)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="479.50"></text></g><g><title>lru_mem::equivalent_key::{{closure}} (2 samples, 0.01%)</title><rect x="38.9158%" y="453" width="0.0103%" height="15" fill="rgb(223,93,7)" fg:x="7552" fg:w="2"/><text x="39.1658%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256 (4 samples, 0.02%)</title><rect x="38.9261%" y="581" width="0.0206%" height="15" fill="rgb(225,55,52)" fg:x="7554" fg:w="4"/><text x="39.1761%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (4 samples, 0.02%)</title><rect x="38.9261%" y="565" width="0.0206%" height="15" fill="rgb(240,31,24)" fg:x="7554" fg:w="4"/><text x="39.1761%" y="575.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (3 samples, 0.02%)</title><rect x="38.9313%" y="549" width="0.0155%" height="15" fill="rgb(205,56,52)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="559.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (3 samples, 0.02%)</title><rect x="38.9313%" y="533" width="0.0155%" height="15" fill="rgb(246,146,12)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="543.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (3 samples, 0.02%)</title><rect x="38.9313%" y="517" width="0.0155%" height="15" fill="rgb(239,84,36)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (3 samples, 0.02%)</title><rect x="38.9313%" y="501" width="0.0155%" height="15" fill="rgb(207,41,40)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (3 samples, 0.02%)</title><rect x="38.9313%" y="485" width="0.0155%" height="15" fill="rgb(241,179,25)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (3 samples, 0.02%)</title><rect x="38.9313%" y="469" width="0.0155%" height="15" fill="rgb(210,0,34)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (3 samples, 0.02%)</title><rect x="38.9313%" y="453" width="0.0155%" height="15" fill="rgb(225,217,29)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (3 samples, 0.02%)</title><rect x="38.9313%" y="437" width="0.0155%" height="15" fill="rgb(216,191,38)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="447.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (3 samples, 0.02%)</title><rect x="38.9313%" y="421" width="0.0155%" height="15" fill="rgb(232,140,52)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="431.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (3 samples, 0.02%)</title><rect x="38.9313%" y="405" width="0.0155%" height="15" fill="rgb(223,158,51)" fg:x="7555" fg:w="3"/><text x="39.1813%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.02%)</title><rect x="38.9467%" y="533" width="0.0155%" height="15" fill="rgb(235,29,51)" fg:x="7558" fg:w="3"/><text x="39.1967%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="38.9467%" y="517" width="0.0155%" height="15" fill="rgb(215,181,18)" fg:x="7558" fg:w="3"/><text x="39.1967%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="38.9467%" y="501" width="0.0155%" height="15" fill="rgb(227,125,34)" fg:x="7558" fg:w="3"/><text x="39.1967%" y="511.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (5 samples, 0.03%)</title><rect x="38.9467%" y="565" width="0.0258%" height="15" fill="rgb(230,197,49)" fg:x="7558" fg:w="5"/><text x="39.1967%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="38.9467%" y="549" width="0.0258%" height="15" fill="rgb(239,141,16)" fg:x="7558" fg:w="5"/><text x="39.1967%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="38.9622%" y="533" width="0.0103%" height="15" fill="rgb(225,105,43)" fg:x="7561" fg:w="2"/><text x="39.2122%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.01%)</title><rect x="38.9622%" y="517" width="0.0103%" height="15" fill="rgb(214,131,14)" fg:x="7561" fg:w="2"/><text x="39.2122%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (21 samples, 0.11%)</title><rect x="38.8797%" y="629" width="0.1082%" height="15" fill="rgb(229,177,11)" fg:x="7545" fg:w="21"/><text x="39.1297%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (20 samples, 0.10%)</title><rect x="38.8849%" y="613" width="0.1031%" height="15" fill="rgb(231,180,14)" fg:x="7546" fg:w="20"/><text x="39.1349%" y="623.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (15 samples, 0.08%)</title><rect x="38.9106%" y="597" width="0.0773%" height="15" fill="rgb(232,88,2)" fg:x="7551" fg:w="15"/><text x="39.1606%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (8 samples, 0.04%)</title><rect x="38.9467%" y="581" width="0.0412%" height="15" fill="rgb(205,220,8)" fg:x="7558" fg:w="8"/><text x="39.1967%" y="591.50"></text></g><g><title>rlp::rlpin::Rlp::at (3 samples, 0.02%)</title><rect x="38.9725%" y="565" width="0.0155%" height="15" fill="rgb(225,23,53)" fg:x="7563" fg:w="3"/><text x="39.2225%" y="575.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="38.9776%" y="549" width="0.0103%" height="15" fill="rgb(213,62,29)" fg:x="7564" fg:w="2"/><text x="39.2276%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="38.9931%" y="517" width="0.0103%" height="15" fill="rgb(227,75,7)" fg:x="7567" fg:w="2"/><text x="39.2431%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256 (17 samples, 0.09%)</title><rect x="38.9931%" y="613" width="0.0876%" height="15" fill="rgb(207,105,14)" fg:x="7567" fg:w="17"/><text x="39.2431%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (17 samples, 0.09%)</title><rect x="38.9931%" y="597" width="0.0876%" height="15" fill="rgb(245,62,29)" fg:x="7567" fg:w="17"/><text x="39.2431%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (17 samples, 0.09%)</title><rect x="38.9931%" y="581" width="0.0876%" height="15" fill="rgb(236,202,4)" fg:x="7567" fg:w="17"/><text x="39.2431%" y="591.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (17 samples, 0.09%)</title><rect x="38.9931%" y="565" width="0.0876%" height="15" fill="rgb(250,67,1)" fg:x="7567" fg:w="17"/><text x="39.2431%" y="575.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (17 samples, 0.09%)</title><rect x="38.9931%" y="549" width="0.0876%" height="15" fill="rgb(253,115,44)" fg:x="7567" fg:w="17"/><text x="39.2431%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (17 samples, 0.09%)</title><rect x="38.9931%" y="533" width="0.0876%" height="15" fill="rgb(251,139,18)" fg:x="7567" fg:w="17"/><text x="39.2431%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (15 samples, 0.08%)</title><rect x="39.0034%" y="517" width="0.0773%" height="15" fill="rgb(218,22,32)" fg:x="7569" fg:w="15"/><text x="39.2534%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (15 samples, 0.08%)</title><rect x="39.0034%" y="501" width="0.0773%" height="15" fill="rgb(243,53,5)" fg:x="7569" fg:w="15"/><text x="39.2534%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (15 samples, 0.08%)</title><rect x="39.0034%" y="485" width="0.0773%" height="15" fill="rgb(227,56,16)" fg:x="7569" fg:w="15"/><text x="39.2534%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (15 samples, 0.08%)</title><rect x="39.0034%" y="469" width="0.0773%" height="15" fill="rgb(245,53,0)" fg:x="7569" fg:w="15"/><text x="39.2534%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (15 samples, 0.08%)</title><rect x="39.0034%" y="453" width="0.0773%" height="15" fill="rgb(216,170,35)" fg:x="7569" fg:w="15"/><text x="39.2534%" y="463.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (15 samples, 0.08%)</title><rect x="39.0034%" y="437" width="0.0773%" height="15" fill="rgb(211,200,8)" fg:x="7569" fg:w="15"/><text x="39.2534%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="39.0807%" y="597" width="0.0155%" height="15" fill="rgb(228,204,44)" fg:x="7584" fg:w="3"/><text x="39.3307%" y="607.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (2 samples, 0.01%)</title><rect x="39.0962%" y="597" width="0.0103%" height="15" fill="rgb(214,121,17)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="39.0962%" y="581" width="0.0103%" height="15" fill="rgb(233,64,38)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="39.0962%" y="565" width="0.0103%" height="15" fill="rgb(253,54,19)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="39.0962%" y="549" width="0.0103%" height="15" fill="rgb(253,94,18)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="39.0962%" y="533" width="0.0103%" height="15" fill="rgb(227,57,52)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="39.0962%" y="517" width="0.0103%" height="15" fill="rgb(230,228,50)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="39.0962%" y="501" width="0.0103%" height="15" fill="rgb(217,205,27)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="511.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="39.0962%" y="485" width="0.0103%" height="15" fill="rgb(252,71,50)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="495.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="39.0962%" y="469" width="0.0103%" height="15" fill="rgb(209,86,4)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="479.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="39.0962%" y="453" width="0.0103%" height="15" fill="rgb(229,94,0)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="463.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="39.0962%" y="437" width="0.0103%" height="15" fill="rgb(252,223,21)" fg:x="7587" fg:w="2"/><text x="39.3462%" y="447.50"></text></g><g><title>eth_trie::node::Node::from_hash (2 samples, 0.01%)</title><rect x="39.1116%" y="581" width="0.0103%" height="15" fill="rgb(230,210,4)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="39.1116%" y="565" width="0.0103%" height="15" fill="rgb(240,149,38)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="39.1116%" y="549" width="0.0103%" height="15" fill="rgb(254,105,20)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="39.1116%" y="533" width="0.0103%" height="15" fill="rgb(253,87,46)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="39.1116%" y="517" width="0.0103%" height="15" fill="rgb(253,116,33)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="39.1116%" y="501" width="0.0103%" height="15" fill="rgb(229,198,5)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="39.1116%" y="485" width="0.0103%" height="15" fill="rgb(242,38,37)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="495.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="39.1116%" y="469" width="0.0103%" height="15" fill="rgb(242,69,53)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="479.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="39.1116%" y="453" width="0.0103%" height="15" fill="rgb(249,80,16)" fg:x="7590" fg:w="2"/><text x="39.3616%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (3 samples, 0.02%)</title><rect x="39.1116%" y="597" width="0.0155%" height="15" fill="rgb(206,128,11)" fg:x="7590" fg:w="3"/><text x="39.3616%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (4 samples, 0.02%)</title><rect x="39.1271%" y="565" width="0.0206%" height="15" fill="rgb(212,35,20)" fg:x="7593" fg:w="4"/><text x="39.3771%" y="575.50"></text></g><g><title>rlp::rlpin::Rlp::at (5 samples, 0.03%)</title><rect x="39.1271%" y="597" width="0.0258%" height="15" fill="rgb(236,79,13)" fg:x="7593" fg:w="5"/><text x="39.3771%" y="607.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (5 samples, 0.03%)</title><rect x="39.1271%" y="581" width="0.0258%" height="15" fill="rgb(233,123,3)" fg:x="7593" fg:w="5"/><text x="39.3771%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (81 samples, 0.42%)</title><rect x="38.7767%" y="661" width="0.4174%" height="15" fill="rgb(214,93,52)" fg:x="7525" fg:w="81"/><text x="39.0267%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (77 samples, 0.40%)</title><rect x="38.7973%" y="645" width="0.3968%" height="15" fill="rgb(251,37,40)" fg:x="7529" fg:w="77"/><text x="39.0473%" y="655.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (40 samples, 0.21%)</title><rect x="38.9879%" y="629" width="0.2061%" height="15" fill="rgb(227,80,54)" fg:x="7566" fg:w="40"/><text x="39.2379%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (22 samples, 0.11%)</title><rect x="39.0807%" y="613" width="0.1134%" height="15" fill="rgb(254,48,11)" fg:x="7584" fg:w="22"/><text x="39.3307%" y="623.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (8 samples, 0.04%)</title><rect x="39.1528%" y="597" width="0.0412%" height="15" fill="rgb(235,193,26)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="607.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (8 samples, 0.04%)</title><rect x="39.1528%" y="581" width="0.0412%" height="15" fill="rgb(229,99,21)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (8 samples, 0.04%)</title><rect x="39.1528%" y="565" width="0.0412%" height="15" fill="rgb(211,140,41)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.04%)</title><rect x="39.1528%" y="549" width="0.0412%" height="15" fill="rgb(240,227,30)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="559.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="39.1528%" y="533" width="0.0412%" height="15" fill="rgb(215,224,45)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="543.50"></text></g><g><title>rlp::rlpin::Rlp::at (8 samples, 0.04%)</title><rect x="39.1528%" y="517" width="0.0412%" height="15" fill="rgb(206,123,31)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="527.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (8 samples, 0.04%)</title><rect x="39.1528%" y="501" width="0.0412%" height="15" fill="rgb(210,138,16)" fg:x="7598" fg:w="8"/><text x="39.4028%" y="511.50"></text></g><g><title>rlp::rlpin::Rlp::consume_items (7 samples, 0.04%)</title><rect x="39.1580%" y="485" width="0.0361%" height="15" fill="rgb(228,57,28)" fg:x="7599" fg:w="7"/><text x="39.4080%" y="495.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (7 samples, 0.04%)</title><rect x="39.1580%" y="469" width="0.0361%" height="15" fill="rgb(242,170,10)" fg:x="7599" fg:w="7"/><text x="39.4080%" y="479.50"></text></g><g><title>rlp::rlpin::PayloadInfo::from (4 samples, 0.02%)</title><rect x="39.1735%" y="453" width="0.0206%" height="15" fill="rgb(228,214,39)" fg:x="7602" fg:w="4"/><text x="39.4235%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256 (10 samples, 0.05%)</title><rect x="39.1992%" y="645" width="0.0515%" height="15" fill="rgb(218,179,33)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (10 samples, 0.05%)</title><rect x="39.1992%" y="629" width="0.0515%" height="15" fill="rgb(235,193,39)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (10 samples, 0.05%)</title><rect x="39.1992%" y="613" width="0.0515%" height="15" fill="rgb(219,221,36)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (10 samples, 0.05%)</title><rect x="39.1992%" y="597" width="0.0515%" height="15" fill="rgb(248,218,19)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="607.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (10 samples, 0.05%)</title><rect x="39.1992%" y="581" width="0.0515%" height="15" fill="rgb(205,50,9)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="591.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (10 samples, 0.05%)</title><rect x="39.1992%" y="565" width="0.0515%" height="15" fill="rgb(238,81,28)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (10 samples, 0.05%)</title><rect x="39.1992%" y="549" width="0.0515%" height="15" fill="rgb(235,110,19)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (10 samples, 0.05%)</title><rect x="39.1992%" y="533" width="0.0515%" height="15" fill="rgb(214,7,14)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (10 samples, 0.05%)</title><rect x="39.1992%" y="517" width="0.0515%" height="15" fill="rgb(211,77,3)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.05%)</title><rect x="39.1992%" y="501" width="0.0515%" height="15" fill="rgb(229,5,9)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="511.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.05%)</title><rect x="39.1992%" y="485" width="0.0515%" height="15" fill="rgb(225,90,11)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="495.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.05%)</title><rect x="39.1992%" y="469" width="0.0515%" height="15" fill="rgb(242,56,8)" fg:x="7607" fg:w="10"/><text x="39.4492%" y="479.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (4 samples, 0.02%)</title><rect x="39.2559%" y="629" width="0.0206%" height="15" fill="rgb(249,212,39)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="39.2559%" y="613" width="0.0206%" height="15" fill="rgb(236,90,9)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="39.2559%" y="597" width="0.0206%" height="15" fill="rgb(206,88,35)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="39.2559%" y="581" width="0.0206%" height="15" fill="rgb(205,126,30)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="39.2559%" y="565" width="0.0206%" height="15" fill="rgb(230,176,12)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="39.2559%" y="549" width="0.0206%" height="15" fill="rgb(243,19,9)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="39.2559%" y="533" width="0.0206%" height="15" fill="rgb(245,171,17)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="543.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="39.2559%" y="517" width="0.0206%" height="15" fill="rgb(227,52,21)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="527.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="39.2559%" y="501" width="0.0206%" height="15" fill="rgb(238,69,14)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="39.2559%" y="485" width="0.0206%" height="15" fill="rgb(241,156,39)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="495.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="39.2559%" y="469" width="0.0206%" height="15" fill="rgb(212,227,28)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="479.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="39.2559%" y="453" width="0.0206%" height="15" fill="rgb(209,118,27)" fg:x="7618" fg:w="4"/><text x="39.5059%" y="463.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="39.2611%" y="437" width="0.0155%" height="15" fill="rgb(226,102,5)" fg:x="7619" fg:w="3"/><text x="39.5111%" y="447.50"></text></g><g><title>rlp::rlpin::Rlp::data (2 samples, 0.01%)</title><rect x="39.2868%" y="629" width="0.0103%" height="15" fill="rgb(223,34,3)" fg:x="7624" fg:w="2"/><text x="39.5368%" y="639.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (133 samples, 0.69%)</title><rect x="38.6221%" y="709" width="0.6854%" height="15" fill="rgb(221,81,38)" fg:x="7495" fg:w="133"/><text x="38.8721%" y="719.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (116 samples, 0.60%)</title><rect x="38.7097%" y="693" width="0.5978%" height="15" fill="rgb(236,219,28)" fg:x="7512" fg:w="116"/><text x="38.9597%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (114 samples, 0.59%)</title><rect x="38.7200%" y="677" width="0.5874%" height="15" fill="rgb(213,200,14)" fg:x="7514" fg:w="114"/><text x="38.9700%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (22 samples, 0.11%)</title><rect x="39.1941%" y="661" width="0.1134%" height="15" fill="rgb(240,33,19)" fg:x="7606" fg:w="22"/><text x="39.4441%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (11 samples, 0.06%)</title><rect x="39.2507%" y="645" width="0.0567%" height="15" fill="rgb(233,113,27)" fg:x="7617" fg:w="11"/><text x="39.5007%" y="655.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (2 samples, 0.01%)</title><rect x="39.2971%" y="629" width="0.0103%" height="15" fill="rgb(220,221,18)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="639.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (2 samples, 0.01%)</title><rect x="39.2971%" y="613" width="0.0103%" height="15" fill="rgb(238,92,8)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="39.2971%" y="597" width="0.0103%" height="15" fill="rgb(222,164,16)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="39.2971%" y="581" width="0.0103%" height="15" fill="rgb(241,119,3)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="591.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="39.2971%" y="565" width="0.0103%" height="15" fill="rgb(241,44,8)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="575.50"></text></g><g><title>rlp::rlpin::Rlp::at (2 samples, 0.01%)</title><rect x="39.2971%" y="549" width="0.0103%" height="15" fill="rgb(230,36,40)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="559.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="39.2971%" y="533" width="0.0103%" height="15" fill="rgb(243,16,36)" fg:x="7626" fg:w="2"/><text x="39.5471%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="501" width="0.0103%" height="15" fill="rgb(231,4,26)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="511.50"></text></g><g><title>zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Code&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="485" width="0.0103%" height="15" fill="rgb(240,9,31)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="495.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (2 samples, 0.01%)</title><rect x="39.3074%" y="469" width="0.0103%" height="15" fill="rgb(207,173,15)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="479.50"></text></g><g><title>&lt;zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Code&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (2 samples, 0.01%)</title><rect x="39.3074%" y="453" width="0.0103%" height="15" fill="rgb(224,192,53)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="463.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (2 samples, 0.01%)</title><rect x="39.3074%" y="437" width="0.0103%" height="15" fill="rgb(223,67,28)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="447.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (2 samples, 0.01%)</title><rect x="39.3074%" y="421" width="0.0103%" height="15" fill="rgb(211,20,47)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="431.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="405" width="0.0103%" height="15" fill="rgb(240,228,2)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="415.50"></text></g><g><title>&lt;&lt;zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Code&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="389" width="0.0103%" height="15" fill="rgb(248,151,12)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="399.50"></text></g><g><title>serde_bytes::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="373" width="0.0103%" height="15" fill="rgb(244,8,39)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::de::Deserialize&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="357" width="0.0103%" height="15" fill="rgb(222,26,8)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="367.50"></text></g><g><title>&lt;serde_bytes::bytebuf::ByteBuf as serde_bytes::de::Deserialize&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="341" width="0.0103%" height="15" fill="rgb(213,106,44)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="351.50"></text></g><g><title>&lt;serde_bytes::bytebuf::ByteBuf as serde::de::Deserialize&gt;::deserialize (2 samples, 0.01%)</title><rect x="39.3074%" y="325" width="0.0103%" height="15" fill="rgb(214,129,20)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="335.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_byte_buf (2 samples, 0.01%)</title><rect x="39.3074%" y="309" width="0.0103%" height="15" fill="rgb(212,32,13)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="319.50"></text></g><g><title>bincode::de::Deserializer&lt;R,O&gt;::read_vec (2 samples, 0.01%)</title><rect x="39.3074%" y="293" width="0.0103%" height="15" fill="rgb(208,168,33)" fg:x="7628" fg:w="2"/><text x="39.5574%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.03%)</title><rect x="39.3074%" y="613" width="0.0258%" height="15" fill="rgb(231,207,8)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="623.50"></text></g><g><title>zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize (5 samples, 0.03%)</title><rect x="39.3074%" y="597" width="0.0258%" height="15" fill="rgb(235,219,23)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="607.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (5 samples, 0.03%)</title><rect x="39.3074%" y="581" width="0.0258%" height="15" fill="rgb(226,216,26)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="591.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (5 samples, 0.03%)</title><rect x="39.3074%" y="565" width="0.0258%" height="15" fill="rgb(239,137,16)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="575.50"></text></g><g><title>&lt;zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (5 samples, 0.03%)</title><rect x="39.3074%" y="549" width="0.0258%" height="15" fill="rgb(207,12,36)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (5 samples, 0.03%)</title><rect x="39.3074%" y="533" width="0.0258%" height="15" fill="rgb(210,214,24)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="543.50"></text></g><g><title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (5 samples, 0.03%)</title><rect x="39.3074%" y="517" width="0.0258%" height="15" fill="rgb(206,56,30)" fg:x="7628" fg:w="5"/><text x="39.5574%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="39.3177%" y="501" width="0.0155%" height="15" fill="rgb(228,143,26)" fg:x="7630" fg:w="3"/><text x="39.5677%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.04%)</title><rect x="39.3074%" y="709" width="0.0412%" height="15" fill="rgb(216,218,46)" fg:x="7628" fg:w="8"/><text x="39.5574%" y="719.50"></text></g><g><title>zilliqa::state::State::get_account::{{closure}} (8 samples, 0.04%)</title><rect x="39.3074%" y="693" width="0.0412%" height="15" fill="rgb(206,6,19)" fg:x="7628" fg:w="8"/><text x="39.5574%" y="703.50"></text></g><g><title>bincode::deserialize (8 samples, 0.04%)</title><rect x="39.3074%" y="677" width="0.0412%" height="15" fill="rgb(239,177,51)" fg:x="7628" fg:w="8"/><text x="39.5574%" y="687.50"></text></g><g><title>bincode::config::Options::deserialize (8 samples, 0.04%)</title><rect x="39.3074%" y="661" width="0.0412%" height="15" fill="rgb(216,55,25)" fg:x="7628" fg:w="8"/><text x="39.5574%" y="671.50"></text></g><g><title>bincode::internal::deserialize (8 samples, 0.04%)</title><rect x="39.3074%" y="645" width="0.0412%" height="15" fill="rgb(231,163,29)" fg:x="7628" fg:w="8"/><text x="39.5574%" y="655.50"></text></g><g><title>bincode::internal::deserialize_seed (8 samples, 0.04%)</title><rect x="39.3074%" y="629" width="0.0412%" height="15" fill="rgb(232,149,50)" fg:x="7628" fg:w="8"/><text x="39.5574%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="39.3332%" y="613" width="0.0155%" height="15" fill="rgb(223,142,48)" fg:x="7633" fg:w="3"/><text x="39.5832%" y="623.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (24 samples, 0.12%)</title><rect x="39.3487%" y="677" width="0.1237%" height="15" fill="rgb(245,83,23)" fg:x="7636" fg:w="24"/><text x="39.5987%" y="687.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (24 samples, 0.12%)</title><rect x="39.3487%" y="661" width="0.1237%" height="15" fill="rgb(224,63,2)" fg:x="7636" fg:w="24"/><text x="39.5987%" y="671.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (24 samples, 0.12%)</title><rect x="39.3487%" y="645" width="0.1237%" height="15" fill="rgb(218,65,53)" fg:x="7636" fg:w="24"/><text x="39.5987%" y="655.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (24 samples, 0.12%)</title><rect x="39.3487%" y="629" width="0.1237%" height="15" fill="rgb(221,84,29)" fg:x="7636" fg:w="24"/><text x="39.5987%" y="639.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (23 samples, 0.12%)</title><rect x="39.3538%" y="613" width="0.1185%" height="15" fill="rgb(234,0,32)" fg:x="7637" fg:w="23"/><text x="39.6038%" y="623.50"></text></g><g><title>keccak::p1600 (23 samples, 0.12%)</title><rect x="39.3538%" y="597" width="0.1185%" height="15" fill="rgb(206,20,16)" fg:x="7637" fg:w="23"/><text x="39.6038%" y="607.50"></text></g><g><title>keccak::keccak_p (23 samples, 0.12%)</title><rect x="39.3538%" y="581" width="0.1185%" height="15" fill="rgb(244,172,18)" fg:x="7637" fg:w="23"/><text x="39.6038%" y="591.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (23 samples, 0.12%)</title><rect x="39.3538%" y="565" width="0.1185%" height="15" fill="rgb(254,133,1)" fg:x="7637" fg:w="23"/><text x="39.6038%" y="575.50"></text></g><g><title>zilliqa::state::State::get_account_trie (189 samples, 0.97%)</title><rect x="38.5036%" y="741" width="0.9739%" height="15" fill="rgb(222,206,41)" fg:x="7472" fg:w="189"/><text x="38.7536%" y="751.50"></text></g><g><title>zilliqa::state::State::get_account (166 samples, 0.86%)</title><rect x="38.6221%" y="725" width="0.8554%" height="15" fill="rgb(212,3,42)" fg:x="7495" fg:w="166"/><text x="38.8721%" y="735.50"></text></g><g><title>zilliqa::state::State::account_key (25 samples, 0.13%)</title><rect x="39.3487%" y="709" width="0.1288%" height="15" fill="rgb(241,11,4)" fg:x="7636" fg:w="25"/><text x="39.5987%" y="719.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (25 samples, 0.13%)</title><rect x="39.3487%" y="693" width="0.1288%" height="15" fill="rgb(205,19,26)" fg:x="7636" fg:w="25"/><text x="39.5987%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.02%)</title><rect x="39.4929%" y="709" width="0.0155%" height="15" fill="rgb(210,179,32)" fg:x="7664" fg:w="3"/><text x="39.7429%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="39.4929%" y="693" width="0.0155%" height="15" fill="rgb(227,116,49)" fg:x="7664" fg:w="3"/><text x="39.7429%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="39.4929%" y="677" width="0.0155%" height="15" fill="rgb(211,146,6)" fg:x="7664" fg:w="3"/><text x="39.7429%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="39.4929%" y="661" width="0.0155%" height="15" fill="rgb(219,44,39)" fg:x="7664" fg:w="3"/><text x="39.7429%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="39.4981%" y="645" width="0.0103%" height="15" fill="rgb(234,128,11)" fg:x="7665" fg:w="2"/><text x="39.7481%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="39.4981%" y="629" width="0.0103%" height="15" fill="rgb(220,183,53)" fg:x="7665" fg:w="2"/><text x="39.7481%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="39.4981%" y="613" width="0.0103%" height="15" fill="rgb(213,219,32)" fg:x="7665" fg:w="2"/><text x="39.7481%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::nibbles::Nibbles&gt; (2 samples, 0.01%)</title><rect x="39.5084%" y="709" width="0.0103%" height="15" fill="rgb(232,156,16)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="39.5084%" y="693" width="0.0103%" height="15" fill="rgb(246,135,34)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="39.5084%" y="677" width="0.0103%" height="15" fill="rgb(241,99,0)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="39.5084%" y="661" width="0.0103%" height="15" fill="rgb(222,103,45)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="39.5084%" y="645" width="0.0103%" height="15" fill="rgb(212,57,4)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="39.5084%" y="629" width="0.0103%" height="15" fill="rgb(215,68,47)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="639.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="39.5084%" y="613" width="0.0103%" height="15" fill="rgb(230,84,2)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="623.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="39.5084%" y="597" width="0.0103%" height="15" fill="rgb(220,102,14)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="39.5084%" y="581" width="0.0103%" height="15" fill="rgb(240,10,32)" fg:x="7667" fg:w="2"/><text x="39.7584%" y="591.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Div&lt;u8&gt;&gt;::div (3 samples, 0.02%)</title><rect x="39.5187%" y="693" width="0.0155%" height="15" fill="rgb(215,47,27)" fg:x="7669" fg:w="3"/><text x="39.7687%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="39.5393%" y="629" width="0.0258%" height="15" fill="rgb(233,188,43)" fg:x="7673" fg:w="5"/><text x="39.7893%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="39.5393%" y="613" width="0.0258%" height="15" fill="rgb(253,190,1)" fg:x="7673" fg:w="5"/><text x="39.7893%" y="623.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="39.5393%" y="597" width="0.0258%" height="15" fill="rgb(206,114,52)" fg:x="7673" fg:w="5"/><text x="39.7893%" y="607.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="39.5393%" y="581" width="0.0258%" height="15" fill="rgb(233,120,37)" fg:x="7673" fg:w="5"/><text x="39.7893%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.03%)</title><rect x="39.5393%" y="565" width="0.0258%" height="15" fill="rgb(214,52,39)" fg:x="7673" fg:w="5"/><text x="39.7893%" y="575.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="39.5393%" y="549" width="0.0258%" height="15" fill="rgb(223,80,29)" fg:x="7673" fg:w="5"/><text x="39.7893%" y="559.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="39.5445%" y="533" width="0.0206%" height="15" fill="rgb(230,101,40)" fg:x="7674" fg:w="4"/><text x="39.7945%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="39.5548%" y="517" width="0.0103%" height="15" fill="rgb(219,211,8)" fg:x="7676" fg:w="2"/><text x="39.8048%" y="527.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (10 samples, 0.05%)</title><rect x="39.5187%" y="709" width="0.0515%" height="15" fill="rgb(252,126,28)" fg:x="7669" fg:w="10"/><text x="39.7687%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.04%)</title><rect x="39.5342%" y="693" width="0.0361%" height="15" fill="rgb(215,56,38)" fg:x="7672" fg:w="7"/><text x="39.7842%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.04%)</title><rect x="39.5342%" y="677" width="0.0361%" height="15" fill="rgb(249,55,44)" fg:x="7672" fg:w="7"/><text x="39.7842%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="39.5342%" y="661" width="0.0361%" height="15" fill="rgb(220,221,32)" fg:x="7672" fg:w="7"/><text x="39.7842%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="39.5342%" y="645" width="0.0361%" height="15" fill="rgb(212,216,41)" fg:x="7672" fg:w="7"/><text x="39.7842%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="39.5908%" y="693" width="0.0103%" height="15" fill="rgb(228,213,43)" fg:x="7683" fg:w="2"/><text x="39.8408%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="39.6063%" y="661" width="0.0155%" height="15" fill="rgb(211,31,26)" fg:x="7686" fg:w="3"/><text x="39.8563%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="39.6063%" y="645" width="0.0155%" height="15" fill="rgb(229,202,19)" fg:x="7686" fg:w="3"/><text x="39.8563%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="39.6063%" y="629" width="0.0155%" height="15" fill="rgb(229,105,46)" fg:x="7686" fg:w="3"/><text x="39.8563%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="39.6063%" y="613" width="0.0155%" height="15" fill="rgb(235,108,1)" fg:x="7686" fg:w="3"/><text x="39.8563%" y="623.50"></text></g><g><title>eth_trie::node::Node::from_extension (2 samples, 0.01%)</title><rect x="39.6269%" y="661" width="0.0103%" height="15" fill="rgb(245,111,35)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="39.6269%" y="645" width="0.0103%" height="15" fill="rgb(219,185,31)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="39.6269%" y="629" width="0.0103%" height="15" fill="rgb(214,4,43)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="39.6269%" y="613" width="0.0103%" height="15" fill="rgb(235,227,40)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="39.6269%" y="597" width="0.0103%" height="15" fill="rgb(230,88,30)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="39.6269%" y="581" width="0.0103%" height="15" fill="rgb(216,217,1)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="39.6269%" y="565" width="0.0103%" height="15" fill="rgb(248,139,50)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="575.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="39.6269%" y="549" width="0.0103%" height="15" fill="rgb(233,1,21)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="39.6269%" y="533" width="0.0103%" height="15" fill="rgb(215,183,12)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="39.6269%" y="517" width="0.0103%" height="15" fill="rgb(229,104,42)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="527.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="39.6269%" y="501" width="0.0103%" height="15" fill="rgb(243,34,48)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="511.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="39.6269%" y="485" width="0.0103%" height="15" fill="rgb(239,11,44)" fg:x="7690" fg:w="2"/><text x="39.8769%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="39.6475%" y="645" width="0.0103%" height="15" fill="rgb(231,98,35)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="39.6475%" y="629" width="0.0103%" height="15" fill="rgb(233,28,25)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="39.6475%" y="613" width="0.0103%" height="15" fill="rgb(234,123,11)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="39.6475%" y="597" width="0.0103%" height="15" fill="rgb(220,69,3)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="39.6475%" y="581" width="0.0103%" height="15" fill="rgb(214,64,36)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="39.6475%" y="565" width="0.0103%" height="15" fill="rgb(211,138,32)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="39.6475%" y="549" width="0.0103%" height="15" fill="rgb(213,118,47)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="39.6475%" y="533" width="0.0103%" height="15" fill="rgb(243,124,49)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="39.6475%" y="517" width="0.0103%" height="15" fill="rgb(221,30,28)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="39.6475%" y="501" width="0.0103%" height="15" fill="rgb(246,37,13)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="511.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="39.6475%" y="485" width="0.0103%" height="15" fill="rgb(249,66,14)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="495.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="39.6475%" y="469" width="0.0103%" height="15" fill="rgb(213,166,5)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="39.6475%" y="453" width="0.0103%" height="15" fill="rgb(221,66,24)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="463.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="39.6475%" y="437" width="0.0103%" height="15" fill="rgb(210,132,17)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="447.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="39.6475%" y="421" width="0.0103%" height="15" fill="rgb(243,202,5)" fg:x="7694" fg:w="2"/><text x="39.8975%" y="431.50"></text></g><g><title>eth_trie::node::Node::from_leaf (2 samples, 0.01%)</title><rect x="39.6578%" y="629" width="0.0103%" height="15" fill="rgb(233,70,48)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="39.6578%" y="613" width="0.0103%" height="15" fill="rgb(238,41,26)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="39.6578%" y="597" width="0.0103%" height="15" fill="rgb(241,19,31)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="39.6578%" y="581" width="0.0103%" height="15" fill="rgb(214,76,10)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="39.6578%" y="565" width="0.0103%" height="15" fill="rgb(254,202,22)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="39.6578%" y="549" width="0.0103%" height="15" fill="rgb(214,72,24)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="39.6578%" y="533" width="0.0103%" height="15" fill="rgb(221,92,46)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="543.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="39.6578%" y="517" width="0.0103%" height="15" fill="rgb(246,13,50)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="39.6578%" y="501" width="0.0103%" height="15" fill="rgb(240,165,38)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="39.6578%" y="485" width="0.0103%" height="15" fill="rgb(241,24,51)" fg:x="7696" fg:w="2"/><text x="39.9078%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="39.6681%" y="613" width="0.0103%" height="15" fill="rgb(227,51,44)" fg:x="7698" fg:w="2"/><text x="39.9181%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="39.6681%" y="597" width="0.0103%" height="15" fill="rgb(231,121,3)" fg:x="7698" fg:w="2"/><text x="39.9181%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="39.6681%" y="581" width="0.0103%" height="15" fill="rgb(245,3,41)" fg:x="7698" fg:w="2"/><text x="39.9181%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="39.6681%" y="565" width="0.0103%" height="15" fill="rgb(214,13,26)" fg:x="7698" fg:w="2"/><text x="39.9181%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (3 samples, 0.02%)</title><rect x="39.6784%" y="613" width="0.0155%" height="15" fill="rgb(252,75,11)" fg:x="7700" fg:w="3"/><text x="39.9284%" y="623.50"></text></g><g><title>eth_trie::nibbles::Nibbles::common_prefix (2 samples, 0.01%)</title><rect x="39.6836%" y="597" width="0.0103%" height="15" fill="rgb(218,226,17)" fg:x="7701" fg:w="2"/><text x="39.9336%" y="607.50"></text></g><g><title>eth_trie::nibbles::Nibbles::at (2 samples, 0.01%)</title><rect x="39.6836%" y="581" width="0.0103%" height="15" fill="rgb(248,89,38)" fg:x="7701" fg:w="2"/><text x="39.9336%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="39.6991%" y="597" width="0.0258%" height="15" fill="rgb(237,73,46)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="607.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="39.6991%" y="581" width="0.0258%" height="15" fill="rgb(242,78,33)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="591.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="39.6991%" y="565" width="0.0258%" height="15" fill="rgb(235,60,3)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="575.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="39.6991%" y="549" width="0.0258%" height="15" fill="rgb(216,172,19)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="39.6991%" y="533" width="0.0258%" height="15" fill="rgb(227,6,42)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="543.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="39.6991%" y="517" width="0.0258%" height="15" fill="rgb(223,207,42)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="39.6991%" y="501" width="0.0258%" height="15" fill="rgb(246,138,30)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="39.6991%" y="485" width="0.0258%" height="15" fill="rgb(251,199,47)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="39.6991%" y="469" width="0.0258%" height="15" fill="rgb(228,218,44)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="39.6991%" y="453" width="0.0258%" height="15" fill="rgb(220,68,6)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="463.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="39.6991%" y="437" width="0.0258%" height="15" fill="rgb(240,60,26)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="447.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="39.6991%" y="421" width="0.0258%" height="15" fill="rgb(211,200,19)" fg:x="7704" fg:w="5"/><text x="39.9491%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.03%)</title><rect x="39.7300%" y="501" width="0.0309%" height="15" fill="rgb(242,145,30)" fg:x="7710" fg:w="6"/><text x="39.9800%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.03%)</title><rect x="39.7300%" y="485" width="0.0309%" height="15" fill="rgb(225,64,13)" fg:x="7710" fg:w="6"/><text x="39.9800%" y="495.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.03%)</title><rect x="39.7300%" y="469" width="0.0309%" height="15" fill="rgb(218,103,35)" fg:x="7710" fg:w="6"/><text x="39.9800%" y="479.50"></text></g><g><title>__rdl_realloc (6 samples, 0.03%)</title><rect x="39.7300%" y="453" width="0.0309%" height="15" fill="rgb(216,93,46)" fg:x="7710" fg:w="6"/><text x="39.9800%" y="463.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.03%)</title><rect x="39.7300%" y="437" width="0.0309%" height="15" fill="rgb(225,159,27)" fg:x="7710" fg:w="6"/><text x="39.9800%" y="447.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="39.7351%" y="421" width="0.0258%" height="15" fill="rgb(225,204,11)" fg:x="7711" fg:w="5"/><text x="39.9851%" y="431.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="39.7454%" y="405" width="0.0155%" height="15" fill="rgb(205,56,4)" fg:x="7713" fg:w="3"/><text x="39.9954%" y="415.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="39.7454%" y="389" width="0.0155%" height="15" fill="rgb(206,6,35)" fg:x="7713" fg:w="3"/><text x="39.9954%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.04%)</title><rect x="39.7300%" y="549" width="0.0361%" height="15" fill="rgb(247,73,52)" fg:x="7710" fg:w="7"/><text x="39.9800%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="39.7300%" y="533" width="0.0361%" height="15" fill="rgb(246,97,4)" fg:x="7710" fg:w="7"/><text x="39.9800%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="39.7300%" y="517" width="0.0361%" height="15" fill="rgb(212,37,15)" fg:x="7710" fg:w="7"/><text x="39.9800%" y="527.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (8 samples, 0.04%)</title><rect x="39.7300%" y="581" width="0.0412%" height="15" fill="rgb(208,130,40)" fg:x="7710" fg:w="8"/><text x="39.9800%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.04%)</title><rect x="39.7300%" y="565" width="0.0412%" height="15" fill="rgb(236,55,29)" fg:x="7710" fg:w="8"/><text x="39.9800%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (24 samples, 0.12%)</title><rect x="39.6578%" y="645" width="0.1237%" height="15" fill="rgb(209,156,45)" fg:x="7696" fg:w="24"/><text x="39.9078%" y="655.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (22 samples, 0.11%)</title><rect x="39.6681%" y="629" width="0.1134%" height="15" fill="rgb(249,107,4)" fg:x="7698" fg:w="22"/><text x="39.9181%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (17 samples, 0.09%)</title><rect x="39.6939%" y="613" width="0.0876%" height="15" fill="rgb(227,7,13)" fg:x="7703" fg:w="17"/><text x="39.9439%" y="623.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (11 samples, 0.06%)</title><rect x="39.7248%" y="597" width="0.0567%" height="15" fill="rgb(250,129,14)" fg:x="7709" fg:w="11"/><text x="39.9748%" y="607.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (2 samples, 0.01%)</title><rect x="39.7867%" y="629" width="0.0103%" height="15" fill="rgb(229,92,13)" fg:x="7721" fg:w="2"/><text x="40.0367%" y="639.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="39.7867%" y="613" width="0.0103%" height="15" fill="rgb(245,98,39)" fg:x="7721" fg:w="2"/><text x="40.0367%" y="623.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_entry (2 samples, 0.01%)</title><rect x="39.7867%" y="597" width="0.0103%" height="15" fill="rgb(234,135,48)" fg:x="7721" fg:w="2"/><text x="40.0367%" y="607.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::touch_ptr (2 samples, 0.01%)</title><rect x="39.7867%" y="581" width="0.0103%" height="15" fill="rgb(230,98,28)" fg:x="7721" fg:w="2"/><text x="40.0367%" y="591.50"></text></g><g><title>lru_mem::entry::EntryPtr&lt;K,V&gt;::unhinge (2 samples, 0.01%)</title><rect x="39.7867%" y="565" width="0.0103%" height="15" fill="rgb(223,121,0)" fg:x="7721" fg:w="2"/><text x="40.0367%" y="575.50"></text></g><g><title>alloy_primitives::utils::keccak256 (16 samples, 0.08%)</title><rect x="39.7970%" y="629" width="0.0824%" height="15" fill="rgb(234,173,33)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="639.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (16 samples, 0.08%)</title><rect x="39.7970%" y="613" width="0.0824%" height="15" fill="rgb(245,47,8)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (16 samples, 0.08%)</title><rect x="39.7970%" y="597" width="0.0824%" height="15" fill="rgb(205,17,20)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (16 samples, 0.08%)</title><rect x="39.7970%" y="581" width="0.0824%" height="15" fill="rgb(232,151,16)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (16 samples, 0.08%)</title><rect x="39.7970%" y="565" width="0.0824%" height="15" fill="rgb(208,30,32)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (16 samples, 0.08%)</title><rect x="39.7970%" y="549" width="0.0824%" height="15" fill="rgb(254,26,3)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (16 samples, 0.08%)</title><rect x="39.7970%" y="533" width="0.0824%" height="15" fill="rgb(240,177,30)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (16 samples, 0.08%)</title><rect x="39.7970%" y="517" width="0.0824%" height="15" fill="rgb(248,76,44)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (16 samples, 0.08%)</title><rect x="39.7970%" y="501" width="0.0824%" height="15" fill="rgb(241,186,54)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (16 samples, 0.08%)</title><rect x="39.7970%" y="485" width="0.0824%" height="15" fill="rgb(249,171,29)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (16 samples, 0.08%)</title><rect x="39.7970%" y="469" width="0.0824%" height="15" fill="rgb(237,151,44)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="479.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (16 samples, 0.08%)</title><rect x="39.7970%" y="453" width="0.0824%" height="15" fill="rgb(228,174,30)" fg:x="7723" fg:w="16"/><text x="40.0470%" y="463.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (3 samples, 0.02%)</title><rect x="39.8949%" y="613" width="0.0155%" height="15" fill="rgb(252,14,37)" fg:x="7742" fg:w="3"/><text x="40.1449%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="39.8949%" y="597" width="0.0155%" height="15" fill="rgb(207,111,40)" fg:x="7742" fg:w="3"/><text x="40.1449%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="39.9000%" y="581" width="0.0103%" height="15" fill="rgb(248,171,54)" fg:x="7743" fg:w="2"/><text x="40.1500%" y="591.50"></text></g><g><title>rlp::rlpin::Rlp::at (3 samples, 0.02%)</title><rect x="39.9155%" y="613" width="0.0155%" height="15" fill="rgb(211,127,2)" fg:x="7746" fg:w="3"/><text x="40.1655%" y="623.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (66 samples, 0.34%)</title><rect x="39.6063%" y="677" width="0.3401%" height="15" fill="rgb(236,87,47)" fg:x="7686" fg:w="66"/><text x="39.8563%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (60 samples, 0.31%)</title><rect x="39.6372%" y="661" width="0.3092%" height="15" fill="rgb(223,190,45)" fg:x="7692" fg:w="60"/><text x="39.8872%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (32 samples, 0.16%)</title><rect x="39.7815%" y="645" width="0.1649%" height="15" fill="rgb(215,5,16)" fg:x="7720" fg:w="32"/><text x="40.0315%" y="655.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (13 samples, 0.07%)</title><rect x="39.8794%" y="629" width="0.0670%" height="15" fill="rgb(252,82,33)" fg:x="7739" fg:w="13"/><text x="40.1294%" y="639.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (3 samples, 0.02%)</title><rect x="39.9309%" y="613" width="0.0155%" height="15" fill="rgb(247,213,44)" fg:x="7749" fg:w="3"/><text x="40.1809%" y="623.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (3 samples, 0.02%)</title><rect x="39.9309%" y="597" width="0.0155%" height="15" fill="rgb(205,196,44)" fg:x="7749" fg:w="3"/><text x="40.1809%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="39.9309%" y="581" width="0.0155%" height="15" fill="rgb(237,96,54)" fg:x="7749" fg:w="3"/><text x="40.1809%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="39.9309%" y="565" width="0.0155%" height="15" fill="rgb(230,113,34)" fg:x="7749" fg:w="3"/><text x="40.1809%" y="575.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="39.9309%" y="549" width="0.0155%" height="15" fill="rgb(221,224,12)" fg:x="7749" fg:w="3"/><text x="40.1809%" y="559.50"></text></g><g><title>rlp::rlpin::Rlp::at (3 samples, 0.02%)</title><rect x="39.9309%" y="533" width="0.0155%" height="15" fill="rgb(219,112,44)" fg:x="7749" fg:w="3"/><text x="40.1809%" y="543.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="39.9361%" y="517" width="0.0103%" height="15" fill="rgb(210,31,13)" fg:x="7750" fg:w="2"/><text x="40.1861%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (17 samples, 0.09%)</title><rect x="39.9516%" y="629" width="0.0876%" height="15" fill="rgb(230,25,16)" fg:x="7753" fg:w="17"/><text x="40.2016%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (17 samples, 0.09%)</title><rect x="39.9516%" y="613" width="0.0876%" height="15" fill="rgb(246,108,53)" fg:x="7753" fg:w="17"/><text x="40.2016%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (17 samples, 0.09%)</title><rect x="39.9516%" y="597" width="0.0876%" height="15" fill="rgb(241,172,50)" fg:x="7753" fg:w="17"/><text x="40.2016%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (17 samples, 0.09%)</title><rect x="39.9516%" y="581" width="0.0876%" height="15" fill="rgb(235,141,10)" fg:x="7753" fg:w="17"/><text x="40.2016%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (15 samples, 0.08%)</title><rect x="39.9619%" y="565" width="0.0773%" height="15" fill="rgb(220,174,43)" fg:x="7755" fg:w="15"/><text x="40.2119%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (15 samples, 0.08%)</title><rect x="39.9619%" y="549" width="0.0773%" height="15" fill="rgb(215,181,40)" fg:x="7755" fg:w="15"/><text x="40.2119%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (15 samples, 0.08%)</title><rect x="39.9619%" y="533" width="0.0773%" height="15" fill="rgb(230,97,2)" fg:x="7755" fg:w="15"/><text x="40.2119%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (15 samples, 0.08%)</title><rect x="39.9619%" y="517" width="0.0773%" height="15" fill="rgb(211,25,27)" fg:x="7755" fg:w="15"/><text x="40.2119%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (15 samples, 0.08%)</title><rect x="39.9619%" y="501" width="0.0773%" height="15" fill="rgb(230,87,26)" fg:x="7755" fg:w="15"/><text x="40.2119%" y="511.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (15 samples, 0.08%)</title><rect x="39.9619%" y="485" width="0.0773%" height="15" fill="rgb(227,160,17)" fg:x="7755" fg:w="15"/><text x="40.2119%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256 (18 samples, 0.09%)</title><rect x="39.9516%" y="661" width="0.0928%" height="15" fill="rgb(244,85,34)" fg:x="7753" fg:w="18"/><text x="40.2016%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (18 samples, 0.09%)</title><rect x="39.9516%" y="645" width="0.0928%" height="15" fill="rgb(207,70,0)" fg:x="7753" fg:w="18"/><text x="40.2016%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="40.0546%" y="565" width="0.0103%" height="15" fill="rgb(223,129,7)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="40.0546%" y="549" width="0.0103%" height="15" fill="rgb(246,105,7)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="559.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="40.0546%" y="533" width="0.0103%" height="15" fill="rgb(215,154,42)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="543.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="40.0546%" y="517" width="0.0103%" height="15" fill="rgb(220,215,30)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="40.0546%" y="501" width="0.0103%" height="15" fill="rgb(228,81,51)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="511.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="40.0546%" y="485" width="0.0103%" height="15" fill="rgb(247,71,54)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="495.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="40.0546%" y="469" width="0.0103%" height="15" fill="rgb(234,176,34)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="40.0546%" y="453" width="0.0103%" height="15" fill="rgb(241,103,54)" fg:x="7773" fg:w="2"/><text x="40.3046%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="40.0495%" y="613" width="0.0206%" height="15" fill="rgb(228,22,34)" fg:x="7772" fg:w="4"/><text x="40.2995%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="40.0495%" y="597" width="0.0206%" height="15" fill="rgb(241,179,48)" fg:x="7772" fg:w="4"/><text x="40.2995%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="40.0495%" y="581" width="0.0206%" height="15" fill="rgb(235,167,37)" fg:x="7772" fg:w="4"/><text x="40.2995%" y="591.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (5 samples, 0.03%)</title><rect x="40.0495%" y="645" width="0.0258%" height="15" fill="rgb(213,109,30)" fg:x="7772" fg:w="5"/><text x="40.2995%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="40.0495%" y="629" width="0.0258%" height="15" fill="rgb(222,172,16)" fg:x="7772" fg:w="5"/><text x="40.2995%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="40.0855%" y="517" width="0.0103%" height="15" fill="rgb(233,192,5)" fg:x="7779" fg:w="2"/><text x="40.3355%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (30 samples, 0.15%)</title><rect x="39.9464%" y="677" width="0.1546%" height="15" fill="rgb(247,189,41)" fg:x="7752" fg:w="30"/><text x="40.1964%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (11 samples, 0.06%)</title><rect x="40.0443%" y="661" width="0.0567%" height="15" fill="rgb(218,134,47)" fg:x="7771" fg:w="11"/><text x="40.2943%" y="671.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (3 samples, 0.02%)</title><rect x="40.0855%" y="645" width="0.0155%" height="15" fill="rgb(216,29,3)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="655.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (3 samples, 0.02%)</title><rect x="40.0855%" y="629" width="0.0155%" height="15" fill="rgb(246,140,12)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="40.0855%" y="613" width="0.0155%" height="15" fill="rgb(230,136,11)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="40.0855%" y="597" width="0.0155%" height="15" fill="rgb(247,22,47)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="607.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="40.0855%" y="581" width="0.0155%" height="15" fill="rgb(218,84,22)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="591.50"></text></g><g><title>rlp::rlpin::Rlp::at (3 samples, 0.02%)</title><rect x="40.0855%" y="565" width="0.0155%" height="15" fill="rgb(216,87,39)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="575.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (3 samples, 0.02%)</title><rect x="40.0855%" y="549" width="0.0155%" height="15" fill="rgb(221,178,8)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="559.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (3 samples, 0.02%)</title><rect x="40.0855%" y="533" width="0.0155%" height="15" fill="rgb(230,42,11)" fg:x="7779" fg:w="3"/><text x="40.3355%" y="543.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::insert (121 samples, 0.62%)</title><rect x="39.4826%" y="725" width="0.6235%" height="15" fill="rgb(237,229,4)" fg:x="7662" fg:w="121"/><text x="39.7326%" y="735.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (104 samples, 0.54%)</title><rect x="39.5702%" y="709" width="0.5359%" height="15" fill="rgb(222,31,33)" fg:x="7679" fg:w="104"/><text x="39.8202%" y="719.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (98 samples, 0.50%)</title><rect x="39.6012%" y="693" width="0.5050%" height="15" fill="rgb(210,17,39)" fg:x="7685" fg:w="98"/><text x="39.8512%" y="703.50"></text></g><g><title>bincode::serialize (3 samples, 0.02%)</title><rect x="40.1062%" y="725" width="0.0155%" height="15" fill="rgb(244,93,20)" fg:x="7783" fg:w="3"/><text x="40.3562%" y="735.50"></text></g><g><title>bincode::config::Options::serialize (3 samples, 0.02%)</title><rect x="40.1062%" y="709" width="0.0155%" height="15" fill="rgb(210,40,47)" fg:x="7783" fg:w="3"/><text x="40.3562%" y="719.50"></text></g><g><title>bincode::internal::serialize (3 samples, 0.02%)</title><rect x="40.1062%" y="693" width="0.0155%" height="15" fill="rgb(239,211,47)" fg:x="7783" fg:w="3"/><text x="40.3562%" y="703.50"></text></g><g><title>bincode::internal::serialize_into (2 samples, 0.01%)</title><rect x="40.1113%" y="677" width="0.0103%" height="15" fill="rgb(251,223,49)" fg:x="7784" fg:w="2"/><text x="40.3613%" y="687.50"></text></g><g><title>zilliqa::state::_::&lt;impl serde::ser::Serialize for zilliqa::state::Account&gt;::serialize (2 samples, 0.01%)</title><rect x="40.1113%" y="661" width="0.0103%" height="15" fill="rgb(221,149,5)" fg:x="7784" fg:w="2"/><text x="40.3613%" y="671.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.01%)</title><rect x="40.1113%" y="645" width="0.0103%" height="15" fill="rgb(219,224,51)" fg:x="7784" fg:w="2"/><text x="40.3613%" y="655.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (28 samples, 0.14%)</title><rect x="40.1268%" y="693" width="0.1443%" height="15" fill="rgb(223,7,8)" fg:x="7787" fg:w="28"/><text x="40.3768%" y="703.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (28 samples, 0.14%)</title><rect x="40.1268%" y="677" width="0.1443%" height="15" fill="rgb(241,217,22)" fg:x="7787" fg:w="28"/><text x="40.3768%" y="687.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (28 samples, 0.14%)</title><rect x="40.1268%" y="661" width="0.1443%" height="15" fill="rgb(248,209,0)" fg:x="7787" fg:w="28"/><text x="40.3768%" y="671.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (28 samples, 0.14%)</title><rect x="40.1268%" y="645" width="0.1443%" height="15" fill="rgb(217,205,4)" fg:x="7787" fg:w="28"/><text x="40.3768%" y="655.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (27 samples, 0.14%)</title><rect x="40.1319%" y="629" width="0.1391%" height="15" fill="rgb(228,124,39)" fg:x="7788" fg:w="27"/><text x="40.3819%" y="639.50"></text></g><g><title>keccak::p1600 (27 samples, 0.14%)</title><rect x="40.1319%" y="613" width="0.1391%" height="15" fill="rgb(250,116,42)" fg:x="7788" fg:w="27"/><text x="40.3819%" y="623.50"></text></g><g><title>keccak::keccak_p (27 samples, 0.14%)</title><rect x="40.1319%" y="597" width="0.1391%" height="15" fill="rgb(223,202,9)" fg:x="7788" fg:w="27"/><text x="40.3819%" y="607.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (27 samples, 0.14%)</title><rect x="40.1319%" y="581" width="0.1391%" height="15" fill="rgb(242,222,40)" fg:x="7788" fg:w="27"/><text x="40.3819%" y="591.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_delta_evm (376 samples, 1.94%)</title><rect x="38.3387%" y="757" width="1.9375%" height="15" fill="rgb(229,99,46)" fg:x="7440" fg:w="376"/><text x="38.5887%" y="767.50">z..</text></g><g><title>zilliqa::state::State::save_account (155 samples, 0.80%)</title><rect x="39.4775%" y="741" width="0.7987%" height="15" fill="rgb(225,56,46)" fg:x="7661" fg:w="155"/><text x="39.7275%" y="751.50"></text></g><g><title>zilliqa::state::State::account_key (29 samples, 0.15%)</title><rect x="40.1268%" y="725" width="0.1494%" height="15" fill="rgb(227,94,5)" fg:x="7787" fg:w="29"/><text x="40.3768%" y="735.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (29 samples, 0.15%)</title><rect x="40.1268%" y="709" width="0.1494%" height="15" fill="rgb(205,112,38)" fg:x="7787" fg:w="29"/><text x="40.3768%" y="719.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_delta_scilla (2 samples, 0.01%)</title><rect x="40.2762%" y="757" width="0.0103%" height="15" fill="rgb(231,133,46)" fg:x="7816" fg:w="2"/><text x="40.5262%" y="767.50"></text></g><g><title>Unknown (2 samples, 0.01%)</title><rect x="40.2917%" y="613" width="0.0103%" height="15" fill="rgb(217,16,9)" fg:x="7819" fg:w="2"/><text x="40.5417%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="40.2865%" y="725" width="0.0309%" height="15" fill="rgb(249,173,9)" fg:x="7818" fg:w="6"/><text x="40.5365%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="40.2865%" y="709" width="0.0309%" height="15" fill="rgb(205,163,53)" fg:x="7818" fg:w="6"/><text x="40.5365%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="40.2865%" y="693" width="0.0309%" height="15" fill="rgb(217,54,41)" fg:x="7818" fg:w="6"/><text x="40.5365%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="40.2865%" y="677" width="0.0309%" height="15" fill="rgb(228,216,12)" fg:x="7818" fg:w="6"/><text x="40.5365%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="40.2865%" y="661" width="0.0309%" height="15" fill="rgb(244,228,15)" fg:x="7818" fg:w="6"/><text x="40.5365%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.03%)</title><rect x="40.2917%" y="645" width="0.0258%" height="15" fill="rgb(221,176,53)" fg:x="7819" fg:w="5"/><text x="40.5417%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="40.2917%" y="629" width="0.0258%" height="15" fill="rgb(205,94,34)" fg:x="7819" fg:w="5"/><text x="40.5417%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="40.3020%" y="613" width="0.0155%" height="15" fill="rgb(213,110,48)" fg:x="7821" fg:w="3"/><text x="40.5520%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="40.3174%" y="725" width="0.0103%" height="15" fill="rgb(236,142,28)" fg:x="7824" fg:w="2"/><text x="40.5674%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="40.3174%" y="709" width="0.0103%" height="15" fill="rgb(225,135,29)" fg:x="7824" fg:w="2"/><text x="40.5674%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="40.3174%" y="693" width="0.0103%" height="15" fill="rgb(252,45,31)" fg:x="7824" fg:w="2"/><text x="40.5674%" y="703.50"></text></g><g><title>&lt;zilliqa::state::State as core::clone::Clone&gt;::clone (10 samples, 0.05%)</title><rect x="40.2865%" y="741" width="0.0515%" height="15" fill="rgb(211,187,50)" fg:x="7818" fg:w="10"/><text x="40.5365%" y="751.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="40.3277%" y="725" width="0.0103%" height="15" fill="rgb(229,109,7)" fg:x="7826" fg:w="2"/><text x="40.5777%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="40.3277%" y="709" width="0.0103%" height="15" fill="rgb(251,131,51)" fg:x="7826" fg:w="2"/><text x="40.5777%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="40.3277%" y="693" width="0.0103%" height="15" fill="rgb(251,180,35)" fg:x="7826" fg:w="2"/><text x="40.5777%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="40.3380%" y="741" width="0.0103%" height="15" fill="rgb(211,46,32)" fg:x="7828" fg:w="2"/><text x="40.5880%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.01%)</title><rect x="40.3535%" y="709" width="0.0103%" height="15" fill="rgb(248,123,17)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="40.3535%" y="693" width="0.0103%" height="15" fill="rgb(227,141,18)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="40.3535%" y="677" width="0.0103%" height="15" fill="rgb(216,102,9)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="40.3535%" y="661" width="0.0103%" height="15" fill="rgb(253,47,13)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="40.3535%" y="645" width="0.0103%" height="15" fill="rgb(226,93,23)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="40.3535%" y="629" width="0.0103%" height="15" fill="rgb(247,104,17)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="639.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="40.3535%" y="613" width="0.0103%" height="15" fill="rgb(233,203,26)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="623.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="40.3535%" y="597" width="0.0103%" height="15" fill="rgb(244,98,49)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="40.3535%" y="581" width="0.0103%" height="15" fill="rgb(235,134,22)" fg:x="7831" fg:w="2"/><text x="40.6035%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="40.3690%" y="693" width="0.0155%" height="15" fill="rgb(221,70,32)" fg:x="7834" fg:w="3"/><text x="40.6190%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (3 samples, 0.02%)</title><rect x="40.3690%" y="677" width="0.0155%" height="15" fill="rgb(238,15,50)" fg:x="7834" fg:w="3"/><text x="40.6190%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="40.3690%" y="661" width="0.0155%" height="15" fill="rgb(215,221,48)" fg:x="7834" fg:w="3"/><text x="40.6190%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.02%)</title><rect x="40.3690%" y="645" width="0.0155%" height="15" fill="rgb(236,73,3)" fg:x="7834" fg:w="3"/><text x="40.6190%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (3 samples, 0.02%)</title><rect x="40.3690%" y="629" width="0.0155%" height="15" fill="rgb(250,107,11)" fg:x="7834" fg:w="3"/><text x="40.6190%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::exec::PendingState&gt; (9 samples, 0.05%)</title><rect x="40.3483%" y="741" width="0.0464%" height="15" fill="rgb(242,39,14)" fg:x="7830" fg:w="9"/><text x="40.5983%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::state::State&gt; (9 samples, 0.05%)</title><rect x="40.3483%" y="725" width="0.0464%" height="15" fill="rgb(248,164,37)" fg:x="7830" fg:w="9"/><text x="40.5983%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::trie::EthTrie&lt;zilliqa::db::TrieStorage&gt;&gt; (6 samples, 0.03%)</title><rect x="40.3638%" y="709" width="0.0309%" height="15" fill="rgb(217,60,12)" fg:x="7833" fg:w="6"/><text x="40.6138%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="40.3844%" y="693" width="0.0103%" height="15" fill="rgb(240,125,29)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,()&gt;&gt; (2 samples, 0.01%)</title><rect x="40.3844%" y="677" width="0.0103%" height="15" fill="rgb(208,207,28)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::vec::Vec&lt;u8&gt;,())&gt;&gt; (2 samples, 0.01%)</title><rect x="40.3844%" y="661" width="0.0103%" height="15" fill="rgb(209,159,27)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="40.3844%" y="645" width="0.0103%" height="15" fill="rgb(251,176,53)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.01%)</title><rect x="40.3844%" y="629" width="0.0103%" height="15" fill="rgb(211,85,7)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2 samples, 0.01%)</title><rect x="40.3844%" y="613" width="0.0103%" height="15" fill="rgb(216,64,54)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="623.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="40.3844%" y="597" width="0.0103%" height="15" fill="rgb(217,54,24)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="40.3844%" y="581" width="0.0103%" height="15" fill="rgb(208,206,53)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="591.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="40.3844%" y="565" width="0.0103%" height="15" fill="rgb(251,74,39)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="40.3844%" y="549" width="0.0103%" height="15" fill="rgb(226,47,5)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="40.3844%" y="533" width="0.0103%" height="15" fill="rgb(234,111,33)" fg:x="7837" fg:w="2"/><text x="40.6344%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="40.3947%" y="709" width="0.0155%" height="15" fill="rgb(251,14,10)" fg:x="7839" fg:w="3"/><text x="40.6447%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.02%)</title><rect x="40.3947%" y="693" width="0.0155%" height="15" fill="rgb(232,43,0)" fg:x="7839" fg:w="3"/><text x="40.6447%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="40.3947%" y="677" width="0.0155%" height="15" fill="rgb(222,68,43)" fg:x="7839" fg:w="3"/><text x="40.6447%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="40.3947%" y="661" width="0.0155%" height="15" fill="rgb(217,24,23)" fg:x="7839" fg:w="3"/><text x="40.6447%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="40.4102%" y="661" width="0.0103%" height="15" fill="rgb(229,209,14)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="40.4102%" y="645" width="0.0103%" height="15" fill="rgb(250,149,48)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="40.4102%" y="629" width="0.0103%" height="15" fill="rgb(210,120,37)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="40.4102%" y="613" width="0.0103%" height="15" fill="rgb(210,21,8)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="40.4102%" y="597" width="0.0103%" height="15" fill="rgb(243,145,7)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="40.4102%" y="581" width="0.0103%" height="15" fill="rgb(238,178,32)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="591.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="40.4102%" y="565" width="0.0103%" height="15" fill="rgb(222,4,10)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="40.4102%" y="549" width="0.0103%" height="15" fill="rgb(239,7,37)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="40.4102%" y="533" width="0.0103%" height="15" fill="rgb(215,31,37)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="543.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="40.4102%" y="517" width="0.0103%" height="15" fill="rgb(224,83,33)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="527.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="40.4102%" y="501" width="0.0103%" height="15" fill="rgb(239,55,3)" fg:x="7842" fg:w="2"/><text x="40.6602%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.02%)</title><rect x="40.4102%" y="693" width="0.0206%" height="15" fill="rgb(247,92,11)" fg:x="7842" fg:w="4"/><text x="40.6602%" y="703.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm::{{closure}} (4 samples, 0.02%)</title><rect x="40.4102%" y="677" width="0.0206%" height="15" fill="rgb(239,200,7)" fg:x="7842" fg:w="4"/><text x="40.6602%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = revm::context::context_precompiles::ContextPrecompiles&lt;zilliqa::exec::PendingState&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="40.4205%" y="661" width="0.0103%" height="15" fill="rgb(227,115,8)" fg:x="7844" fg:w="2"/><text x="40.6705%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="40.4205%" y="645" width="0.0103%" height="15" fill="rgb(215,189,27)" fg:x="7844" fg:w="2"/><text x="40.6705%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="40.4205%" y="629" width="0.0103%" height="15" fill="rgb(251,216,39)" fg:x="7844" fg:w="2"/><text x="40.6705%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (4 samples, 0.02%)</title><rect x="40.4308%" y="677" width="0.0206%" height="15" fill="rgb(207,29,47)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="687.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="40.4308%" y="661" width="0.0206%" height="15" fill="rgb(210,71,34)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="40.4308%" y="645" width="0.0206%" height="15" fill="rgb(253,217,51)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="40.4308%" y="629" width="0.0206%" height="15" fill="rgb(222,117,46)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="40.4308%" y="613" width="0.0206%" height="15" fill="rgb(226,132,6)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="40.4308%" y="597" width="0.0206%" height="15" fill="rgb(254,145,51)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="40.4308%" y="581" width="0.0206%" height="15" fill="rgb(231,199,27)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="591.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="40.4308%" y="565" width="0.0206%" height="15" fill="rgb(245,158,14)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="40.4308%" y="549" width="0.0206%" height="15" fill="rgb(240,113,14)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="559.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="40.4308%" y="533" width="0.0206%" height="15" fill="rgb(210,20,13)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="543.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="40.4308%" y="517" width="0.0206%" height="15" fill="rgb(241,144,13)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="527.50"></text></g><g><title>tcache_get_n (4 samples, 0.02%)</title><rect x="40.4308%" y="501" width="0.0206%" height="15" fill="rgb(235,43,34)" fg:x="7846" fg:w="4"/><text x="40.6808%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="40.4514%" y="677" width="0.0155%" height="15" fill="rgb(208,36,20)" fg:x="7850" fg:w="3"/><text x="40.7014%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="40.4514%" y="661" width="0.0155%" height="15" fill="rgb(239,204,10)" fg:x="7850" fg:w="3"/><text x="40.7014%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="40.4669%" y="629" width="0.0155%" height="15" fill="rgb(217,84,43)" fg:x="7853" fg:w="3"/><text x="40.7169%" y="639.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_all (278 samples, 1.43%)</title><rect x="40.4669%" y="677" width="1.4325%" height="15" fill="rgb(241,170,50)" fg:x="7853" fg:w="278"/><text x="40.7169%" y="687.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::to_boxed_with (278 samples, 1.43%)</title><rect x="40.4669%" y="661" width="1.4325%" height="15" fill="rgb(226,205,29)" fg:x="7853" fg:w="278"/><text x="40.7169%" y="671.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::to_boxed_with_slow (278 samples, 1.43%)</title><rect x="40.4669%" y="645" width="1.4325%" height="15" fill="rgb(233,113,1)" fg:x="7853" fg:w="278"/><text x="40.7169%" y="655.50"></text></g><g><title>revm_interpreter::opcode::tables::make_boxed_instruction_table (275 samples, 1.42%)</title><rect x="40.4823%" y="629" width="1.4171%" height="15" fill="rgb(253,98,13)" fg:x="7856" fg:w="275"/><text x="40.7323%" y="639.50"></text></g><g><title>core::array::from_fn (275 samples, 1.42%)</title><rect x="40.4823%" y="613" width="1.4171%" height="15" fill="rgb(211,115,12)" fg:x="7856" fg:w="275"/><text x="40.7323%" y="623.50"></text></g><g><title>core::array::try_from_fn (275 samples, 1.42%)</title><rect x="40.4823%" y="597" width="1.4171%" height="15" fill="rgb(208,12,16)" fg:x="7856" fg:w="275"/><text x="40.7323%" y="607.50"></text></g><g><title>core::array::try_from_fn_erased (275 samples, 1.42%)</title><rect x="40.4823%" y="581" width="1.4171%" height="15" fill="rgb(237,193,54)" fg:x="7856" fg:w="275"/><text x="40.7323%" y="591.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (274 samples, 1.41%)</title><rect x="40.4875%" y="565" width="1.4119%" height="15" fill="rgb(243,22,42)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="575.50"></text></g><g><title>revm_interpreter::opcode::tables::make_boxed_instruction_table::{{closure}} (274 samples, 1.41%)</title><rect x="40.4875%" y="549" width="1.4119%" height="15" fill="rgb(233,151,36)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="559.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_all::{{closure}} (274 samples, 1.41%)</title><rect x="40.4875%" y="533" width="1.4119%" height="15" fill="rgb(237,57,45)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (274 samples, 1.41%)</title><rect x="40.4875%" y="517" width="1.4119%" height="15" fill="rgb(221,88,17)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (274 samples, 1.41%)</title><rect x="40.4875%" y="501" width="1.4119%" height="15" fill="rgb(230,79,15)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (274 samples, 1.41%)</title><rect x="40.4875%" y="485" width="1.4119%" height="15" fill="rgb(213,57,13)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (274 samples, 1.41%)</title><rect x="40.4875%" y="469" width="1.4119%" height="15" fill="rgb(222,116,39)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="479.50"></text></g><g><title>alloc::alloc::alloc (274 samples, 1.41%)</title><rect x="40.4875%" y="453" width="1.4119%" height="15" fill="rgb(245,107,2)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="463.50"></text></g><g><title>__rdl_alloc (274 samples, 1.41%)</title><rect x="40.4875%" y="437" width="1.4119%" height="15" fill="rgb(238,1,10)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (274 samples, 1.41%)</title><rect x="40.4875%" y="421" width="1.4119%" height="15" fill="rgb(249,4,48)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="431.50"></text></g><g><title>__GI___libc_malloc (274 samples, 1.41%)</title><rect x="40.4875%" y="405" width="1.4119%" height="15" fill="rgb(223,151,18)" fg:x="7857" fg:w="274"/><text x="40.7375%" y="415.50"></text></g><g><title>_int_malloc (230 samples, 1.19%)</title><rect x="40.7142%" y="389" width="1.1852%" height="15" fill="rgb(227,65,43)" fg:x="7901" fg:w="230"/><text x="40.9642%" y="399.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::append_handler_register (299 samples, 1.54%)</title><rect x="40.3947%" y="741" width="1.5408%" height="15" fill="rgb(218,40,45)" fg:x="7839" fg:w="299"/><text x="40.6447%" y="751.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::append_handler_register (299 samples, 1.54%)</title><rect x="40.3947%" y="725" width="1.5408%" height="15" fill="rgb(252,121,31)" fg:x="7839" fg:w="299"/><text x="40.6447%" y="735.50"></text></g><g><title>revm::handler::register::HandleRegisters&lt;EXT,DB&gt;::register (296 samples, 1.53%)</title><rect x="40.4102%" y="709" width="1.5253%" height="15" fill="rgb(219,158,43)" fg:x="7842" fg:w="296"/><text x="40.6602%" y="719.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register (292 samples, 1.50%)</title><rect x="40.4308%" y="693" width="1.5047%" height="15" fill="rgb(231,162,42)" fg:x="7846" fg:w="292"/><text x="40.6808%" y="703.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_boxed (7 samples, 0.04%)</title><rect x="41.8994%" y="677" width="0.0361%" height="15" fill="rgb(217,179,25)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="687.50"></text></g><g><title>revm_interpreter::opcode::tables::update_boxed_instruction (7 samples, 0.04%)</title><rect x="41.8994%" y="661" width="0.0361%" height="15" fill="rgb(206,212,31)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="41.8994%" y="645" width="0.0361%" height="15" fill="rgb(235,144,12)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.04%)</title><rect x="41.8994%" y="629" width="0.0361%" height="15" fill="rgb(213,51,10)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="41.8994%" y="613" width="0.0361%" height="15" fill="rgb(231,145,14)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="41.8994%" y="597" width="0.0361%" height="15" fill="rgb(235,15,28)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="607.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="41.8994%" y="581" width="0.0361%" height="15" fill="rgb(237,206,10)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="591.50"></text></g><g><title>__rdl_alloc (7 samples, 0.04%)</title><rect x="41.8994%" y="565" width="0.0361%" height="15" fill="rgb(236,227,27)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.04%)</title><rect x="41.8994%" y="549" width="0.0361%" height="15" fill="rgb(246,83,35)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="559.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="41.8994%" y="533" width="0.0361%" height="15" fill="rgb(220,136,24)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="543.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="41.8994%" y="517" width="0.0361%" height="15" fill="rgb(217,3,25)" fg:x="8131" fg:w="7"/><text x="42.1494%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="41.9406%" y="725" width="0.0258%" height="15" fill="rgb(239,24,14)" fg:x="8139" fg:w="5"/><text x="42.1906%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;revm::handler::register::HandleRegisters&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="41.9767%" y="709" width="0.0155%" height="15" fill="rgb(244,16,53)" fg:x="8146" fg:w="3"/><text x="42.2267%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="41.9922%" y="709" width="0.0103%" height="15" fill="rgb(208,175,44)" fg:x="8149" fg:w="2"/><text x="42.2422%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (8 samples, 0.04%)</title><rect x="41.9664%" y="725" width="0.0412%" height="15" fill="rgb(252,18,48)" fg:x="8144" fg:w="8"/><text x="42.2164%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="42.0076%" y="725" width="0.0155%" height="15" fill="rgb(234,199,32)" fg:x="8152" fg:w="3"/><text x="42.2576%" y="735.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (12 samples, 0.06%)</title><rect x="42.0231%" y="661" width="0.0618%" height="15" fill="rgb(225,77,54)" fg:x="8155" fg:w="12"/><text x="42.2731%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (11 samples, 0.06%)</title><rect x="42.0282%" y="645" width="0.0567%" height="15" fill="rgb(225,42,25)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.06%)</title><rect x="42.0282%" y="629" width="0.0567%" height="15" fill="rgb(242,227,46)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.06%)</title><rect x="42.0282%" y="613" width="0.0567%" height="15" fill="rgb(246,197,35)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.06%)</title><rect x="42.0282%" y="597" width="0.0567%" height="15" fill="rgb(215,159,26)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.06%)</title><rect x="42.0282%" y="581" width="0.0567%" height="15" fill="rgb(212,194,50)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="591.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.06%)</title><rect x="42.0282%" y="565" width="0.0567%" height="15" fill="rgb(246,132,1)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="575.50"></text></g><g><title>__rdl_alloc (11 samples, 0.06%)</title><rect x="42.0282%" y="549" width="0.0567%" height="15" fill="rgb(217,71,7)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.06%)</title><rect x="42.0282%" y="533" width="0.0567%" height="15" fill="rgb(252,59,32)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="543.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.06%)</title><rect x="42.0282%" y="517" width="0.0567%" height="15" fill="rgb(253,204,25)" fg:x="8156" fg:w="11"/><text x="42.2782%" y="527.50"></text></g><g><title>_int_malloc (9 samples, 0.05%)</title><rect x="42.0385%" y="501" width="0.0464%" height="15" fill="rgb(232,21,16)" fg:x="8158" fg:w="9"/><text x="42.2885%" y="511.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (6 samples, 0.03%)</title><rect x="42.0849%" y="661" width="0.0309%" height="15" fill="rgb(248,90,29)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.03%)</title><rect x="42.0849%" y="645" width="0.0309%" height="15" fill="rgb(249,223,7)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.03%)</title><rect x="42.0849%" y="629" width="0.0309%" height="15" fill="rgb(231,119,42)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.03%)</title><rect x="42.0849%" y="613" width="0.0309%" height="15" fill="rgb(215,41,35)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="42.0849%" y="597" width="0.0309%" height="15" fill="rgb(220,44,45)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="42.0849%" y="581" width="0.0309%" height="15" fill="rgb(253,197,36)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="591.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="42.0849%" y="565" width="0.0309%" height="15" fill="rgb(245,225,54)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="575.50"></text></g><g><title>__rdl_alloc (6 samples, 0.03%)</title><rect x="42.0849%" y="549" width="0.0309%" height="15" fill="rgb(239,94,37)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.03%)</title><rect x="42.0849%" y="533" width="0.0309%" height="15" fill="rgb(242,217,10)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="543.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="42.0849%" y="517" width="0.0309%" height="15" fill="rgb(250,193,7)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="527.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="42.0849%" y="501" width="0.0309%" height="15" fill="rgb(230,104,19)" fg:x="8167" fg:w="6"/><text x="42.3349%" y="511.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::new (4 samples, 0.02%)</title><rect x="42.1158%" y="661" width="0.0206%" height="15" fill="rgb(230,181,4)" fg:x="8173" fg:w="4"/><text x="42.3658%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="42.1158%" y="645" width="0.0206%" height="15" fill="rgb(216,219,49)" fg:x="8173" fg:w="4"/><text x="42.3658%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="42.1158%" y="629" width="0.0206%" height="15" fill="rgb(254,144,0)" fg:x="8173" fg:w="4"/><text x="42.3658%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="42.1210%" y="613" width="0.0155%" height="15" fill="rgb(205,209,38)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="42.1210%" y="597" width="0.0155%" height="15" fill="rgb(240,21,42)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="42.1210%" y="581" width="0.0155%" height="15" fill="rgb(241,132,3)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="42.1210%" y="565" width="0.0155%" height="15" fill="rgb(225,14,2)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="42.1210%" y="549" width="0.0155%" height="15" fill="rgb(210,141,35)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="42.1210%" y="533" width="0.0155%" height="15" fill="rgb(251,14,44)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="42.1210%" y="517" width="0.0155%" height="15" fill="rgb(247,48,18)" fg:x="8174" fg:w="3"/><text x="42.3710%" y="527.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (10 samples, 0.05%)</title><rect x="42.1365%" y="661" width="0.0515%" height="15" fill="rgb(225,0,40)" fg:x="8177" fg:w="10"/><text x="42.3865%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (9 samples, 0.05%)</title><rect x="42.1416%" y="645" width="0.0464%" height="15" fill="rgb(221,31,33)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.05%)</title><rect x="42.1416%" y="629" width="0.0464%" height="15" fill="rgb(237,42,40)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.05%)</title><rect x="42.1416%" y="613" width="0.0464%" height="15" fill="rgb(233,51,29)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.05%)</title><rect x="42.1416%" y="597" width="0.0464%" height="15" fill="rgb(226,58,20)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.05%)</title><rect x="42.1416%" y="581" width="0.0464%" height="15" fill="rgb(208,98,7)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="591.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.05%)</title><rect x="42.1416%" y="565" width="0.0464%" height="15" fill="rgb(228,143,44)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="575.50"></text></g><g><title>__rdl_alloc (9 samples, 0.05%)</title><rect x="42.1416%" y="549" width="0.0464%" height="15" fill="rgb(246,55,38)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.05%)</title><rect x="42.1416%" y="533" width="0.0464%" height="15" fill="rgb(247,87,16)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="543.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.05%)</title><rect x="42.1416%" y="517" width="0.0464%" height="15" fill="rgb(234,129,42)" fg:x="8178" fg:w="9"/><text x="42.3916%" y="527.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="42.1519%" y="501" width="0.0361%" height="15" fill="rgb(220,82,16)" fg:x="8180" fg:w="7"/><text x="42.4019%" y="511.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (37 samples, 0.19%)</title><rect x="42.0231%" y="725" width="0.1907%" height="15" fill="rgb(211,88,4)" fg:x="8155" fg:w="37"/><text x="42.2731%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (37 samples, 0.19%)</title><rect x="42.0231%" y="709" width="0.1907%" height="15" fill="rgb(248,151,21)" fg:x="8155" fg:w="37"/><text x="42.2731%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (37 samples, 0.19%)</title><rect x="42.0231%" y="693" width="0.1907%" height="15" fill="rgb(238,163,6)" fg:x="8155" fg:w="37"/><text x="42.2731%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (37 samples, 0.19%)</title><rect x="42.0231%" y="677" width="0.1907%" height="15" fill="rgb(209,183,11)" fg:x="8155" fg:w="37"/><text x="42.2731%" y="687.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::new_plain (5 samples, 0.03%)</title><rect x="42.1880%" y="661" width="0.0258%" height="15" fill="rgb(219,37,20)" fg:x="8187" fg:w="5"/><text x="42.4380%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned (5 samples, 0.03%)</title><rect x="42.1880%" y="645" width="0.0258%" height="15" fill="rgb(210,158,4)" fg:x="8187" fg:w="5"/><text x="42.4380%" y="655.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_db (57 samples, 0.29%)</title><rect x="41.9406%" y="741" width="0.2937%" height="15" fill="rgb(221,167,53)" fg:x="8139" fg:w="57"/><text x="42.1906%" y="751.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::with_db (4 samples, 0.02%)</title><rect x="42.2137%" y="725" width="0.0206%" height="15" fill="rgb(237,151,45)" fg:x="8192" fg:w="4"/><text x="42.4637%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2395%" y="709" width="0.0103%" height="15" fill="rgb(231,39,3)" fg:x="8197" fg:w="2"/><text x="42.4895%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = ()&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2395%" y="693" width="0.0103%" height="15" fill="rgb(212,167,28)" fg:x="8197" fg:w="2"/><text x="42.4895%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.2395%" y="677" width="0.0103%" height="15" fill="rgb(232,178,8)" fg:x="8197" fg:w="2"/><text x="42.4895%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2498%" y="709" width="0.0103%" height="15" fill="rgb(225,151,20)" fg:x="8199" fg:w="2"/><text x="42.4998%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = revm::context::context_precompiles::ContextPrecompiles&lt;zilliqa::exec::PendingState&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2498%" y="693" width="0.0103%" height="15" fill="rgb(238,3,37)" fg:x="8199" fg:w="2"/><text x="42.4998%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.2498%" y="677" width="0.0103%" height="15" fill="rgb(251,147,42)" fg:x="8199" fg:w="2"/><text x="42.4998%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,(),zilliqa::exec::PendingState&gt;&gt; (7 samples, 0.04%)</title><rect x="42.2344%" y="725" width="0.0361%" height="15" fill="rgb(208,173,10)" fg:x="8196" fg:w="7"/><text x="42.4844%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2601%" y="709" width="0.0103%" height="15" fill="rgb(246,225,4)" fg:x="8201" fg:w="2"/><text x="42.5101%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;u64,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2601%" y="693" width="0.0103%" height="15" fill="rgb(248,102,6)" fg:x="8201" fg:w="2"/><text x="42.5101%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.2601%" y="677" width="0.0103%" height="15" fill="rgb(232,6,21)" fg:x="8201" fg:w="2"/><text x="42.5101%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,&amp;mut revm::frame::Frame,revm_interpreter::interpreter_action::create_outcome::CreateOutcome)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="42.2704%" y="709" width="0.0103%" height="15" fill="rgb(221,179,22)" fg:x="8203" fg:w="2"/><text x="42.5204%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.2704%" y="693" width="0.0103%" height="15" fill="rgb(252,50,20)" fg:x="8203" fg:w="2"/><text x="42.5204%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="42.2704%" y="677" width="0.0103%" height="15" fill="rgb(222,56,38)" fg:x="8203" fg:w="2"/><text x="42.5204%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="42.2704%" y="661" width="0.0103%" height="15" fill="rgb(206,193,29)" fg:x="8203" fg:w="2"/><text x="42.5204%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="42.2807%" y="677" width="0.0155%" height="15" fill="rgb(239,192,45)" fg:x="8205" fg:w="3"/><text x="42.5307%" y="687.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="42.2807%" y="661" width="0.0155%" height="15" fill="rgb(254,18,36)" fg:x="8205" fg:w="3"/><text x="42.5307%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.02%)</title><rect x="42.2807%" y="645" width="0.0155%" height="15" fill="rgb(221,127,11)" fg:x="8205" fg:w="3"/><text x="42.5307%" y="655.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="42.2807%" y="629" width="0.0155%" height="15" fill="rgb(234,146,35)" fg:x="8205" fg:w="3"/><text x="42.5307%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="42.2807%" y="613" width="0.0155%" height="15" fill="rgb(254,201,37)" fg:x="8205" fg:w="3"/><text x="42.5307%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="42.2807%" y="597" width="0.0155%" height="15" fill="rgb(211,202,23)" fg:x="8205" fg:w="3"/><text x="42.5307%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),zilliqa::exec::PendingState&gt;&gt; (6 samples, 0.03%)</title><rect x="42.2704%" y="725" width="0.0309%" height="15" fill="rgb(237,91,2)" fg:x="8203" fg:w="6"/><text x="42.5204%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;,alloc::boxed::Box&lt;revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs&gt;)&gt;+Output = core::result::Result&lt;revm::frame::FrameOrResult,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="42.2807%" y="709" width="0.0206%" height="15" fill="rgb(226,228,36)" fg:x="8205" fg:w="4"/><text x="42.5307%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="42.2807%" y="693" width="0.0206%" height="15" fill="rgb(213,63,50)" fg:x="8205" fg:w="4"/><text x="42.5307%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.04%)</title><rect x="42.3271%" y="677" width="0.0361%" height="15" fill="rgb(235,194,19)" fg:x="8214" fg:w="7"/><text x="42.5771%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="42.3735%" y="517" width="0.0103%" height="15" fill="rgb(207,204,18)" fg:x="8223" fg:w="2"/><text x="42.6235%" y="527.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_external_context (30 samples, 0.15%)</title><rect x="42.2344%" y="741" width="0.1546%" height="15" fill="rgb(248,8,7)" fg:x="8196" fg:w="30"/><text x="42.4844%" y="751.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (17 samples, 0.09%)</title><rect x="42.3014%" y="725" width="0.0876%" height="15" fill="rgb(223,145,47)" fg:x="8209" fg:w="17"/><text x="42.5514%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (17 samples, 0.09%)</title><rect x="42.3014%" y="709" width="0.0876%" height="15" fill="rgb(228,84,11)" fg:x="8209" fg:w="17"/><text x="42.5514%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (17 samples, 0.09%)</title><rect x="42.3014%" y="693" width="0.0876%" height="15" fill="rgb(218,76,45)" fg:x="8209" fg:w="17"/><text x="42.5514%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (5 samples, 0.03%)</title><rect x="42.3632%" y="677" width="0.0258%" height="15" fill="rgb(223,80,15)" fg:x="8221" fg:w="5"/><text x="42.6132%" y="687.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (3 samples, 0.02%)</title><rect x="42.3735%" y="661" width="0.0155%" height="15" fill="rgb(219,218,33)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="42.3735%" y="645" width="0.0155%" height="15" fill="rgb(208,51,11)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="42.3735%" y="629" width="0.0155%" height="15" fill="rgb(229,165,39)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="42.3735%" y="613" width="0.0155%" height="15" fill="rgb(241,100,24)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="42.3735%" y="597" width="0.0155%" height="15" fill="rgb(228,14,23)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="42.3735%" y="581" width="0.0155%" height="15" fill="rgb(247,116,52)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="42.3735%" y="565" width="0.0155%" height="15" fill="rgb(216,149,33)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="42.3735%" y="549" width="0.0155%" height="15" fill="rgb(238,142,29)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="42.3735%" y="533" width="0.0155%" height="15" fill="rgb(224,83,40)" fg:x="8223" fg:w="3"/><text x="42.6235%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="42.3890%" y="709" width="0.0103%" height="15" fill="rgb(234,165,11)" fg:x="8226" fg:w="2"/><text x="42.6390%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = ()&gt;&gt; (2 samples, 0.01%)</title><rect x="42.3890%" y="693" width="0.0103%" height="15" fill="rgb(215,96,23)" fg:x="8226" fg:w="2"/><text x="42.6390%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.3890%" y="677" width="0.0103%" height="15" fill="rgb(233,179,26)" fg:x="8226" fg:w="2"/><text x="42.6390%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="42.3890%" y="661" width="0.0103%" height="15" fill="rgb(225,129,33)" fg:x="8226" fg:w="2"/><text x="42.6390%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (2 samples, 0.01%)</title><rect x="42.3993%" y="709" width="0.0103%" height="15" fill="rgb(237,49,13)" fg:x="8228" fg:w="2"/><text x="42.6493%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (5 samples, 0.03%)</title><rect x="42.3890%" y="725" width="0.0258%" height="15" fill="rgb(211,3,31)" fg:x="8226" fg:w="5"/><text x="42.6390%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = core::result::Result&lt;revm_interpreter::interpreter_action::create_outcome::CreateOutcome,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="42.4147%" y="709" width="0.0155%" height="15" fill="rgb(216,152,19)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="42.4147%" y="693" width="0.0155%" height="15" fill="rgb(251,121,35)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="42.4147%" y="677" width="0.0155%" height="15" fill="rgb(210,217,47)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="687.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="42.4147%" y="661" width="0.0155%" height="15" fill="rgb(244,116,22)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.02%)</title><rect x="42.4147%" y="645" width="0.0155%" height="15" fill="rgb(228,17,21)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="655.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="42.4147%" y="629" width="0.0155%" height="15" fill="rgb(240,149,34)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="42.4147%" y="613" width="0.0155%" height="15" fill="rgb(208,125,47)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="42.4147%" y="597" width="0.0155%" height="15" fill="rgb(249,186,39)" fg:x="8231" fg:w="3"/><text x="42.6647%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (6 samples, 0.03%)</title><rect x="42.4147%" y="725" width="0.0309%" height="15" fill="rgb(240,220,33)" fg:x="8231" fg:w="6"/><text x="42.6647%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,alloc::boxed::Box&lt;revm::frame::EOFCreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = core::result::Result&lt;revm_interpreter::interpreter_action::create_outcome::CreateOutcome,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="42.4302%" y="709" width="0.0155%" height="15" fill="rgb(243,110,23)" fg:x="8234" fg:w="3"/><text x="42.6802%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="42.4302%" y="693" width="0.0155%" height="15" fill="rgb(219,163,46)" fg:x="8234" fg:w="3"/><text x="42.6802%" y="703.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="42.4302%" y="677" width="0.0155%" height="15" fill="rgb(216,126,30)" fg:x="8234" fg:w="3"/><text x="42.6802%" y="687.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="42.4302%" y="661" width="0.0155%" height="15" fill="rgb(208,139,11)" fg:x="8234" fg:w="3"/><text x="42.6802%" y="671.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (3 samples, 0.02%)</title><rect x="42.4456%" y="661" width="0.0155%" height="15" fill="rgb(213,118,36)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="42.4456%" y="645" width="0.0155%" height="15" fill="rgb(226,43,17)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="42.4456%" y="629" width="0.0155%" height="15" fill="rgb(254,217,4)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="42.4456%" y="613" width="0.0155%" height="15" fill="rgb(210,134,47)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="42.4456%" y="597" width="0.0155%" height="15" fill="rgb(237,24,49)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="42.4456%" y="581" width="0.0155%" height="15" fill="rgb(251,39,46)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="42.4456%" y="565" width="0.0155%" height="15" fill="rgb(251,220,3)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="575.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="42.4456%" y="549" width="0.0155%" height="15" fill="rgb(228,105,12)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="42.4456%" y="533" width="0.0155%" height="15" fill="rgb(215,196,1)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="42.4456%" y="517" width="0.0155%" height="15" fill="rgb(214,33,39)" fg:x="8237" fg:w="3"/><text x="42.6956%" y="527.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_handler_cfg (16 samples, 0.08%)</title><rect x="42.3890%" y="741" width="0.0824%" height="15" fill="rgb(220,19,52)" fg:x="8226" fg:w="16"/><text x="42.6390%" y="751.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (5 samples, 0.03%)</title><rect x="42.4456%" y="725" width="0.0258%" height="15" fill="rgb(221,78,38)" fg:x="8237" fg:w="5"/><text x="42.6956%" y="735.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (5 samples, 0.03%)</title><rect x="42.4456%" y="709" width="0.0258%" height="15" fill="rgb(253,30,16)" fg:x="8237" fg:w="5"/><text x="42.6956%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (5 samples, 0.03%)</title><rect x="42.4456%" y="693" width="0.0258%" height="15" fill="rgb(242,65,0)" fg:x="8237" fg:w="5"/><text x="42.6956%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (5 samples, 0.03%)</title><rect x="42.4456%" y="677" width="0.0258%" height="15" fill="rgb(235,201,12)" fg:x="8237" fg:w="5"/><text x="42.6956%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="42.4714%" y="645" width="0.0103%" height="15" fill="rgb(233,161,9)" fg:x="8242" fg:w="2"/><text x="42.7214%" y="655.50"></text></g><g><title>&lt;revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt; as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="42.4714%" y="709" width="0.0155%" height="15" fill="rgb(241,207,41)" fg:x="8242" fg:w="3"/><text x="42.7214%" y="719.50"></text></g><g><title>revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;::new_empty (3 samples, 0.02%)</title><rect x="42.4714%" y="693" width="0.0155%" height="15" fill="rgb(212,69,46)" fg:x="8242" fg:w="3"/><text x="42.7214%" y="703.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::new (3 samples, 0.02%)</title><rect x="42.4714%" y="677" width="0.0155%" height="15" fill="rgb(239,69,45)" fg:x="8242" fg:w="3"/><text x="42.7214%" y="687.50"></text></g><g><title>revm::context::inner_evm_context::InnerEvmContext&lt;DB&gt;::new (3 samples, 0.02%)</title><rect x="42.4714%" y="661" width="0.0155%" height="15" fill="rgb(242,117,48)" fg:x="8242" fg:w="3"/><text x="42.7214%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.15%)</title><rect x="42.4869%" y="709" width="0.1546%" height="15" fill="rgb(228,41,36)" fg:x="8245" fg:w="30"/><text x="42.7369%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="42.6415%" y="661" width="0.0258%" height="15" fill="rgb(212,3,32)" fg:x="8275" fg:w="5"/><text x="42.8915%" y="671.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (13 samples, 0.07%)</title><rect x="42.6672%" y="645" width="0.0670%" height="15" fill="rgb(233,41,49)" fg:x="8280" fg:w="13"/><text x="42.9172%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.07%)</title><rect x="42.6672%" y="629" width="0.0670%" height="15" fill="rgb(252,170,49)" fg:x="8280" fg:w="13"/><text x="42.9172%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.07%)</title><rect x="42.6672%" y="613" width="0.0670%" height="15" fill="rgb(229,53,26)" fg:x="8280" fg:w="13"/><text x="42.9172%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.06%)</title><rect x="42.6724%" y="597" width="0.0618%" height="15" fill="rgb(217,157,12)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.06%)</title><rect x="42.6724%" y="581" width="0.0618%" height="15" fill="rgb(227,17,9)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.06%)</title><rect x="42.6724%" y="565" width="0.0618%" height="15" fill="rgb(218,84,12)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="575.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.06%)</title><rect x="42.6724%" y="549" width="0.0618%" height="15" fill="rgb(212,79,24)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="559.50"></text></g><g><title>__rdl_alloc (12 samples, 0.06%)</title><rect x="42.6724%" y="533" width="0.0618%" height="15" fill="rgb(217,222,37)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.06%)</title><rect x="42.6724%" y="517" width="0.0618%" height="15" fill="rgb(246,208,8)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="527.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.06%)</title><rect x="42.6724%" y="501" width="0.0618%" height="15" fill="rgb(244,133,10)" fg:x="8281" fg:w="12"/><text x="42.9224%" y="511.50"></text></g><g><title>_int_malloc (11 samples, 0.06%)</title><rect x="42.6775%" y="485" width="0.0567%" height="15" fill="rgb(209,219,41)" fg:x="8282" fg:w="11"/><text x="42.9275%" y="495.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (7 samples, 0.04%)</title><rect x="42.7342%" y="645" width="0.0361%" height="15" fill="rgb(253,175,45)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="42.7342%" y="629" width="0.0361%" height="15" fill="rgb(235,100,37)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="42.7342%" y="613" width="0.0361%" height="15" fill="rgb(225,87,19)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.04%)</title><rect x="42.7342%" y="597" width="0.0361%" height="15" fill="rgb(217,152,17)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="42.7342%" y="581" width="0.0361%" height="15" fill="rgb(235,72,13)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="42.7342%" y="565" width="0.0361%" height="15" fill="rgb(233,140,18)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="575.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="42.7342%" y="549" width="0.0361%" height="15" fill="rgb(207,212,28)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="559.50"></text></g><g><title>__rdl_alloc (7 samples, 0.04%)</title><rect x="42.7342%" y="533" width="0.0361%" height="15" fill="rgb(220,130,25)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.04%)</title><rect x="42.7342%" y="517" width="0.0361%" height="15" fill="rgb(205,55,34)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="527.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="42.7342%" y="501" width="0.0361%" height="15" fill="rgb(237,54,35)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="511.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="42.7342%" y="485" width="0.0361%" height="15" fill="rgb(208,67,23)" fg:x="8293" fg:w="7"/><text x="42.9842%" y="495.50"></text></g><g><title>_int_malloc (12 samples, 0.06%)</title><rect x="42.7754%" y="485" width="0.0618%" height="15" fill="rgb(206,207,50)" fg:x="8301" fg:w="12"/><text x="43.0254%" y="495.50"></text></g><g><title>revm::evm::Evm&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;::builder (72 samples, 0.37%)</title><rect x="42.4714%" y="741" width="0.3710%" height="15" fill="rgb(213,211,42)" fg:x="8242" fg:w="72"/><text x="42.7214%" y="751.50"></text></g><g><title>&lt;revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt; as core::default::Default&gt;::default (72 samples, 0.37%)</title><rect x="42.4714%" y="725" width="0.3710%" height="15" fill="rgb(252,197,50)" fg:x="8242" fg:w="72"/><text x="42.7214%" y="735.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (39 samples, 0.20%)</title><rect x="42.6415%" y="709" width="0.2010%" height="15" fill="rgb(251,211,41)" fg:x="8275" fg:w="39"/><text x="42.8915%" y="719.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::new (39 samples, 0.20%)</title><rect x="42.6415%" y="693" width="0.2010%" height="15" fill="rgb(229,211,5)" fg:x="8275" fg:w="39"/><text x="42.8915%" y="703.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (39 samples, 0.20%)</title><rect x="42.6415%" y="677" width="0.2010%" height="15" fill="rgb(239,36,31)" fg:x="8275" fg:w="39"/><text x="42.8915%" y="687.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (34 samples, 0.18%)</title><rect x="42.6672%" y="661" width="0.1752%" height="15" fill="rgb(248,67,31)" fg:x="8280" fg:w="34"/><text x="42.9172%" y="671.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (14 samples, 0.07%)</title><rect x="42.7703%" y="645" width="0.0721%" height="15" fill="rgb(249,55,44)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (14 samples, 0.07%)</title><rect x="42.7703%" y="629" width="0.0721%" height="15" fill="rgb(216,82,12)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.07%)</title><rect x="42.7703%" y="613" width="0.0721%" height="15" fill="rgb(242,174,1)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.07%)</title><rect x="42.7703%" y="597" width="0.0721%" height="15" fill="rgb(208,120,29)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.07%)</title><rect x="42.7703%" y="581" width="0.0721%" height="15" fill="rgb(221,105,43)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.07%)</title><rect x="42.7703%" y="565" width="0.0721%" height="15" fill="rgb(234,124,22)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="575.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.07%)</title><rect x="42.7703%" y="549" width="0.0721%" height="15" fill="rgb(212,23,30)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="559.50"></text></g><g><title>__rdl_alloc (14 samples, 0.07%)</title><rect x="42.7703%" y="533" width="0.0721%" height="15" fill="rgb(219,122,53)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (14 samples, 0.07%)</title><rect x="42.7703%" y="517" width="0.0721%" height="15" fill="rgb(248,84,24)" fg:x="8300" fg:w="14"/><text x="43.0203%" y="527.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.07%)</title><rect x="42.7754%" y="501" width="0.0670%" height="15" fill="rgb(245,115,18)" fg:x="8301" fg:w="13"/><text x="43.0254%" y="511.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="42.8424%" y="709" width="0.0103%" height="15" fill="rgb(227,176,51)" fg:x="8314" fg:w="2"/><text x="43.0924%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="42.8424%" y="693" width="0.0103%" height="15" fill="rgb(229,63,42)" fg:x="8314" fg:w="2"/><text x="43.0924%" y="703.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.8424%" y="677" width="0.0103%" height="15" fill="rgb(247,202,24)" fg:x="8314" fg:w="2"/><text x="43.0924%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="42.8424%" y="661" width="0.0103%" height="15" fill="rgb(244,173,20)" fg:x="8314" fg:w="2"/><text x="43.0924%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="42.8424%" y="645" width="0.0103%" height="15" fill="rgb(242,81,47)" fg:x="8314" fg:w="2"/><text x="43.0924%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="42.8424%" y="725" width="0.0206%" height="15" fill="rgb(231,185,54)" fg:x="8314" fg:w="4"/><text x="43.0924%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = ()&gt; (2 samples, 0.01%)</title><rect x="42.8527%" y="709" width="0.0103%" height="15" fill="rgb(243,55,32)" fg:x="8316" fg:w="2"/><text x="43.1027%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;revm::handler::register::HandleRegisters&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="42.8733%" y="709" width="0.0103%" height="15" fill="rgb(208,167,19)" fg:x="8320" fg:w="2"/><text x="43.1233%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (3 samples, 0.02%)</title><rect x="42.8836%" y="709" width="0.0155%" height="15" fill="rgb(231,72,35)" fg:x="8322" fg:w="3"/><text x="43.1336%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,revm::frame::FrameResult)&gt;+Output = core::result::Result&lt;revm_primitives::result::ResultAndState,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="42.8888%" y="693" width="0.0103%" height="15" fill="rgb(250,173,51)" fg:x="8323" fg:w="2"/><text x="43.1388%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="42.8888%" y="677" width="0.0103%" height="15" fill="rgb(209,5,22)" fg:x="8323" fg:w="2"/><text x="43.1388%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="42.8888%" y="661" width="0.0103%" height="15" fill="rgb(250,174,19)" fg:x="8323" fg:w="2"/><text x="43.1388%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="42.8888%" y="645" width="0.0103%" height="15" fill="rgb(217,3,49)" fg:x="8323" fg:w="2"/><text x="43.1388%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (85 samples, 0.44%)</title><rect x="42.8682%" y="725" width="0.4380%" height="15" fill="rgb(218,225,5)" fg:x="8319" fg:w="85"/><text x="43.1182%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::opcode::tables::InstructionTables&lt;revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;&gt;&gt; (78 samples, 0.40%)</title><rect x="42.9043%" y="709" width="0.4019%" height="15" fill="rgb(236,89,11)" fg:x="8326" fg:w="78"/><text x="43.1543%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt; (78 samples, 0.40%)</title><rect x="42.9043%" y="693" width="0.4019%" height="15" fill="rgb(206,33,28)" fg:x="8326" fg:w="78"/><text x="43.1543%" y="703.50"></text></g><g><title> 256]&gt; (78 samples, 0.40%)</title><rect x="42.9043%" y="677" width="0.4019%" height="15" fill="rgb(241,56,42)" fg:x="8326" fg:w="78"/><text x="43.1543%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt;&gt; (78 samples, 0.40%)</title><rect x="42.9043%" y="661" width="0.4019%" height="15" fill="rgb(222,44,11)" fg:x="8326" fg:w="78"/><text x="43.1543%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.40%)</title><rect x="42.9043%" y="645" width="0.4019%" height="15" fill="rgb(234,111,20)" fg:x="8326" fg:w="78"/><text x="43.1543%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (69 samples, 0.36%)</title><rect x="42.9506%" y="629" width="0.3556%" height="15" fill="rgb(237,77,6)" fg:x="8335" fg:w="69"/><text x="43.2006%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (69 samples, 0.36%)</title><rect x="42.9506%" y="613" width="0.3556%" height="15" fill="rgb(235,111,23)" fg:x="8335" fg:w="69"/><text x="43.2006%" y="623.50"></text></g><g><title>__rdl_dealloc (69 samples, 0.36%)</title><rect x="42.9506%" y="597" width="0.3556%" height="15" fill="rgb(251,135,29)" fg:x="8335" fg:w="69"/><text x="43.2006%" y="607.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (69 samples, 0.36%)</title><rect x="42.9506%" y="581" width="0.3556%" height="15" fill="rgb(217,57,1)" fg:x="8335" fg:w="69"/><text x="43.2006%" y="591.50"></text></g><g><title>__GI___libc_free (69 samples, 0.36%)</title><rect x="42.9506%" y="565" width="0.3556%" height="15" fill="rgb(249,119,31)" fg:x="8335" fg:w="69"/><text x="43.2006%" y="575.50"></text></g><g><title>_int_free (36 samples, 0.19%)</title><rect x="43.1207%" y="549" width="0.1855%" height="15" fill="rgb(233,164,33)" fg:x="8368" fg:w="36"/><text x="43.3707%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="43.3113%" y="613" width="0.0103%" height="15" fill="rgb(250,217,43)" fg:x="8405" fg:w="2"/><text x="43.5613%" y="623.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (2 samples, 0.01%)</title><rect x="43.3113%" y="597" width="0.0103%" height="15" fill="rgb(232,154,50)" fg:x="8405" fg:w="2"/><text x="43.5613%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="43.3113%" y="581" width="0.0103%" height="15" fill="rgb(227,190,8)" fg:x="8405" fg:w="2"/><text x="43.5613%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm::frame::Frame,&amp;mut revm_interpreter::interpreter::shared_memory::SharedMemory,revm_interpreter::interpreter_action::call_outcome::CallOutcome)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="43.3062%" y="709" width="0.0206%" height="15" fill="rgb(209,217,32)" fg:x="8404" fg:w="4"/><text x="43.5562%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="43.3062%" y="693" width="0.0206%" height="15" fill="rgb(243,203,50)" fg:x="8404" fg:w="4"/><text x="43.5562%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="43.3113%" y="677" width="0.0155%" height="15" fill="rgb(232,152,27)" fg:x="8405" fg:w="3"/><text x="43.5613%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = ()&gt; (3 samples, 0.02%)</title><rect x="43.3113%" y="661" width="0.0155%" height="15" fill="rgb(240,34,29)" fg:x="8405" fg:w="3"/><text x="43.5613%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::inspector::handler_register::inspector_handle_register&lt;zilliqa::exec::PendingState,&amp;mut zilliqa::inspector::TouchedAddressInspector&gt;::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="43.3113%" y="645" width="0.0155%" height="15" fill="rgb(215,185,52)" fg:x="8405" fg:w="3"/><text x="43.5613%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;revm_interpreter::interpreter_action::call_inputs::CallInputs&gt;&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="43.3113%" y="629" width="0.0155%" height="15" fill="rgb(240,89,49)" fg:x="8405" fg:w="3"/><text x="43.5613%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;revm_interpreter::interpreter_action::call_inputs::CallInputs&gt;&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="43.3320%" y="629" width="0.0103%" height="15" fill="rgb(225,12,52)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="43.3320%" y="613" width="0.0103%" height="15" fill="rgb(239,128,45)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="623.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (2 samples, 0.01%)</title><rect x="43.3320%" y="597" width="0.0103%" height="15" fill="rgb(211,78,47)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="43.3320%" y="581" width="0.0103%" height="15" fill="rgb(232,31,21)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="43.3320%" y="565" width="0.0103%" height="15" fill="rgb(222,168,14)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="575.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="43.3320%" y="549" width="0.0103%" height="15" fill="rgb(209,128,24)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="559.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="43.3320%" y="533" width="0.0103%" height="15" fill="rgb(249,35,13)" fg:x="8409" fg:w="2"/><text x="43.5820%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm::frame::FrameResult)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="43.3268%" y="709" width="0.0206%" height="15" fill="rgb(218,7,2)" fg:x="8408" fg:w="4"/><text x="43.5768%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="43.3268%" y="693" width="0.0206%" height="15" fill="rgb(238,107,27)" fg:x="8408" fg:w="4"/><text x="43.5768%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="43.3268%" y="677" width="0.0206%" height="15" fill="rgb(217,88,38)" fg:x="8408" fg:w="4"/><text x="43.5768%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;revm::inspector::noop::NoOpInspector,zilliqa::exec::PendingState&gt;,&amp;mut revm_interpreter::gas::Gas,i64)&gt;+Output = ()&gt; (4 samples, 0.02%)</title><rect x="43.3268%" y="661" width="0.0206%" height="15" fill="rgb(230,207,0)" fg:x="8408" fg:w="4"/><text x="43.5768%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::inspector::handler_register::inspector_handle_register&lt;zilliqa::exec::PendingState,&amp;mut zilliqa::inspector::TouchedAddressInspector&gt;::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="43.3320%" y="645" width="0.0155%" height="15" fill="rgb(249,64,54)" fg:x="8409" fg:w="3"/><text x="43.5820%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (10 samples, 0.05%)</title><rect x="43.3062%" y="725" width="0.0515%" height="15" fill="rgb(231,7,11)" fg:x="8404" fg:w="10"/><text x="43.5562%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = core::result::Result&lt;revm_interpreter::interpreter_action::create_outcome::CreateOutcome,revm_primitives::result::EVMError&lt;zilliqa::exec::DatabaseError&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="43.3474%" y="709" width="0.0103%" height="15" fill="rgb(205,149,21)" fg:x="8412" fg:w="2"/><text x="43.5974%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="43.3474%" y="693" width="0.0103%" height="15" fill="rgb(215,126,34)" fg:x="8412" fg:w="2"/><text x="43.5974%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="43.3474%" y="677" width="0.0103%" height="15" fill="rgb(241,132,45)" fg:x="8412" fg:w="2"/><text x="43.5974%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="43.3474%" y="661" width="0.0103%" height="15" fill="rgb(252,69,32)" fg:x="8412" fg:w="2"/><text x="43.5974%" y="671.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::into_db_and_env_with_handler_cfg (102 samples, 0.53%)</title><rect x="42.8424%" y="741" width="0.5256%" height="15" fill="rgb(232,204,19)" fg:x="8314" fg:w="102"/><text x="43.0924%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::journaled_state::JournaledState&gt; (2 samples, 0.01%)</title><rect x="43.3577%" y="725" width="0.0103%" height="15" fill="rgb(249,15,47)" fg:x="8414" fg:w="2"/><text x="43.6077%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::journaled_state::JournaledState&gt; (2 samples, 0.01%)</title><rect x="43.3732%" y="645" width="0.0103%" height="15" fill="rgb(209,227,23)" fg:x="8417" fg:w="2"/><text x="43.6232%" y="655.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::clear (4 samples, 0.02%)</title><rect x="43.3680%" y="725" width="0.0206%" height="15" fill="rgb(248,92,24)" fg:x="8416" fg:w="4"/><text x="43.6180%" y="735.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::clear (4 samples, 0.02%)</title><rect x="43.3680%" y="709" width="0.0206%" height="15" fill="rgb(247,59,2)" fg:x="8416" fg:w="4"/><text x="43.6180%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="43.3680%" y="693" width="0.0206%" height="15" fill="rgb(221,30,5)" fg:x="8416" fg:w="4"/><text x="43.6180%" y="703.50"></text></g><g><title>revm::handler::mainnet::post_execution::clear (4 samples, 0.02%)</title><rect x="43.3680%" y="677" width="0.0206%" height="15" fill="rgb(208,108,53)" fg:x="8416" fg:w="4"/><text x="43.6180%" y="687.50"></text></g><g><title>revm::journaled_state::JournaledState::clear (4 samples, 0.02%)</title><rect x="43.3680%" y="661" width="0.0206%" height="15" fill="rgb(211,183,26)" fg:x="8416" fg:w="4"/><text x="43.6180%" y="671.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::env (3 samples, 0.02%)</title><rect x="43.3886%" y="709" width="0.0155%" height="15" fill="rgb(232,132,4)" fg:x="8420" fg:w="3"/><text x="43.6386%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="43.3886%" y="693" width="0.0155%" height="15" fill="rgb(253,128,37)" fg:x="8420" fg:w="3"/><text x="43.6386%" y="703.50"></text></g><g><title>revm::handler::mainnet::validation::validate_env (2 samples, 0.01%)</title><rect x="43.3938%" y="677" width="0.0103%" height="15" fill="rgb(221,58,24)" fg:x="8421" fg:w="2"/><text x="43.6438%" y="687.50"></text></g><g><title>revm_primitives::env::Env::validate_tx (2 samples, 0.01%)</title><rect x="43.3938%" y="661" width="0.0103%" height="15" fill="rgb(230,54,45)" fg:x="8421" fg:w="2"/><text x="43.6438%" y="671.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (2 samples, 0.01%)</title><rect x="43.4453%" y="565" width="0.0103%" height="15" fill="rgb(254,21,18)" fg:x="8431" fg:w="2"/><text x="43.6953%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="43.4453%" y="549" width="0.0103%" height="15" fill="rgb(221,108,0)" fg:x="8431" fg:w="2"/><text x="43.6953%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="43.4453%" y="533" width="0.0103%" height="15" fill="rgb(206,95,1)" fg:x="8431" fg:w="2"/><text x="43.6953%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="43.4453%" y="517" width="0.0103%" height="15" fill="rgb(237,52,5)" fg:x="8431" fg:w="2"/><text x="43.6953%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="43.4453%" y="501" width="0.0103%" height="15" fill="rgb(218,150,34)" fg:x="8431" fg:w="2"/><text x="43.6953%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="43.4659%" y="501" width="0.0361%" height="15" fill="rgb(235,194,28)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="43.4659%" y="485" width="0.0361%" height="15" fill="rgb(245,92,18)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="43.4659%" y="469" width="0.0361%" height="15" fill="rgb(253,203,53)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="43.4659%" y="453" width="0.0361%" height="15" fill="rgb(249,185,47)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="43.4659%" y="437" width="0.0361%" height="15" fill="rgb(252,194,52)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="43.4659%" y="421" width="0.0361%" height="15" fill="rgb(210,53,36)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="43.4659%" y="405" width="0.0361%" height="15" fill="rgb(237,37,25)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="43.4659%" y="389" width="0.0361%" height="15" fill="rgb(242,116,27)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="399.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="43.4659%" y="373" width="0.0361%" height="15" fill="rgb(213,185,26)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="383.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="43.4659%" y="357" width="0.0361%" height="15" fill="rgb(225,204,8)" fg:x="8435" fg:w="7"/><text x="43.7159%" y="367.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="43.4659%" y="533" width="0.0412%" height="15" fill="rgb(254,111,37)" fg:x="8435" fg:w="8"/><text x="43.7159%" y="543.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="43.4659%" y="517" width="0.0412%" height="15" fill="rgb(242,35,9)" fg:x="8435" fg:w="8"/><text x="43.7159%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (6 samples, 0.03%)</title><rect x="43.5175%" y="373" width="0.0309%" height="15" fill="rgb(232,138,49)" fg:x="8445" fg:w="6"/><text x="43.7675%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.03%)</title><rect x="43.5175%" y="357" width="0.0309%" height="15" fill="rgb(247,56,4)" fg:x="8445" fg:w="6"/><text x="43.7675%" y="367.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.03%)</title><rect x="43.5175%" y="341" width="0.0309%" height="15" fill="rgb(226,179,17)" fg:x="8445" fg:w="6"/><text x="43.7675%" y="351.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.03%)</title><rect x="43.5175%" y="325" width="0.0309%" height="15" fill="rgb(216,163,45)" fg:x="8445" fg:w="6"/><text x="43.7675%" y="335.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="43.5123%" y="501" width="0.0412%" height="15" fill="rgb(211,157,3)" fg:x="8444" fg:w="8"/><text x="43.7623%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="43.5123%" y="485" width="0.0412%" height="15" fill="rgb(234,44,20)" fg:x="8444" fg:w="8"/><text x="43.7623%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="43.5175%" y="469" width="0.0361%" height="15" fill="rgb(254,138,23)" fg:x="8445" fg:w="7"/><text x="43.7675%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="43.5175%" y="453" width="0.0361%" height="15" fill="rgb(206,119,39)" fg:x="8445" fg:w="7"/><text x="43.7675%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="43.5175%" y="437" width="0.0361%" height="15" fill="rgb(231,105,52)" fg:x="8445" fg:w="7"/><text x="43.7675%" y="447.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="43.5175%" y="421" width="0.0361%" height="15" fill="rgb(250,20,5)" fg:x="8445" fg:w="7"/><text x="43.7675%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="43.5175%" y="405" width="0.0361%" height="15" fill="rgb(215,198,30)" fg:x="8445" fg:w="7"/><text x="43.7675%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="43.5175%" y="389" width="0.0361%" height="15" fill="rgb(246,142,8)" fg:x="8445" fg:w="7"/><text x="43.7675%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="43.5638%" y="325" width="0.0258%" height="15" fill="rgb(243,26,38)" fg:x="8454" fg:w="5"/><text x="43.8138%" y="335.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="43.5638%" y="309" width="0.0258%" height="15" fill="rgb(205,133,28)" fg:x="8454" fg:w="5"/><text x="43.8138%" y="319.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="43.5638%" y="293" width="0.0258%" height="15" fill="rgb(212,34,0)" fg:x="8454" fg:w="5"/><text x="43.8138%" y="303.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="43.5638%" y="277" width="0.0258%" height="15" fill="rgb(251,226,22)" fg:x="8454" fg:w="5"/><text x="43.8138%" y="287.50"></text></g><g><title>alloy_primitives::utils::keccak256 (6 samples, 0.03%)</title><rect x="43.5638%" y="453" width="0.0309%" height="15" fill="rgb(252,119,9)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (6 samples, 0.03%)</title><rect x="43.5638%" y="437" width="0.0309%" height="15" fill="rgb(213,150,50)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="43.5638%" y="421" width="0.0309%" height="15" fill="rgb(212,24,39)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="431.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="43.5638%" y="405" width="0.0309%" height="15" fill="rgb(213,46,39)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="415.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="43.5638%" y="389" width="0.0309%" height="15" fill="rgb(239,106,12)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="399.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="43.5638%" y="373" width="0.0309%" height="15" fill="rgb(249,229,21)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (6 samples, 0.03%)</title><rect x="43.5638%" y="357" width="0.0309%" height="15" fill="rgb(212,158,3)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (6 samples, 0.03%)</title><rect x="43.5638%" y="341" width="0.0309%" height="15" fill="rgb(253,26,48)" fg:x="8454" fg:w="6"/><text x="43.8138%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (9 samples, 0.05%)</title><rect x="43.5535%" y="501" width="0.0464%" height="15" fill="rgb(238,178,20)" fg:x="8452" fg:w="9"/><text x="43.8035%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (9 samples, 0.05%)</title><rect x="43.5535%" y="485" width="0.0464%" height="15" fill="rgb(208,86,15)" fg:x="8452" fg:w="9"/><text x="43.8035%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (7 samples, 0.04%)</title><rect x="43.5638%" y="469" width="0.0361%" height="15" fill="rgb(239,42,53)" fg:x="8454" fg:w="7"/><text x="43.8138%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256 (9 samples, 0.05%)</title><rect x="43.6051%" y="485" width="0.0464%" height="15" fill="rgb(245,226,8)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (9 samples, 0.05%)</title><rect x="43.6051%" y="469" width="0.0464%" height="15" fill="rgb(216,176,32)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (9 samples, 0.05%)</title><rect x="43.6051%" y="453" width="0.0464%" height="15" fill="rgb(231,186,21)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (9 samples, 0.05%)</title><rect x="43.6051%" y="437" width="0.0464%" height="15" fill="rgb(205,95,49)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (9 samples, 0.05%)</title><rect x="43.6051%" y="421" width="0.0464%" height="15" fill="rgb(217,145,8)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (9 samples, 0.05%)</title><rect x="43.6051%" y="405" width="0.0464%" height="15" fill="rgb(239,144,48)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (9 samples, 0.05%)</title><rect x="43.6051%" y="389" width="0.0464%" height="15" fill="rgb(214,189,23)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (9 samples, 0.05%)</title><rect x="43.6051%" y="373" width="0.0464%" height="15" fill="rgb(229,157,17)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (9 samples, 0.05%)</title><rect x="43.6051%" y="357" width="0.0464%" height="15" fill="rgb(230,5,48)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.05%)</title><rect x="43.6051%" y="341" width="0.0464%" height="15" fill="rgb(224,156,48)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="351.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.05%)</title><rect x="43.6051%" y="325" width="0.0464%" height="15" fill="rgb(223,14,29)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="335.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="43.6051%" y="309" width="0.0464%" height="15" fill="rgb(229,96,36)" fg:x="8462" fg:w="9"/><text x="43.8551%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="43.6514%" y="453" width="0.0103%" height="15" fill="rgb(231,102,53)" fg:x="8471" fg:w="2"/><text x="43.9014%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (3 samples, 0.02%)</title><rect x="43.6514%" y="469" width="0.0155%" height="15" fill="rgb(210,77,38)" fg:x="8471" fg:w="3"/><text x="43.9014%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="43.6669%" y="453" width="0.0103%" height="15" fill="rgb(235,131,6)" fg:x="8474" fg:w="2"/><text x="43.9169%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::at (4 samples, 0.02%)</title><rect x="43.6669%" y="469" width="0.0206%" height="15" fill="rgb(252,55,38)" fg:x="8474" fg:w="4"/><text x="43.9169%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="43.6772%" y="453" width="0.0103%" height="15" fill="rgb(246,38,14)" fg:x="8476" fg:w="2"/><text x="43.9272%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (2 samples, 0.01%)</title><rect x="43.6875%" y="357" width="0.0103%" height="15" fill="rgb(242,27,5)" fg:x="8478" fg:w="2"/><text x="43.9375%" y="367.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (38 samples, 0.20%)</title><rect x="43.5072%" y="533" width="0.1958%" height="15" fill="rgb(228,65,35)" fg:x="8443" fg:w="38"/><text x="43.7572%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (38 samples, 0.20%)</title><rect x="43.5072%" y="517" width="0.1958%" height="15" fill="rgb(245,93,11)" fg:x="8443" fg:w="38"/><text x="43.7572%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (20 samples, 0.10%)</title><rect x="43.5999%" y="501" width="0.1031%" height="15" fill="rgb(213,1,31)" fg:x="8461" fg:w="20"/><text x="43.8499%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (10 samples, 0.05%)</title><rect x="43.6514%" y="485" width="0.0515%" height="15" fill="rgb(237,205,14)" fg:x="8471" fg:w="10"/><text x="43.9014%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (3 samples, 0.02%)</title><rect x="43.6875%" y="469" width="0.0155%" height="15" fill="rgb(232,118,45)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (3 samples, 0.02%)</title><rect x="43.6875%" y="453" width="0.0155%" height="15" fill="rgb(218,5,6)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="43.6875%" y="437" width="0.0155%" height="15" fill="rgb(251,87,51)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="43.6875%" y="421" width="0.0155%" height="15" fill="rgb(207,225,20)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="431.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="43.6875%" y="405" width="0.0155%" height="15" fill="rgb(222,78,54)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="415.50"></text></g><g><title>rlp::rlpin::Rlp::at (3 samples, 0.02%)</title><rect x="43.6875%" y="389" width="0.0155%" height="15" fill="rgb(232,85,16)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="399.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (3 samples, 0.02%)</title><rect x="43.6875%" y="373" width="0.0155%" height="15" fill="rgb(244,25,33)" fg:x="8478" fg:w="3"/><text x="43.9375%" y="383.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="43.7081%" y="517" width="0.0361%" height="15" fill="rgb(233,24,36)" fg:x="8482" fg:w="7"/><text x="43.9581%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="43.7081%" y="501" width="0.0361%" height="15" fill="rgb(253,49,54)" fg:x="8482" fg:w="7"/><text x="43.9581%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="43.7081%" y="485" width="0.0361%" height="15" fill="rgb(245,12,22)" fg:x="8482" fg:w="7"/><text x="43.9581%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="43.7081%" y="469" width="0.0361%" height="15" fill="rgb(253,141,28)" fg:x="8482" fg:w="7"/><text x="43.9581%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="43.7081%" y="453" width="0.0361%" height="15" fill="rgb(225,207,27)" fg:x="8482" fg:w="7"/><text x="43.9581%" y="463.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="43.7081%" y="437" width="0.0361%" height="15" fill="rgb(220,84,2)" fg:x="8482" fg:w="7"/><text x="43.9581%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (6 samples, 0.03%)</title><rect x="43.7133%" y="421" width="0.0309%" height="15" fill="rgb(224,37,37)" fg:x="8483" fg:w="6"/><text x="43.9633%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (6 samples, 0.03%)</title><rect x="43.7133%" y="405" width="0.0309%" height="15" fill="rgb(220,143,18)" fg:x="8483" fg:w="6"/><text x="43.9633%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (6 samples, 0.03%)</title><rect x="43.7133%" y="389" width="0.0309%" height="15" fill="rgb(210,88,33)" fg:x="8483" fg:w="6"/><text x="43.9633%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.03%)</title><rect x="43.7133%" y="373" width="0.0309%" height="15" fill="rgb(219,87,51)" fg:x="8483" fg:w="6"/><text x="43.9633%" y="383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.03%)</title><rect x="43.7133%" y="357" width="0.0309%" height="15" fill="rgb(211,7,35)" fg:x="8483" fg:w="6"/><text x="43.9633%" y="367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.03%)</title><rect x="43.7133%" y="341" width="0.0309%" height="15" fill="rgb(232,77,2)" fg:x="8483" fg:w="6"/><text x="43.9633%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (58 samples, 0.30%)</title><rect x="43.4556%" y="549" width="0.2989%" height="15" fill="rgb(249,94,25)" fg:x="8433" fg:w="58"/><text x="43.7056%" y="559.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (10 samples, 0.05%)</title><rect x="43.7030%" y="533" width="0.0515%" height="15" fill="rgb(215,112,2)" fg:x="8481" fg:w="10"/><text x="43.9530%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (2 samples, 0.01%)</title><rect x="43.7442%" y="517" width="0.0103%" height="15" fill="rgb(226,115,48)" fg:x="8489" fg:w="2"/><text x="43.9942%" y="527.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (61 samples, 0.31%)</title><rect x="43.4453%" y="581" width="0.3143%" height="15" fill="rgb(249,196,10)" fg:x="8431" fg:w="61"/><text x="43.6953%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (59 samples, 0.30%)</title><rect x="43.4556%" y="565" width="0.3040%" height="15" fill="rgb(237,109,14)" fg:x="8433" fg:w="59"/><text x="43.7056%" y="575.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (5 samples, 0.03%)</title><rect x="43.7648%" y="549" width="0.0258%" height="15" fill="rgb(217,103,53)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="559.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (5 samples, 0.03%)</title><rect x="43.7648%" y="533" width="0.0258%" height="15" fill="rgb(244,137,9)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="543.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5 samples, 0.03%)</title><rect x="43.7648%" y="517" width="0.0258%" height="15" fill="rgb(227,201,3)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="527.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5 samples, 0.03%)</title><rect x="43.7648%" y="501" width="0.0258%" height="15" fill="rgb(243,94,6)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="511.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (5 samples, 0.03%)</title><rect x="43.7648%" y="485" width="0.0258%" height="15" fill="rgb(235,118,5)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="495.50"></text></g><g><title>keccak::p1600 (5 samples, 0.03%)</title><rect x="43.7648%" y="469" width="0.0258%" height="15" fill="rgb(247,10,30)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="479.50"></text></g><g><title>keccak::keccak_p (5 samples, 0.03%)</title><rect x="43.7648%" y="453" width="0.0258%" height="15" fill="rgb(205,26,28)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="463.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5 samples, 0.03%)</title><rect x="43.7648%" y="437" width="0.0258%" height="15" fill="rgb(206,99,35)" fg:x="8493" fg:w="5"/><text x="44.0148%" y="447.50"></text></g><g><title>zilliqa::state::State::get_account (73 samples, 0.38%)</title><rect x="43.4196%" y="597" width="0.3762%" height="15" fill="rgb(238,130,40)" fg:x="8426" fg:w="73"/><text x="43.6696%" y="607.50"></text></g><g><title>zilliqa::state::State::account_key (6 samples, 0.03%)</title><rect x="43.7648%" y="581" width="0.0309%" height="15" fill="rgb(224,126,31)" fg:x="8493" fg:w="6"/><text x="44.0148%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (6 samples, 0.03%)</title><rect x="43.7648%" y="565" width="0.0309%" height="15" fill="rgb(254,105,17)" fg:x="8493" fg:w="6"/><text x="44.0148%" y="575.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (12 samples, 0.06%)</title><rect x="43.7957%" y="565" width="0.0618%" height="15" fill="rgb(216,87,36)" fg:x="8499" fg:w="12"/><text x="44.0457%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.05%)</title><rect x="43.8060%" y="549" width="0.0515%" height="15" fill="rgb(240,21,12)" fg:x="8501" fg:w="10"/><text x="44.0560%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.05%)</title><rect x="43.8060%" y="533" width="0.0515%" height="15" fill="rgb(245,192,34)" fg:x="8501" fg:w="10"/><text x="44.0560%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.05%)</title><rect x="43.8060%" y="517" width="0.0515%" height="15" fill="rgb(226,100,49)" fg:x="8501" fg:w="10"/><text x="44.0560%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.05%)</title><rect x="43.8112%" y="501" width="0.0464%" height="15" fill="rgb(245,188,27)" fg:x="8502" fg:w="9"/><text x="44.0612%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.05%)</title><rect x="43.8112%" y="485" width="0.0464%" height="15" fill="rgb(212,170,8)" fg:x="8502" fg:w="9"/><text x="44.0612%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.05%)</title><rect x="43.8112%" y="469" width="0.0464%" height="15" fill="rgb(217,113,29)" fg:x="8502" fg:w="9"/><text x="44.0612%" y="479.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.05%)</title><rect x="43.8112%" y="453" width="0.0464%" height="15" fill="rgb(237,30,3)" fg:x="8502" fg:w="9"/><text x="44.0612%" y="463.50"></text></g><g><title>__rdl_realloc (9 samples, 0.05%)</title><rect x="43.8112%" y="437" width="0.0464%" height="15" fill="rgb(227,19,28)" fg:x="8502" fg:w="9"/><text x="44.0612%" y="447.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.05%)</title><rect x="43.8112%" y="421" width="0.0464%" height="15" fill="rgb(239,172,45)" fg:x="8502" fg:w="9"/><text x="44.0612%" y="431.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.04%)</title><rect x="43.8163%" y="405" width="0.0412%" height="15" fill="rgb(254,55,39)" fg:x="8503" fg:w="8"/><text x="44.0663%" y="415.50"></text></g><g><title>_int_realloc (7 samples, 0.04%)</title><rect x="43.8215%" y="389" width="0.0361%" height="15" fill="rgb(249,208,12)" fg:x="8504" fg:w="7"/><text x="44.0715%" y="399.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="43.8421%" y="373" width="0.0155%" height="15" fill="rgb(240,52,13)" fg:x="8508" fg:w="3"/><text x="44.0921%" y="383.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="43.8576%" y="533" width="0.0103%" height="15" fill="rgb(252,149,13)" fg:x="8511" fg:w="2"/><text x="44.1076%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="43.8576%" y="517" width="0.0103%" height="15" fill="rgb(232,81,48)" fg:x="8511" fg:w="2"/><text x="44.1076%" y="527.50"></text></g><g><title>get_max_fast (2 samples, 0.01%)</title><rect x="43.8576%" y="501" width="0.0103%" height="15" fill="rgb(222,144,2)" fg:x="8511" fg:w="2"/><text x="44.1076%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (4 samples, 0.02%)</title><rect x="43.8679%" y="501" width="0.0206%" height="15" fill="rgb(216,81,32)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (4 samples, 0.02%)</title><rect x="43.8679%" y="485" width="0.0206%" height="15" fill="rgb(244,78,51)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (4 samples, 0.02%)</title><rect x="43.8679%" y="469" width="0.0206%" height="15" fill="rgb(217,66,21)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 0.02%)</title><rect x="43.8679%" y="453" width="0.0206%" height="15" fill="rgb(247,101,42)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="43.8679%" y="437" width="0.0206%" height="15" fill="rgb(227,81,39)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="43.8679%" y="421" width="0.0206%" height="15" fill="rgb(220,223,44)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="43.8679%" y="405" width="0.0206%" height="15" fill="rgb(205,218,2)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="43.8679%" y="389" width="0.0206%" height="15" fill="rgb(212,207,28)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="399.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="43.8679%" y="373" width="0.0206%" height="15" fill="rgb(224,12,41)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="383.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="43.8679%" y="357" width="0.0206%" height="15" fill="rgb(216,118,12)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.02%)</title><rect x="43.8679%" y="341" width="0.0206%" height="15" fill="rgb(252,97,46)" fg:x="8513" fg:w="4"/><text x="44.1179%" y="351.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="43.8679%" y="533" width="0.0258%" height="15" fill="rgb(244,206,19)" fg:x="8513" fg:w="5"/><text x="44.1179%" y="543.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="43.8679%" y="517" width="0.0258%" height="15" fill="rgb(231,84,31)" fg:x="8513" fg:w="5"/><text x="44.1179%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.03%)</title><rect x="43.9091%" y="501" width="0.0309%" height="15" fill="rgb(244,133,0)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="43.9091%" y="485" width="0.0309%" height="15" fill="rgb(223,15,50)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (6 samples, 0.03%)</title><rect x="43.9091%" y="469" width="0.0309%" height="15" fill="rgb(250,118,49)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (6 samples, 0.03%)</title><rect x="43.9091%" y="453" width="0.0309%" height="15" fill="rgb(248,25,38)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (6 samples, 0.03%)</title><rect x="43.9091%" y="437" width="0.0309%" height="15" fill="rgb(215,70,14)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="447.50"></text></g><g><title> 16]&gt; (6 samples, 0.03%)</title><rect x="43.9091%" y="421" width="0.0309%" height="15" fill="rgb(215,28,15)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (6 samples, 0.03%)</title><rect x="43.9091%" y="405" width="0.0309%" height="15" fill="rgb(243,6,28)" fg:x="8521" fg:w="6"/><text x="44.1591%" y="415.50"></text></g><g><title>alloy_primitives::utils::keccak256 (6 samples, 0.03%)</title><rect x="43.9400%" y="501" width="0.0309%" height="15" fill="rgb(222,130,1)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (6 samples, 0.03%)</title><rect x="43.9400%" y="485" width="0.0309%" height="15" fill="rgb(236,166,44)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="43.9400%" y="469" width="0.0309%" height="15" fill="rgb(221,108,14)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="43.9400%" y="453" width="0.0309%" height="15" fill="rgb(252,3,45)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="43.9400%" y="437" width="0.0309%" height="15" fill="rgb(237,68,30)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="447.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="43.9400%" y="421" width="0.0309%" height="15" fill="rgb(211,79,22)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (6 samples, 0.03%)</title><rect x="43.9400%" y="405" width="0.0309%" height="15" fill="rgb(252,185,21)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (6 samples, 0.03%)</title><rect x="43.9400%" y="389" width="0.0309%" height="15" fill="rgb(225,189,26)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (6 samples, 0.03%)</title><rect x="43.9400%" y="373" width="0.0309%" height="15" fill="rgb(241,30,40)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.03%)</title><rect x="43.9400%" y="357" width="0.0309%" height="15" fill="rgb(235,215,44)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="367.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.03%)</title><rect x="43.9400%" y="341" width="0.0309%" height="15" fill="rgb(205,8,29)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="351.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.03%)</title><rect x="43.9400%" y="325" width="0.0309%" height="15" fill="rgb(241,137,42)" fg:x="8527" fg:w="6"/><text x="44.1900%" y="335.50"></text></g><g><title>alloy_primitives::utils::keccak256 (11 samples, 0.06%)</title><rect x="43.9812%" y="469" width="0.0567%" height="15" fill="rgb(237,155,2)" fg:x="8535" fg:w="11"/><text x="44.2312%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (11 samples, 0.06%)</title><rect x="43.9812%" y="453" width="0.0567%" height="15" fill="rgb(245,29,42)" fg:x="8535" fg:w="11"/><text x="44.2312%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (11 samples, 0.06%)</title><rect x="43.9812%" y="437" width="0.0567%" height="15" fill="rgb(234,101,35)" fg:x="8535" fg:w="11"/><text x="44.2312%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (11 samples, 0.06%)</title><rect x="43.9812%" y="421" width="0.0567%" height="15" fill="rgb(228,64,37)" fg:x="8535" fg:w="11"/><text x="44.2312%" y="431.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (11 samples, 0.06%)</title><rect x="43.9812%" y="405" width="0.0567%" height="15" fill="rgb(217,214,36)" fg:x="8535" fg:w="11"/><text x="44.2312%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (11 samples, 0.06%)</title><rect x="43.9812%" y="389" width="0.0567%" height="15" fill="rgb(243,70,3)" fg:x="8535" fg:w="11"/><text x="44.2312%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (10 samples, 0.05%)</title><rect x="43.9864%" y="373" width="0.0515%" height="15" fill="rgb(253,158,52)" fg:x="8536" fg:w="10"/><text x="44.2364%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (10 samples, 0.05%)</title><rect x="43.9864%" y="357" width="0.0515%" height="15" fill="rgb(234,111,54)" fg:x="8536" fg:w="10"/><text x="44.2364%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (10 samples, 0.05%)</title><rect x="43.9864%" y="341" width="0.0515%" height="15" fill="rgb(217,70,32)" fg:x="8536" fg:w="10"/><text x="44.2364%" y="351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.05%)</title><rect x="43.9864%" y="325" width="0.0515%" height="15" fill="rgb(234,18,33)" fg:x="8536" fg:w="10"/><text x="44.2364%" y="335.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.05%)</title><rect x="43.9864%" y="309" width="0.0515%" height="15" fill="rgb(234,12,49)" fg:x="8536" fg:w="10"/><text x="44.2364%" y="319.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="43.9915%" y="293" width="0.0464%" height="15" fill="rgb(236,10,21)" fg:x="8537" fg:w="9"/><text x="44.2415%" y="303.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="44.0482%" y="453" width="0.0258%" height="15" fill="rgb(248,182,45)" fg:x="8548" fg:w="5"/><text x="44.2982%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="44.0482%" y="437" width="0.0258%" height="15" fill="rgb(217,95,36)" fg:x="8548" fg:w="5"/><text x="44.2982%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="44.0482%" y="421" width="0.0258%" height="15" fill="rgb(212,110,31)" fg:x="8548" fg:w="5"/><text x="44.2982%" y="431.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="44.0482%" y="405" width="0.0258%" height="15" fill="rgb(206,32,53)" fg:x="8548" fg:w="5"/><text x="44.2982%" y="415.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="44.0482%" y="389" width="0.0258%" height="15" fill="rgb(246,141,37)" fg:x="8548" fg:w="5"/><text x="44.2982%" y="399.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="44.0482%" y="373" width="0.0258%" height="15" fill="rgb(219,16,7)" fg:x="8548" fg:w="5"/><text x="44.2982%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="44.0534%" y="357" width="0.0206%" height="15" fill="rgb(230,205,45)" fg:x="8549" fg:w="4"/><text x="44.3034%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="44.0534%" y="341" width="0.0206%" height="15" fill="rgb(231,43,49)" fg:x="8549" fg:w="4"/><text x="44.3034%" y="351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="44.0534%" y="325" width="0.0206%" height="15" fill="rgb(212,106,34)" fg:x="8549" fg:w="4"/><text x="44.3034%" y="335.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="44.0534%" y="309" width="0.0206%" height="15" fill="rgb(206,83,17)" fg:x="8549" fg:w="4"/><text x="44.3034%" y="319.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="44.0534%" y="293" width="0.0206%" height="15" fill="rgb(244,154,49)" fg:x="8549" fg:w="4"/><text x="44.3034%" y="303.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="44.0534%" y="277" width="0.0206%" height="15" fill="rgb(244,149,49)" fg:x="8549" fg:w="4"/><text x="44.3034%" y="287.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (5 samples, 0.03%)</title><rect x="44.0792%" y="437" width="0.0258%" height="15" fill="rgb(227,134,18)" fg:x="8554" fg:w="5"/><text x="44.3292%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="44.0792%" y="421" width="0.0258%" height="15" fill="rgb(237,116,36)" fg:x="8554" fg:w="5"/><text x="44.3292%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="44.0843%" y="405" width="0.0206%" height="15" fill="rgb(205,129,40)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="44.0843%" y="389" width="0.0206%" height="15" fill="rgb(236,178,4)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="44.0843%" y="373" width="0.0206%" height="15" fill="rgb(251,76,53)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="44.0843%" y="357" width="0.0206%" height="15" fill="rgb(242,92,40)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="44.0843%" y="341" width="0.0206%" height="15" fill="rgb(209,45,30)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="351.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="44.0843%" y="325" width="0.0206%" height="15" fill="rgb(218,157,36)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="335.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="44.0843%" y="309" width="0.0206%" height="15" fill="rgb(222,186,16)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="319.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="44.0843%" y="293" width="0.0206%" height="15" fill="rgb(254,72,35)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="303.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="44.0843%" y="277" width="0.0206%" height="15" fill="rgb(224,25,35)" fg:x="8555" fg:w="4"/><text x="44.3343%" y="287.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="44.0946%" y="261" width="0.0103%" height="15" fill="rgb(206,135,52)" fg:x="8557" fg:w="2"/><text x="44.3446%" y="271.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (27 samples, 0.14%)</title><rect x="43.9761%" y="501" width="0.1391%" height="15" fill="rgb(229,174,47)" fg:x="8534" fg:w="27"/><text x="44.2261%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (27 samples, 0.14%)</title><rect x="43.9761%" y="485" width="0.1391%" height="15" fill="rgb(242,184,21)" fg:x="8534" fg:w="27"/><text x="44.2261%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (14 samples, 0.07%)</title><rect x="44.0431%" y="469" width="0.0721%" height="15" fill="rgb(213,22,45)" fg:x="8547" fg:w="14"/><text x="44.2931%" y="479.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (8 samples, 0.04%)</title><rect x="44.0740%" y="453" width="0.0412%" height="15" fill="rgb(237,81,54)" fg:x="8553" fg:w="8"/><text x="44.3240%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="44.1204%" y="485" width="0.0361%" height="15" fill="rgb(248,177,18)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="44.1204%" y="469" width="0.0361%" height="15" fill="rgb(254,31,16)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="44.1204%" y="453" width="0.0361%" height="15" fill="rgb(235,20,31)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="44.1204%" y="437" width="0.0361%" height="15" fill="rgb(240,56,43)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="44.1204%" y="421" width="0.0361%" height="15" fill="rgb(237,197,51)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="44.1204%" y="405" width="0.0361%" height="15" fill="rgb(241,162,44)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="44.1204%" y="389" width="0.0361%" height="15" fill="rgb(224,23,20)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="44.1204%" y="373" width="0.0361%" height="15" fill="rgb(250,109,34)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="44.1204%" y="357" width="0.0361%" height="15" fill="rgb(214,175,50)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="44.1204%" y="341" width="0.0361%" height="15" fill="rgb(213,182,5)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="351.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="44.1204%" y="325" width="0.0361%" height="15" fill="rgb(209,199,19)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="335.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="44.1204%" y="309" width="0.0361%" height="15" fill="rgb(236,224,42)" fg:x="8562" fg:w="7"/><text x="44.3704%" y="319.50"></text></g><g><title>Unknown (2 samples, 0.01%)</title><rect x="44.1564%" y="469" width="0.0103%" height="15" fill="rgb(246,226,29)" fg:x="8569" fg:w="2"/><text x="44.4064%" y="479.50"></text></g><g><title>eth_trie::node::Node::from_branch (2 samples, 0.01%)</title><rect x="44.1668%" y="469" width="0.0103%" height="15" fill="rgb(227,223,11)" fg:x="8571" fg:w="2"/><text x="44.4168%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="44.1668%" y="453" width="0.0103%" height="15" fill="rgb(219,7,51)" fg:x="8571" fg:w="2"/><text x="44.4168%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (4 samples, 0.02%)</title><rect x="44.1771%" y="469" width="0.0206%" height="15" fill="rgb(245,167,10)" fg:x="8573" fg:w="4"/><text x="44.4271%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="44.1977%" y="453" width="0.0103%" height="15" fill="rgb(237,224,16)" fg:x="8577" fg:w="2"/><text x="44.4477%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::at (8 samples, 0.04%)</title><rect x="44.1977%" y="469" width="0.0412%" height="15" fill="rgb(226,132,13)" fg:x="8577" fg:w="8"/><text x="44.4477%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (6 samples, 0.03%)</title><rect x="44.2080%" y="453" width="0.0309%" height="15" fill="rgb(214,140,3)" fg:x="8579" fg:w="6"/><text x="44.4580%" y="463.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (2 samples, 0.01%)</title><rect x="44.2286%" y="437" width="0.0103%" height="15" fill="rgb(221,177,4)" fg:x="8583" fg:w="2"/><text x="44.4786%" y="447.50"></text></g><g><title>rlp::rlpin::PayloadInfo::from (2 samples, 0.01%)</title><rect x="44.2286%" y="421" width="0.0103%" height="15" fill="rgb(238,139,3)" fg:x="8583" fg:w="2"/><text x="44.4786%" y="431.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (5 samples, 0.03%)</title><rect x="44.2389%" y="357" width="0.0258%" height="15" fill="rgb(216,17,39)" fg:x="8585" fg:w="5"/><text x="44.4889%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.02%)</title><rect x="44.2440%" y="341" width="0.0206%" height="15" fill="rgb(238,120,9)" fg:x="8586" fg:w="4"/><text x="44.4940%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (73 samples, 0.38%)</title><rect x="43.8988%" y="533" width="0.3762%" height="15" fill="rgb(244,92,53)" fg:x="8519" fg:w="73"/><text x="44.1488%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (71 samples, 0.37%)</title><rect x="43.9091%" y="517" width="0.3659%" height="15" fill="rgb(224,148,33)" fg:x="8521" fg:w="71"/><text x="44.1591%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (31 samples, 0.16%)</title><rect x="44.1152%" y="501" width="0.1597%" height="15" fill="rgb(243,6,36)" fg:x="8561" fg:w="31"/><text x="44.3652%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (23 samples, 0.12%)</title><rect x="44.1564%" y="485" width="0.1185%" height="15" fill="rgb(230,102,11)" fg:x="8569" fg:w="23"/><text x="44.4064%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (7 samples, 0.04%)</title><rect x="44.2389%" y="469" width="0.0361%" height="15" fill="rgb(234,148,36)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (7 samples, 0.04%)</title><rect x="44.2389%" y="453" width="0.0361%" height="15" fill="rgb(251,153,25)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 0.04%)</title><rect x="44.2389%" y="437" width="0.0361%" height="15" fill="rgb(215,129,8)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.04%)</title><rect x="44.2389%" y="421" width="0.0361%" height="15" fill="rgb(224,128,35)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="431.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="44.2389%" y="405" width="0.0361%" height="15" fill="rgb(237,56,52)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="415.50"></text></g><g><title>rlp::rlpin::Rlp::at (7 samples, 0.04%)</title><rect x="44.2389%" y="389" width="0.0361%" height="15" fill="rgb(234,213,19)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="399.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (7 samples, 0.04%)</title><rect x="44.2389%" y="373" width="0.0361%" height="15" fill="rgb(252,82,23)" fg:x="8585" fg:w="7"/><text x="44.4889%" y="383.50"></text></g><g><title>rlp::rlpin::Rlp::consume_items (2 samples, 0.01%)</title><rect x="44.2647%" y="357" width="0.0103%" height="15" fill="rgb(254,201,21)" fg:x="8590" fg:w="2"/><text x="44.5147%" y="367.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (2 samples, 0.01%)</title><rect x="44.2647%" y="341" width="0.0103%" height="15" fill="rgb(250,186,11)" fg:x="8590" fg:w="2"/><text x="44.5147%" y="351.50"></text></g><g><title>rlp::rlpin::PayloadInfo::from (2 samples, 0.01%)</title><rect x="44.2647%" y="325" width="0.0103%" height="15" fill="rgb(211,174,5)" fg:x="8590" fg:w="2"/><text x="44.5147%" y="335.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (2 samples, 0.01%)</title><rect x="44.2750%" y="517" width="0.0103%" height="15" fill="rgb(214,121,10)" fg:x="8592" fg:w="2"/><text x="44.5250%" y="527.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="44.2750%" y="501" width="0.0103%" height="15" fill="rgb(241,66,2)" fg:x="8592" fg:w="2"/><text x="44.5250%" y="511.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_entry (2 samples, 0.01%)</title><rect x="44.2750%" y="485" width="0.0103%" height="15" fill="rgb(220,167,19)" fg:x="8592" fg:w="2"/><text x="44.5250%" y="495.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_mut_from_table (2 samples, 0.01%)</title><rect x="44.2750%" y="469" width="0.0103%" height="15" fill="rgb(231,54,50)" fg:x="8592" fg:w="2"/><text x="44.5250%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="44.2853%" y="517" width="0.0412%" height="15" fill="rgb(239,217,53)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="44.2853%" y="501" width="0.0412%" height="15" fill="rgb(248,8,0)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (8 samples, 0.04%)</title><rect x="44.2853%" y="485" width="0.0412%" height="15" fill="rgb(229,118,37)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (8 samples, 0.04%)</title><rect x="44.2853%" y="469" width="0.0412%" height="15" fill="rgb(253,223,43)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (8 samples, 0.04%)</title><rect x="44.2853%" y="453" width="0.0412%" height="15" fill="rgb(211,77,36)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="463.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (8 samples, 0.04%)</title><rect x="44.2853%" y="437" width="0.0412%" height="15" fill="rgb(219,3,53)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (8 samples, 0.04%)</title><rect x="44.2853%" y="421" width="0.0412%" height="15" fill="rgb(244,45,42)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (8 samples, 0.04%)</title><rect x="44.2853%" y="405" width="0.0412%" height="15" fill="rgb(225,95,27)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (8 samples, 0.04%)</title><rect x="44.2853%" y="389" width="0.0412%" height="15" fill="rgb(207,74,8)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (8 samples, 0.04%)</title><rect x="44.2853%" y="373" width="0.0412%" height="15" fill="rgb(243,63,36)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (8 samples, 0.04%)</title><rect x="44.2853%" y="357" width="0.0412%" height="15" fill="rgb(211,180,12)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (8 samples, 0.04%)</title><rect x="44.2853%" y="341" width="0.0412%" height="15" fill="rgb(254,166,49)" fg:x="8594" fg:w="8"/><text x="44.5353%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (41 samples, 0.21%)</title><rect x="44.3471%" y="501" width="0.2113%" height="15" fill="rgb(205,19,0)" fg:x="8606" fg:w="41"/><text x="44.5971%" y="511.50"></text></g><g><title>eth_trie::node::Node::from_hash (41 samples, 0.21%)</title><rect x="44.3471%" y="485" width="0.2113%" height="15" fill="rgb(224,172,32)" fg:x="8606" fg:w="41"/><text x="44.5971%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (41 samples, 0.21%)</title><rect x="44.3471%" y="469" width="0.2113%" height="15" fill="rgb(254,136,30)" fg:x="8606" fg:w="41"/><text x="44.5971%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (41 samples, 0.21%)</title><rect x="44.3471%" y="453" width="0.2113%" height="15" fill="rgb(246,19,35)" fg:x="8606" fg:w="41"/><text x="44.5971%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (38 samples, 0.20%)</title><rect x="44.3626%" y="437" width="0.1958%" height="15" fill="rgb(219,24,36)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.20%)</title><rect x="44.3626%" y="421" width="0.1958%" height="15" fill="rgb(251,55,1)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.20%)</title><rect x="44.3626%" y="405" width="0.1958%" height="15" fill="rgb(218,117,39)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="415.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.20%)</title><rect x="44.3626%" y="389" width="0.1958%" height="15" fill="rgb(248,169,11)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="399.50"></text></g><g><title>__rdl_alloc (38 samples, 0.20%)</title><rect x="44.3626%" y="373" width="0.1958%" height="15" fill="rgb(244,40,44)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="383.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (38 samples, 0.20%)</title><rect x="44.3626%" y="357" width="0.1958%" height="15" fill="rgb(234,62,37)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="367.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.20%)</title><rect x="44.3626%" y="341" width="0.1958%" height="15" fill="rgb(207,117,42)" fg:x="8609" fg:w="38"/><text x="44.6126%" y="351.50"></text></g><g><title>_int_malloc (37 samples, 0.19%)</title><rect x="44.3677%" y="325" width="0.1907%" height="15" fill="rgb(213,43,2)" fg:x="8610" fg:w="37"/><text x="44.6177%" y="335.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (150 samples, 0.77%)</title><rect x="43.7957%" y="581" width="0.7730%" height="15" fill="rgb(244,202,51)" fg:x="8499" fg:w="150"/><text x="44.0457%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (138 samples, 0.71%)</title><rect x="43.8576%" y="565" width="0.7111%" height="15" fill="rgb(253,174,46)" fg:x="8511" fg:w="138"/><text x="44.1076%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (138 samples, 0.71%)</title><rect x="43.8576%" y="549" width="0.7111%" height="15" fill="rgb(251,23,1)" fg:x="8511" fg:w="138"/><text x="44.1076%" y="559.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (57 samples, 0.29%)</title><rect x="44.2750%" y="533" width="0.2937%" height="15" fill="rgb(253,26,1)" fg:x="8592" fg:w="57"/><text x="44.5250%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (47 samples, 0.24%)</title><rect x="44.3265%" y="517" width="0.2422%" height="15" fill="rgb(216,89,31)" fg:x="8602" fg:w="47"/><text x="44.5765%" y="527.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (2 samples, 0.01%)</title><rect x="44.5584%" y="501" width="0.0103%" height="15" fill="rgb(209,109,5)" fg:x="8647" fg:w="2"/><text x="44.8084%" y="511.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (5 samples, 0.03%)</title><rect x="44.5687%" y="549" width="0.0258%" height="15" fill="rgb(229,63,13)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="559.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (5 samples, 0.03%)</title><rect x="44.5687%" y="533" width="0.0258%" height="15" fill="rgb(238,137,54)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="543.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5 samples, 0.03%)</title><rect x="44.5687%" y="517" width="0.0258%" height="15" fill="rgb(228,1,9)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="527.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5 samples, 0.03%)</title><rect x="44.5687%" y="501" width="0.0258%" height="15" fill="rgb(249,120,48)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="511.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (5 samples, 0.03%)</title><rect x="44.5687%" y="485" width="0.0258%" height="15" fill="rgb(209,72,36)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="495.50"></text></g><g><title>keccak::p1600 (5 samples, 0.03%)</title><rect x="44.5687%" y="469" width="0.0258%" height="15" fill="rgb(247,98,49)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="479.50"></text></g><g><title>keccak::keccak_p (5 samples, 0.03%)</title><rect x="44.5687%" y="453" width="0.0258%" height="15" fill="rgb(233,75,36)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="463.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5 samples, 0.03%)</title><rect x="44.5687%" y="437" width="0.0258%" height="15" fill="rgb(225,14,24)" fg:x="8649" fg:w="5"/><text x="44.8187%" y="447.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (231 samples, 1.19%)</title><rect x="43.4093%" y="629" width="1.1904%" height="15" fill="rgb(237,193,20)" fg:x="8424" fg:w="231"/><text x="43.6593%" y="639.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (231 samples, 1.19%)</title><rect x="43.4093%" y="613" width="1.1904%" height="15" fill="rgb(239,122,19)" fg:x="8424" fg:w="231"/><text x="43.6593%" y="623.50"></text></g><g><title>zilliqa::state::State::has_account (156 samples, 0.80%)</title><rect x="43.7957%" y="597" width="0.8039%" height="15" fill="rgb(231,220,10)" fg:x="8499" fg:w="156"/><text x="44.0457%" y="607.50"></text></g><g><title>zilliqa::state::State::account_key (6 samples, 0.03%)</title><rect x="44.5687%" y="581" width="0.0309%" height="15" fill="rgb(220,66,15)" fg:x="8649" fg:w="6"/><text x="44.8187%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (6 samples, 0.03%)</title><rect x="44.5687%" y="565" width="0.0309%" height="15" fill="rgb(215,171,52)" fg:x="8649" fg:w="6"/><text x="44.8187%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="44.5996%" y="629" width="0.0103%" height="15" fill="rgb(241,169,50)" fg:x="8655" fg:w="2"/><text x="44.8496%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="44.5996%" y="613" width="0.0103%" height="15" fill="rgb(236,189,0)" fg:x="8655" fg:w="2"/><text x="44.8496%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="44.5996%" y="597" width="0.0103%" height="15" fill="rgb(217,147,20)" fg:x="8655" fg:w="2"/><text x="44.8496%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="44.5996%" y="581" width="0.0103%" height="15" fill="rgb(206,188,39)" fg:x="8655" fg:w="2"/><text x="44.8496%" y="591.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (237 samples, 1.22%)</title><rect x="43.4093%" y="661" width="1.2213%" height="15" fill="rgb(227,118,25)" fg:x="8424" fg:w="237"/><text x="43.6593%" y="671.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (237 samples, 1.22%)</title><rect x="43.4093%" y="645" width="1.2213%" height="15" fill="rgb(248,171,40)" fg:x="8424" fg:w="237"/><text x="43.6593%" y="655.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (3 samples, 0.02%)</title><rect x="44.6151%" y="629" width="0.0155%" height="15" fill="rgb(251,90,54)" fg:x="8658" fg:w="3"/><text x="44.8651%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.02%)</title><rect x="44.6151%" y="613" width="0.0155%" height="15" fill="rgb(234,11,46)" fg:x="8658" fg:w="3"/><text x="44.8651%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (3 samples, 0.02%)</title><rect x="44.6151%" y="597" width="0.0155%" height="15" fill="rgb(229,134,13)" fg:x="8658" fg:w="3"/><text x="44.8651%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (2 samples, 0.01%)</title><rect x="44.6202%" y="581" width="0.0103%" height="15" fill="rgb(223,129,3)" fg:x="8659" fg:w="2"/><text x="44.8702%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (2 samples, 0.01%)</title><rect x="44.6202%" y="565" width="0.0103%" height="15" fill="rgb(221,124,13)" fg:x="8659" fg:w="2"/><text x="44.8702%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.01%)</title><rect x="44.6202%" y="549" width="0.0103%" height="15" fill="rgb(234,3,18)" fg:x="8659" fg:w="2"/><text x="44.8702%" y="559.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::preverify_transaction_inner (244 samples, 1.26%)</title><rect x="43.3886%" y="725" width="1.2573%" height="15" fill="rgb(249,199,20)" fg:x="8420" fg:w="244"/><text x="43.6386%" y="735.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::tx_against_state (240 samples, 1.24%)</title><rect x="43.4093%" y="709" width="1.2367%" height="15" fill="rgb(224,134,6)" fg:x="8424" fg:w="240"/><text x="43.6593%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (240 samples, 1.24%)</title><rect x="43.4093%" y="693" width="1.2367%" height="15" fill="rgb(254,83,26)" fg:x="8424" fg:w="240"/><text x="43.6593%" y="703.50"></text></g><g><title>revm::handler::mainnet::validation::validate_tx_against_state (240 samples, 1.24%)</title><rect x="43.4093%" y="677" width="1.2367%" height="15" fill="rgb(217,88,9)" fg:x="8424" fg:w="240"/><text x="43.6593%" y="687.50"></text></g><g><title>revm_primitives::env::Env::validate_tx_against_state (3 samples, 0.02%)</title><rect x="44.6305%" y="661" width="0.0155%" height="15" fill="rgb(225,73,2)" fg:x="8661" fg:w="3"/><text x="44.8805%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="44.6305%" y="645" width="0.0155%" height="15" fill="rgb(226,44,39)" fg:x="8661" fg:w="3"/><text x="44.8805%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="44.6718%" y="469" width="0.0206%" height="15" fill="rgb(228,53,17)" fg:x="8669" fg:w="4"/><text x="44.9218%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="44.6718%" y="453" width="0.0206%" height="15" fill="rgb(212,27,27)" fg:x="8669" fg:w="4"/><text x="44.9218%" y="463.50"></text></g><g><title>&lt;foldhash::seed::fast::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.02%)</title><rect x="44.6718%" y="437" width="0.0206%" height="15" fill="rgb(241,50,6)" fg:x="8669" fg:w="4"/><text x="44.9218%" y="447.50"></text></g><g><title>foldhash::fast::FoldHasher::with_seed (4 samples, 0.02%)</title><rect x="44.6718%" y="421" width="0.0206%" height="15" fill="rgb(225,28,51)" fg:x="8669" fg:w="4"/><text x="44.9218%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.04%)</title><rect x="44.6718%" y="645" width="0.0361%" height="15" fill="rgb(215,33,16)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.04%)</title><rect x="44.6718%" y="629" width="0.0361%" height="15" fill="rgb(243,40,39)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.04%)</title><rect x="44.6718%" y="613" width="0.0361%" height="15" fill="rgb(225,11,42)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="623.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.04%)</title><rect x="44.6718%" y="597" width="0.0361%" height="15" fill="rgb(241,220,38)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.04%)</title><rect x="44.6718%" y="581" width="0.0361%" height="15" fill="rgb(244,52,35)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.04%)</title><rect x="44.6718%" y="565" width="0.0361%" height="15" fill="rgb(246,42,46)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="575.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (7 samples, 0.04%)</title><rect x="44.6718%" y="549" width="0.0361%" height="15" fill="rgb(205,184,13)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.04%)</title><rect x="44.6718%" y="533" width="0.0361%" height="15" fill="rgb(209,48,36)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.04%)</title><rect x="44.6718%" y="517" width="0.0361%" height="15" fill="rgb(244,34,51)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (7 samples, 0.04%)</title><rect x="44.6718%" y="501" width="0.0361%" height="15" fill="rgb(221,107,33)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.04%)</title><rect x="44.6718%" y="485" width="0.0361%" height="15" fill="rgb(224,203,12)" fg:x="8669" fg:w="7"/><text x="44.9218%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.02%)</title><rect x="44.6924%" y="469" width="0.0155%" height="15" fill="rgb(230,215,18)" fg:x="8673" fg:w="3"/><text x="44.9424%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="44.6924%" y="453" width="0.0155%" height="15" fill="rgb(206,185,35)" fg:x="8673" fg:w="3"/><text x="44.9424%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="44.6924%" y="437" width="0.0155%" height="15" fill="rgb(228,140,34)" fg:x="8673" fg:w="3"/><text x="44.9424%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.02%)</title><rect x="44.6924%" y="421" width="0.0155%" height="15" fill="rgb(208,93,13)" fg:x="8673" fg:w="3"/><text x="44.9424%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.02%)</title><rect x="44.6924%" y="405" width="0.0155%" height="15" fill="rgb(221,193,39)" fg:x="8673" fg:w="3"/><text x="44.9424%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="44.6924%" y="389" width="0.0155%" height="15" fill="rgb(241,132,34)" fg:x="8673" fg:w="3"/><text x="44.9424%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (10 samples, 0.05%)</title><rect x="44.6666%" y="693" width="0.0515%" height="15" fill="rgb(221,141,10)" fg:x="8668" fg:w="10"/><text x="44.9166%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (10 samples, 0.05%)</title><rect x="44.6666%" y="677" width="0.0515%" height="15" fill="rgb(226,90,31)" fg:x="8668" fg:w="10"/><text x="44.9166%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.05%)</title><rect x="44.6666%" y="661" width="0.0515%" height="15" fill="rgb(243,75,5)" fg:x="8668" fg:w="10"/><text x="44.9166%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.01%)</title><rect x="44.7078%" y="645" width="0.0103%" height="15" fill="rgb(227,156,21)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="44.7078%" y="629" width="0.0103%" height="15" fill="rgb(250,195,8)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="44.7078%" y="613" width="0.0103%" height="15" fill="rgb(220,134,5)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.01%)</title><rect x="44.7078%" y="597" width="0.0103%" height="15" fill="rgb(246,106,34)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.01%)</title><rect x="44.7078%" y="581" width="0.0103%" height="15" fill="rgb(205,1,4)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2 samples, 0.01%)</title><rect x="44.7078%" y="565" width="0.0103%" height="15" fill="rgb(224,151,29)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.01%)</title><rect x="44.7078%" y="549" width="0.0103%" height="15" fill="rgb(251,196,0)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="559.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2 samples, 0.01%)</title><rect x="44.7078%" y="533" width="0.0103%" height="15" fill="rgb(212,127,0)" fg:x="8676" fg:w="2"/><text x="44.9578%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="44.7181%" y="597" width="0.0155%" height="15" fill="rgb(236,71,53)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="581" width="0.0155%" height="15" fill="rgb(227,99,0)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="565" width="0.0155%" height="15" fill="rgb(239,89,21)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="549" width="0.0155%" height="15" fill="rgb(243,122,19)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="533" width="0.0155%" height="15" fill="rgb(229,192,45)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="517" width="0.0155%" height="15" fill="rgb(235,165,35)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="527.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="501" width="0.0155%" height="15" fill="rgb(253,202,0)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="44.7181%" y="485" width="0.0155%" height="15" fill="rgb(235,51,20)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3 samples, 0.02%)</title><rect x="44.7181%" y="469" width="0.0155%" height="15" fill="rgb(218,95,46)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.02%)</title><rect x="44.7181%" y="453" width="0.0155%" height="15" fill="rgb(212,81,10)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.02%)</title><rect x="44.7181%" y="437" width="0.0155%" height="15" fill="rgb(240,59,0)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="44.7181%" y="421" width="0.0155%" height="15" fill="rgb(212,191,42)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="44.7181%" y="405" width="0.0155%" height="15" fill="rgb(233,140,3)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="44.7181%" y="389" width="0.0155%" height="15" fill="rgb(215,69,23)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="44.7181%" y="373" width="0.0155%" height="15" fill="rgb(240,202,20)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="44.7181%" y="357" width="0.0155%" height="15" fill="rgb(209,146,50)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="44.7181%" y="341" width="0.0155%" height="15" fill="rgb(253,102,54)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="44.7181%" y="325" width="0.0155%" height="15" fill="rgb(250,173,47)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="335.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="44.7181%" y="309" width="0.0155%" height="15" fill="rgb(232,142,7)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="319.50"></text></g><g><title>foldhash::folded_multiply (3 samples, 0.02%)</title><rect x="44.7181%" y="293" width="0.0155%" height="15" fill="rgb(230,157,47)" fg:x="8678" fg:w="3"/><text x="44.9681%" y="303.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::set_precompiles (14 samples, 0.07%)</title><rect x="44.6666%" y="709" width="0.0721%" height="15" fill="rgb(214,177,35)" fg:x="8668" fg:w="14"/><text x="44.9166%" y="719.50"></text></g><g><title>revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt;::addresses_set (4 samples, 0.02%)</title><rect x="44.7181%" y="693" width="0.0206%" height="15" fill="rgb(234,119,46)" fg:x="8678" fg:w="4"/><text x="44.9681%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.02%)</title><rect x="44.7181%" y="677" width="0.0206%" height="15" fill="rgb(241,180,50)" fg:x="8678" fg:w="4"/><text x="44.9681%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="44.7181%" y="661" width="0.0206%" height="15" fill="rgb(221,54,25)" fg:x="8678" fg:w="4"/><text x="44.9681%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="44.7181%" y="645" width="0.0206%" height="15" fill="rgb(209,157,44)" fg:x="8678" fg:w="4"/><text x="44.9681%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="44.7181%" y="629" width="0.0206%" height="15" fill="rgb(246,115,41)" fg:x="8678" fg:w="4"/><text x="44.9681%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="44.7181%" y="613" width="0.0206%" height="15" fill="rgb(229,86,1)" fg:x="8678" fg:w="4"/><text x="44.9681%" y="623.50"></text></g><g><title>&lt;revm_interpreter::interpreter_action::call_outcome::CallOutcome as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="44.7439%" y="677" width="0.0103%" height="15" fill="rgb(240,108,53)" fg:x="8683" fg:w="2"/><text x="44.9939%" y="687.50"></text></g><g><title>&lt;revm_interpreter::interpreter::InterpreterResult as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="44.7439%" y="661" width="0.0103%" height="15" fill="rgb(227,134,2)" fg:x="8683" fg:w="2"/><text x="44.9939%" y="671.50"></text></g><g><title>&lt;alloy_primitives::bytes_::Bytes as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="44.7439%" y="645" width="0.0103%" height="15" fill="rgb(213,129,25)" fg:x="8683" fg:w="2"/><text x="44.9939%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="44.7439%" y="629" width="0.0103%" height="15" fill="rgb(226,35,21)" fg:x="8683" fg:w="2"/><text x="44.9939%" y="639.50"></text></g><g><title>bytes::bytes::static_clone (2 samples, 0.01%)</title><rect x="44.7439%" y="613" width="0.0103%" height="15" fill="rgb(208,129,26)" fg:x="8683" fg:w="2"/><text x="44.9939%" y="623.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::last_frame_return (4 samples, 0.02%)</title><rect x="44.7387%" y="709" width="0.0206%" height="15" fill="rgb(224,83,6)" fg:x="8682" fg:w="4"/><text x="44.9887%" y="719.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register::{{closure}} (4 samples, 0.02%)</title><rect x="44.7387%" y="693" width="0.0206%" height="15" fill="rgb(227,52,39)" fg:x="8682" fg:w="4"/><text x="44.9887%" y="703.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::output (2 samples, 0.01%)</title><rect x="44.7594%" y="709" width="0.0103%" height="15" fill="rgb(241,30,17)" fg:x="8686" fg:w="2"/><text x="45.0094%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="44.7594%" y="693" width="0.0103%" height="15" fill="rgb(246,186,42)" fg:x="8686" fg:w="2"/><text x="45.0094%" y="703.50"></text></g><g><title>revm::handler::mainnet::post_execution::output (2 samples, 0.01%)</title><rect x="44.7594%" y="677" width="0.0103%" height="15" fill="rgb(221,169,15)" fg:x="8686" fg:w="2"/><text x="45.0094%" y="687.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (3 samples, 0.02%)</title><rect x="44.7800%" y="581" width="0.0155%" height="15" fill="rgb(235,108,21)" fg:x="8690" fg:w="3"/><text x="45.0300%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="44.7800%" y="565" width="0.0155%" height="15" fill="rgb(219,148,30)" fg:x="8690" fg:w="3"/><text x="45.0300%" y="575.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="44.7851%" y="549" width="0.0103%" height="15" fill="rgb(220,109,5)" fg:x="8691" fg:w="2"/><text x="45.0351%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256 (3 samples, 0.02%)</title><rect x="44.8109%" y="549" width="0.0155%" height="15" fill="rgb(213,203,48)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (3 samples, 0.02%)</title><rect x="44.8109%" y="533" width="0.0155%" height="15" fill="rgb(244,71,33)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="543.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (3 samples, 0.02%)</title><rect x="44.8109%" y="517" width="0.0155%" height="15" fill="rgb(209,23,2)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (3 samples, 0.02%)</title><rect x="44.8109%" y="501" width="0.0155%" height="15" fill="rgb(219,97,7)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (3 samples, 0.02%)</title><rect x="44.8109%" y="485" width="0.0155%" height="15" fill="rgb(216,161,23)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (3 samples, 0.02%)</title><rect x="44.8109%" y="469" width="0.0155%" height="15" fill="rgb(207,45,42)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (3 samples, 0.02%)</title><rect x="44.8109%" y="453" width="0.0155%" height="15" fill="rgb(241,61,4)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (3 samples, 0.02%)</title><rect x="44.8109%" y="437" width="0.0155%" height="15" fill="rgb(236,170,1)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (3 samples, 0.02%)</title><rect x="44.8109%" y="421" width="0.0155%" height="15" fill="rgb(239,72,5)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (3 samples, 0.02%)</title><rect x="44.8109%" y="405" width="0.0155%" height="15" fill="rgb(214,13,50)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (3 samples, 0.02%)</title><rect x="44.8109%" y="389" width="0.0155%" height="15" fill="rgb(224,88,9)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="399.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (3 samples, 0.02%)</title><rect x="44.8109%" y="373" width="0.0155%" height="15" fill="rgb(238,192,34)" fg:x="8696" fg:w="3"/><text x="45.0609%" y="383.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="44.8315%" y="517" width="0.0258%" height="15" fill="rgb(217,203,50)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="44.8315%" y="501" width="0.0258%" height="15" fill="rgb(241,123,32)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="44.8315%" y="485" width="0.0258%" height="15" fill="rgb(248,151,39)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="44.8315%" y="469" width="0.0258%" height="15" fill="rgb(208,89,6)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="44.8315%" y="453" width="0.0258%" height="15" fill="rgb(254,43,26)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="463.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="44.8315%" y="437" width="0.0258%" height="15" fill="rgb(216,158,13)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="44.8315%" y="421" width="0.0258%" height="15" fill="rgb(212,47,37)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="44.8315%" y="405" width="0.0258%" height="15" fill="rgb(254,16,10)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="44.8315%" y="389" width="0.0258%" height="15" fill="rgb(223,228,16)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="44.8315%" y="373" width="0.0258%" height="15" fill="rgb(249,108,50)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="44.8315%" y="357" width="0.0258%" height="15" fill="rgb(208,220,5)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="44.8315%" y="341" width="0.0258%" height="15" fill="rgb(217,89,48)" fg:x="8700" fg:w="5"/><text x="45.0815%" y="351.50"></text></g><g><title>alloy_primitives::utils::keccak256 (2 samples, 0.01%)</title><rect x="44.8624%" y="485" width="0.0103%" height="15" fill="rgb(212,113,41)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (2 samples, 0.01%)</title><rect x="44.8624%" y="469" width="0.0103%" height="15" fill="rgb(231,127,5)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (2 samples, 0.01%)</title><rect x="44.8624%" y="453" width="0.0103%" height="15" fill="rgb(217,141,17)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (2 samples, 0.01%)</title><rect x="44.8624%" y="437" width="0.0103%" height="15" fill="rgb(245,125,54)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (2 samples, 0.01%)</title><rect x="44.8624%" y="421" width="0.0103%" height="15" fill="rgb(248,125,3)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (2 samples, 0.01%)</title><rect x="44.8624%" y="405" width="0.0103%" height="15" fill="rgb(236,119,51)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (2 samples, 0.01%)</title><rect x="44.8624%" y="389" width="0.0103%" height="15" fill="rgb(239,99,8)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (2 samples, 0.01%)</title><rect x="44.8624%" y="373" width="0.0103%" height="15" fill="rgb(224,228,4)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (2 samples, 0.01%)</title><rect x="44.8624%" y="357" width="0.0103%" height="15" fill="rgb(220,131,45)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (2 samples, 0.01%)</title><rect x="44.8624%" y="341" width="0.0103%" height="15" fill="rgb(215,62,5)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="351.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (2 samples, 0.01%)</title><rect x="44.8624%" y="325" width="0.0103%" height="15" fill="rgb(253,12,24)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="335.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (2 samples, 0.01%)</title><rect x="44.8624%" y="309" width="0.0103%" height="15" fill="rgb(248,120,50)" fg:x="8706" fg:w="2"/><text x="45.1124%" y="319.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="44.8830%" y="469" width="0.0361%" height="15" fill="rgb(245,194,10)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="44.8830%" y="453" width="0.0361%" height="15" fill="rgb(241,149,38)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="44.8830%" y="437" width="0.0361%" height="15" fill="rgb(219,215,7)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="44.8830%" y="421" width="0.0361%" height="15" fill="rgb(208,120,31)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="431.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="44.8830%" y="405" width="0.0361%" height="15" fill="rgb(244,30,8)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="44.8830%" y="389" width="0.0361%" height="15" fill="rgb(238,35,44)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="44.8830%" y="373" width="0.0361%" height="15" fill="rgb(243,218,37)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="44.8830%" y="357" width="0.0361%" height="15" fill="rgb(218,169,10)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="44.8830%" y="341" width="0.0361%" height="15" fill="rgb(221,144,10)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="44.8830%" y="325" width="0.0361%" height="15" fill="rgb(226,41,38)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="335.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="44.8830%" y="309" width="0.0361%" height="15" fill="rgb(228,3,1)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="319.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="44.8830%" y="293" width="0.0361%" height="15" fill="rgb(209,129,12)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.04%)</title><rect x="44.8830%" y="277" width="0.0361%" height="15" fill="rgb(213,136,33)" fg:x="8710" fg:w="7"/><text x="45.1330%" y="287.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (3 samples, 0.02%)</title><rect x="44.9191%" y="453" width="0.0155%" height="15" fill="rgb(209,181,29)" fg:x="8717" fg:w="3"/><text x="45.1691%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="44.9191%" y="437" width="0.0155%" height="15" fill="rgb(234,173,18)" fg:x="8717" fg:w="3"/><text x="45.1691%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="44.9243%" y="421" width="0.0103%" height="15" fill="rgb(227,73,47)" fg:x="8718" fg:w="2"/><text x="45.1743%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="44.9243%" y="405" width="0.0103%" height="15" fill="rgb(234,9,34)" fg:x="8718" fg:w="2"/><text x="45.1743%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="44.9243%" y="389" width="0.0103%" height="15" fill="rgb(235,172,15)" fg:x="8718" fg:w="2"/><text x="45.1743%" y="399.50"></text></g><g><title>rlp::rlpin::Rlp::at (2 samples, 0.01%)</title><rect x="44.9346%" y="453" width="0.0103%" height="15" fill="rgb(245,61,2)" fg:x="8720" fg:w="2"/><text x="45.1846%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (21 samples, 0.11%)</title><rect x="44.8573%" y="517" width="0.1082%" height="15" fill="rgb(238,39,47)" fg:x="8705" fg:w="21"/><text x="45.1073%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (21 samples, 0.11%)</title><rect x="44.8573%" y="501" width="0.1082%" height="15" fill="rgb(234,37,24)" fg:x="8705" fg:w="21"/><text x="45.1073%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (17 samples, 0.09%)</title><rect x="44.8779%" y="485" width="0.0876%" height="15" fill="rgb(248,223,24)" fg:x="8709" fg:w="17"/><text x="45.1279%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (9 samples, 0.05%)</title><rect x="44.9191%" y="469" width="0.0464%" height="15" fill="rgb(223,12,15)" fg:x="8717" fg:w="9"/><text x="45.1691%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (3 samples, 0.02%)</title><rect x="44.9500%" y="453" width="0.0155%" height="15" fill="rgb(249,6,3)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (3 samples, 0.02%)</title><rect x="44.9500%" y="437" width="0.0155%" height="15" fill="rgb(237,105,33)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="44.9500%" y="421" width="0.0155%" height="15" fill="rgb(252,208,35)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="44.9500%" y="405" width="0.0155%" height="15" fill="rgb(215,181,35)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="415.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="44.9500%" y="389" width="0.0155%" height="15" fill="rgb(246,212,3)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="399.50"></text></g><g><title>rlp::rlpin::Rlp::at (3 samples, 0.02%)</title><rect x="44.9500%" y="373" width="0.0155%" height="15" fill="rgb(247,156,24)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="383.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (3 samples, 0.02%)</title><rect x="44.9500%" y="357" width="0.0155%" height="15" fill="rgb(248,9,31)" fg:x="8723" fg:w="3"/><text x="45.2000%" y="367.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (3 samples, 0.02%)</title><rect x="44.9758%" y="469" width="0.0155%" height="15" fill="rgb(234,26,45)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (3 samples, 0.02%)</title><rect x="44.9758%" y="453" width="0.0155%" height="15" fill="rgb(249,11,32)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (3 samples, 0.02%)</title><rect x="44.9758%" y="437" width="0.0155%" height="15" fill="rgb(249,162,33)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="447.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (3 samples, 0.02%)</title><rect x="44.9758%" y="421" width="0.0155%" height="15" fill="rgb(232,4,32)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (3 samples, 0.02%)</title><rect x="44.9758%" y="405" width="0.0155%" height="15" fill="rgb(212,5,45)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (3 samples, 0.02%)</title><rect x="44.9758%" y="389" width="0.0155%" height="15" fill="rgb(227,95,13)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (3 samples, 0.02%)</title><rect x="44.9758%" y="373" width="0.0155%" height="15" fill="rgb(223,205,10)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (3 samples, 0.02%)</title><rect x="44.9758%" y="357" width="0.0155%" height="15" fill="rgb(222,178,8)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="367.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (3 samples, 0.02%)</title><rect x="44.9758%" y="341" width="0.0155%" height="15" fill="rgb(216,13,22)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="351.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (3 samples, 0.02%)</title><rect x="44.9758%" y="325" width="0.0155%" height="15" fill="rgb(240,167,12)" fg:x="8728" fg:w="3"/><text x="45.2258%" y="335.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="44.9706%" y="501" width="0.0258%" height="15" fill="rgb(235,68,35)" fg:x="8727" fg:w="5"/><text x="45.2206%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="44.9706%" y="485" width="0.0258%" height="15" fill="rgb(253,40,27)" fg:x="8727" fg:w="5"/><text x="45.2206%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="44.9964%" y="501" width="0.0103%" height="15" fill="rgb(214,19,28)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="44.9964%" y="485" width="0.0103%" height="15" fill="rgb(210,167,45)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="44.9964%" y="469" width="0.0103%" height="15" fill="rgb(232,97,40)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="44.9964%" y="453" width="0.0103%" height="15" fill="rgb(250,35,23)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="44.9964%" y="437" width="0.0103%" height="15" fill="rgb(248,47,53)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="447.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="44.9964%" y="421" width="0.0103%" height="15" fill="rgb(226,58,50)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="431.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="44.9964%" y="405" width="0.0103%" height="15" fill="rgb(217,105,26)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="415.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="44.9964%" y="389" width="0.0103%" height="15" fill="rgb(208,64,1)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="44.9964%" y="373" width="0.0103%" height="15" fill="rgb(214,80,1)" fg:x="8732" fg:w="2"/><text x="45.2464%" y="383.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (2 samples, 0.01%)</title><rect x="45.0067%" y="485" width="0.0103%" height="15" fill="rgb(206,175,26)" fg:x="8734" fg:w="2"/><text x="45.2567%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::at (9 samples, 0.05%)</title><rect x="45.0170%" y="485" width="0.0464%" height="15" fill="rgb(235,156,37)" fg:x="8736" fg:w="9"/><text x="45.2670%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="45.0531%" y="469" width="0.0103%" height="15" fill="rgb(213,100,9)" fg:x="8743" fg:w="2"/><text x="45.3031%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::consume_items (2 samples, 0.01%)</title><rect x="45.0531%" y="453" width="0.0103%" height="15" fill="rgb(241,15,13)" fg:x="8743" fg:w="2"/><text x="45.3031%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.03%)</title><rect x="45.0685%" y="341" width="0.0258%" height="15" fill="rgb(205,97,43)" fg:x="8746" fg:w="5"/><text x="45.3185%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (53 samples, 0.27%)</title><rect x="44.8263%" y="549" width="0.2731%" height="15" fill="rgb(216,106,32)" fg:x="8699" fg:w="53"/><text x="45.0763%" y="559.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (53 samples, 0.27%)</title><rect x="44.8263%" y="533" width="0.2731%" height="15" fill="rgb(226,200,8)" fg:x="8699" fg:w="53"/><text x="45.0763%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (26 samples, 0.13%)</title><rect x="44.9655%" y="517" width="0.1340%" height="15" fill="rgb(244,54,29)" fg:x="8726" fg:w="26"/><text x="45.2155%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (18 samples, 0.09%)</title><rect x="45.0067%" y="501" width="0.0928%" height="15" fill="rgb(252,169,12)" fg:x="8734" fg:w="18"/><text x="45.2567%" y="511.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (7 samples, 0.04%)</title><rect x="45.0634%" y="485" width="0.0361%" height="15" fill="rgb(231,199,11)" fg:x="8745" fg:w="7"/><text x="45.3134%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (7 samples, 0.04%)</title><rect x="45.0634%" y="469" width="0.0361%" height="15" fill="rgb(233,191,18)" fg:x="8745" fg:w="7"/><text x="45.3134%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 0.04%)</title><rect x="45.0634%" y="453" width="0.0361%" height="15" fill="rgb(215,83,47)" fg:x="8745" fg:w="7"/><text x="45.3134%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.04%)</title><rect x="45.0634%" y="437" width="0.0361%" height="15" fill="rgb(251,67,19)" fg:x="8745" fg:w="7"/><text x="45.3134%" y="447.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="45.0634%" y="421" width="0.0361%" height="15" fill="rgb(240,7,20)" fg:x="8745" fg:w="7"/><text x="45.3134%" y="431.50"></text></g><g><title>rlp::rlpin::Rlp::at (7 samples, 0.04%)</title><rect x="45.0634%" y="405" width="0.0361%" height="15" fill="rgb(210,150,26)" fg:x="8745" fg:w="7"/><text x="45.3134%" y="415.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (6 samples, 0.03%)</title><rect x="45.0685%" y="389" width="0.0309%" height="15" fill="rgb(228,75,42)" fg:x="8746" fg:w="6"/><text x="45.3185%" y="399.50"></text></g><g><title>rlp::rlpin::Rlp::consume_items (6 samples, 0.03%)</title><rect x="45.0685%" y="373" width="0.0309%" height="15" fill="rgb(237,134,48)" fg:x="8746" fg:w="6"/><text x="45.3185%" y="383.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (6 samples, 0.03%)</title><rect x="45.0685%" y="357" width="0.0309%" height="15" fill="rgb(205,80,50)" fg:x="8746" fg:w="6"/><text x="45.3185%" y="367.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="45.1098%" y="533" width="0.0361%" height="15" fill="rgb(217,74,48)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="543.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="45.1098%" y="517" width="0.0361%" height="15" fill="rgb(205,82,50)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="45.1098%" y="501" width="0.0361%" height="15" fill="rgb(228,1,33)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="45.1098%" y="485" width="0.0361%" height="15" fill="rgb(214,50,23)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="45.1098%" y="469" width="0.0361%" height="15" fill="rgb(210,62,9)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="45.1098%" y="453" width="0.0361%" height="15" fill="rgb(210,104,37)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="45.1098%" y="437" width="0.0361%" height="15" fill="rgb(232,104,43)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="45.1098%" y="421" width="0.0361%" height="15" fill="rgb(244,52,6)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="45.1098%" y="405" width="0.0361%" height="15" fill="rgb(211,174,52)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="45.1098%" y="389" width="0.0361%" height="15" fill="rgb(229,48,4)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="399.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="45.1098%" y="373" width="0.0361%" height="15" fill="rgb(205,155,16)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="383.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="45.1098%" y="357" width="0.0361%" height="15" fill="rgb(211,141,53)" fg:x="8754" fg:w="7"/><text x="45.3598%" y="367.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (72 samples, 0.37%)</title><rect x="44.7800%" y="597" width="0.3710%" height="15" fill="rgb(240,148,11)" fg:x="8690" fg:w="72"/><text x="45.0300%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (69 samples, 0.36%)</title><rect x="44.7954%" y="581" width="0.3556%" height="15" fill="rgb(214,45,23)" fg:x="8693" fg:w="69"/><text x="45.0454%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (68 samples, 0.35%)</title><rect x="44.8006%" y="565" width="0.3504%" height="15" fill="rgb(248,74,26)" fg:x="8694" fg:w="68"/><text x="45.0506%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (10 samples, 0.05%)</title><rect x="45.0995%" y="549" width="0.0515%" height="15" fill="rgb(218,121,16)" fg:x="8752" fg:w="10"/><text x="45.3495%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (3 samples, 0.02%)</title><rect x="45.1561%" y="597" width="0.0155%" height="15" fill="rgb(218,10,47)" fg:x="8763" fg:w="3"/><text x="45.4061%" y="607.50"></text></g><g><title>zilliqa::state::State::get_account (84 samples, 0.43%)</title><rect x="44.7800%" y="613" width="0.4329%" height="15" fill="rgb(227,99,14)" fg:x="8690" fg:w="84"/><text x="45.0300%" y="623.50"></text></g><g><title>zilliqa::state::State::account_key (8 samples, 0.04%)</title><rect x="45.1716%" y="597" width="0.0412%" height="15" fill="rgb(229,83,46)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="607.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (8 samples, 0.04%)</title><rect x="45.1716%" y="581" width="0.0412%" height="15" fill="rgb(228,25,1)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (8 samples, 0.04%)</title><rect x="45.1716%" y="565" width="0.0412%" height="15" fill="rgb(252,190,15)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="575.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (8 samples, 0.04%)</title><rect x="45.1716%" y="549" width="0.0412%" height="15" fill="rgb(213,103,51)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="559.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (8 samples, 0.04%)</title><rect x="45.1716%" y="533" width="0.0412%" height="15" fill="rgb(220,38,44)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="543.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (8 samples, 0.04%)</title><rect x="45.1716%" y="517" width="0.0412%" height="15" fill="rgb(210,45,26)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="527.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (8 samples, 0.04%)</title><rect x="45.1716%" y="501" width="0.0412%" height="15" fill="rgb(205,95,48)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="511.50"></text></g><g><title>keccak::p1600 (8 samples, 0.04%)</title><rect x="45.1716%" y="485" width="0.0412%" height="15" fill="rgb(225,179,37)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="495.50"></text></g><g><title>keccak::keccak_p (8 samples, 0.04%)</title><rect x="45.1716%" y="469" width="0.0412%" height="15" fill="rgb(230,209,3)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="479.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (8 samples, 0.04%)</title><rect x="45.1716%" y="453" width="0.0412%" height="15" fill="rgb(248,12,46)" fg:x="8766" fg:w="8"/><text x="45.4216%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="45.2128%" y="517" width="0.0155%" height="15" fill="rgb(234,18,0)" fg:x="8774" fg:w="3"/><text x="45.4628%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="45.2180%" y="501" width="0.0103%" height="15" fill="rgb(238,197,14)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="45.2180%" y="485" width="0.0103%" height="15" fill="rgb(251,162,48)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="495.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="45.2180%" y="469" width="0.0103%" height="15" fill="rgb(237,73,42)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="479.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="45.2180%" y="453" width="0.0103%" height="15" fill="rgb(211,108,8)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="463.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="45.2180%" y="437" width="0.0103%" height="15" fill="rgb(213,45,22)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="447.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="45.2180%" y="421" width="0.0103%" height="15" fill="rgb(252,154,5)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="431.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="45.2180%" y="405" width="0.0103%" height="15" fill="rgb(221,79,52)" fg:x="8775" fg:w="2"/><text x="45.4680%" y="415.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (4 samples, 0.02%)</title><rect x="45.2128%" y="581" width="0.0206%" height="15" fill="rgb(229,220,36)" fg:x="8774" fg:w="4"/><text x="45.4628%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="45.2128%" y="565" width="0.0206%" height="15" fill="rgb(211,17,16)" fg:x="8774" fg:w="4"/><text x="45.4628%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="45.2128%" y="549" width="0.0206%" height="15" fill="rgb(222,55,31)" fg:x="8774" fg:w="4"/><text x="45.4628%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="45.2128%" y="533" width="0.0206%" height="15" fill="rgb(221,221,31)" fg:x="8774" fg:w="4"/><text x="45.4628%" y="543.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="45.2334%" y="517" width="0.0361%" height="15" fill="rgb(227,168,26)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="45.2334%" y="501" width="0.0361%" height="15" fill="rgb(224,139,9)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="45.2334%" y="485" width="0.0361%" height="15" fill="rgb(254,172,0)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="45.2334%" y="469" width="0.0361%" height="15" fill="rgb(235,203,1)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="45.2334%" y="453" width="0.0361%" height="15" fill="rgb(216,205,24)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="45.2334%" y="437" width="0.0361%" height="15" fill="rgb(233,24,6)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="45.2334%" y="421" width="0.0361%" height="15" fill="rgb(244,110,9)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="45.2334%" y="405" width="0.0361%" height="15" fill="rgb(239,222,42)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="45.2334%" y="389" width="0.0361%" height="15" fill="rgb(218,145,13)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="399.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="45.2334%" y="373" width="0.0361%" height="15" fill="rgb(207,69,11)" fg:x="8778" fg:w="7"/><text x="45.4834%" y="383.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="45.2334%" y="549" width="0.0412%" height="15" fill="rgb(220,223,22)" fg:x="8778" fg:w="8"/><text x="45.4834%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="45.2334%" y="533" width="0.0412%" height="15" fill="rgb(245,102,5)" fg:x="8778" fg:w="8"/><text x="45.4834%" y="543.50"></text></g><g><title>eth_trie::nibbles::Nibbles::offset (2 samples, 0.01%)</title><rect x="45.2798%" y="533" width="0.0103%" height="15" fill="rgb(211,148,2)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="543.50"></text></g><g><title>eth_trie::nibbles::Nibbles::slice (2 samples, 0.01%)</title><rect x="45.2798%" y="517" width="0.0103%" height="15" fill="rgb(241,13,44)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="527.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_hex (2 samples, 0.01%)</title><rect x="45.2798%" y="501" width="0.0103%" height="15" fill="rgb(219,137,21)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="45.2798%" y="485" width="0.0103%" height="15" fill="rgb(242,206,5)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="45.2798%" y="469" width="0.0103%" height="15" fill="rgb(217,114,22)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="45.2798%" y="453" width="0.0103%" height="15" fill="rgb(253,206,42)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="45.2798%" y="437" width="0.0103%" height="15" fill="rgb(236,102,18)" fg:x="8787" fg:w="2"/><text x="45.5298%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="45.3107%" y="485" width="0.0309%" height="15" fill="rgb(208,59,49)" fg:x="8793" fg:w="6"/><text x="45.5607%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="45.3107%" y="469" width="0.0309%" height="15" fill="rgb(215,194,28)" fg:x="8793" fg:w="6"/><text x="45.5607%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="45.3107%" y="453" width="0.0309%" height="15" fill="rgb(243,207,11)" fg:x="8793" fg:w="6"/><text x="45.5607%" y="463.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="45.3107%" y="437" width="0.0309%" height="15" fill="rgb(254,179,35)" fg:x="8793" fg:w="6"/><text x="45.5607%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="45.3159%" y="421" width="0.0258%" height="15" fill="rgb(235,97,3)" fg:x="8794" fg:w="5"/><text x="45.5659%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="45.3159%" y="405" width="0.0258%" height="15" fill="rgb(215,155,33)" fg:x="8794" fg:w="5"/><text x="45.5659%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="45.3159%" y="389" width="0.0258%" height="15" fill="rgb(223,128,12)" fg:x="8794" fg:w="5"/><text x="45.5659%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="45.3159%" y="373" width="0.0258%" height="15" fill="rgb(208,157,18)" fg:x="8794" fg:w="5"/><text x="45.5659%" y="383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="45.3159%" y="357" width="0.0258%" height="15" fill="rgb(249,70,54)" fg:x="8794" fg:w="5"/><text x="45.5659%" y="367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="45.3159%" y="341" width="0.0258%" height="15" fill="rgb(244,118,24)" fg:x="8794" fg:w="5"/><text x="45.5659%" y="351.50"></text></g><g><title>alloy_primitives::utils::keccak256 (8 samples, 0.04%)</title><rect x="45.3056%" y="517" width="0.0412%" height="15" fill="rgb(211,54,0)" fg:x="8792" fg:w="8"/><text x="45.5556%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (8 samples, 0.04%)</title><rect x="45.3056%" y="501" width="0.0412%" height="15" fill="rgb(245,137,45)" fg:x="8792" fg:w="8"/><text x="45.5556%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="45.3520%" y="485" width="0.0361%" height="15" fill="rgb(232,154,31)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="45.3520%" y="469" width="0.0361%" height="15" fill="rgb(253,6,39)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="45.3520%" y="453" width="0.0361%" height="15" fill="rgb(234,183,24)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="45.3520%" y="437" width="0.0361%" height="15" fill="rgb(252,84,40)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="45.3520%" y="421" width="0.0361%" height="15" fill="rgb(224,65,2)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="45.3520%" y="405" width="0.0361%" height="15" fill="rgb(229,38,24)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="45.3520%" y="389" width="0.0361%" height="15" fill="rgb(218,131,50)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="45.3520%" y="373" width="0.0361%" height="15" fill="rgb(233,106,18)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="45.3520%" y="357" width="0.0361%" height="15" fill="rgb(220,216,11)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="45.3520%" y="341" width="0.0361%" height="15" fill="rgb(251,100,45)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="351.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="45.3520%" y="325" width="0.0361%" height="15" fill="rgb(235,143,32)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="335.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="45.3520%" y="309" width="0.0361%" height="15" fill="rgb(248,124,34)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.04%)</title><rect x="45.3520%" y="293" width="0.0361%" height="15" fill="rgb(225,221,4)" fg:x="8801" fg:w="7"/><text x="45.6020%" y="303.50"></text></g><g><title>sqlite3VdbeDelete (2 samples, 0.01%)</title><rect x="45.4189%" y="341" width="0.0103%" height="15" fill="rgb(242,27,43)" fg:x="8814" fg:w="2"/><text x="45.6689%" y="351.50"></text></g><g><title>sqlite3VdbeClearObject (2 samples, 0.01%)</title><rect x="45.4189%" y="325" width="0.0103%" height="15" fill="rgb(227,54,8)" fg:x="8814" fg:w="2"/><text x="45.6689%" y="335.50"></text></g><g><title>releaseMemArray (2 samples, 0.01%)</title><rect x="45.4189%" y="309" width="0.0103%" height="15" fill="rgb(253,139,49)" fg:x="8814" fg:w="2"/><text x="45.6689%" y="319.50"></text></g><g><title>releaseMemArray (2 samples, 0.01%)</title><rect x="45.4189%" y="293" width="0.0103%" height="15" fill="rgb(231,26,43)" fg:x="8814" fg:w="2"/><text x="45.6689%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (4 samples, 0.02%)</title><rect x="45.4138%" y="437" width="0.0206%" height="15" fill="rgb(207,121,39)" fg:x="8813" fg:w="4"/><text x="45.6638%" y="447.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="45.4138%" y="421" width="0.0206%" height="15" fill="rgb(223,101,35)" fg:x="8813" fg:w="4"/><text x="45.6638%" y="431.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (4 samples, 0.02%)</title><rect x="45.4138%" y="405" width="0.0206%" height="15" fill="rgb(232,87,23)" fg:x="8813" fg:w="4"/><text x="45.6638%" y="415.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (3 samples, 0.02%)</title><rect x="45.4189%" y="389" width="0.0155%" height="15" fill="rgb(225,180,29)" fg:x="8814" fg:w="3"/><text x="45.6689%" y="399.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (3 samples, 0.02%)</title><rect x="45.4189%" y="373" width="0.0155%" height="15" fill="rgb(225,25,17)" fg:x="8814" fg:w="3"/><text x="45.6689%" y="383.50"></text></g><g><title>sqlite3_finalize (3 samples, 0.02%)</title><rect x="45.4189%" y="357" width="0.0155%" height="15" fill="rgb(223,8,52)" fg:x="8814" fg:w="3"/><text x="45.6689%" y="367.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="45.4550%" y="293" width="0.0103%" height="15" fill="rgb(246,42,21)" fg:x="8821" fg:w="2"/><text x="45.7050%" y="303.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.01%)</title><rect x="45.4653%" y="293" width="0.0103%" height="15" fill="rgb(205,64,43)" fg:x="8823" fg:w="2"/><text x="45.7153%" y="303.50"></text></g><g><title>yy_find_shift_action (11 samples, 0.06%)</title><rect x="45.4756%" y="277" width="0.0567%" height="15" fill="rgb(221,160,13)" fg:x="8825" fg:w="11"/><text x="45.7256%" y="287.50"></text></g><g><title>selectInnerLoop (2 samples, 0.01%)</title><rect x="45.5993%" y="245" width="0.0103%" height="15" fill="rgb(239,58,35)" fg:x="8849" fg:w="2"/><text x="45.8493%" y="255.50"></text></g><g><title>generateColumnTypes (3 samples, 0.02%)</title><rect x="45.6148%" y="229" width="0.0155%" height="15" fill="rgb(251,26,40)" fg:x="8852" fg:w="3"/><text x="45.8648%" y="239.50"></text></g><g><title>sqlite3VdbeSetColName (2 samples, 0.01%)</title><rect x="45.6199%" y="213" width="0.0103%" height="15" fill="rgb(247,0,4)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="223.50"></text></g><g><title>sqlite3VdbeSetColName (2 samples, 0.01%)</title><rect x="45.6199%" y="197" width="0.0103%" height="15" fill="rgb(218,130,10)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="207.50"></text></g><g><title>sqlite3VdbeMemSetStr (2 samples, 0.01%)</title><rect x="45.6199%" y="181" width="0.0103%" height="15" fill="rgb(239,32,7)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="191.50"></text></g><g><title>sqlite3VdbeMemClearAndResize (2 samples, 0.01%)</title><rect x="45.6199%" y="165" width="0.0103%" height="15" fill="rgb(210,192,24)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="175.50"></text></g><g><title>sqlite3VdbeMemClearAndResize (2 samples, 0.01%)</title><rect x="45.6199%" y="149" width="0.0103%" height="15" fill="rgb(226,212,17)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="159.50"></text></g><g><title>sqlite3VdbeMemGrow (2 samples, 0.01%)</title><rect x="45.6199%" y="133" width="0.0103%" height="15" fill="rgb(219,201,28)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="143.50"></text></g><g><title>sqlite3DbMallocRaw (2 samples, 0.01%)</title><rect x="45.6199%" y="117" width="0.0103%" height="15" fill="rgb(235,207,41)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="127.50"></text></g><g><title>sqlite3DbMallocRawNN (2 samples, 0.01%)</title><rect x="45.6199%" y="101" width="0.0103%" height="15" fill="rgb(241,95,54)" fg:x="8853" fg:w="2"/><text x="45.8699%" y="111.50"></text></g><g><title>sqlite3GenerateColumnNames (5 samples, 0.03%)</title><rect x="45.6096%" y="245" width="0.0258%" height="15" fill="rgb(248,12,23)" fg:x="8851" fg:w="5"/><text x="45.8596%" y="255.50"></text></g><g><title>sqlite3ResolveExprListNames (2 samples, 0.01%)</title><rect x="45.6405%" y="181" width="0.0103%" height="15" fill="rgb(228,173,4)" fg:x="8857" fg:w="2"/><text x="45.8905%" y="191.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="45.6405%" y="165" width="0.0103%" height="15" fill="rgb(254,99,5)" fg:x="8857" fg:w="2"/><text x="45.8905%" y="175.50"></text></g><g><title>resolveExprStep (2 samples, 0.01%)</title><rect x="45.6405%" y="149" width="0.0103%" height="15" fill="rgb(212,184,17)" fg:x="8857" fg:w="2"/><text x="45.8905%" y="159.50"></text></g><g><title>lookupName (2 samples, 0.01%)</title><rect x="45.6405%" y="133" width="0.0103%" height="15" fill="rgb(252,174,1)" fg:x="8857" fg:w="2"/><text x="45.8905%" y="143.50"></text></g><g><title>sqlite3ResolveSelectNames (5 samples, 0.03%)</title><rect x="45.6354%" y="229" width="0.0258%" height="15" fill="rgb(241,118,51)" fg:x="8856" fg:w="5"/><text x="45.8854%" y="239.50"></text></g><g><title>sqlite3WalkSelect (5 samples, 0.03%)</title><rect x="45.6354%" y="213" width="0.0258%" height="15" fill="rgb(227,94,47)" fg:x="8856" fg:w="5"/><text x="45.8854%" y="223.50"></text></g><g><title>resolveSelectStep (5 samples, 0.03%)</title><rect x="45.6354%" y="197" width="0.0258%" height="15" fill="rgb(229,104,2)" fg:x="8856" fg:w="5"/><text x="45.8854%" y="207.50"></text></g><g><title>sqlite3ResolveExprNames (2 samples, 0.01%)</title><rect x="45.6508%" y="181" width="0.0103%" height="15" fill="rgb(219,28,31)" fg:x="8859" fg:w="2"/><text x="45.9008%" y="191.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="45.6508%" y="165" width="0.0103%" height="15" fill="rgb(233,109,36)" fg:x="8859" fg:w="2"/><text x="45.9008%" y="175.50"></text></g><g><title>selectExpander (2 samples, 0.01%)</title><rect x="45.6611%" y="197" width="0.0103%" height="15" fill="rgb(246,88,11)" fg:x="8861" fg:w="2"/><text x="45.9111%" y="207.50"></text></g><g><title>sqlite3SelectPopWith (2 samples, 0.01%)</title><rect x="45.6714%" y="197" width="0.0103%" height="15" fill="rgb(209,212,17)" fg:x="8863" fg:w="2"/><text x="45.9214%" y="207.50"></text></g><g><title>sqlite3SelectPrep (10 samples, 0.05%)</title><rect x="45.6354%" y="245" width="0.0515%" height="15" fill="rgb(243,59,29)" fg:x="8856" fg:w="10"/><text x="45.8854%" y="255.50"></text></g><g><title>sqlite3SelectExpand (5 samples, 0.03%)</title><rect x="45.6611%" y="229" width="0.0258%" height="15" fill="rgb(244,205,48)" fg:x="8861" fg:w="5"/><text x="45.9111%" y="239.50"></text></g><g><title>sqlite3WalkSelect (5 samples, 0.03%)</title><rect x="45.6611%" y="213" width="0.0258%" height="15" fill="rgb(227,30,6)" fg:x="8861" fg:w="5"/><text x="45.9111%" y="223.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (7 samples, 0.04%)</title><rect x="45.7127%" y="229" width="0.0361%" height="15" fill="rgb(220,205,48)" fg:x="8871" fg:w="7"/><text x="45.9627%" y="239.50"></text></g><g><title>codeAllEqualityTerms (5 samples, 0.03%)</title><rect x="45.7230%" y="213" width="0.0258%" height="15" fill="rgb(250,94,14)" fg:x="8873" fg:w="5"/><text x="45.9730%" y="223.50"></text></g><g><title>sqlite3DbStrDup (2 samples, 0.01%)</title><rect x="45.7384%" y="197" width="0.0103%" height="15" fill="rgb(216,119,42)" fg:x="8876" fg:w="2"/><text x="45.9884%" y="207.50"></text></g><g><title>sqlite3WhereBegin (14 samples, 0.07%)</title><rect x="45.6869%" y="245" width="0.0721%" height="15" fill="rgb(232,155,0)" fg:x="8866" fg:w="14"/><text x="45.9369%" y="255.50"></text></g><g><title>whereShortCut (2 samples, 0.01%)</title><rect x="45.7487%" y="229" width="0.0103%" height="15" fill="rgb(212,24,32)" fg:x="8878" fg:w="2"/><text x="45.9987%" y="239.50"></text></g><g><title>whereScanNext (2 samples, 0.01%)</title><rect x="45.7487%" y="213" width="0.0103%" height="15" fill="rgb(216,69,20)" fg:x="8878" fg:w="2"/><text x="45.9987%" y="223.50"></text></g><g><title>sqlite3Select (33 samples, 0.17%)</title><rect x="45.5941%" y="261" width="0.1701%" height="15" fill="rgb(229,73,31)" fg:x="8848" fg:w="33"/><text x="45.8441%" y="271.50"></text></g><g><title>sqlite3SrcListAppendFromTerm (3 samples, 0.02%)</title><rect x="45.7642%" y="261" width="0.0155%" height="15" fill="rgb(224,219,20)" fg:x="8881" fg:w="3"/><text x="46.0142%" y="271.50"></text></g><g><title>sqlite3SrcListAppend (3 samples, 0.02%)</title><rect x="45.7642%" y="245" width="0.0155%" height="15" fill="rgb(215,146,41)" fg:x="8881" fg:w="3"/><text x="46.0142%" y="255.50"></text></g><g><title>rusqlite::Connection::prepare (68 samples, 0.35%)</title><rect x="45.4344%" y="437" width="0.3504%" height="15" fill="rgb(244,71,31)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="447.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (68 samples, 0.35%)</title><rect x="45.4344%" y="421" width="0.3504%" height="15" fill="rgb(224,24,11)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="431.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (68 samples, 0.35%)</title><rect x="45.4344%" y="405" width="0.3504%" height="15" fill="rgb(229,76,15)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="415.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (68 samples, 0.35%)</title><rect x="45.4344%" y="389" width="0.3504%" height="15" fill="rgb(209,93,2)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="399.50"></text></g><g><title>sqlite3_prepare_v3 (68 samples, 0.35%)</title><rect x="45.4344%" y="373" width="0.3504%" height="15" fill="rgb(216,200,50)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="383.50"></text></g><g><title>sqlite3LockAndPrepare (68 samples, 0.35%)</title><rect x="45.4344%" y="357" width="0.3504%" height="15" fill="rgb(211,67,34)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="367.50"></text></g><g><title>sqlite3LockAndPrepare (68 samples, 0.35%)</title><rect x="45.4344%" y="341" width="0.3504%" height="15" fill="rgb(225,87,47)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="351.50"></text></g><g><title>sqlite3Prepare (68 samples, 0.35%)</title><rect x="45.4344%" y="325" width="0.3504%" height="15" fill="rgb(217,185,16)" fg:x="8817" fg:w="68"/><text x="45.6844%" y="335.50"></text></g><g><title>sqlite3RunParser (64 samples, 0.33%)</title><rect x="45.4550%" y="309" width="0.3298%" height="15" fill="rgb(205,0,0)" fg:x="8821" fg:w="64"/><text x="45.7050%" y="319.50"></text></g><g><title>sqlite3Parser (60 samples, 0.31%)</title><rect x="45.4756%" y="293" width="0.3092%" height="15" fill="rgb(207,116,45)" fg:x="8825" fg:w="60"/><text x="45.7256%" y="303.50"></text></g><g><title>yy_reduce (49 samples, 0.25%)</title><rect x="45.5323%" y="277" width="0.2525%" height="15" fill="rgb(221,156,26)" fg:x="8836" fg:w="49"/><text x="45.7823%" y="287.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="45.7848%" y="261" width="0.0103%" height="15" fill="rgb(213,140,4)" fg:x="8885" fg:w="2"/><text x="46.0348%" y="271.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="45.7848%" y="245" width="0.0103%" height="15" fill="rgb(231,224,15)" fg:x="8885" fg:w="2"/><text x="46.0348%" y="255.50"></text></g><g><title>sqlite3BtreeCloseCursor (2 samples, 0.01%)</title><rect x="45.7848%" y="229" width="0.0103%" height="15" fill="rgb(244,76,20)" fg:x="8885" fg:w="2"/><text x="46.0348%" y="239.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="45.7848%" y="213" width="0.0103%" height="15" fill="rgb(238,117,7)" fg:x="8885" fg:w="2"/><text x="46.0348%" y="223.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="45.7848%" y="197" width="0.0103%" height="15" fill="rgb(235,1,10)" fg:x="8885" fg:w="2"/><text x="46.0348%" y="207.50"></text></g><g><title>closeAllCursors (3 samples, 0.02%)</title><rect x="45.7848%" y="277" width="0.0155%" height="15" fill="rgb(216,165,6)" fg:x="8885" fg:w="3"/><text x="46.0348%" y="287.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (25 samples, 0.13%)</title><rect x="45.8157%" y="261" width="0.1288%" height="15" fill="rgb(246,91,35)" fg:x="8891" fg:w="25"/><text x="46.0657%" y="271.50"></text></g><g><title>pager_unlock (24 samples, 0.12%)</title><rect x="45.8209%" y="245" width="0.1237%" height="15" fill="rgb(228,96,24)" fg:x="8892" fg:w="24"/><text x="46.0709%" y="255.50"></text></g><g><title>sqlite3WalEndReadTransaction (23 samples, 0.12%)</title><rect x="45.8260%" y="229" width="0.1185%" height="15" fill="rgb(254,217,53)" fg:x="8893" fg:w="23"/><text x="46.0760%" y="239.50"></text></g><g><title>walUnlockShared (23 samples, 0.12%)</title><rect x="45.8260%" y="213" width="0.1185%" height="15" fill="rgb(209,60,0)" fg:x="8893" fg:w="23"/><text x="46.0760%" y="223.50"></text></g><g><title>walUnlockShared (23 samples, 0.12%)</title><rect x="45.8260%" y="197" width="0.1185%" height="15" fill="rgb(250,93,26)" fg:x="8893" fg:w="23"/><text x="46.0760%" y="207.50"></text></g><g><title>sqlite3OsShmLock (23 samples, 0.12%)</title><rect x="45.8260%" y="181" width="0.1185%" height="15" fill="rgb(211,9,40)" fg:x="8893" fg:w="23"/><text x="46.0760%" y="191.50"></text></g><g><title>unixShmLock (23 samples, 0.12%)</title><rect x="45.8260%" y="165" width="0.1185%" height="15" fill="rgb(242,57,20)" fg:x="8893" fg:w="23"/><text x="46.0760%" y="175.50"></text></g><g><title>unixShmSystemLock (23 samples, 0.12%)</title><rect x="45.8260%" y="149" width="0.1185%" height="15" fill="rgb(248,85,48)" fg:x="8893" fg:w="23"/><text x="46.0760%" y="159.50"></text></g><g><title>__GI___libc_fcntl64 (22 samples, 0.11%)</title><rect x="45.8312%" y="133" width="0.1134%" height="15" fill="rgb(212,117,2)" fg:x="8894" fg:w="22"/><text x="46.0812%" y="143.50"></text></g><g><title>__fcntl64_nocancel_adjusted (21 samples, 0.11%)</title><rect x="45.8363%" y="117" width="0.1082%" height="15" fill="rgb(243,19,3)" fg:x="8895" fg:w="21"/><text x="46.0863%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (32 samples, 0.16%)</title><rect x="45.7848%" y="421" width="0.1649%" height="15" fill="rgb(232,217,24)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="431.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (32 samples, 0.16%)</title><rect x="45.7848%" y="405" width="0.1649%" height="15" fill="rgb(224,175,40)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="415.50"></text></g><g><title>rusqlite::row::Rows::reset (32 samples, 0.16%)</title><rect x="45.7848%" y="389" width="0.1649%" height="15" fill="rgb(212,162,32)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="399.50"></text></g><g><title>rusqlite::statement::Statement::reset (32 samples, 0.16%)</title><rect x="45.7848%" y="373" width="0.1649%" height="15" fill="rgb(215,9,4)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="383.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (32 samples, 0.16%)</title><rect x="45.7848%" y="357" width="0.1649%" height="15" fill="rgb(242,42,7)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="367.50"></text></g><g><title>sqlite3_reset (32 samples, 0.16%)</title><rect x="45.7848%" y="341" width="0.1649%" height="15" fill="rgb(242,184,45)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="351.50"></text></g><g><title>sqlite3_reset (32 samples, 0.16%)</title><rect x="45.7848%" y="325" width="0.1649%" height="15" fill="rgb(228,111,51)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="335.50"></text></g><g><title>sqlite3VdbeReset (32 samples, 0.16%)</title><rect x="45.7848%" y="309" width="0.1649%" height="15" fill="rgb(236,147,17)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="319.50"></text></g><g><title>sqlite3VdbeHalt (32 samples, 0.16%)</title><rect x="45.7848%" y="293" width="0.1649%" height="15" fill="rgb(210,75,22)" fg:x="8885" fg:w="32"/><text x="46.0348%" y="303.50"></text></g><g><title>vdbeCommit (29 samples, 0.15%)</title><rect x="45.8003%" y="277" width="0.1494%" height="15" fill="rgb(217,159,45)" fg:x="8888" fg:w="29"/><text x="46.0503%" y="287.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (2 samples, 0.01%)</title><rect x="45.9909%" y="277" width="0.0103%" height="15" fill="rgb(245,165,53)" fg:x="8925" fg:w="2"/><text x="46.2409%" y="287.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl core::ffi::c_str::CStr&gt;::to_string_lossy (2 samples, 0.01%)</title><rect x="45.9909%" y="261" width="0.0103%" height="15" fill="rgb(251,190,50)" fg:x="8925" fg:w="2"/><text x="46.2409%" y="271.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.01%)</title><rect x="45.9909%" y="245" width="0.0103%" height="15" fill="rgb(208,203,29)" fg:x="8925" fg:w="2"/><text x="46.2409%" y="255.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="45.9909%" y="229" width="0.0103%" height="15" fill="rgb(207,209,35)" fg:x="8925" fg:w="2"/><text x="46.2409%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.01%)</title><rect x="45.9909%" y="213" width="0.0103%" height="15" fill="rgb(230,144,49)" fg:x="8925" fg:w="2"/><text x="46.2409%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.01%)</title><rect x="45.9909%" y="197" width="0.0103%" height="15" fill="rgb(229,31,6)" fg:x="8925" fg:w="2"/><text x="46.2409%" y="207.50"></text></g><g><title>walLockShared (9 samples, 0.05%)</title><rect x="46.0218%" y="149" width="0.0464%" height="15" fill="rgb(251,129,24)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="159.50"></text></g><g><title>walLockShared (9 samples, 0.05%)</title><rect x="46.0218%" y="133" width="0.0464%" height="15" fill="rgb(235,105,15)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="143.50"></text></g><g><title>sqlite3OsShmLock (9 samples, 0.05%)</title><rect x="46.0218%" y="117" width="0.0464%" height="15" fill="rgb(216,52,43)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="127.50"></text></g><g><title>unixShmLock (9 samples, 0.05%)</title><rect x="46.0218%" y="101" width="0.0464%" height="15" fill="rgb(238,144,41)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="111.50"></text></g><g><title>unixShmSystemLock (9 samples, 0.05%)</title><rect x="46.0218%" y="85" width="0.0464%" height="15" fill="rgb(243,63,9)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="95.50"></text></g><g><title>__GI___libc_fcntl64 (9 samples, 0.05%)</title><rect x="46.0218%" y="69" width="0.0464%" height="15" fill="rgb(246,208,1)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="79.50"></text></g><g><title>__fcntl64_nocancel_adjusted (9 samples, 0.05%)</title><rect x="46.0218%" y="53" width="0.0464%" height="15" fill="rgb(233,182,18)" fg:x="8931" fg:w="9"/><text x="46.2718%" y="63.50"></text></g><g><title>sqlite3BtreeBeginTrans (14 samples, 0.07%)</title><rect x="46.0012%" y="277" width="0.0721%" height="15" fill="rgb(242,224,8)" fg:x="8927" fg:w="14"/><text x="46.2512%" y="287.50"></text></g><g><title>btreeBeginTrans (14 samples, 0.07%)</title><rect x="46.0012%" y="261" width="0.0721%" height="15" fill="rgb(243,54,37)" fg:x="8927" fg:w="14"/><text x="46.2512%" y="271.50"></text></g><g><title>lockBtree (14 samples, 0.07%)</title><rect x="46.0012%" y="245" width="0.0721%" height="15" fill="rgb(233,192,12)" fg:x="8927" fg:w="14"/><text x="46.2512%" y="255.50"></text></g><g><title>sqlite3PagerSharedLock (11 samples, 0.06%)</title><rect x="46.0167%" y="229" width="0.0567%" height="15" fill="rgb(251,192,53)" fg:x="8930" fg:w="11"/><text x="46.2667%" y="239.50"></text></g><g><title>pagerBeginReadTransaction (11 samples, 0.06%)</title><rect x="46.0167%" y="213" width="0.0567%" height="15" fill="rgb(246,141,26)" fg:x="8930" fg:w="11"/><text x="46.2667%" y="223.50"></text></g><g><title>sqlite3WalBeginReadTransaction (11 samples, 0.06%)</title><rect x="46.0167%" y="197" width="0.0567%" height="15" fill="rgb(239,195,19)" fg:x="8930" fg:w="11"/><text x="46.2667%" y="207.50"></text></g><g><title>walBeginReadTransaction (11 samples, 0.06%)</title><rect x="46.0167%" y="181" width="0.0567%" height="15" fill="rgb(241,16,39)" fg:x="8930" fg:w="11"/><text x="46.2667%" y="191.50"></text></g><g><title>walTryBeginRead (11 samples, 0.06%)</title><rect x="46.0167%" y="165" width="0.0567%" height="15" fill="rgb(223,13,53)" fg:x="8930" fg:w="11"/><text x="46.2667%" y="175.50"></text></g><g><title>sqlite3BtreeIndexMoveto (5 samples, 0.03%)</title><rect x="46.0734%" y="277" width="0.0258%" height="15" fill="rgb(214,227,0)" fg:x="8941" fg:w="5"/><text x="46.3234%" y="287.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (3 samples, 0.02%)</title><rect x="46.0837%" y="261" width="0.0155%" height="15" fill="rgb(228,103,26)" fg:x="8943" fg:w="3"/><text x="46.3337%" y="271.50"></text></g><g><title>enlargeAndAppend (3 samples, 0.02%)</title><rect x="46.1043%" y="261" width="0.0155%" height="15" fill="rgb(254,177,53)" fg:x="8947" fg:w="3"/><text x="46.3543%" y="271.50"></text></g><g><title>sqlite3StrAccumEnlarge (3 samples, 0.02%)</title><rect x="46.1043%" y="245" width="0.0155%" height="15" fill="rgb(208,201,34)" fg:x="8947" fg:w="3"/><text x="46.3543%" y="255.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.01%)</title><rect x="46.1095%" y="229" width="0.0103%" height="15" fill="rgb(212,39,5)" fg:x="8948" fg:w="2"/><text x="46.3595%" y="239.50"></text></g><g><title>mallocWithAlarm (2 samples, 0.01%)</title><rect x="46.1095%" y="213" width="0.0103%" height="15" fill="rgb(246,117,3)" fg:x="8948" fg:w="2"/><text x="46.3595%" y="223.50"></text></g><g><title>sqlite3MemMalloc (2 samples, 0.01%)</title><rect x="46.1095%" y="197" width="0.0103%" height="15" fill="rgb(244,118,39)" fg:x="8948" fg:w="2"/><text x="46.3595%" y="207.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="46.1095%" y="181" width="0.0103%" height="15" fill="rgb(241,64,10)" fg:x="8948" fg:w="2"/><text x="46.3595%" y="191.50"></text></g><g><title>findNextHostParameter (2 samples, 0.01%)</title><rect x="46.1198%" y="261" width="0.0103%" height="15" fill="rgb(229,39,44)" fg:x="8950" fg:w="2"/><text x="46.3698%" y="271.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="46.1198%" y="245" width="0.0103%" height="15" fill="rgb(230,226,3)" fg:x="8950" fg:w="2"/><text x="46.3698%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="46.2074%" y="229" width="0.0258%" height="15" fill="rgb(222,13,42)" fg:x="8967" fg:w="5"/><text x="46.4574%" y="239.50"></text></g><g><title>enlargeAndAppend (8 samples, 0.04%)</title><rect x="46.2331%" y="229" width="0.0412%" height="15" fill="rgb(247,180,54)" fg:x="8972" fg:w="8"/><text x="46.4831%" y="239.50"></text></g><g><title>sqlite3StrAccumEnlarge (7 samples, 0.04%)</title><rect x="46.2383%" y="213" width="0.0361%" height="15" fill="rgb(205,96,16)" fg:x="8973" fg:w="7"/><text x="46.4883%" y="223.50"></text></g><g><title>sqlite3Realloc (6 samples, 0.03%)</title><rect x="46.2434%" y="197" width="0.0309%" height="15" fill="rgb(205,100,21)" fg:x="8974" fg:w="6"/><text x="46.4934%" y="207.50"></text></g><g><title>sqlite3MemRealloc (6 samples, 0.03%)</title><rect x="46.2434%" y="181" width="0.0309%" height="15" fill="rgb(248,51,4)" fg:x="8974" fg:w="6"/><text x="46.4934%" y="191.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.03%)</title><rect x="46.2434%" y="165" width="0.0309%" height="15" fill="rgb(217,197,30)" fg:x="8974" fg:w="6"/><text x="46.4934%" y="175.50"></text></g><g><title>_int_realloc (6 samples, 0.03%)</title><rect x="46.2434%" y="149" width="0.0309%" height="15" fill="rgb(240,179,40)" fg:x="8974" fg:w="6"/><text x="46.4934%" y="159.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="46.2589%" y="133" width="0.0155%" height="15" fill="rgb(212,185,35)" fg:x="8977" fg:w="3"/><text x="46.5089%" y="143.50"></text></g><g><title>sqlite3VdbeExpandSql (36 samples, 0.19%)</title><rect x="46.0991%" y="277" width="0.1855%" height="15" fill="rgb(251,222,31)" fg:x="8946" fg:w="36"/><text x="46.3491%" y="287.50"></text></g><g><title>sqlite3_str_appendf (30 samples, 0.15%)</title><rect x="46.1301%" y="261" width="0.1546%" height="15" fill="rgb(208,140,36)" fg:x="8952" fg:w="30"/><text x="46.3801%" y="271.50"></text></g><g><title>sqlite3_str_vappendf (28 samples, 0.14%)</title><rect x="46.1404%" y="245" width="0.1443%" height="15" fill="rgb(220,148,1)" fg:x="8954" fg:w="28"/><text x="46.3904%" y="255.50"></text></g><g><title>sqlite3_str_append (2 samples, 0.01%)</title><rect x="46.2743%" y="229" width="0.0103%" height="15" fill="rgb(254,4,28)" fg:x="8980" fg:w="2"/><text x="46.5243%" y="239.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (175 samples, 0.90%)</title><rect x="45.3880%" y="469" width="0.9018%" height="15" fill="rgb(222,185,44)" fg:x="8808" fg:w="175"/><text x="45.6380%" y="479.50"></text></g><g><title>rusqlite::Connection::query_row (173 samples, 0.89%)</title><rect x="45.3983%" y="453" width="0.8915%" height="15" fill="rgb(215,74,39)" fg:x="8810" fg:w="173"/><text x="45.6483%" y="463.50"></text></g><g><title>rusqlite::statement::Statement::query_row (98 samples, 0.50%)</title><rect x="45.7848%" y="437" width="0.5050%" height="15" fill="rgb(247,86,4)" fg:x="8885" fg:w="98"/><text x="46.0348%" y="447.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (65 samples, 0.33%)</title><rect x="45.9549%" y="421" width="0.3349%" height="15" fill="rgb(231,105,32)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="431.50"></text></g><g><title>rusqlite::row::Rows::next (65 samples, 0.33%)</title><rect x="45.9549%" y="405" width="0.3349%" height="15" fill="rgb(222,65,35)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="415.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (65 samples, 0.33%)</title><rect x="45.9549%" y="389" width="0.3349%" height="15" fill="rgb(218,145,35)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="399.50"></text></g><g><title>rusqlite::statement::Statement::step (65 samples, 0.33%)</title><rect x="45.9549%" y="373" width="0.3349%" height="15" fill="rgb(208,7,15)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="383.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (65 samples, 0.33%)</title><rect x="45.9549%" y="357" width="0.3349%" height="15" fill="rgb(209,83,13)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="367.50"></text></g><g><title>sqlite3_step (65 samples, 0.33%)</title><rect x="45.9549%" y="341" width="0.3349%" height="15" fill="rgb(218,3,10)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="351.50"></text></g><g><title>sqlite3_step (65 samples, 0.33%)</title><rect x="45.9549%" y="325" width="0.3349%" height="15" fill="rgb(211,219,4)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="335.50"></text></g><g><title>sqlite3Step (65 samples, 0.33%)</title><rect x="45.9549%" y="309" width="0.3349%" height="15" fill="rgb(228,194,12)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="319.50"></text></g><g><title>sqlite3VdbeExec (65 samples, 0.33%)</title><rect x="45.9549%" y="293" width="0.3349%" height="15" fill="rgb(210,175,7)" fg:x="8918" fg:w="65"/><text x="46.2049%" y="303.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="46.2898%" y="469" width="0.0361%" height="15" fill="rgb(243,132,6)" fg:x="8983" fg:w="7"/><text x="46.5398%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="46.2898%" y="453" width="0.0361%" height="15" fill="rgb(207,72,18)" fg:x="8983" fg:w="7"/><text x="46.5398%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="46.2950%" y="437" width="0.0309%" height="15" fill="rgb(236,1,18)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="46.2950%" y="421" width="0.0309%" height="15" fill="rgb(227,0,18)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="431.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="46.2950%" y="405" width="0.0309%" height="15" fill="rgb(247,37,5)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="46.2950%" y="389" width="0.0309%" height="15" fill="rgb(237,179,24)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (6 samples, 0.03%)</title><rect x="46.2950%" y="373" width="0.0309%" height="15" fill="rgb(226,53,20)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (6 samples, 0.03%)</title><rect x="46.2950%" y="357" width="0.0309%" height="15" fill="rgb(247,75,7)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (6 samples, 0.03%)</title><rect x="46.2950%" y="341" width="0.0309%" height="15" fill="rgb(233,96,12)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.03%)</title><rect x="46.2950%" y="325" width="0.0309%" height="15" fill="rgb(224,125,0)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="335.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.03%)</title><rect x="46.2950%" y="309" width="0.0309%" height="15" fill="rgb(224,92,25)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="319.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.03%)</title><rect x="46.2950%" y="293" width="0.0309%" height="15" fill="rgb(224,42,24)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.03%)</title><rect x="46.2950%" y="277" width="0.0309%" height="15" fill="rgb(234,132,49)" fg:x="8984" fg:w="6"/><text x="46.5450%" y="287.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (4 samples, 0.02%)</title><rect x="46.3259%" y="453" width="0.0206%" height="15" fill="rgb(248,100,35)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="46.3259%" y="437" width="0.0206%" height="15" fill="rgb(239,94,40)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="46.3259%" y="421" width="0.0206%" height="15" fill="rgb(235,139,28)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="46.3259%" y="405" width="0.0206%" height="15" fill="rgb(217,144,7)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="46.3259%" y="389" width="0.0206%" height="15" fill="rgb(227,55,4)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="46.3259%" y="373" width="0.0206%" height="15" fill="rgb(252,82,54)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="46.3259%" y="357" width="0.0206%" height="15" fill="rgb(245,172,4)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="46.3259%" y="341" width="0.0206%" height="15" fill="rgb(207,26,27)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="351.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="46.3259%" y="325" width="0.0206%" height="15" fill="rgb(252,98,18)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="335.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="46.3259%" y="309" width="0.0206%" height="15" fill="rgb(244,8,26)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="319.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="46.3259%" y="293" width="0.0206%" height="15" fill="rgb(237,173,45)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="303.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="46.3259%" y="277" width="0.0206%" height="15" fill="rgb(208,213,49)" fg:x="8990" fg:w="4"/><text x="46.5759%" y="287.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="46.3362%" y="261" width="0.0103%" height="15" fill="rgb(212,122,37)" fg:x="8992" fg:w="2"/><text x="46.5862%" y="271.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (197 samples, 1.02%)</title><rect x="45.3468%" y="517" width="1.0151%" height="15" fill="rgb(213,80,17)" fg:x="8800" fg:w="197"/><text x="45.5968%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (196 samples, 1.01%)</title><rect x="45.3520%" y="501" width="1.0100%" height="15" fill="rgb(206,210,43)" fg:x="8801" fg:w="196"/><text x="45.6020%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (189 samples, 0.97%)</title><rect x="45.3880%" y="485" width="0.9739%" height="15" fill="rgb(229,214,3)" fg:x="8808" fg:w="189"/><text x="45.6380%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (7 samples, 0.04%)</title><rect x="46.3259%" y="469" width="0.0361%" height="15" fill="rgb(235,213,29)" fg:x="8990" fg:w="7"/><text x="46.5759%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256 (4 samples, 0.02%)</title><rect x="46.3619%" y="501" width="0.0206%" height="15" fill="rgb(248,135,26)" fg:x="8997" fg:w="4"/><text x="46.6119%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (4 samples, 0.02%)</title><rect x="46.3619%" y="485" width="0.0206%" height="15" fill="rgb(242,188,12)" fg:x="8997" fg:w="4"/><text x="46.6119%" y="495.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (4 samples, 0.02%)</title><rect x="46.3619%" y="469" width="0.0206%" height="15" fill="rgb(245,38,12)" fg:x="8997" fg:w="4"/><text x="46.6119%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (4 samples, 0.02%)</title><rect x="46.3619%" y="453" width="0.0206%" height="15" fill="rgb(218,42,13)" fg:x="8997" fg:w="4"/><text x="46.6119%" y="463.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (4 samples, 0.02%)</title><rect x="46.3619%" y="437" width="0.0206%" height="15" fill="rgb(238,132,49)" fg:x="8997" fg:w="4"/><text x="46.6119%" y="447.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 0.02%)</title><rect x="46.3619%" y="421" width="0.0206%" height="15" fill="rgb(209,196,19)" fg:x="8997" fg:w="4"/><text x="46.6119%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (3 samples, 0.02%)</title><rect x="46.3671%" y="405" width="0.0155%" height="15" fill="rgb(244,131,22)" fg:x="8998" fg:w="3"/><text x="46.6171%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (3 samples, 0.02%)</title><rect x="46.3671%" y="389" width="0.0155%" height="15" fill="rgb(223,18,34)" fg:x="8998" fg:w="3"/><text x="46.6171%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (3 samples, 0.02%)</title><rect x="46.3671%" y="373" width="0.0155%" height="15" fill="rgb(252,124,54)" fg:x="8998" fg:w="3"/><text x="46.6171%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (3 samples, 0.02%)</title><rect x="46.3671%" y="357" width="0.0155%" height="15" fill="rgb(229,106,42)" fg:x="8998" fg:w="3"/><text x="46.6171%" y="367.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (3 samples, 0.02%)</title><rect x="46.3671%" y="341" width="0.0155%" height="15" fill="rgb(221,129,1)" fg:x="8998" fg:w="3"/><text x="46.6171%" y="351.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (3 samples, 0.02%)</title><rect x="46.3671%" y="325" width="0.0155%" height="15" fill="rgb(229,74,15)" fg:x="8998" fg:w="3"/><text x="46.6171%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="46.3826%" y="437" width="0.0103%" height="15" fill="rgb(210,206,50)" fg:x="9001" fg:w="2"/><text x="46.6326%" y="447.50"></text></g><g><title>eth_trie::node::Node::from_branch (3 samples, 0.02%)</title><rect x="46.3826%" y="485" width="0.0155%" height="15" fill="rgb(251,114,31)" fg:x="9001" fg:w="3"/><text x="46.6326%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="46.3826%" y="469" width="0.0155%" height="15" fill="rgb(215,225,28)" fg:x="9001" fg:w="3"/><text x="46.6326%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="46.3826%" y="453" width="0.0155%" height="15" fill="rgb(237,109,14)" fg:x="9001" fg:w="3"/><text x="46.6326%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::at (4 samples, 0.02%)</title><rect x="46.4032%" y="485" width="0.0206%" height="15" fill="rgb(230,13,37)" fg:x="9005" fg:w="4"/><text x="46.6532%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (3 samples, 0.02%)</title><rect x="46.4083%" y="469" width="0.0155%" height="15" fill="rgb(231,40,28)" fg:x="9006" fg:w="3"/><text x="46.6583%" y="479.50"></text></g><g><title>rlp::rlpin::Rlp::is_list (3 samples, 0.02%)</title><rect x="46.4083%" y="453" width="0.0155%" height="15" fill="rgb(231,202,18)" fg:x="9006" fg:w="3"/><text x="46.6583%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::consume_items (3 samples, 0.02%)</title><rect x="46.4341%" y="373" width="0.0155%" height="15" fill="rgb(225,33,18)" fg:x="9011" fg:w="3"/><text x="46.6841%" y="383.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (3 samples, 0.02%)</title><rect x="46.4341%" y="357" width="0.0155%" height="15" fill="rgb(223,64,47)" fg:x="9011" fg:w="3"/><text x="46.6841%" y="367.50"></text></g><g><title>rlp::rlpin::PayloadInfo::from (3 samples, 0.02%)</title><rect x="46.4341%" y="341" width="0.0155%" height="15" fill="rgb(234,114,13)" fg:x="9011" fg:w="3"/><text x="46.6841%" y="351.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (228 samples, 1.17%)</title><rect x="45.2798%" y="549" width="1.1749%" height="15" fill="rgb(248,56,40)" fg:x="8787" fg:w="228"/><text x="45.5298%" y="559.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (226 samples, 1.16%)</title><rect x="45.2901%" y="533" width="1.1646%" height="15" fill="rgb(221,194,21)" fg:x="8789" fg:w="226"/><text x="45.5401%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (18 samples, 0.09%)</title><rect x="46.3619%" y="517" width="0.0928%" height="15" fill="rgb(242,108,46)" fg:x="8997" fg:w="18"/><text x="46.6119%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (14 samples, 0.07%)</title><rect x="46.3826%" y="501" width="0.0721%" height="15" fill="rgb(220,106,10)" fg:x="9001" fg:w="14"/><text x="46.6326%" y="511.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (6 samples, 0.03%)</title><rect x="46.4238%" y="485" width="0.0309%" height="15" fill="rgb(211,88,4)" fg:x="9009" fg:w="6"/><text x="46.6738%" y="495.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (6 samples, 0.03%)</title><rect x="46.4238%" y="469" width="0.0309%" height="15" fill="rgb(214,95,34)" fg:x="9009" fg:w="6"/><text x="46.6738%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.03%)</title><rect x="46.4238%" y="453" width="0.0309%" height="15" fill="rgb(250,160,33)" fg:x="9009" fg:w="6"/><text x="46.6738%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.03%)</title><rect x="46.4238%" y="437" width="0.0309%" height="15" fill="rgb(225,29,10)" fg:x="9009" fg:w="6"/><text x="46.6738%" y="447.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="46.4238%" y="421" width="0.0309%" height="15" fill="rgb(224,28,30)" fg:x="9009" fg:w="6"/><text x="46.6738%" y="431.50"></text></g><g><title>rlp::rlpin::Rlp::at (6 samples, 0.03%)</title><rect x="46.4238%" y="405" width="0.0309%" height="15" fill="rgb(231,77,4)" fg:x="9009" fg:w="6"/><text x="46.6738%" y="415.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (5 samples, 0.03%)</title><rect x="46.4289%" y="389" width="0.0258%" height="15" fill="rgb(209,63,21)" fg:x="9010" fg:w="5"/><text x="46.6789%" y="399.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="46.4547%" y="533" width="0.0361%" height="15" fill="rgb(226,22,11)" fg:x="9015" fg:w="7"/><text x="46.7047%" y="543.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="46.4547%" y="517" width="0.0361%" height="15" fill="rgb(216,82,30)" fg:x="9015" fg:w="7"/><text x="46.7047%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="46.4599%" y="501" width="0.0309%" height="15" fill="rgb(246,227,38)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="46.4599%" y="485" width="0.0309%" height="15" fill="rgb(251,203,53)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="46.4599%" y="469" width="0.0309%" height="15" fill="rgb(254,101,1)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="46.4599%" y="453" width="0.0309%" height="15" fill="rgb(241,180,5)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="463.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (6 samples, 0.03%)</title><rect x="46.4599%" y="437" width="0.0309%" height="15" fill="rgb(218,168,4)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (6 samples, 0.03%)</title><rect x="46.4599%" y="421" width="0.0309%" height="15" fill="rgb(224,223,32)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (6 samples, 0.03%)</title><rect x="46.4599%" y="405" width="0.0309%" height="15" fill="rgb(236,106,22)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.03%)</title><rect x="46.4599%" y="389" width="0.0309%" height="15" fill="rgb(206,121,5)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="399.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.03%)</title><rect x="46.4599%" y="373" width="0.0309%" height="15" fill="rgb(233,87,28)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="383.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.03%)</title><rect x="46.4599%" y="357" width="0.0309%" height="15" fill="rgb(236,137,17)" fg:x="9016" fg:w="6"/><text x="46.7099%" y="367.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (249 samples, 1.28%)</title><rect x="45.2128%" y="597" width="1.2831%" height="15" fill="rgb(209,183,38)" fg:x="8774" fg:w="249"/><text x="45.4628%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (245 samples, 1.26%)</title><rect x="45.2334%" y="581" width="1.2625%" height="15" fill="rgb(206,162,44)" fg:x="8778" fg:w="245"/><text x="45.4834%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (245 samples, 1.26%)</title><rect x="45.2334%" y="565" width="1.2625%" height="15" fill="rgb(237,70,39)" fg:x="8778" fg:w="245"/><text x="45.4834%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (8 samples, 0.04%)</title><rect x="46.4547%" y="549" width="0.0412%" height="15" fill="rgb(212,176,5)" fg:x="9015" fg:w="8"/><text x="46.7047%" y="559.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (6 samples, 0.03%)</title><rect x="46.4959%" y="565" width="0.0309%" height="15" fill="rgb(232,95,16)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="575.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (6 samples, 0.03%)</title><rect x="46.4959%" y="549" width="0.0309%" height="15" fill="rgb(219,115,35)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="559.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (6 samples, 0.03%)</title><rect x="46.4959%" y="533" width="0.0309%" height="15" fill="rgb(251,67,27)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="543.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (6 samples, 0.03%)</title><rect x="46.4959%" y="517" width="0.0309%" height="15" fill="rgb(222,95,40)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="527.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (6 samples, 0.03%)</title><rect x="46.4959%" y="501" width="0.0309%" height="15" fill="rgb(250,35,16)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="511.50"></text></g><g><title>keccak::p1600 (6 samples, 0.03%)</title><rect x="46.4959%" y="485" width="0.0309%" height="15" fill="rgb(224,86,44)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="495.50"></text></g><g><title>keccak::keccak_p (6 samples, 0.03%)</title><rect x="46.4959%" y="469" width="0.0309%" height="15" fill="rgb(237,53,53)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="479.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (6 samples, 0.03%)</title><rect x="46.4959%" y="453" width="0.0309%" height="15" fill="rgb(208,171,33)" fg:x="9023" fg:w="6"/><text x="46.7459%" y="463.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (340 samples, 1.75%)</title><rect x="44.7800%" y="645" width="1.7520%" height="15" fill="rgb(222,64,27)" fg:x="8690" fg:w="340"/><text x="45.0300%" y="655.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (340 samples, 1.75%)</title><rect x="44.7800%" y="629" width="1.7520%" height="15" fill="rgb(221,121,35)" fg:x="8690" fg:w="340"/><text x="45.0300%" y="639.50"></text></g><g><title>zilliqa::state::State::has_account (256 samples, 1.32%)</title><rect x="45.2128%" y="613" width="1.3192%" height="15" fill="rgb(228,137,42)" fg:x="8774" fg:w="256"/><text x="45.4628%" y="623.50"></text></g><g><title>zilliqa::state::State::account_key (7 samples, 0.04%)</title><rect x="46.4959%" y="597" width="0.0361%" height="15" fill="rgb(227,54,21)" fg:x="9023" fg:w="7"/><text x="46.7459%" y="607.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (7 samples, 0.04%)</title><rect x="46.4959%" y="581" width="0.0361%" height="15" fill="rgb(240,168,33)" fg:x="9023" fg:w="7"/><text x="46.7459%" y="591.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::reward_beneficiary (343 samples, 1.77%)</title><rect x="44.7748%" y="709" width="1.7675%" height="15" fill="rgb(243,159,6)" fg:x="8689" fg:w="343"/><text x="45.0248%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (342 samples, 1.76%)</title><rect x="44.7800%" y="693" width="1.7623%" height="15" fill="rgb(205,211,41)" fg:x="8690" fg:w="342"/><text x="45.0300%" y="703.50"></text></g><g><title>revm::handler::mainnet::post_execution::reward_beneficiary (342 samples, 1.76%)</title><rect x="44.7800%" y="677" width="1.7623%" height="15" fill="rgb(253,30,1)" fg:x="8690" fg:w="342"/><text x="45.0300%" y="687.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (342 samples, 1.76%)</title><rect x="44.7800%" y="661" width="1.7623%" height="15" fill="rgb(226,80,18)" fg:x="8690" fg:w="342"/><text x="45.0300%" y="671.50"></text></g><g><title>revm::handler::mainnet::pre_execution::deduct_caller_inner (2 samples, 0.01%)</title><rect x="46.5475%" y="661" width="0.0103%" height="15" fill="rgb(253,156,46)" fg:x="9033" fg:w="2"/><text x="46.7975%" y="671.50"></text></g><g><title>ruint::mul::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::saturating_mul (2 samples, 0.01%)</title><rect x="46.5475%" y="645" width="0.0103%" height="15" fill="rgb(248,87,27)" fg:x="9033" fg:w="2"/><text x="46.7975%" y="655.50"></text></g><g><title>ruint::mul::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::overflowing_mul (2 samples, 0.01%)</title><rect x="46.5475%" y="629" width="0.0103%" height="15" fill="rgb(227,122,2)" fg:x="9033" fg:w="2"/><text x="46.7975%" y="639.50"></text></g><g><title>ruint::algorithms::mul::addmul (2 samples, 0.01%)</title><rect x="46.5475%" y="613" width="0.0103%" height="15" fill="rgb(229,94,39)" fg:x="9033" fg:w="2"/><text x="46.7975%" y="623.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::deduct_caller (5 samples, 0.03%)</title><rect x="46.5423%" y="709" width="0.0258%" height="15" fill="rgb(225,173,31)" fg:x="9032" fg:w="5"/><text x="46.7923%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="46.5423%" y="693" width="0.0258%" height="15" fill="rgb(239,176,30)" fg:x="9032" fg:w="5"/><text x="46.7923%" y="703.50"></text></g><g><title>revm::handler::mainnet::pre_execution::deduct_caller (5 samples, 0.03%)</title><rect x="46.5423%" y="677" width="0.0258%" height="15" fill="rgb(212,104,21)" fg:x="9032" fg:w="5"/><text x="46.7923%" y="687.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (2 samples, 0.01%)</title><rect x="46.5578%" y="661" width="0.0103%" height="15" fill="rgb(240,209,40)" fg:x="9035" fg:w="2"/><text x="46.8078%" y="671.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::load_accounts (3 samples, 0.02%)</title><rect x="46.5681%" y="709" width="0.0155%" height="15" fill="rgb(234,195,5)" fg:x="9037" fg:w="3"/><text x="46.8181%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="46.5681%" y="693" width="0.0155%" height="15" fill="rgb(238,213,1)" fg:x="9037" fg:w="3"/><text x="46.8181%" y="703.50"></text></g><g><title>revm::handler::mainnet::pre_execution::load_accounts (3 samples, 0.02%)</title><rect x="46.5681%" y="677" width="0.0155%" height="15" fill="rgb(235,182,54)" fg:x="9037" fg:w="3"/><text x="46.8181%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.01%)</title><rect x="46.5732%" y="661" width="0.0103%" height="15" fill="rgb(229,50,46)" fg:x="9038" fg:w="2"/><text x="46.8232%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="46.5732%" y="645" width="0.0103%" height="15" fill="rgb(219,145,13)" fg:x="9038" fg:w="2"/><text x="46.8232%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="46.5732%" y="629" width="0.0103%" height="15" fill="rgb(220,226,10)" fg:x="9038" fg:w="2"/><text x="46.8232%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (2 samples, 0.01%)</title><rect x="46.5732%" y="613" width="0.0103%" height="15" fill="rgb(248,47,30)" fg:x="9038" fg:w="2"/><text x="46.8232%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (2 samples, 0.01%)</title><rect x="46.5732%" y="597" width="0.0103%" height="15" fill="rgb(231,209,44)" fg:x="9038" fg:w="2"/><text x="46.8232%" y="607.50"></text></g><g><title>hashbrown::raw::special_is_empty (2 samples, 0.01%)</title><rect x="46.5732%" y="581" width="0.0103%" height="15" fill="rgb(209,80,30)" fg:x="9038" fg:w="2"/><text x="46.8232%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="46.5887%" y="581" width="0.0155%" height="15" fill="rgb(232,9,14)" fg:x="9041" fg:w="3"/><text x="46.8387%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="46.5887%" y="565" width="0.0155%" height="15" fill="rgb(243,91,43)" fg:x="9041" fg:w="3"/><text x="46.8387%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="46.5887%" y="549" width="0.0155%" height="15" fill="rgb(231,90,52)" fg:x="9041" fg:w="3"/><text x="46.8387%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="46.5938%" y="533" width="0.0103%" height="15" fill="rgb(253,192,44)" fg:x="9042" fg:w="2"/><text x="46.8438%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="46.5887%" y="661" width="0.0206%" height="15" fill="rgb(241,66,31)" fg:x="9041" fg:w="4"/><text x="46.8387%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="46.5887%" y="645" width="0.0206%" height="15" fill="rgb(235,81,37)" fg:x="9041" fg:w="4"/><text x="46.8387%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="46.5887%" y="629" width="0.0206%" height="15" fill="rgb(223,221,9)" fg:x="9041" fg:w="4"/><text x="46.8387%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="46.5887%" y="613" width="0.0206%" height="15" fill="rgb(242,180,7)" fg:x="9041" fg:w="4"/><text x="46.8387%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="46.5887%" y="597" width="0.0206%" height="15" fill="rgb(243,78,19)" fg:x="9041" fg:w="4"/><text x="46.8387%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.04%)</title><rect x="46.6093%" y="565" width="0.0412%" height="15" fill="rgb(233,23,17)" fg:x="9045" fg:w="8"/><text x="46.8593%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="46.6093%" y="549" width="0.0412%" height="15" fill="rgb(252,122,45)" fg:x="9045" fg:w="8"/><text x="46.8593%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="46.6093%" y="533" width="0.0412%" height="15" fill="rgb(247,108,20)" fg:x="9045" fg:w="8"/><text x="46.8593%" y="543.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="46.6093%" y="517" width="0.0412%" height="15" fill="rgb(235,84,21)" fg:x="9045" fg:w="8"/><text x="46.8593%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="46.6248%" y="501" width="0.0258%" height="15" fill="rgb(247,129,10)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (5 samples, 0.03%)</title><rect x="46.6248%" y="485" width="0.0258%" height="15" fill="rgb(208,173,14)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (5 samples, 0.03%)</title><rect x="46.6248%" y="469" width="0.0258%" height="15" fill="rgb(236,31,38)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.03%)</title><rect x="46.6248%" y="453" width="0.0258%" height="15" fill="rgb(232,65,17)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.03%)</title><rect x="46.6248%" y="437" width="0.0258%" height="15" fill="rgb(224,45,49)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5 samples, 0.03%)</title><rect x="46.6248%" y="421" width="0.0258%" height="15" fill="rgb(225,2,53)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.03%)</title><rect x="46.6248%" y="405" width="0.0258%" height="15" fill="rgb(248,210,53)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="46.6248%" y="389" width="0.0258%" height="15" fill="rgb(211,1,30)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.03%)</title><rect x="46.6248%" y="373" width="0.0258%" height="15" fill="rgb(224,96,15)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="383.50"></text></g><g><title>&lt;foldhash::seed::fast::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.03%)</title><rect x="46.6248%" y="357" width="0.0258%" height="15" fill="rgb(252,45,11)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="367.50"></text></g><g><title>foldhash::fast::FoldHasher::with_seed (5 samples, 0.03%)</title><rect x="46.6248%" y="341" width="0.0258%" height="15" fill="rgb(220,125,38)" fg:x="9048" fg:w="5"/><text x="46.8748%" y="351.50"></text></g><g><title>&lt;revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt; as core::iter::traits::collect::Extend&lt;(alloy_primitives::bits::address::Address,revm::context::context_precompiles::ContextPrecompile&lt;DB&gt;)&gt;&gt;::extend (14 samples, 0.07%)</title><rect x="46.5887%" y="677" width="0.0721%" height="15" fill="rgb(243,161,33)" fg:x="9041" fg:w="14"/><text x="46.8387%" y="687.50"></text></g><g><title>revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt;::to_mut (10 samples, 0.05%)</title><rect x="46.6093%" y="661" width="0.0515%" height="15" fill="rgb(248,197,34)" fg:x="9045" fg:w="10"/><text x="46.8593%" y="671.50"></text></g><g><title>revm::context::context_precompiles::ContextPrecompiles&lt;DB&gt;::mutate_into_owned (10 samples, 0.05%)</title><rect x="46.6093%" y="645" width="0.0515%" height="15" fill="rgb(228,165,23)" fg:x="9045" fg:w="10"/><text x="46.8593%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.05%)</title><rect x="46.6093%" y="629" width="0.0515%" height="15" fill="rgb(236,94,38)" fg:x="9045" fg:w="10"/><text x="46.8593%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.05%)</title><rect x="46.6093%" y="613" width="0.0515%" height="15" fill="rgb(220,13,23)" fg:x="9045" fg:w="10"/><text x="46.8593%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.05%)</title><rect x="46.6093%" y="597" width="0.0515%" height="15" fill="rgb(234,26,39)" fg:x="9045" fg:w="10"/><text x="46.8593%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.05%)</title><rect x="46.6093%" y="581" width="0.0515%" height="15" fill="rgb(205,117,44)" fg:x="9045" fg:w="10"/><text x="46.8593%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.01%)</title><rect x="46.6505%" y="565" width="0.0103%" height="15" fill="rgb(250,42,2)" fg:x="9053" fg:w="2"/><text x="46.9005%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="46.6505%" y="549" width="0.0103%" height="15" fill="rgb(223,83,14)" fg:x="9053" fg:w="2"/><text x="46.9005%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="46.6505%" y="533" width="0.0103%" height="15" fill="rgb(241,147,50)" fg:x="9053" fg:w="2"/><text x="46.9005%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.01%)</title><rect x="46.6505%" y="517" width="0.0103%" height="15" fill="rgb(218,90,6)" fg:x="9053" fg:w="2"/><text x="46.9005%" y="527.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::load_precompiles (17 samples, 0.09%)</title><rect x="46.5835%" y="709" width="0.0876%" height="15" fill="rgb(210,191,5)" fg:x="9040" fg:w="17"/><text x="46.8335%" y="719.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm::{{closure}}::{{closure}} (17 samples, 0.09%)</title><rect x="46.5835%" y="693" width="0.0876%" height="15" fill="rgb(225,139,19)" fg:x="9040" fg:w="17"/><text x="46.8335%" y="703.50"></text></g><g><title>zilliqa::precompiles::get_custom_precompiles (2 samples, 0.01%)</title><rect x="46.6608%" y="677" width="0.0103%" height="15" fill="rgb(210,1,33)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="46.6608%" y="661" width="0.0103%" height="15" fill="rgb(213,50,3)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="46.6608%" y="645" width="0.0103%" height="15" fill="rgb(234,227,4)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="46.6608%" y="629" width="0.0103%" height="15" fill="rgb(246,63,5)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="46.6608%" y="613" width="0.0103%" height="15" fill="rgb(245,136,27)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="623.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="46.6608%" y="597" width="0.0103%" height="15" fill="rgb(247,199,27)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="607.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="46.6608%" y="581" width="0.0103%" height="15" fill="rgb(252,158,49)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="46.6608%" y="565" width="0.0103%" height="15" fill="rgb(254,73,1)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="575.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="46.6608%" y="549" width="0.0103%" height="15" fill="rgb(248,93,19)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="559.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="46.6608%" y="533" width="0.0103%" height="15" fill="rgb(206,67,5)" fg:x="9055" fg:w="2"/><text x="46.9108%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="46.6814%" y="693" width="0.0103%" height="15" fill="rgb(209,210,4)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2 samples, 0.01%)</title><rect x="46.6814%" y="677" width="0.0103%" height="15" fill="rgb(214,185,36)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2 samples, 0.01%)</title><rect x="46.6814%" y="661" width="0.0103%" height="15" fill="rgb(233,191,26)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="46.6814%" y="645" width="0.0103%" height="15" fill="rgb(248,94,17)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="46.6814%" y="629" width="0.0103%" height="15" fill="rgb(250,64,4)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="46.6814%" y="613" width="0.0103%" height="15" fill="rgb(218,41,53)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="623.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="46.6814%" y="597" width="0.0103%" height="15" fill="rgb(251,176,28)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="607.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="46.6814%" y="581" width="0.0103%" height="15" fill="rgb(247,22,9)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="46.6814%" y="565" width="0.0103%" height="15" fill="rgb(218,201,14)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="575.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="46.6814%" y="549" width="0.0103%" height="15" fill="rgb(218,94,10)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="559.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="46.6814%" y="533" width="0.0103%" height="15" fill="rgb(222,183,52)" fg:x="9059" fg:w="2"/><text x="46.9314%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="46.6969%" y="613" width="0.0103%" height="15" fill="rgb(242,140,25)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="46.6969%" y="597" width="0.0103%" height="15" fill="rgb(235,197,38)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="46.6969%" y="581" width="0.0103%" height="15" fill="rgb(237,136,15)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="591.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="46.6969%" y="565" width="0.0103%" height="15" fill="rgb(223,44,49)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="575.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="46.6969%" y="549" width="0.0103%" height="15" fill="rgb(227,71,15)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (2 samples, 0.01%)</title><rect x="46.6969%" y="533" width="0.0103%" height="15" fill="rgb(225,153,20)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="543.50"></text></g><g><title> N]&gt;::hash (2 samples, 0.01%)</title><rect x="46.6969%" y="517" width="0.0103%" height="15" fill="rgb(210,190,26)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.01%)</title><rect x="46.6969%" y="501" width="0.0103%" height="15" fill="rgb(223,147,5)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.01%)</title><rect x="46.6969%" y="485" width="0.0103%" height="15" fill="rgb(207,14,23)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="46.6969%" y="469" width="0.0103%" height="15" fill="rgb(211,195,53)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="46.6969%" y="453" width="0.0103%" height="15" fill="rgb(237,75,46)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="46.6969%" y="437" width="0.0103%" height="15" fill="rgb(254,55,14)" fg:x="9062" fg:w="2"/><text x="46.9469%" y="447.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::call (4 samples, 0.02%)</title><rect x="46.6917%" y="693" width="0.0206%" height="15" fill="rgb(230,185,30)" fg:x="9061" fg:w="4"/><text x="46.9417%" y="703.50"></text></g><g><title>&lt;zilliqa::inspector::TouchedAddressInspector as revm::inspector::Inspector&lt;DB&gt;&gt;::call (4 samples, 0.02%)</title><rect x="46.6917%" y="677" width="0.0206%" height="15" fill="rgb(220,14,11)" fg:x="9061" fg:w="4"/><text x="46.9417%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.02%)</title><rect x="46.6917%" y="661" width="0.0206%" height="15" fill="rgb(215,169,44)" fg:x="9061" fg:w="4"/><text x="46.9417%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="46.6917%" y="645" width="0.0206%" height="15" fill="rgb(253,203,20)" fg:x="9061" fg:w="4"/><text x="46.9417%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="46.6917%" y="629" width="0.0206%" height="15" fill="rgb(229,225,17)" fg:x="9061" fg:w="4"/><text x="46.9417%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm_interpreter::interpreter_action::call_inputs::CallInputs&gt;&gt; (2 samples, 0.01%)</title><rect x="46.7330%" y="645" width="0.0103%" height="15" fill="rgb(236,76,26)" fg:x="9069" fg:w="2"/><text x="46.9830%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::interpreter_action::call_inputs::CallInputs&gt; (2 samples, 0.01%)</title><rect x="46.7330%" y="629" width="0.0103%" height="15" fill="rgb(234,15,30)" fg:x="9069" fg:w="2"/><text x="46.9830%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (2 samples, 0.01%)</title><rect x="46.7330%" y="613" width="0.0103%" height="15" fill="rgb(211,113,48)" fg:x="9069" fg:w="2"/><text x="46.9830%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.01%)</title><rect x="46.7330%" y="597" width="0.0103%" height="15" fill="rgb(221,31,36)" fg:x="9069" fg:w="2"/><text x="46.9830%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="46.7330%" y="581" width="0.0103%" height="15" fill="rgb(215,118,52)" fg:x="9069" fg:w="2"/><text x="46.9830%" y="591.50"></text></g><g><title>revm::journaled_state::JournaledState::checkpoint (16 samples, 0.08%)</title><rect x="46.7484%" y="629" width="0.0824%" height="15" fill="rgb(241,151,27)" fg:x="9072" fg:w="16"/><text x="46.9984%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.08%)</title><rect x="46.7484%" y="613" width="0.0824%" height="15" fill="rgb(253,51,3)" fg:x="9072" fg:w="16"/><text x="46.9984%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.03%)</title><rect x="46.8051%" y="597" width="0.0258%" height="15" fill="rgb(216,201,24)" fg:x="9083" fg:w="5"/><text x="47.0551%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="46.8051%" y="581" width="0.0258%" height="15" fill="rgb(231,107,4)" fg:x="9083" fg:w="5"/><text x="47.0551%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="46.8051%" y="565" width="0.0258%" height="15" fill="rgb(243,97,54)" fg:x="9083" fg:w="5"/><text x="47.0551%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="46.8103%" y="549" width="0.0206%" height="15" fill="rgb(221,32,51)" fg:x="9084" fg:w="4"/><text x="47.0603%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="46.8103%" y="533" width="0.0206%" height="15" fill="rgb(218,171,35)" fg:x="9084" fg:w="4"/><text x="47.0603%" y="543.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="46.8103%" y="517" width="0.0206%" height="15" fill="rgb(214,20,53)" fg:x="9084" fg:w="4"/><text x="47.0603%" y="527.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="46.8103%" y="501" width="0.0206%" height="15" fill="rgb(239,9,52)" fg:x="9084" fg:w="4"/><text x="47.0603%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="46.8103%" y="485" width="0.0206%" height="15" fill="rgb(215,114,45)" fg:x="9084" fg:w="4"/><text x="47.0603%" y="495.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="46.8103%" y="469" width="0.0206%" height="15" fill="rgb(208,118,9)" fg:x="9084" fg:w="4"/><text x="47.0603%" y="479.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="46.8154%" y="453" width="0.0155%" height="15" fill="rgb(235,7,39)" fg:x="9085" fg:w="3"/><text x="47.0654%" y="463.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="46.8206%" y="437" width="0.0103%" height="15" fill="rgb(243,225,15)" fg:x="9086" fg:w="2"/><text x="47.0706%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="46.8360%" y="437" width="0.0155%" height="15" fill="rgb(225,216,18)" fg:x="9089" fg:w="3"/><text x="47.0860%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="46.8360%" y="421" width="0.0155%" height="15" fill="rgb(233,36,38)" fg:x="9089" fg:w="3"/><text x="47.0860%" y="431.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="46.8360%" y="405" width="0.0155%" height="15" fill="rgb(239,88,23)" fg:x="9089" fg:w="3"/><text x="47.0860%" y="415.50"></text></g><g><title>__rdl_realloc (3 samples, 0.02%)</title><rect x="46.8360%" y="389" width="0.0155%" height="15" fill="rgb(219,181,35)" fg:x="9089" fg:w="3"/><text x="47.0860%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.02%)</title><rect x="46.8360%" y="373" width="0.0155%" height="15" fill="rgb(215,18,46)" fg:x="9089" fg:w="3"/><text x="47.0860%" y="383.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="46.8360%" y="357" width="0.0155%" height="15" fill="rgb(241,38,11)" fg:x="9089" fg:w="3"/><text x="47.0860%" y="367.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="46.8412%" y="341" width="0.0103%" height="15" fill="rgb(248,169,45)" fg:x="9090" fg:w="2"/><text x="47.0912%" y="351.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (5 samples, 0.03%)</title><rect x="46.8309%" y="517" width="0.0258%" height="15" fill="rgb(239,50,49)" fg:x="9088" fg:w="5"/><text x="47.0809%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="46.8360%" y="501" width="0.0206%" height="15" fill="rgb(231,96,31)" fg:x="9089" fg:w="4"/><text x="47.0860%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="46.8360%" y="485" width="0.0206%" height="15" fill="rgb(224,193,37)" fg:x="9089" fg:w="4"/><text x="47.0860%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="46.8360%" y="469" width="0.0206%" height="15" fill="rgb(227,153,50)" fg:x="9089" fg:w="4"/><text x="47.0860%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="46.8360%" y="453" width="0.0206%" height="15" fill="rgb(249,228,3)" fg:x="9089" fg:w="4"/><text x="47.0860%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="46.8773%" y="453" width="0.0361%" height="15" fill="rgb(219,164,43)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="46.8773%" y="437" width="0.0361%" height="15" fill="rgb(216,45,41)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="46.8773%" y="421" width="0.0361%" height="15" fill="rgb(210,226,51)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="46.8773%" y="405" width="0.0361%" height="15" fill="rgb(209,117,49)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="46.8773%" y="389" width="0.0361%" height="15" fill="rgb(206,196,24)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="46.8773%" y="373" width="0.0361%" height="15" fill="rgb(253,218,3)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="46.8773%" y="357" width="0.0361%" height="15" fill="rgb(252,166,2)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="46.8773%" y="341" width="0.0361%" height="15" fill="rgb(236,218,26)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="351.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="46.8773%" y="325" width="0.0361%" height="15" fill="rgb(254,84,19)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="335.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="46.8773%" y="309" width="0.0361%" height="15" fill="rgb(219,137,29)" fg:x="9097" fg:w="7"/><text x="47.1273%" y="319.50"></text></g><g><title>alloy_primitives::utils::keccak256 (9 samples, 0.05%)</title><rect x="46.8721%" y="485" width="0.0464%" height="15" fill="rgb(227,47,52)" fg:x="9096" fg:w="9"/><text x="47.1221%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (9 samples, 0.05%)</title><rect x="46.8721%" y="469" width="0.0464%" height="15" fill="rgb(229,167,24)" fg:x="9096" fg:w="9"/><text x="47.1221%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="46.9236%" y="469" width="0.0258%" height="15" fill="rgb(233,164,1)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="46.9236%" y="453" width="0.0258%" height="15" fill="rgb(218,88,48)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="46.9236%" y="437" width="0.0258%" height="15" fill="rgb(226,214,24)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="46.9236%" y="421" width="0.0258%" height="15" fill="rgb(233,29,12)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="431.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="46.9236%" y="405" width="0.0258%" height="15" fill="rgb(219,120,34)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="46.9236%" y="389" width="0.0258%" height="15" fill="rgb(226,78,44)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="46.9236%" y="373" width="0.0258%" height="15" fill="rgb(240,15,48)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="46.9236%" y="357" width="0.0258%" height="15" fill="rgb(253,176,7)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="46.9236%" y="341" width="0.0258%" height="15" fill="rgb(206,166,28)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="46.9236%" y="325" width="0.0258%" height="15" fill="rgb(241,53,51)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="335.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="46.9236%" y="309" width="0.0258%" height="15" fill="rgb(249,112,30)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="319.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="46.9236%" y="293" width="0.0258%" height="15" fill="rgb(217,85,30)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="46.9236%" y="277" width="0.0258%" height="15" fill="rgb(233,49,7)" fg:x="9106" fg:w="5"/><text x="47.1736%" y="287.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (5 samples, 0.03%)</title><rect x="46.9546%" y="453" width="0.0258%" height="15" fill="rgb(234,109,9)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="46.9546%" y="437" width="0.0258%" height="15" fill="rgb(253,95,22)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.03%)</title><rect x="46.9546%" y="421" width="0.0258%" height="15" fill="rgb(233,176,25)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="46.9546%" y="405" width="0.0258%" height="15" fill="rgb(236,33,39)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="46.9546%" y="389" width="0.0258%" height="15" fill="rgb(223,226,42)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="46.9546%" y="373" width="0.0258%" height="15" fill="rgb(216,99,33)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="46.9546%" y="357" width="0.0258%" height="15" fill="rgb(235,84,23)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="367.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="46.9546%" y="341" width="0.0258%" height="15" fill="rgb(232,2,27)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="351.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="46.9546%" y="325" width="0.0258%" height="15" fill="rgb(241,23,22)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="335.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.03%)</title><rect x="46.9546%" y="309" width="0.0258%" height="15" fill="rgb(211,73,27)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="319.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="46.9546%" y="293" width="0.0258%" height="15" fill="rgb(235,109,49)" fg:x="9112" fg:w="5"/><text x="47.2046%" y="303.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="46.9649%" y="277" width="0.0155%" height="15" fill="rgb(230,99,29)" fg:x="9114" fg:w="3"/><text x="47.2149%" y="287.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="46.9700%" y="261" width="0.0103%" height="15" fill="rgb(245,199,7)" fg:x="9115" fg:w="2"/><text x="47.2200%" y="271.50"></text></g><g><title>rlp::rlpin::Rlp::at (2 samples, 0.01%)</title><rect x="46.9803%" y="453" width="0.0103%" height="15" fill="rgb(217,179,10)" fg:x="9117" fg:w="2"/><text x="47.2303%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="46.9803%" y="437" width="0.0103%" height="15" fill="rgb(254,99,47)" fg:x="9117" fg:w="2"/><text x="47.2303%" y="447.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (32 samples, 0.16%)</title><rect x="46.8309%" y="533" width="0.1649%" height="15" fill="rgb(251,121,7)" fg:x="9088" fg:w="32"/><text x="47.0809%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (27 samples, 0.14%)</title><rect x="46.8566%" y="517" width="0.1391%" height="15" fill="rgb(250,177,26)" fg:x="9093" fg:w="27"/><text x="47.1066%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (26 samples, 0.13%)</title><rect x="46.8618%" y="501" width="0.1340%" height="15" fill="rgb(232,88,15)" fg:x="9094" fg:w="26"/><text x="47.1118%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (14 samples, 0.07%)</title><rect x="46.9236%" y="485" width="0.0721%" height="15" fill="rgb(251,54,54)" fg:x="9106" fg:w="14"/><text x="47.1736%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (8 samples, 0.04%)</title><rect x="46.9546%" y="469" width="0.0412%" height="15" fill="rgb(208,177,15)" fg:x="9112" fg:w="8"/><text x="47.2046%" y="479.50"></text></g><g><title>zilliqa::state::State::get_account (45 samples, 0.23%)</title><rect x="46.8309%" y="549" width="0.2319%" height="15" fill="rgb(205,97,32)" fg:x="9088" fg:w="45"/><text x="47.0809%" y="559.50"></text></g><g><title>zilliqa::state::State::account_key (12 samples, 0.06%)</title><rect x="47.0009%" y="533" width="0.0618%" height="15" fill="rgb(217,192,13)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="543.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (12 samples, 0.06%)</title><rect x="47.0009%" y="517" width="0.0618%" height="15" fill="rgb(215,163,41)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="527.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (12 samples, 0.06%)</title><rect x="47.0009%" y="501" width="0.0618%" height="15" fill="rgb(246,83,29)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="511.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (12 samples, 0.06%)</title><rect x="47.0009%" y="485" width="0.0618%" height="15" fill="rgb(219,2,45)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="495.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (12 samples, 0.06%)</title><rect x="47.0009%" y="469" width="0.0618%" height="15" fill="rgb(242,215,33)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="479.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (12 samples, 0.06%)</title><rect x="47.0009%" y="453" width="0.0618%" height="15" fill="rgb(217,1,6)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="463.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (12 samples, 0.06%)</title><rect x="47.0009%" y="437" width="0.0618%" height="15" fill="rgb(207,85,52)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="447.50"></text></g><g><title>keccak::p1600 (12 samples, 0.06%)</title><rect x="47.0009%" y="421" width="0.0618%" height="15" fill="rgb(231,171,19)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="431.50"></text></g><g><title>keccak::keccak_p (12 samples, 0.06%)</title><rect x="47.0009%" y="405" width="0.0618%" height="15" fill="rgb(207,128,4)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="415.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (12 samples, 0.06%)</title><rect x="47.0009%" y="389" width="0.0618%" height="15" fill="rgb(219,208,4)" fg:x="9121" fg:w="12"/><text x="47.2509%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::nibbles::Nibbles&gt; (2 samples, 0.01%)</title><rect x="47.0628%" y="517" width="0.0103%" height="15" fill="rgb(235,161,42)" fg:x="9133" fg:w="2"/><text x="47.3128%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="47.0628%" y="501" width="0.0103%" height="15" fill="rgb(247,218,18)" fg:x="9133" fg:w="2"/><text x="47.3128%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="47.0628%" y="485" width="0.0103%" height="15" fill="rgb(232,114,51)" fg:x="9133" fg:w="2"/><text x="47.3128%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="47.0628%" y="469" width="0.0103%" height="15" fill="rgb(222,95,3)" fg:x="9133" fg:w="2"/><text x="47.3128%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.04%)</title><rect x="47.0731%" y="437" width="0.0361%" height="15" fill="rgb(240,65,29)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.04%)</title><rect x="47.0731%" y="421" width="0.0361%" height="15" fill="rgb(249,209,20)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="431.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.04%)</title><rect x="47.0731%" y="405" width="0.0361%" height="15" fill="rgb(241,48,37)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="415.50"></text></g><g><title>__rdl_realloc (7 samples, 0.04%)</title><rect x="47.0731%" y="389" width="0.0361%" height="15" fill="rgb(230,140,42)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.04%)</title><rect x="47.0731%" y="373" width="0.0361%" height="15" fill="rgb(230,176,45)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="383.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.04%)</title><rect x="47.0731%" y="357" width="0.0361%" height="15" fill="rgb(245,112,21)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="367.50"></text></g><g><title>_int_realloc (7 samples, 0.04%)</title><rect x="47.0731%" y="341" width="0.0361%" height="15" fill="rgb(207,183,35)" fg:x="9135" fg:w="7"/><text x="47.3231%" y="351.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="47.0988%" y="325" width="0.0103%" height="15" fill="rgb(227,44,33)" fg:x="9140" fg:w="2"/><text x="47.3488%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="47.0731%" y="453" width="0.0412%" height="15" fill="rgb(246,120,21)" fg:x="9135" fg:w="8"/><text x="47.3231%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.05%)</title><rect x="47.0731%" y="485" width="0.0464%" height="15" fill="rgb(235,57,52)" fg:x="9135" fg:w="9"/><text x="47.3231%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.05%)</title><rect x="47.0731%" y="469" width="0.0464%" height="15" fill="rgb(238,84,10)" fg:x="9135" fg:w="9"/><text x="47.3231%" y="479.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (10 samples, 0.05%)</title><rect x="47.0731%" y="517" width="0.0515%" height="15" fill="rgb(251,200,32)" fg:x="9135" fg:w="10"/><text x="47.3231%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.05%)</title><rect x="47.0731%" y="501" width="0.0515%" height="15" fill="rgb(247,159,13)" fg:x="9135" fg:w="10"/><text x="47.3231%" y="511.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="47.1349%" y="485" width="0.0361%" height="15" fill="rgb(238,64,4)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="47.1349%" y="469" width="0.0361%" height="15" fill="rgb(221,131,51)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="479.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (7 samples, 0.04%)</title><rect x="47.1349%" y="453" width="0.0361%" height="15" fill="rgb(242,5,29)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (7 samples, 0.04%)</title><rect x="47.1349%" y="437" width="0.0361%" height="15" fill="rgb(214,130,32)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (7 samples, 0.04%)</title><rect x="47.1349%" y="421" width="0.0361%" height="15" fill="rgb(244,210,16)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="431.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 0.04%)</title><rect x="47.1349%" y="405" width="0.0361%" height="15" fill="rgb(234,48,26)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 0.04%)</title><rect x="47.1349%" y="389" width="0.0361%" height="15" fill="rgb(231,82,38)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 0.04%)</title><rect x="47.1349%" y="373" width="0.0361%" height="15" fill="rgb(254,128,41)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 0.04%)</title><rect x="47.1349%" y="357" width="0.0361%" height="15" fill="rgb(212,73,49)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.04%)</title><rect x="47.1349%" y="341" width="0.0361%" height="15" fill="rgb(205,62,54)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="351.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.04%)</title><rect x="47.1349%" y="325" width="0.0361%" height="15" fill="rgb(228,0,8)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="335.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.04%)</title><rect x="47.1349%" y="309" width="0.0361%" height="15" fill="rgb(251,28,17)" fg:x="9147" fg:w="7"/><text x="47.3849%" y="319.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::contains (4 samples, 0.02%)</title><rect x="47.1761%" y="453" width="0.0206%" height="15" fill="rgb(238,105,27)" fg:x="9155" fg:w="4"/><text x="47.4261%" y="463.50"></text></g><g><title>lru_mem::make_hash (4 samples, 0.02%)</title><rect x="47.1761%" y="437" width="0.0206%" height="15" fill="rgb(237,216,33)" fg:x="9155" fg:w="4"/><text x="47.4261%" y="447.50"></text></g><g><title>&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="47.1864%" y="421" width="0.0103%" height="15" fill="rgb(229,228,25)" fg:x="9157" fg:w="2"/><text x="47.4364%" y="431.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="47.2122%" y="421" width="0.0103%" height="15" fill="rgb(233,75,23)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="431.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (2 samples, 0.01%)</title><rect x="47.2122%" y="405" width="0.0103%" height="15" fill="rgb(231,207,16)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="415.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (2 samples, 0.01%)</title><rect x="47.2122%" y="389" width="0.0103%" height="15" fill="rgb(231,191,45)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="399.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (2 samples, 0.01%)</title><rect x="47.2122%" y="373" width="0.0103%" height="15" fill="rgb(224,133,17)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="383.50"></text></g><g><title>sqlite3_finalize (2 samples, 0.01%)</title><rect x="47.2122%" y="357" width="0.0103%" height="15" fill="rgb(209,178,27)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="367.50"></text></g><g><title>sqlite3VdbeDelete (2 samples, 0.01%)</title><rect x="47.2122%" y="341" width="0.0103%" height="15" fill="rgb(218,37,11)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="351.50"></text></g><g><title>sqlite3VdbeClearObject (2 samples, 0.01%)</title><rect x="47.2122%" y="325" width="0.0103%" height="15" fill="rgb(251,226,25)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="335.50"></text></g><g><title>vdbeFreeOpArray (2 samples, 0.01%)</title><rect x="47.2122%" y="309" width="0.0103%" height="15" fill="rgb(209,222,27)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="319.50"></text></g><g><title>freeP4 (2 samples, 0.01%)</title><rect x="47.2122%" y="293" width="0.0103%" height="15" fill="rgb(238,22,21)" fg:x="9162" fg:w="2"/><text x="47.4622%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (3 samples, 0.02%)</title><rect x="47.2122%" y="437" width="0.0155%" height="15" fill="rgb(233,161,25)" fg:x="9162" fg:w="3"/><text x="47.4622%" y="447.50"></text></g><g><title>sqlite3ParseObjectReset (2 samples, 0.01%)</title><rect x="47.2328%" y="309" width="0.0103%" height="15" fill="rgb(226,122,53)" fg:x="9166" fg:w="2"/><text x="47.4828%" y="319.50"></text></g><g><title>keywordCode (3 samples, 0.02%)</title><rect x="47.2431%" y="293" width="0.0155%" height="15" fill="rgb(220,123,17)" fg:x="9168" fg:w="3"/><text x="47.4931%" y="303.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.01%)</title><rect x="47.2586%" y="293" width="0.0103%" height="15" fill="rgb(230,224,35)" fg:x="9171" fg:w="2"/><text x="47.5086%" y="303.50"></text></g><g><title>yy_find_shift_action (9 samples, 0.05%)</title><rect x="47.2689%" y="277" width="0.0464%" height="15" fill="rgb(246,83,8)" fg:x="9173" fg:w="9"/><text x="47.5189%" y="287.50"></text></g><g><title>sqlite3FinishCoding (6 samples, 0.03%)</title><rect x="47.3307%" y="261" width="0.0309%" height="15" fill="rgb(230,214,17)" fg:x="9185" fg:w="6"/><text x="47.5807%" y="271.50"></text></g><g><title>sqlite3VdbeMakeReady (3 samples, 0.02%)</title><rect x="47.3462%" y="245" width="0.0155%" height="15" fill="rgb(222,97,18)" fg:x="9188" fg:w="3"/><text x="47.5962%" y="255.50"></text></g><g><title>sqlite3GenerateColumnNames (3 samples, 0.02%)</title><rect x="47.3874%" y="245" width="0.0155%" height="15" fill="rgb(206,79,1)" fg:x="9196" fg:w="3"/><text x="47.6374%" y="255.50"></text></g><g><title>sqlite3ResolveSelectNames (2 samples, 0.01%)</title><rect x="47.4029%" y="229" width="0.0103%" height="15" fill="rgb(214,121,34)" fg:x="9199" fg:w="2"/><text x="47.6529%" y="239.50"></text></g><g><title>sqlite3WalkSelect (2 samples, 0.01%)</title><rect x="47.4029%" y="213" width="0.0103%" height="15" fill="rgb(249,199,46)" fg:x="9199" fg:w="2"/><text x="47.6529%" y="223.50"></text></g><g><title>resolveSelectStep (2 samples, 0.01%)</title><rect x="47.4029%" y="197" width="0.0103%" height="15" fill="rgb(214,222,46)" fg:x="9199" fg:w="2"/><text x="47.6529%" y="207.50"></text></g><g><title>selectExpander (4 samples, 0.02%)</title><rect x="47.4132%" y="197" width="0.0206%" height="15" fill="rgb(248,168,30)" fg:x="9201" fg:w="4"/><text x="47.6632%" y="207.50"></text></g><g><title>sqlite3LocateTableItem (4 samples, 0.02%)</title><rect x="47.4132%" y="181" width="0.0206%" height="15" fill="rgb(226,14,28)" fg:x="9201" fg:w="4"/><text x="47.6632%" y="191.50"></text></g><g><title>sqlite3LocateTable (4 samples, 0.02%)</title><rect x="47.4132%" y="165" width="0.0206%" height="15" fill="rgb(253,123,1)" fg:x="9201" fg:w="4"/><text x="47.6632%" y="175.50"></text></g><g><title>sqlite3FindTable (2 samples, 0.01%)</title><rect x="47.4235%" y="149" width="0.0103%" height="15" fill="rgb(225,24,42)" fg:x="9203" fg:w="2"/><text x="47.6735%" y="159.50"></text></g><g><title>sqlite3HashFind (2 samples, 0.01%)</title><rect x="47.4235%" y="133" width="0.0103%" height="15" fill="rgb(216,161,37)" fg:x="9203" fg:w="2"/><text x="47.6735%" y="143.50"></text></g><g><title>findElementWithHash (2 samples, 0.01%)</title><rect x="47.4235%" y="117" width="0.0103%" height="15" fill="rgb(251,164,26)" fg:x="9203" fg:w="2"/><text x="47.6735%" y="127.50"></text></g><g><title>sqlite3SelectExpand (5 samples, 0.03%)</title><rect x="47.4132%" y="229" width="0.0258%" height="15" fill="rgb(219,177,3)" fg:x="9201" fg:w="5"/><text x="47.6632%" y="239.50"></text></g><g><title>sqlite3WalkSelect (5 samples, 0.03%)</title><rect x="47.4132%" y="213" width="0.0258%" height="15" fill="rgb(222,65,0)" fg:x="9201" fg:w="5"/><text x="47.6632%" y="223.50"></text></g><g><title>sqlite3SelectPrep (9 samples, 0.05%)</title><rect x="47.4029%" y="245" width="0.0464%" height="15" fill="rgb(223,69,54)" fg:x="9199" fg:w="9"/><text x="47.6529%" y="255.50"></text></g><g><title>sqlite3SelectPrep (2 samples, 0.01%)</title><rect x="47.4389%" y="229" width="0.0103%" height="15" fill="rgb(235,30,27)" fg:x="9206" fg:w="2"/><text x="47.6889%" y="239.50"></text></g><g><title>sqlite3SelectAddTypeInfo (2 samples, 0.01%)</title><rect x="47.4389%" y="213" width="0.0103%" height="15" fill="rgb(220,183,50)" fg:x="9206" fg:w="2"/><text x="47.6889%" y="223.50"></text></g><g><title>sqlite3WalkSelect (2 samples, 0.01%)</title><rect x="47.4389%" y="197" width="0.0103%" height="15" fill="rgb(248,198,15)" fg:x="9206" fg:w="2"/><text x="47.6889%" y="207.50"></text></g><g><title>sqlite3WalkSelectExpr (2 samples, 0.01%)</title><rect x="47.4389%" y="181" width="0.0103%" height="15" fill="rgb(222,211,4)" fg:x="9206" fg:w="2"/><text x="47.6889%" y="191.50"></text></g><g><title>sqlite3VdbeSetP4KeyInfo (7 samples, 0.04%)</title><rect x="47.4544%" y="229" width="0.0361%" height="15" fill="rgb(214,102,34)" fg:x="9209" fg:w="7"/><text x="47.7044%" y="239.50"></text></g><g><title>sqlite3VdbeAppendP4 (7 samples, 0.04%)</title><rect x="47.4544%" y="213" width="0.0361%" height="15" fill="rgb(245,92,5)" fg:x="9209" fg:w="7"/><text x="47.7044%" y="223.50"></text></g><g><title>sqlite3VdbeAppendP4 (7 samples, 0.04%)</title><rect x="47.4544%" y="197" width="0.0361%" height="15" fill="rgb(252,72,51)" fg:x="9209" fg:w="7"/><text x="47.7044%" y="207.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (9 samples, 0.05%)</title><rect x="47.4905%" y="229" width="0.0464%" height="15" fill="rgb(252,208,19)" fg:x="9216" fg:w="9"/><text x="47.7405%" y="239.50"></text></g><g><title>codeAllEqualityTerms (3 samples, 0.02%)</title><rect x="47.5214%" y="213" width="0.0155%" height="15" fill="rgb(211,69,7)" fg:x="9222" fg:w="3"/><text x="47.7714%" y="223.50"></text></g><g><title>sqlite3DbStrDup (2 samples, 0.01%)</title><rect x="47.5265%" y="197" width="0.0103%" height="15" fill="rgb(211,27,16)" fg:x="9223" fg:w="2"/><text x="47.7765%" y="207.50"></text></g><g><title>sqlite3WhereBegin (20 samples, 0.10%)</title><rect x="47.4492%" y="245" width="0.1031%" height="15" fill="rgb(219,216,14)" fg:x="9208" fg:w="20"/><text x="47.6992%" y="255.50"></text></g><g><title>whereShortCut (2 samples, 0.01%)</title><rect x="47.5420%" y="229" width="0.0103%" height="15" fill="rgb(219,71,8)" fg:x="9226" fg:w="2"/><text x="47.7920%" y="239.50"></text></g><g><title>sqlite3Select (37 samples, 0.19%)</title><rect x="47.3668%" y="261" width="0.1907%" height="15" fill="rgb(223,170,53)" fg:x="9192" fg:w="37"/><text x="47.6168%" y="271.50"></text></g><g><title>sqlite3SelectDelete (2 samples, 0.01%)</title><rect x="47.5575%" y="261" width="0.0103%" height="15" fill="rgb(246,21,26)" fg:x="9229" fg:w="2"/><text x="47.8075%" y="271.50"></text></g><g><title>sqlite3SelectDelete (2 samples, 0.01%)</title><rect x="47.5575%" y="245" width="0.0103%" height="15" fill="rgb(248,20,46)" fg:x="9229" fg:w="2"/><text x="47.8075%" y="255.50"></text></g><g><title>clearSelect (2 samples, 0.01%)</title><rect x="47.5575%" y="229" width="0.0103%" height="15" fill="rgb(252,94,11)" fg:x="9229" fg:w="2"/><text x="47.8075%" y="239.50"></text></g><g><title>rusqlite::Connection::prepare (74 samples, 0.38%)</title><rect x="47.2277%" y="437" width="0.3813%" height="15" fill="rgb(236,163,8)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="447.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (74 samples, 0.38%)</title><rect x="47.2277%" y="421" width="0.3813%" height="15" fill="rgb(217,221,45)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="431.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (74 samples, 0.38%)</title><rect x="47.2277%" y="405" width="0.3813%" height="15" fill="rgb(238,38,17)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="415.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (74 samples, 0.38%)</title><rect x="47.2277%" y="389" width="0.3813%" height="15" fill="rgb(242,210,23)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="399.50"></text></g><g><title>sqlite3_prepare_v3 (74 samples, 0.38%)</title><rect x="47.2277%" y="373" width="0.3813%" height="15" fill="rgb(250,86,53)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="383.50"></text></g><g><title>sqlite3LockAndPrepare (74 samples, 0.38%)</title><rect x="47.2277%" y="357" width="0.3813%" height="15" fill="rgb(223,168,25)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="367.50"></text></g><g><title>sqlite3LockAndPrepare (74 samples, 0.38%)</title><rect x="47.2277%" y="341" width="0.3813%" height="15" fill="rgb(251,189,4)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="351.50"></text></g><g><title>sqlite3Prepare (74 samples, 0.38%)</title><rect x="47.2277%" y="325" width="0.3813%" height="15" fill="rgb(245,19,28)" fg:x="9165" fg:w="74"/><text x="47.4777%" y="335.50"></text></g><g><title>sqlite3RunParser (71 samples, 0.37%)</title><rect x="47.2431%" y="309" width="0.3659%" height="15" fill="rgb(207,10,34)" fg:x="9168" fg:w="71"/><text x="47.4931%" y="319.50"></text></g><g><title>sqlite3Parser (66 samples, 0.34%)</title><rect x="47.2689%" y="293" width="0.3401%" height="15" fill="rgb(235,153,31)" fg:x="9173" fg:w="66"/><text x="47.5189%" y="303.50"></text></g><g><title>yy_reduce (57 samples, 0.29%)</title><rect x="47.3153%" y="277" width="0.2937%" height="15" fill="rgb(228,72,37)" fg:x="9182" fg:w="57"/><text x="47.5653%" y="287.50"></text></g><g><title>yy_find_reduce_action (7 samples, 0.04%)</title><rect x="47.5729%" y="261" width="0.0361%" height="15" fill="rgb(215,15,16)" fg:x="9232" fg:w="7"/><text x="47.8229%" y="271.50"></text></g><g><title>closeAllCursors (3 samples, 0.02%)</title><rect x="47.6141%" y="277" width="0.0155%" height="15" fill="rgb(250,119,29)" fg:x="9240" fg:w="3"/><text x="47.8641%" y="287.50"></text></g><g><title>closeCursorsInFrame (3 samples, 0.02%)</title><rect x="47.6141%" y="261" width="0.0155%" height="15" fill="rgb(214,59,1)" fg:x="9240" fg:w="3"/><text x="47.8641%" y="271.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (3 samples, 0.02%)</title><rect x="47.6141%" y="245" width="0.0155%" height="15" fill="rgb(223,109,25)" fg:x="9240" fg:w="3"/><text x="47.8641%" y="255.50"></text></g><g><title>sqlite3BtreeCloseCursor (3 samples, 0.02%)</title><rect x="47.6141%" y="229" width="0.0155%" height="15" fill="rgb(230,198,22)" fg:x="9240" fg:w="3"/><text x="47.8641%" y="239.50"></text></g><g><title>btreeReleaseAllCursorPages (3 samples, 0.02%)</title><rect x="47.6141%" y="213" width="0.0155%" height="15" fill="rgb(245,184,46)" fg:x="9240" fg:w="3"/><text x="47.8641%" y="223.50"></text></g><g><title>btreeReleaseAllCursorPages (3 samples, 0.02%)</title><rect x="47.6141%" y="197" width="0.0155%" height="15" fill="rgb(253,73,16)" fg:x="9240" fg:w="3"/><text x="47.8641%" y="207.50"></text></g><g><title>releasePageNotNull (2 samples, 0.01%)</title><rect x="47.6193%" y="181" width="0.0103%" height="15" fill="rgb(206,94,45)" fg:x="9241" fg:w="2"/><text x="47.8693%" y="191.50"></text></g><g><title>sqlite3PagerUnrefNotNull (2 samples, 0.01%)</title><rect x="47.6193%" y="165" width="0.0103%" height="15" fill="rgb(236,83,27)" fg:x="9241" fg:w="2"/><text x="47.8693%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (19 samples, 0.10%)</title><rect x="47.6090%" y="421" width="0.0979%" height="15" fill="rgb(220,196,8)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="431.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (19 samples, 0.10%)</title><rect x="47.6090%" y="405" width="0.0979%" height="15" fill="rgb(254,185,14)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="415.50"></text></g><g><title>rusqlite::row::Rows::reset (19 samples, 0.10%)</title><rect x="47.6090%" y="389" width="0.0979%" height="15" fill="rgb(226,50,22)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="399.50"></text></g><g><title>rusqlite::statement::Statement::reset (19 samples, 0.10%)</title><rect x="47.6090%" y="373" width="0.0979%" height="15" fill="rgb(253,147,0)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="383.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (19 samples, 0.10%)</title><rect x="47.6090%" y="357" width="0.0979%" height="15" fill="rgb(252,46,33)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="367.50"></text></g><g><title>sqlite3_reset (19 samples, 0.10%)</title><rect x="47.6090%" y="341" width="0.0979%" height="15" fill="rgb(242,22,54)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="351.50"></text></g><g><title>sqlite3_reset (19 samples, 0.10%)</title><rect x="47.6090%" y="325" width="0.0979%" height="15" fill="rgb(223,178,32)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="335.50"></text></g><g><title>sqlite3VdbeReset (19 samples, 0.10%)</title><rect x="47.6090%" y="309" width="0.0979%" height="15" fill="rgb(214,106,53)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="319.50"></text></g><g><title>sqlite3VdbeHalt (19 samples, 0.10%)</title><rect x="47.6090%" y="293" width="0.0979%" height="15" fill="rgb(232,65,50)" fg:x="9239" fg:w="19"/><text x="47.8590%" y="303.50"></text></g><g><title>vdbeCommit (15 samples, 0.08%)</title><rect x="47.6296%" y="277" width="0.0773%" height="15" fill="rgb(231,110,28)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="287.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (15 samples, 0.08%)</title><rect x="47.6296%" y="261" width="0.0773%" height="15" fill="rgb(216,71,40)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="271.50"></text></g><g><title>pager_unlock (15 samples, 0.08%)</title><rect x="47.6296%" y="245" width="0.0773%" height="15" fill="rgb(229,89,53)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="255.50"></text></g><g><title>sqlite3WalEndReadTransaction (15 samples, 0.08%)</title><rect x="47.6296%" y="229" width="0.0773%" height="15" fill="rgb(210,124,14)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="239.50"></text></g><g><title>walUnlockShared (15 samples, 0.08%)</title><rect x="47.6296%" y="213" width="0.0773%" height="15" fill="rgb(236,213,6)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="223.50"></text></g><g><title>walUnlockShared (15 samples, 0.08%)</title><rect x="47.6296%" y="197" width="0.0773%" height="15" fill="rgb(228,41,5)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="207.50"></text></g><g><title>sqlite3OsShmLock (15 samples, 0.08%)</title><rect x="47.6296%" y="181" width="0.0773%" height="15" fill="rgb(221,167,25)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="191.50"></text></g><g><title>unixShmLock (15 samples, 0.08%)</title><rect x="47.6296%" y="165" width="0.0773%" height="15" fill="rgb(228,144,37)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="175.50"></text></g><g><title>unixShmSystemLock (15 samples, 0.08%)</title><rect x="47.6296%" y="149" width="0.0773%" height="15" fill="rgb(227,189,38)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="159.50"></text></g><g><title>__GI___libc_fcntl64 (15 samples, 0.08%)</title><rect x="47.6296%" y="133" width="0.0773%" height="15" fill="rgb(218,8,2)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="143.50"></text></g><g><title>__fcntl64_nocancel_adjusted (15 samples, 0.08%)</title><rect x="47.6296%" y="117" width="0.0773%" height="15" fill="rgb(209,61,28)" fg:x="9243" fg:w="15"/><text x="47.8796%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as rusqlite::types::from_sql::FromSql&gt;::column_result (2 samples, 0.01%)</title><rect x="47.7069%" y="373" width="0.0103%" height="15" fill="rgb(233,140,39)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.01%)</title><rect x="47.7069%" y="357" width="0.0103%" height="15" fill="rgb(251,66,48)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.01%)</title><rect x="47.7069%" y="341" width="0.0103%" height="15" fill="rgb(210,44,45)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="47.7069%" y="325" width="0.0103%" height="15" fill="rgb(214,136,46)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="47.7069%" y="309" width="0.0103%" height="15" fill="rgb(207,130,50)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="47.7069%" y="293" width="0.0103%" height="15" fill="rgb(228,102,49)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="47.7069%" y="277" width="0.0103%" height="15" fill="rgb(253,55,1)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="47.7069%" y="261" width="0.0103%" height="15" fill="rgb(238,222,9)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="47.7069%" y="245" width="0.0103%" height="15" fill="rgb(246,99,6)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="47.7069%" y="229" width="0.0103%" height="15" fill="rgb(219,110,26)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="47.7069%" y="213" width="0.0103%" height="15" fill="rgb(239,160,33)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="47.7069%" y="197" width="0.0103%" height="15" fill="rgb(220,202,23)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="47.7069%" y="181" width="0.0103%" height="15" fill="rgb(208,80,26)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="191.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="47.7069%" y="165" width="0.0103%" height="15" fill="rgb(243,85,7)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="175.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="47.7069%" y="149" width="0.0103%" height="15" fill="rgb(228,77,47)" fg:x="9258" fg:w="2"/><text x="47.9569%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="47.7069%" y="421" width="0.0206%" height="15" fill="rgb(212,226,8)" fg:x="9258" fg:w="4"/><text x="47.9569%" y="431.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get::{{closure}} (4 samples, 0.02%)</title><rect x="47.7069%" y="405" width="0.0206%" height="15" fill="rgb(241,120,54)" fg:x="9258" fg:w="4"/><text x="47.9569%" y="415.50"></text></g><g><title>rusqlite::row::Row::get (4 samples, 0.02%)</title><rect x="47.7069%" y="389" width="0.0206%" height="15" fill="rgb(226,80,16)" fg:x="9258" fg:w="4"/><text x="47.9569%" y="399.50"></text></g><g><title>rusqlite::statement::Statement::value_ref (2 samples, 0.01%)</title><rect x="47.7172%" y="373" width="0.0103%" height="15" fill="rgb(240,76,13)" fg:x="9260" fg:w="2"/><text x="47.9672%" y="383.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (2 samples, 0.01%)</title><rect x="47.7584%" y="277" width="0.0103%" height="15" fill="rgb(252,74,8)" fg:x="9268" fg:w="2"/><text x="48.0084%" y="287.50"></text></g><g><title>btreeGetPage (2 samples, 0.01%)</title><rect x="47.7893%" y="229" width="0.0103%" height="15" fill="rgb(244,155,2)" fg:x="9274" fg:w="2"/><text x="48.0393%" y="239.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="47.7893%" y="213" width="0.0103%" height="15" fill="rgb(215,81,35)" fg:x="9274" fg:w="2"/><text x="48.0393%" y="223.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="47.7893%" y="197" width="0.0103%" height="15" fill="rgb(206,55,2)" fg:x="9274" fg:w="2"/><text x="48.0393%" y="207.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="47.7893%" y="181" width="0.0103%" height="15" fill="rgb(231,2,34)" fg:x="9274" fg:w="2"/><text x="48.0393%" y="191.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="47.7893%" y="165" width="0.0103%" height="15" fill="rgb(242,176,48)" fg:x="9274" fg:w="2"/><text x="48.0393%" y="175.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="47.7893%" y="149" width="0.0103%" height="15" fill="rgb(249,31,36)" fg:x="9274" fg:w="2"/><text x="48.0393%" y="159.50"></text></g><g><title>sqlite3BtreeBeginTrans (33 samples, 0.17%)</title><rect x="47.7687%" y="277" width="0.1701%" height="15" fill="rgb(205,18,17)" fg:x="9270" fg:w="33"/><text x="48.0187%" y="287.50"></text></g><g><title>btreeBeginTrans (33 samples, 0.17%)</title><rect x="47.7687%" y="261" width="0.1701%" height="15" fill="rgb(254,130,5)" fg:x="9270" fg:w="33"/><text x="48.0187%" y="271.50"></text></g><g><title>lockBtree (33 samples, 0.17%)</title><rect x="47.7687%" y="245" width="0.1701%" height="15" fill="rgb(229,42,45)" fg:x="9270" fg:w="33"/><text x="48.0187%" y="255.50"></text></g><g><title>sqlite3PagerSharedLock (27 samples, 0.14%)</title><rect x="47.7996%" y="229" width="0.1391%" height="15" fill="rgb(245,95,25)" fg:x="9276" fg:w="27"/><text x="48.0496%" y="239.50"></text></g><g><title>pagerBeginReadTransaction (25 samples, 0.13%)</title><rect x="47.8100%" y="213" width="0.1288%" height="15" fill="rgb(249,193,38)" fg:x="9278" fg:w="25"/><text x="48.0600%" y="223.50"></text></g><g><title>sqlite3WalBeginReadTransaction (25 samples, 0.13%)</title><rect x="47.8100%" y="197" width="0.1288%" height="15" fill="rgb(241,140,43)" fg:x="9278" fg:w="25"/><text x="48.0600%" y="207.50"></text></g><g><title>walBeginReadTransaction (25 samples, 0.13%)</title><rect x="47.8100%" y="181" width="0.1288%" height="15" fill="rgb(245,78,48)" fg:x="9278" fg:w="25"/><text x="48.0600%" y="191.50"></text></g><g><title>walTryBeginRead (25 samples, 0.13%)</title><rect x="47.8100%" y="165" width="0.1288%" height="15" fill="rgb(214,92,39)" fg:x="9278" fg:w="25"/><text x="48.0600%" y="175.50"></text></g><g><title>walLockShared (23 samples, 0.12%)</title><rect x="47.8203%" y="149" width="0.1185%" height="15" fill="rgb(211,189,14)" fg:x="9280" fg:w="23"/><text x="48.0703%" y="159.50"></text></g><g><title>walLockShared (23 samples, 0.12%)</title><rect x="47.8203%" y="133" width="0.1185%" height="15" fill="rgb(218,7,24)" fg:x="9280" fg:w="23"/><text x="48.0703%" y="143.50"></text></g><g><title>sqlite3OsShmLock (23 samples, 0.12%)</title><rect x="47.8203%" y="117" width="0.1185%" height="15" fill="rgb(224,200,49)" fg:x="9280" fg:w="23"/><text x="48.0703%" y="127.50"></text></g><g><title>unixShmLock (23 samples, 0.12%)</title><rect x="47.8203%" y="101" width="0.1185%" height="15" fill="rgb(218,210,14)" fg:x="9280" fg:w="23"/><text x="48.0703%" y="111.50"></text></g><g><title>unixShmSystemLock (21 samples, 0.11%)</title><rect x="47.8306%" y="85" width="0.1082%" height="15" fill="rgb(234,142,31)" fg:x="9282" fg:w="21"/><text x="48.0806%" y="95.50"></text></g><g><title>__GI___libc_fcntl64 (21 samples, 0.11%)</title><rect x="47.8306%" y="69" width="0.1082%" height="15" fill="rgb(227,165,2)" fg:x="9282" fg:w="21"/><text x="48.0806%" y="79.50"></text></g><g><title>__fcntl64_nocancel_adjusted (21 samples, 0.11%)</title><rect x="47.8306%" y="53" width="0.1082%" height="15" fill="rgb(232,44,46)" fg:x="9282" fg:w="21"/><text x="48.0806%" y="63.50"></text></g><g><title>getAndInitPage (2 samples, 0.01%)</title><rect x="47.9749%" y="261" width="0.0103%" height="15" fill="rgb(236,149,47)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="271.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="47.9749%" y="245" width="0.0103%" height="15" fill="rgb(227,45,31)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="255.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="47.9749%" y="229" width="0.0103%" height="15" fill="rgb(240,176,51)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="239.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="47.9749%" y="213" width="0.0103%" height="15" fill="rgb(249,146,41)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="223.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="47.9749%" y="197" width="0.0103%" height="15" fill="rgb(213,208,4)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="207.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="47.9749%" y="181" width="0.0103%" height="15" fill="rgb(245,84,36)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="191.50"></text></g><g><title>___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="47.9749%" y="165" width="0.0103%" height="15" fill="rgb(254,84,18)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="175.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.01%)</title><rect x="47.9749%" y="149" width="0.0103%" height="15" fill="rgb(225,38,54)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="159.50"></text></g><g><title>lll_mutex_unlock_optimized (2 samples, 0.01%)</title><rect x="47.9749%" y="133" width="0.0103%" height="15" fill="rgb(246,50,30)" fg:x="9310" fg:w="2"/><text x="48.2249%" y="143.50"></text></g><g><title>sqlite3BtreeIndexMoveto (12 samples, 0.06%)</title><rect x="47.9388%" y="277" width="0.0618%" height="15" fill="rgb(246,148,9)" fg:x="9303" fg:w="12"/><text x="48.1888%" y="287.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (2 samples, 0.01%)</title><rect x="47.9903%" y="261" width="0.0103%" height="15" fill="rgb(223,75,4)" fg:x="9313" fg:w="2"/><text x="48.2403%" y="271.50"></text></g><g><title>enlargeAndAppend (2 samples, 0.01%)</title><rect x="48.0212%" y="261" width="0.0103%" height="15" fill="rgb(239,148,41)" fg:x="9319" fg:w="2"/><text x="48.2712%" y="271.50"></text></g><g><title>sqlite3StrAccumEnlarge (2 samples, 0.01%)</title><rect x="48.0212%" y="245" width="0.0103%" height="15" fill="rgb(205,195,3)" fg:x="9319" fg:w="2"/><text x="48.2712%" y="255.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.01%)</title><rect x="48.0212%" y="229" width="0.0103%" height="15" fill="rgb(254,161,1)" fg:x="9319" fg:w="2"/><text x="48.2712%" y="239.50"></text></g><g><title>findNextHostParameter (2 samples, 0.01%)</title><rect x="48.0315%" y="261" width="0.0103%" height="15" fill="rgb(211,229,8)" fg:x="9321" fg:w="2"/><text x="48.2815%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="48.1398%" y="229" width="0.0103%" height="15" fill="rgb(220,97,9)" fg:x="9342" fg:w="2"/><text x="48.3898%" y="239.50"></text></g><g><title>sqlite3MemRealloc (8 samples, 0.04%)</title><rect x="48.1655%" y="181" width="0.0412%" height="15" fill="rgb(240,218,8)" fg:x="9347" fg:w="8"/><text x="48.4155%" y="191.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.04%)</title><rect x="48.1707%" y="165" width="0.0361%" height="15" fill="rgb(250,44,0)" fg:x="9348" fg:w="7"/><text x="48.4207%" y="175.50"></text></g><g><title>_int_realloc (6 samples, 0.03%)</title><rect x="48.1758%" y="149" width="0.0309%" height="15" fill="rgb(236,41,53)" fg:x="9349" fg:w="6"/><text x="48.4258%" y="159.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="48.1964%" y="133" width="0.0103%" height="15" fill="rgb(218,227,13)" fg:x="9353" fg:w="2"/><text x="48.4464%" y="143.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (94 samples, 0.48%)</title><rect x="47.7275%" y="421" width="0.4844%" height="15" fill="rgb(217,94,32)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="431.50"></text></g><g><title>rusqlite::row::Rows::next (94 samples, 0.48%)</title><rect x="47.7275%" y="405" width="0.4844%" height="15" fill="rgb(213,217,12)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="415.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (94 samples, 0.48%)</title><rect x="47.7275%" y="389" width="0.4844%" height="15" fill="rgb(229,13,46)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="399.50"></text></g><g><title>rusqlite::statement::Statement::step (94 samples, 0.48%)</title><rect x="47.7275%" y="373" width="0.4844%" height="15" fill="rgb(243,139,5)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="383.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (94 samples, 0.48%)</title><rect x="47.7275%" y="357" width="0.4844%" height="15" fill="rgb(249,38,45)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="367.50"></text></g><g><title>sqlite3_step (94 samples, 0.48%)</title><rect x="47.7275%" y="341" width="0.4844%" height="15" fill="rgb(216,70,11)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="351.50"></text></g><g><title>sqlite3_step (94 samples, 0.48%)</title><rect x="47.7275%" y="325" width="0.4844%" height="15" fill="rgb(253,101,25)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="335.50"></text></g><g><title>sqlite3Step (94 samples, 0.48%)</title><rect x="47.7275%" y="309" width="0.4844%" height="15" fill="rgb(207,197,30)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="319.50"></text></g><g><title>sqlite3VdbeExec (94 samples, 0.48%)</title><rect x="47.7275%" y="293" width="0.4844%" height="15" fill="rgb(238,87,13)" fg:x="9262" fg:w="94"/><text x="47.9775%" y="303.50"></text></g><g><title>sqlite3VdbeExpandSql (40 samples, 0.21%)</title><rect x="48.0058%" y="277" width="0.2061%" height="15" fill="rgb(215,155,8)" fg:x="9316" fg:w="40"/><text x="48.2558%" y="287.50"></text></g><g><title>sqlite3_str_appendf (33 samples, 0.17%)</title><rect x="48.0418%" y="261" width="0.1701%" height="15" fill="rgb(239,166,38)" fg:x="9323" fg:w="33"/><text x="48.2918%" y="271.50"></text></g><g><title>sqlite3_str_vappendf (31 samples, 0.16%)</title><rect x="48.0521%" y="245" width="0.1597%" height="15" fill="rgb(240,194,35)" fg:x="9325" fg:w="31"/><text x="48.3021%" y="255.50"></text></g><g><title>enlargeAndAppend (12 samples, 0.06%)</title><rect x="48.1501%" y="229" width="0.0618%" height="15" fill="rgb(219,10,44)" fg:x="9344" fg:w="12"/><text x="48.4001%" y="239.50"></text></g><g><title>sqlite3StrAccumEnlarge (11 samples, 0.06%)</title><rect x="48.1552%" y="213" width="0.0567%" height="15" fill="rgb(251,220,35)" fg:x="9345" fg:w="11"/><text x="48.4052%" y="223.50"></text></g><g><title>sqlite3Realloc (11 samples, 0.06%)</title><rect x="48.1552%" y="197" width="0.0567%" height="15" fill="rgb(218,117,13)" fg:x="9345" fg:w="11"/><text x="48.4052%" y="207.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (203 samples, 1.05%)</title><rect x="47.1710%" y="469" width="1.0461%" height="15" fill="rgb(221,213,40)" fg:x="9154" fg:w="203"/><text x="47.4210%" y="479.50"></text></g><g><title>rusqlite::Connection::query_row (197 samples, 1.02%)</title><rect x="47.2019%" y="453" width="1.0151%" height="15" fill="rgb(251,224,35)" fg:x="9160" fg:w="197"/><text x="47.4519%" y="463.50"></text></g><g><title>rusqlite::statement::Statement::query_row (118 samples, 0.61%)</title><rect x="47.6090%" y="437" width="0.6081%" height="15" fill="rgb(241,33,39)" fg:x="9239" fg:w="118"/><text x="47.8590%" y="447.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="48.2170%" y="469" width="0.0258%" height="15" fill="rgb(222,74,17)" fg:x="9357" fg:w="5"/><text x="48.4670%" y="479.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="48.2170%" y="453" width="0.0258%" height="15" fill="rgb(225,103,0)" fg:x="9357" fg:w="5"/><text x="48.4670%" y="463.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (4 samples, 0.02%)</title><rect x="48.2222%" y="437" width="0.0206%" height="15" fill="rgb(240,0,12)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="447.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (4 samples, 0.02%)</title><rect x="48.2222%" y="421" width="0.0206%" height="15" fill="rgb(233,213,37)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="431.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (4 samples, 0.02%)</title><rect x="48.2222%" y="405" width="0.0206%" height="15" fill="rgb(225,84,52)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="415.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 0.02%)</title><rect x="48.2222%" y="389" width="0.0206%" height="15" fill="rgb(247,160,51)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="48.2222%" y="373" width="0.0206%" height="15" fill="rgb(244,60,51)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="48.2222%" y="357" width="0.0206%" height="15" fill="rgb(233,114,7)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="48.2222%" y="341" width="0.0206%" height="15" fill="rgb(246,136,16)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="48.2222%" y="325" width="0.0206%" height="15" fill="rgb(243,114,45)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="335.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="48.2222%" y="309" width="0.0206%" height="15" fill="rgb(247,183,43)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="319.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="48.2222%" y="293" width="0.0206%" height="15" fill="rgb(251,210,42)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.02%)</title><rect x="48.2222%" y="277" width="0.0206%" height="15" fill="rgb(221,88,35)" fg:x="9358" fg:w="4"/><text x="48.4722%" y="287.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (3 samples, 0.02%)</title><rect x="48.2531%" y="453" width="0.0155%" height="15" fill="rgb(242,21,20)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="48.2531%" y="437" width="0.0155%" height="15" fill="rgb(233,226,36)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.02%)</title><rect x="48.2531%" y="421" width="0.0155%" height="15" fill="rgb(243,189,34)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="48.2531%" y="405" width="0.0155%" height="15" fill="rgb(207,145,50)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="48.2531%" y="389" width="0.0155%" height="15" fill="rgb(242,1,50)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="48.2531%" y="373" width="0.0155%" height="15" fill="rgb(231,65,32)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="48.2531%" y="357" width="0.0155%" height="15" fill="rgb(208,68,49)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="367.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="48.2531%" y="341" width="0.0155%" height="15" fill="rgb(253,54,49)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="351.50"></text></g><g><title>__rdl_realloc (3 samples, 0.02%)</title><rect x="48.2531%" y="325" width="0.0155%" height="15" fill="rgb(245,186,24)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="335.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.02%)</title><rect x="48.2531%" y="309" width="0.0155%" height="15" fill="rgb(209,2,41)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="319.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="48.2531%" y="293" width="0.0155%" height="15" fill="rgb(242,208,54)" fg:x="9364" fg:w="3"/><text x="48.5031%" y="303.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="48.2583%" y="277" width="0.0103%" height="15" fill="rgb(225,9,51)" fg:x="9365" fg:w="2"/><text x="48.5083%" y="287.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (237 samples, 1.22%)</title><rect x="47.0628%" y="533" width="1.2213%" height="15" fill="rgb(207,207,25)" fg:x="9133" fg:w="237"/><text x="47.3128%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (225 samples, 1.16%)</title><rect x="47.1246%" y="517" width="1.1594%" height="15" fill="rgb(253,96,18)" fg:x="9145" fg:w="225"/><text x="47.3746%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (225 samples, 1.16%)</title><rect x="47.1246%" y="501" width="1.1594%" height="15" fill="rgb(252,215,20)" fg:x="9145" fg:w="225"/><text x="47.3746%" y="511.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (216 samples, 1.11%)</title><rect x="47.1710%" y="485" width="1.1131%" height="15" fill="rgb(245,227,26)" fg:x="9154" fg:w="216"/><text x="47.4210%" y="495.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (8 samples, 0.04%)</title><rect x="48.2428%" y="469" width="0.0412%" height="15" fill="rgb(241,208,0)" fg:x="9362" fg:w="8"/><text x="48.4928%" y="479.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (287 samples, 1.48%)</title><rect x="46.8309%" y="581" width="1.4789%" height="15" fill="rgb(224,130,10)" fg:x="9088" fg:w="287"/><text x="47.0809%" y="591.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (287 samples, 1.48%)</title><rect x="46.8309%" y="565" width="1.4789%" height="15" fill="rgb(237,29,0)" fg:x="9088" fg:w="287"/><text x="47.0809%" y="575.50"></text></g><g><title>zilliqa::state::State::has_account (242 samples, 1.25%)</title><rect x="47.0628%" y="549" width="1.2470%" height="15" fill="rgb(219,27,41)" fg:x="9133" fg:w="242"/><text x="47.3128%" y="559.50"></text></g><g><title>zilliqa::state::State::account_key (5 samples, 0.03%)</title><rect x="48.2840%" y="533" width="0.0258%" height="15" fill="rgb(245,101,19)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="543.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (5 samples, 0.03%)</title><rect x="48.2840%" y="517" width="0.0258%" height="15" fill="rgb(243,44,37)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="527.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (5 samples, 0.03%)</title><rect x="48.2840%" y="501" width="0.0258%" height="15" fill="rgb(228,213,43)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="511.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (5 samples, 0.03%)</title><rect x="48.2840%" y="485" width="0.0258%" height="15" fill="rgb(219,163,21)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="495.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5 samples, 0.03%)</title><rect x="48.2840%" y="469" width="0.0258%" height="15" fill="rgb(234,86,24)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="479.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5 samples, 0.03%)</title><rect x="48.2840%" y="453" width="0.0258%" height="15" fill="rgb(225,10,24)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="463.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (5 samples, 0.03%)</title><rect x="48.2840%" y="437" width="0.0258%" height="15" fill="rgb(218,109,7)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="447.50"></text></g><g><title>keccak::p1600 (5 samples, 0.03%)</title><rect x="48.2840%" y="421" width="0.0258%" height="15" fill="rgb(210,20,26)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="431.50"></text></g><g><title>keccak::keccak_p (5 samples, 0.03%)</title><rect x="48.2840%" y="405" width="0.0258%" height="15" fill="rgb(216,18,1)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="415.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5 samples, 0.03%)</title><rect x="48.2840%" y="389" width="0.0258%" height="15" fill="rgb(206,163,23)" fg:x="9370" fg:w="5"/><text x="48.5340%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="48.3098%" y="581" width="0.0258%" height="15" fill="rgb(229,150,31)" fg:x="9375" fg:w="5"/><text x="48.5598%" y="591.50"></text></g><g><title>core::ptr::write (5 samples, 0.03%)</title><rect x="48.3098%" y="565" width="0.0258%" height="15" fill="rgb(231,10,5)" fg:x="9375" fg:w="5"/><text x="48.5598%" y="575.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_delegated (293 samples, 1.51%)</title><rect x="46.8309%" y="629" width="1.5098%" height="15" fill="rgb(250,40,50)" fg:x="9088" fg:w="293"/><text x="47.0809%" y="639.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (293 samples, 1.51%)</title><rect x="46.8309%" y="613" width="1.5098%" height="15" fill="rgb(217,119,7)" fg:x="9088" fg:w="293"/><text x="47.0809%" y="623.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (293 samples, 1.51%)</title><rect x="46.8309%" y="597" width="1.5098%" height="15" fill="rgb(245,214,40)" fg:x="9088" fg:w="293"/><text x="47.0809%" y="607.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register::{{closure}} (325 samples, 1.67%)</title><rect x="46.6711%" y="709" width="1.6747%" height="15" fill="rgb(216,187,1)" fg:x="9057" fg:w="325"/><text x="46.9211%" y="719.50"></text></g><g><title>zilliqa::precompiles::scilla::scilla_call_handle_register::{{closure}} (317 samples, 1.63%)</title><rect x="46.7124%" y="693" width="1.6335%" height="15" fill="rgb(237,146,21)" fg:x="9065" fg:w="317"/><text x="46.9624%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (313 samples, 1.61%)</title><rect x="46.7330%" y="677" width="1.6129%" height="15" fill="rgb(210,174,47)" fg:x="9069" fg:w="313"/><text x="46.9830%" y="687.50"></text></g><g><title>revm::handler::mainnet::execution::call (313 samples, 1.61%)</title><rect x="46.7330%" y="661" width="1.6129%" height="15" fill="rgb(218,111,39)" fg:x="9069" fg:w="313"/><text x="46.9830%" y="671.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::make_call_frame (311 samples, 1.60%)</title><rect x="46.7433%" y="645" width="1.6026%" height="15" fill="rgb(224,95,19)" fg:x="9071" fg:w="311"/><text x="46.9933%" y="655.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (968 samples, 4.99%)</title><rect x="43.3680%" y="741" width="4.9881%" height="15" fill="rgb(234,15,38)" fg:x="8416" fg:w="968"/><text x="43.6180%" y="751.50">revm::..</text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (720 samples, 3.71%)</title><rect x="44.6460%" y="725" width="3.7102%" height="15" fill="rgb(246,56,12)" fg:x="8664" fg:w="720"/><text x="44.8960%" y="735.50">revm..</text></g><g><title>revm_interpreter::interpreter_action::call_inputs::CallInputs::new_boxed (2 samples, 0.01%)</title><rect x="48.3459%" y="709" width="0.0103%" height="15" fill="rgb(247,16,17)" fg:x="9382" fg:w="2"/><text x="48.5959%" y="719.50"></text></g><g><title>zilliqa::crypto::HashBuilder::finalize (10 samples, 0.05%)</title><rect x="48.3562%" y="741" width="0.0515%" height="15" fill="rgb(215,151,11)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="751.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (10 samples, 0.05%)</title><rect x="48.3562%" y="725" width="0.0515%" height="15" fill="rgb(225,16,24)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="735.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (10 samples, 0.05%)</title><rect x="48.3562%" y="709" width="0.0515%" height="15" fill="rgb(217,117,5)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="719.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10 samples, 0.05%)</title><rect x="48.3562%" y="693" width="0.0515%" height="15" fill="rgb(246,187,53)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="703.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10 samples, 0.05%)</title><rect x="48.3562%" y="677" width="0.0515%" height="15" fill="rgb(241,71,40)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="687.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (10 samples, 0.05%)</title><rect x="48.3562%" y="661" width="0.0515%" height="15" fill="rgb(231,67,39)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="671.50"></text></g><g><title>keccak::p1600 (10 samples, 0.05%)</title><rect x="48.3562%" y="645" width="0.0515%" height="15" fill="rgb(222,120,24)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="655.50"></text></g><g><title>keccak::keccak_p (10 samples, 0.05%)</title><rect x="48.3562%" y="629" width="0.0515%" height="15" fill="rgb(248,3,3)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="639.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (10 samples, 0.05%)</title><rect x="48.3562%" y="613" width="0.0515%" height="15" fill="rgb(228,218,5)" fg:x="9384" fg:w="10"/><text x="48.6062%" y="623.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (1,577 samples, 8.13%)</title><rect x="40.2865%" y="757" width="8.1264%" height="15" fill="rgb(212,202,43)" fg:x="7818" fg:w="1577"/><text x="40.5365%" y="767.50">zilliqa::ex..</text></g><g><title>zilliqa::consensus::Consensus::apply_transaction_at (1,965 samples, 10.13%)</title><rect x="38.2974%" y="789" width="10.1257%" height="15" fill="rgb(235,183,2)" fg:x="7432" fg:w="1965"/><text x="38.5474%" y="799.50">zilliqa::consen..</text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction (1,963 samples, 10.12%)</title><rect x="38.3077%" y="773" width="10.1154%" height="15" fill="rgb(230,165,10)" fg:x="7434" fg:w="1963"/><text x="38.5577%" y="783.50">zilliqa::exec::..</text></g><g><title>zilliqa::transaction::Transaction::amount (2 samples, 0.01%)</title><rect x="48.4129%" y="757" width="0.0103%" height="15" fill="rgb(219,54,40)" fg:x="9395" fg:w="2"/><text x="48.6629%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="48.4232%" y="773" width="0.0155%" height="15" fill="rgb(244,73,9)" fg:x="9397" fg:w="3"/><text x="48.6732%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="48.4386%" y="757" width="0.0103%" height="15" fill="rgb(212,32,45)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="48.4386%" y="741" width="0.0103%" height="15" fill="rgb(205,58,31)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="48.4386%" y="725" width="0.0103%" height="15" fill="rgb(250,120,43)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (2 samples, 0.01%)</title><rect x="48.4386%" y="709" width="0.0103%" height="15" fill="rgb(235,13,10)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="719.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2 samples, 0.01%)</title><rect x="48.4386%" y="693" width="0.0103%" height="15" fill="rgb(232,219,31)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="48.4386%" y="677" width="0.0103%" height="15" fill="rgb(218,157,51)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="48.4386%" y="661" width="0.0103%" height="15" fill="rgb(211,91,52)" fg:x="9400" fg:w="2"/><text x="48.6886%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm_primitives::env::Env&gt;&gt; (3 samples, 0.02%)</title><rect x="48.4489%" y="757" width="0.0155%" height="15" fill="rgb(240,173,1)" fg:x="9402" fg:w="3"/><text x="48.6989%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::env::Env&gt; (2 samples, 0.01%)</title><rect x="48.4541%" y="741" width="0.0103%" height="15" fill="rgb(248,20,47)" fg:x="9403" fg:w="2"/><text x="48.7041%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::env::TxEnv&gt; (2 samples, 0.01%)</title><rect x="48.4541%" y="725" width="0.0103%" height="15" fill="rgb(217,221,40)" fg:x="9403" fg:w="2"/><text x="48.7041%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::eip7702::authorization_list::AuthorizationList&gt;&gt; (2 samples, 0.01%)</title><rect x="48.4541%" y="709" width="0.0103%" height="15" fill="rgb(226,149,51)" fg:x="9403" fg:w="2"/><text x="48.7041%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.01%)</title><rect x="48.4644%" y="677" width="0.0103%" height="15" fill="rgb(252,193,7)" fg:x="9405" fg:w="2"/><text x="48.7144%" y="687.50"></text></g><g><title>zilliqa::consensus::Consensus::create_txn_receipt (11 samples, 0.06%)</title><rect x="48.4232%" y="789" width="0.0567%" height="15" fill="rgb(205,123,0)" fg:x="9397" fg:w="11"/><text x="48.6732%" y="799.50"></text></g><g><title>zilliqa::exec::TransactionApplyResult::into_parts (8 samples, 0.04%)</title><rect x="48.4386%" y="773" width="0.0412%" height="15" fill="rgb(233,173,25)" fg:x="9400" fg:w="8"/><text x="48.6886%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloy_primitives::bits::address::Address,revm_primitives::state::Account,foldhash::seed::fast::RandomState&gt;&gt; (3 samples, 0.02%)</title><rect x="48.4644%" y="757" width="0.0155%" height="15" fill="rgb(216,63,32)" fg:x="9405" fg:w="3"/><text x="48.7144%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloy_primitives::bits::address::Address,revm_primitives::state::Account,foldhash::seed::fast::RandomState&gt;&gt; (3 samples, 0.02%)</title><rect x="48.4644%" y="741" width="0.0155%" height="15" fill="rgb(209,56,45)" fg:x="9405" fg:w="3"/><text x="48.7144%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloy_primitives::bits::address::Address,revm_primitives::state::Account)&gt;&gt; (3 samples, 0.02%)</title><rect x="48.4644%" y="725" width="0.0155%" height="15" fill="rgb(226,111,49)" fg:x="9405" fg:w="3"/><text x="48.7144%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="48.4644%" y="709" width="0.0155%" height="15" fill="rgb(244,181,21)" fg:x="9405" fg:w="3"/><text x="48.7144%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.02%)</title><rect x="48.4644%" y="693" width="0.0155%" height="15" fill="rgb(222,126,15)" fg:x="9405" fg:w="3"/><text x="48.7144%" y="703.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.01%)</title><rect x="48.5262%" y="581" width="0.0103%" height="15" fill="rgb(222,95,17)" fg:x="9417" fg:w="2"/><text x="48.7762%" y="591.50"></text></g><g><title>yy_find_shift_action (12 samples, 0.06%)</title><rect x="48.5365%" y="565" width="0.0618%" height="15" fill="rgb(254,46,5)" fg:x="9419" fg:w="12"/><text x="48.7865%" y="575.50"></text></g><g><title>sqlite3FinishCoding (6 samples, 0.03%)</title><rect x="48.5984%" y="549" width="0.0309%" height="15" fill="rgb(236,216,35)" fg:x="9431" fg:w="6"/><text x="48.8484%" y="559.50"></text></g><g><title>sqlite3VdbeMakeReady (4 samples, 0.02%)</title><rect x="48.6087%" y="533" width="0.0206%" height="15" fill="rgb(217,187,26)" fg:x="9433" fg:w="4"/><text x="48.8587%" y="543.50"></text></g><g><title>resolveP2Values (3 samples, 0.02%)</title><rect x="48.6138%" y="517" width="0.0155%" height="15" fill="rgb(207,192,25)" fg:x="9434" fg:w="3"/><text x="48.8638%" y="527.50"></text></g><g><title>selectInnerLoop (2 samples, 0.01%)</title><rect x="48.6344%" y="533" width="0.0103%" height="15" fill="rgb(253,135,27)" fg:x="9438" fg:w="2"/><text x="48.8844%" y="543.50"></text></g><g><title>innerLoopLoadRow (2 samples, 0.01%)</title><rect x="48.6344%" y="517" width="0.0103%" height="15" fill="rgb(211,122,29)" fg:x="9438" fg:w="2"/><text x="48.8844%" y="527.50"></text></g><g><title>sqlite3ExprCodeExprList (2 samples, 0.01%)</title><rect x="48.6344%" y="501" width="0.0103%" height="15" fill="rgb(233,162,40)" fg:x="9438" fg:w="2"/><text x="48.8844%" y="511.50"></text></g><g><title>sqlite3GenerateColumnNames (4 samples, 0.02%)</title><rect x="48.6447%" y="533" width="0.0206%" height="15" fill="rgb(222,184,47)" fg:x="9440" fg:w="4"/><text x="48.8947%" y="543.50"></text></g><g><title>generateColumnTypes (2 samples, 0.01%)</title><rect x="48.6551%" y="517" width="0.0103%" height="15" fill="rgb(249,99,23)" fg:x="9442" fg:w="2"/><text x="48.9051%" y="527.50"></text></g><g><title>sqlite3ResolveSelectNames (5 samples, 0.03%)</title><rect x="48.6705%" y="517" width="0.0258%" height="15" fill="rgb(214,60,12)" fg:x="9445" fg:w="5"/><text x="48.9205%" y="527.50"></text></g><g><title>sqlite3WalkSelect (2 samples, 0.01%)</title><rect x="48.6860%" y="501" width="0.0103%" height="15" fill="rgb(250,229,36)" fg:x="9448" fg:w="2"/><text x="48.9360%" y="511.50"></text></g><g><title>resolveSelectStep (2 samples, 0.01%)</title><rect x="48.6860%" y="485" width="0.0103%" height="15" fill="rgb(232,195,10)" fg:x="9448" fg:w="2"/><text x="48.9360%" y="495.50"></text></g><g><title>sqlite3ResolveExprListNames (2 samples, 0.01%)</title><rect x="48.6860%" y="469" width="0.0103%" height="15" fill="rgb(205,213,31)" fg:x="9448" fg:w="2"/><text x="48.9360%" y="479.50"></text></g><g><title>sqlite3SelectPrep (7 samples, 0.04%)</title><rect x="48.6705%" y="533" width="0.0361%" height="15" fill="rgb(237,43,8)" fg:x="9445" fg:w="7"/><text x="48.9205%" y="543.50"></text></g><g><title>sqlite3SelectPrep (2 samples, 0.01%)</title><rect x="48.6963%" y="517" width="0.0103%" height="15" fill="rgb(216,208,3)" fg:x="9450" fg:w="2"/><text x="48.9463%" y="527.50"></text></g><g><title>sqlite3SelectAddTypeInfo (2 samples, 0.01%)</title><rect x="48.6963%" y="501" width="0.0103%" height="15" fill="rgb(228,179,44)" fg:x="9450" fg:w="2"/><text x="48.9463%" y="511.50"></text></g><g><title>sqlite3WalkSelect (2 samples, 0.01%)</title><rect x="48.6963%" y="485" width="0.0103%" height="15" fill="rgb(230,192,27)" fg:x="9450" fg:w="2"/><text x="48.9463%" y="495.50"></text></g><g><title>whereLoopInsert (5 samples, 0.03%)</title><rect x="48.7633%" y="485" width="0.0258%" height="15" fill="rgb(251,30,38)" fg:x="9463" fg:w="5"/><text x="49.0133%" y="495.50"></text></g><g><title>whereLoopAddAll (17 samples, 0.09%)</title><rect x="48.7066%" y="517" width="0.0876%" height="15" fill="rgb(246,55,52)" fg:x="9452" fg:w="17"/><text x="48.9566%" y="527.50"></text></g><g><title>whereLoopAddBtree (14 samples, 0.07%)</title><rect x="48.7220%" y="501" width="0.0721%" height="15" fill="rgb(249,79,26)" fg:x="9455" fg:w="14"/><text x="48.9720%" y="511.50"></text></g><g><title>whereLoopDelete (4 samples, 0.02%)</title><rect x="48.7942%" y="517" width="0.0206%" height="15" fill="rgb(220,202,16)" fg:x="9469" fg:w="4"/><text x="49.0442%" y="527.50"></text></g><g><title>sqlite3DbNNFreeNN (4 samples, 0.02%)</title><rect x="48.7942%" y="501" width="0.0206%" height="15" fill="rgb(250,170,23)" fg:x="9469" fg:w="4"/><text x="49.0442%" y="511.50"></text></g><g><title>sqlite3WhereBegin (23 samples, 0.12%)</title><rect x="48.7066%" y="533" width="0.1185%" height="15" fill="rgb(230,7,37)" fg:x="9452" fg:w="23"/><text x="48.9566%" y="543.50"></text></g><g><title>wherePathSolver (2 samples, 0.01%)</title><rect x="48.8148%" y="517" width="0.0103%" height="15" fill="rgb(213,71,1)" fg:x="9473" fg:w="2"/><text x="49.0648%" y="527.50"></text></g><g><title>sqlite3Select (42 samples, 0.22%)</title><rect x="48.6293%" y="549" width="0.2164%" height="15" fill="rgb(227,87,39)" fg:x="9437" fg:w="42"/><text x="48.8793%" y="559.50"></text></g><g><title>sqlite3WhereEnd (4 samples, 0.02%)</title><rect x="48.8251%" y="533" width="0.0206%" height="15" fill="rgb(210,41,29)" fg:x="9475" fg:w="4"/><text x="49.0751%" y="543.50"></text></g><g><title>sqlite3SelectDelete (3 samples, 0.02%)</title><rect x="48.8457%" y="549" width="0.0155%" height="15" fill="rgb(206,191,31)" fg:x="9479" fg:w="3"/><text x="49.0957%" y="559.50"></text></g><g><title>sqlite3SelectDelete (3 samples, 0.02%)</title><rect x="48.8457%" y="533" width="0.0155%" height="15" fill="rgb(247,75,54)" fg:x="9479" fg:w="3"/><text x="49.0957%" y="543.50"></text></g><g><title>clearSelect (3 samples, 0.02%)</title><rect x="48.8457%" y="517" width="0.0155%" height="15" fill="rgb(208,54,50)" fg:x="9479" fg:w="3"/><text x="49.0957%" y="527.50"></text></g><g><title>sqlite3RunParser (75 samples, 0.39%)</title><rect x="48.5211%" y="597" width="0.3865%" height="15" fill="rgb(214,90,37)" fg:x="9416" fg:w="75"/><text x="48.7711%" y="607.50"></text></g><g><title>sqlite3Parser (72 samples, 0.37%)</title><rect x="48.5365%" y="581" width="0.3710%" height="15" fill="rgb(220,132,6)" fg:x="9419" fg:w="72"/><text x="48.7865%" y="591.50"></text></g><g><title>yy_reduce (60 samples, 0.31%)</title><rect x="48.5984%" y="565" width="0.3092%" height="15" fill="rgb(213,167,7)" fg:x="9431" fg:w="60"/><text x="48.8484%" y="575.50"></text></g><g><title>yy_find_reduce_action (8 samples, 0.04%)</title><rect x="48.8663%" y="549" width="0.0412%" height="15" fill="rgb(243,36,27)" fg:x="9483" fg:w="8"/><text x="49.1163%" y="559.50"></text></g><g><title>rusqlite::Connection::prepare (82 samples, 0.42%)</title><rect x="48.5005%" y="725" width="0.4225%" height="15" fill="rgb(235,147,12)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="735.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (82 samples, 0.42%)</title><rect x="48.5005%" y="709" width="0.4225%" height="15" fill="rgb(212,198,44)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="719.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (82 samples, 0.42%)</title><rect x="48.5005%" y="693" width="0.4225%" height="15" fill="rgb(218,68,50)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="703.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (82 samples, 0.42%)</title><rect x="48.5005%" y="677" width="0.4225%" height="15" fill="rgb(224,79,48)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="687.50"></text></g><g><title>sqlite3_prepare_v3 (82 samples, 0.42%)</title><rect x="48.5005%" y="661" width="0.4225%" height="15" fill="rgb(213,191,50)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="671.50"></text></g><g><title>sqlite3LockAndPrepare (82 samples, 0.42%)</title><rect x="48.5005%" y="645" width="0.4225%" height="15" fill="rgb(254,146,10)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="655.50"></text></g><g><title>sqlite3LockAndPrepare (82 samples, 0.42%)</title><rect x="48.5005%" y="629" width="0.4225%" height="15" fill="rgb(215,175,11)" fg:x="9412" fg:w="82"/><text x="48.7505%" y="639.50"></text></g><g><title>sqlite3Prepare (81 samples, 0.42%)</title><rect x="48.5056%" y="613" width="0.4174%" height="15" fill="rgb(207,49,7)" fg:x="9413" fg:w="81"/><text x="48.7556%" y="623.50"></text></g><g><title>sqlite3VdbeSetSql (3 samples, 0.02%)</title><rect x="48.9076%" y="597" width="0.0155%" height="15" fill="rgb(234,144,29)" fg:x="9491" fg:w="3"/><text x="49.1576%" y="607.50"></text></g><g><title>sqlite3DbStrNDup (3 samples, 0.02%)</title><rect x="48.9076%" y="581" width="0.0155%" height="15" fill="rgb(213,222,48)" fg:x="9491" fg:w="3"/><text x="49.1576%" y="591.50"></text></g><g><title>memcpy (3 samples, 0.02%)</title><rect x="48.9076%" y="565" width="0.0155%" height="15" fill="rgb(222,8,6)" fg:x="9491" fg:w="3"/><text x="49.1576%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="48.9076%" y="549" width="0.0155%" height="15" fill="rgb(221,114,49)" fg:x="9491" fg:w="3"/><text x="49.1576%" y="559.50"></text></g><g><title>pager_unlock (18 samples, 0.09%)</title><rect x="48.9282%" y="533" width="0.0928%" height="15" fill="rgb(250,140,42)" fg:x="9495" fg:w="18"/><text x="49.1782%" y="543.50"></text></g><g><title>sqlite3WalEndReadTransaction (18 samples, 0.09%)</title><rect x="48.9282%" y="517" width="0.0928%" height="15" fill="rgb(250,150,27)" fg:x="9495" fg:w="18"/><text x="49.1782%" y="527.50"></text></g><g><title>walUnlockShared (18 samples, 0.09%)</title><rect x="48.9282%" y="501" width="0.0928%" height="15" fill="rgb(252,159,3)" fg:x="9495" fg:w="18"/><text x="49.1782%" y="511.50"></text></g><g><title>walUnlockShared (18 samples, 0.09%)</title><rect x="48.9282%" y="485" width="0.0928%" height="15" fill="rgb(241,182,3)" fg:x="9495" fg:w="18"/><text x="49.1782%" y="495.50"></text></g><g><title>sqlite3OsShmLock (18 samples, 0.09%)</title><rect x="48.9282%" y="469" width="0.0928%" height="15" fill="rgb(236,3,9)" fg:x="9495" fg:w="18"/><text x="49.1782%" y="479.50"></text></g><g><title>unixShmLock (18 samples, 0.09%)</title><rect x="48.9282%" y="453" width="0.0928%" height="15" fill="rgb(223,227,51)" fg:x="9495" fg:w="18"/><text x="49.1782%" y="463.50"></text></g><g><title>unixShmSystemLock (17 samples, 0.09%)</title><rect x="48.9333%" y="437" width="0.0876%" height="15" fill="rgb(232,133,30)" fg:x="9496" fg:w="17"/><text x="49.1833%" y="447.50"></text></g><g><title>__GI___libc_fcntl64 (17 samples, 0.09%)</title><rect x="48.9333%" y="421" width="0.0876%" height="15" fill="rgb(209,93,27)" fg:x="9496" fg:w="17"/><text x="49.1833%" y="431.50"></text></g><g><title>__fcntl64_nocancel_adjusted (16 samples, 0.08%)</title><rect x="48.9385%" y="405" width="0.0824%" height="15" fill="rgb(208,108,34)" fg:x="9497" fg:w="16"/><text x="49.1885%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (20 samples, 0.10%)</title><rect x="48.9230%" y="709" width="0.1031%" height="15" fill="rgb(215,189,13)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="719.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (20 samples, 0.10%)</title><rect x="48.9230%" y="693" width="0.1031%" height="15" fill="rgb(206,88,23)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="703.50"></text></g><g><title>rusqlite::row::Rows::reset (20 samples, 0.10%)</title><rect x="48.9230%" y="677" width="0.1031%" height="15" fill="rgb(240,173,0)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="687.50"></text></g><g><title>rusqlite::statement::Statement::reset (20 samples, 0.10%)</title><rect x="48.9230%" y="661" width="0.1031%" height="15" fill="rgb(223,106,52)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="671.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (20 samples, 0.10%)</title><rect x="48.9230%" y="645" width="0.1031%" height="15" fill="rgb(206,130,16)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="655.50"></text></g><g><title>sqlite3_reset (20 samples, 0.10%)</title><rect x="48.9230%" y="629" width="0.1031%" height="15" fill="rgb(220,54,25)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="639.50"></text></g><g><title>sqlite3_reset (20 samples, 0.10%)</title><rect x="48.9230%" y="613" width="0.1031%" height="15" fill="rgb(210,4,38)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="623.50"></text></g><g><title>sqlite3VdbeReset (20 samples, 0.10%)</title><rect x="48.9230%" y="597" width="0.1031%" height="15" fill="rgb(238,94,39)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="607.50"></text></g><g><title>sqlite3VdbeHalt (20 samples, 0.10%)</title><rect x="48.9230%" y="581" width="0.1031%" height="15" fill="rgb(234,124,34)" fg:x="9494" fg:w="20"/><text x="49.1730%" y="591.50"></text></g><g><title>vdbeCommit (19 samples, 0.10%)</title><rect x="48.9282%" y="565" width="0.0979%" height="15" fill="rgb(221,91,40)" fg:x="9495" fg:w="19"/><text x="49.1782%" y="575.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (19 samples, 0.10%)</title><rect x="48.9282%" y="549" width="0.0979%" height="15" fill="rgb(246,53,28)" fg:x="9495" fg:w="19"/><text x="49.1782%" y="559.50"></text></g><g><title>btreeGetPage (2 samples, 0.01%)</title><rect x="49.0518%" y="517" width="0.0103%" height="15" fill="rgb(229,109,7)" fg:x="9519" fg:w="2"/><text x="49.3018%" y="527.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="49.0518%" y="501" width="0.0103%" height="15" fill="rgb(249,117,8)" fg:x="9519" fg:w="2"/><text x="49.3018%" y="511.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="49.0518%" y="485" width="0.0103%" height="15" fill="rgb(210,181,1)" fg:x="9519" fg:w="2"/><text x="49.3018%" y="495.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="49.0518%" y="469" width="0.0103%" height="15" fill="rgb(211,66,1)" fg:x="9519" fg:w="2"/><text x="49.3018%" y="479.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="49.0518%" y="453" width="0.0103%" height="15" fill="rgb(221,90,14)" fg:x="9519" fg:w="2"/><text x="49.3018%" y="463.50"></text></g><g><title>walLockShared (19 samples, 0.10%)</title><rect x="49.0776%" y="437" width="0.0979%" height="15" fill="rgb(219,222,44)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="447.50"></text></g><g><title>walLockShared (19 samples, 0.10%)</title><rect x="49.0776%" y="421" width="0.0979%" height="15" fill="rgb(246,34,33)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="431.50"></text></g><g><title>sqlite3OsShmLock (19 samples, 0.10%)</title><rect x="49.0776%" y="405" width="0.0979%" height="15" fill="rgb(227,135,41)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="415.50"></text></g><g><title>unixShmLock (19 samples, 0.10%)</title><rect x="49.0776%" y="389" width="0.0979%" height="15" fill="rgb(226,15,14)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="399.50"></text></g><g><title>unixShmSystemLock (19 samples, 0.10%)</title><rect x="49.0776%" y="373" width="0.0979%" height="15" fill="rgb(236,148,47)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="383.50"></text></g><g><title>__GI___libc_fcntl64 (19 samples, 0.10%)</title><rect x="49.0776%" y="357" width="0.0979%" height="15" fill="rgb(233,162,52)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="367.50"></text></g><g><title>__fcntl64_nocancel_adjusted (19 samples, 0.10%)</title><rect x="49.0776%" y="341" width="0.0979%" height="15" fill="rgb(244,35,28)" fg:x="9524" fg:w="19"/><text x="49.3276%" y="351.50"></text></g><g><title>sqlite3BtreeBeginTrans (27 samples, 0.14%)</title><rect x="49.0467%" y="565" width="0.1391%" height="15" fill="rgb(205,121,10)" fg:x="9518" fg:w="27"/><text x="49.2967%" y="575.50"></text></g><g><title>btreeBeginTrans (27 samples, 0.14%)</title><rect x="49.0467%" y="549" width="0.1391%" height="15" fill="rgb(250,58,18)" fg:x="9518" fg:w="27"/><text x="49.2967%" y="559.50"></text></g><g><title>lockBtree (26 samples, 0.13%)</title><rect x="49.0518%" y="533" width="0.1340%" height="15" fill="rgb(216,37,13)" fg:x="9519" fg:w="26"/><text x="49.3018%" y="543.50"></text></g><g><title>sqlite3PagerSharedLock (24 samples, 0.12%)</title><rect x="49.0621%" y="517" width="0.1237%" height="15" fill="rgb(221,215,42)" fg:x="9521" fg:w="24"/><text x="49.3121%" y="527.50"></text></g><g><title>pagerBeginReadTransaction (24 samples, 0.12%)</title><rect x="49.0621%" y="501" width="0.1237%" height="15" fill="rgb(217,214,19)" fg:x="9521" fg:w="24"/><text x="49.3121%" y="511.50"></text></g><g><title>sqlite3WalBeginReadTransaction (24 samples, 0.12%)</title><rect x="49.0621%" y="485" width="0.1237%" height="15" fill="rgb(233,139,13)" fg:x="9521" fg:w="24"/><text x="49.3121%" y="495.50"></text></g><g><title>walBeginReadTransaction (24 samples, 0.12%)</title><rect x="49.0621%" y="469" width="0.1237%" height="15" fill="rgb(247,168,23)" fg:x="9521" fg:w="24"/><text x="49.3121%" y="479.50"></text></g><g><title>walTryBeginRead (22 samples, 0.11%)</title><rect x="49.0725%" y="453" width="0.1134%" height="15" fill="rgb(207,202,1)" fg:x="9523" fg:w="22"/><text x="49.3225%" y="463.50"></text></g><g><title>walUnlockExclusive (2 samples, 0.01%)</title><rect x="49.1755%" y="437" width="0.0103%" height="15" fill="rgb(220,155,48)" fg:x="9543" fg:w="2"/><text x="49.4255%" y="447.50"></text></g><g><title>walUnlockExclusive (2 samples, 0.01%)</title><rect x="49.1755%" y="421" width="0.0103%" height="15" fill="rgb(250,43,26)" fg:x="9543" fg:w="2"/><text x="49.4255%" y="431.50"></text></g><g><title>sqlite3OsShmLock (2 samples, 0.01%)</title><rect x="49.1755%" y="405" width="0.0103%" height="15" fill="rgb(212,190,23)" fg:x="9543" fg:w="2"/><text x="49.4255%" y="415.50"></text></g><g><title>unixShmLock (2 samples, 0.01%)</title><rect x="49.1755%" y="389" width="0.0103%" height="15" fill="rgb(216,39,24)" fg:x="9543" fg:w="2"/><text x="49.4255%" y="399.50"></text></g><g><title>sqlite3BtreeFirst (4 samples, 0.02%)</title><rect x="49.1858%" y="565" width="0.0206%" height="15" fill="rgb(252,113,16)" fg:x="9545" fg:w="4"/><text x="49.4358%" y="575.50"></text></g><g><title>moveToRoot (3 samples, 0.02%)</title><rect x="49.1910%" y="549" width="0.0155%" height="15" fill="rgb(208,113,19)" fg:x="9546" fg:w="3"/><text x="49.4410%" y="559.50"></text></g><g><title>getAndInitPage (2 samples, 0.01%)</title><rect x="49.1961%" y="533" width="0.0103%" height="15" fill="rgb(234,107,25)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="543.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="49.1961%" y="517" width="0.0103%" height="15" fill="rgb(234,217,51)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="527.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="49.1961%" y="501" width="0.0103%" height="15" fill="rgb(251,29,42)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="511.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="49.1961%" y="485" width="0.0103%" height="15" fill="rgb(221,62,51)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="495.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="49.1961%" y="469" width="0.0103%" height="15" fill="rgb(240,192,43)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="479.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="49.1961%" y="453" width="0.0103%" height="15" fill="rgb(224,157,47)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="463.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.01%)</title><rect x="49.1961%" y="437" width="0.0103%" height="15" fill="rgb(226,84,45)" fg:x="9547" fg:w="2"/><text x="49.4461%" y="447.50"></text></g><g><title>zilliqa::consensus::Consensus::get_view (142 samples, 0.73%)</title><rect x="48.4902%" y="773" width="0.7317%" height="15" fill="rgb(208,207,23)" fg:x="9410" fg:w="142"/><text x="48.7402%" y="783.50"></text></g><g><title>zilliqa::db::Db::get_view (142 samples, 0.73%)</title><rect x="48.4902%" y="757" width="0.7317%" height="15" fill="rgb(253,34,51)" fg:x="9410" fg:w="142"/><text x="48.7402%" y="767.50"></text></g><g><title>rusqlite::Connection::query_row (142 samples, 0.73%)</title><rect x="48.4902%" y="741" width="0.7317%" height="15" fill="rgb(227,26,34)" fg:x="9410" fg:w="142"/><text x="48.7402%" y="751.50"></text></g><g><title>rusqlite::statement::Statement::query_row (58 samples, 0.30%)</title><rect x="48.9230%" y="725" width="0.2989%" height="15" fill="rgb(245,75,19)" fg:x="9494" fg:w="58"/><text x="49.1730%" y="735.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (38 samples, 0.20%)</title><rect x="49.0261%" y="709" width="0.1958%" height="15" fill="rgb(250,191,31)" fg:x="9514" fg:w="38"/><text x="49.2761%" y="719.50"></text></g><g><title>rusqlite::row::Rows::next (37 samples, 0.19%)</title><rect x="49.0312%" y="693" width="0.1907%" height="15" fill="rgb(224,11,50)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="703.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (37 samples, 0.19%)</title><rect x="49.0312%" y="677" width="0.1907%" height="15" fill="rgb(231,171,7)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="687.50"></text></g><g><title>rusqlite::statement::Statement::step (37 samples, 0.19%)</title><rect x="49.0312%" y="661" width="0.1907%" height="15" fill="rgb(252,214,10)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="671.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (37 samples, 0.19%)</title><rect x="49.0312%" y="645" width="0.1907%" height="15" fill="rgb(249,45,46)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="655.50"></text></g><g><title>sqlite3_step (37 samples, 0.19%)</title><rect x="49.0312%" y="629" width="0.1907%" height="15" fill="rgb(240,173,7)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="639.50"></text></g><g><title>sqlite3_step (37 samples, 0.19%)</title><rect x="49.0312%" y="613" width="0.1907%" height="15" fill="rgb(235,214,13)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="623.50"></text></g><g><title>sqlite3Step (37 samples, 0.19%)</title><rect x="49.0312%" y="597" width="0.1907%" height="15" fill="rgb(245,156,8)" fg:x="9515" fg:w="37"/><text x="49.2812%" y="607.50"></text></g><g><title>sqlite3VdbeExec (36 samples, 0.19%)</title><rect x="49.0364%" y="581" width="0.1855%" height="15" fill="rgb(235,46,12)" fg:x="9516" fg:w="36"/><text x="49.2864%" y="591.50"></text></g><g><title>sqlite3VdbeExpandSql (2 samples, 0.01%)</title><rect x="49.2116%" y="565" width="0.0103%" height="15" fill="rgb(221,81,14)" fg:x="9550" fg:w="2"/><text x="49.4616%" y="575.50"></text></g><g><title>zilliqa::consensus::Consensus::get_consensus_timeout_params (146 samples, 0.75%)</title><rect x="48.4799%" y="789" width="0.7523%" height="15" fill="rgb(238,207,9)" fg:x="9408" fg:w="146"/><text x="48.7299%" y="799.50"></text></g><g><title>zilliqa::time::time_impl::SystemTime::now (2 samples, 0.01%)</title><rect x="49.2219%" y="773" width="0.0103%" height="15" fill="rgb(224,129,35)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="783.50"></text></g><g><title>tokio::task::task_local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="49.2219%" y="757" width="0.0103%" height="15" fill="rgb(243,218,34)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="49.2219%" y="741" width="0.0103%" height="15" fill="rgb(220,166,13)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="751.50"></text></g><g><title>tokio::task::task_local::LocalKey&lt;T&gt;::try_with::{{closure}} (2 samples, 0.01%)</title><rect x="49.2219%" y="725" width="0.0103%" height="15" fill="rgb(227,167,49)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="49.2219%" y="709" width="0.0103%" height="15" fill="rgb(234,142,12)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="719.50"></text></g><g><title>zilliqa::time::time_impl::SystemTime::now::{{closure}} (2 samples, 0.01%)</title><rect x="49.2219%" y="693" width="0.0103%" height="15" fill="rgb(207,100,48)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="703.50"></text></g><g><title>&lt;std::time::SystemTime as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (2 samples, 0.01%)</title><rect x="49.2219%" y="677" width="0.0103%" height="15" fill="rgb(210,25,14)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="687.50"></text></g><g><title>std::time::SystemTime::checked_add (2 samples, 0.01%)</title><rect x="49.2219%" y="661" width="0.0103%" height="15" fill="rgb(246,116,27)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::checked_add_duration (2 samples, 0.01%)</title><rect x="49.2219%" y="645" width="0.0103%" height="15" fill="rgb(214,193,42)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::checked_add_duration (2 samples, 0.01%)</title><rect x="49.2219%" y="629" width="0.0103%" height="15" fill="rgb(214,122,8)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="639.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_add_unsigned (2 samples, 0.01%)</title><rect x="49.2219%" y="613" width="0.0103%" height="15" fill="rgb(244,173,18)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="623.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add_unsigned (2 samples, 0.01%)</title><rect x="49.2219%" y="597" width="0.0103%" height="15" fill="rgb(232,68,19)" fg:x="9552" fg:w="2"/><text x="49.4719%" y="607.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="49.2322%" y="693" width="0.0155%" height="15" fill="rgb(236,224,1)" fg:x="9554" fg:w="3"/><text x="49.4822%" y="703.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (3 samples, 0.02%)</title><rect x="49.2322%" y="677" width="0.0155%" height="15" fill="rgb(240,11,8)" fg:x="9554" fg:w="3"/><text x="49.4822%" y="687.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (2 samples, 0.01%)</title><rect x="49.2373%" y="661" width="0.0103%" height="15" fill="rgb(244,159,20)" fg:x="9555" fg:w="2"/><text x="49.4873%" y="671.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (2 samples, 0.01%)</title><rect x="49.2373%" y="645" width="0.0103%" height="15" fill="rgb(240,223,54)" fg:x="9555" fg:w="2"/><text x="49.4873%" y="655.50"></text></g><g><title>sqlite3_finalize (2 samples, 0.01%)</title><rect x="49.2373%" y="629" width="0.0103%" height="15" fill="rgb(237,146,5)" fg:x="9555" fg:w="2"/><text x="49.4873%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (4 samples, 0.02%)</title><rect x="49.2322%" y="709" width="0.0206%" height="15" fill="rgb(218,221,32)" fg:x="9554" fg:w="4"/><text x="49.4822%" y="719.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_bytes (2 samples, 0.01%)</title><rect x="49.2580%" y="453" width="0.0103%" height="15" fill="rgb(244,96,26)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="463.50"></text></g><g><title>bincode::config::int::IntEncoding::serialize_len (2 samples, 0.01%)</title><rect x="49.2580%" y="437" width="0.0103%" height="15" fill="rgb(245,184,37)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="447.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u64 (2 samples, 0.01%)</title><rect x="49.2580%" y="421" width="0.0103%" height="15" fill="rgb(248,91,47)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="431.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u64 (2 samples, 0.01%)</title><rect x="49.2580%" y="405" width="0.0103%" height="15" fill="rgb(243,199,8)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="415.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u64 (2 samples, 0.01%)</title><rect x="49.2580%" y="389" width="0.0103%" height="15" fill="rgb(249,12,15)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="49.2580%" y="373" width="0.0103%" height="15" fill="rgb(245,97,12)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="49.2580%" y="357" width="0.0103%" height="15" fill="rgb(244,61,1)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="49.2580%" y="341" width="0.0103%" height="15" fill="rgb(222,194,10)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="49.2580%" y="325" width="0.0103%" height="15" fill="rgb(226,178,8)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="49.2580%" y="309" width="0.0103%" height="15" fill="rgb(241,32,34)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="49.2580%" y="293" width="0.0103%" height="15" fill="rgb(254,26,6)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.01%)</title><rect x="49.2580%" y="277" width="0.0103%" height="15" fill="rgb(249,71,11)" fg:x="9559" fg:w="2"/><text x="49.5080%" y="287.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="49.2683%" y="453" width="0.0103%" height="15" fill="rgb(232,170,27)" fg:x="9561" fg:w="2"/><text x="49.5183%" y="463.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::SignableTransaction&lt;alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;&gt;::encode_for_signing (2 samples, 0.01%)</title><rect x="49.2683%" y="437" width="0.0103%" height="15" fill="rgb(214,223,17)" fg:x="9561" fg:w="2"/><text x="49.5183%" y="447.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_rlp::encode::Encodable&gt;::length (2 samples, 0.01%)</title><rect x="49.2786%" y="453" width="0.0103%" height="15" fill="rgb(250,18,15)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="463.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::rlp_encoded_fields_length (2 samples, 0.01%)</title><rect x="49.2786%" y="437" width="0.0103%" height="15" fill="rgb(212,153,51)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="447.50"></text></g><g><title>ruint::support::alloy_rlp::&lt;impl alloy_rlp::encode::Encodable for ruint::Uint&lt;_,_&gt;&gt;::length (2 samples, 0.01%)</title><rect x="49.2786%" y="421" width="0.0103%" height="15" fill="rgb(219,194,12)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="431.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::bit_len (2 samples, 0.01%)</title><rect x="49.2786%" y="405" width="0.0103%" height="15" fill="rgb(212,58,17)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="415.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::leading_zeros (2 samples, 0.01%)</title><rect x="49.2786%" y="389" width="0.0103%" height="15" fill="rgb(254,5,10)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.01%)</title><rect x="49.2786%" y="373" width="0.0103%" height="15" fill="rgb(246,91,7)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="49.2786%" y="357" width="0.0103%" height="15" fill="rgb(218,108,49)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="367.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (2 samples, 0.01%)</title><rect x="49.2786%" y="341" width="0.0103%" height="15" fill="rgb(238,123,20)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (2 samples, 0.01%)</title><rect x="49.2786%" y="325" width="0.0103%" height="15" fill="rgb(231,69,23)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="335.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::leading_zeros::{{closure}} (2 samples, 0.01%)</title><rect x="49.2786%" y="309" width="0.0103%" height="15" fill="rgb(230,209,3)" fg:x="9563" fg:w="2"/><text x="49.5286%" y="319.50"></text></g><g><title>&lt;zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (8 samples, 0.04%)</title><rect x="49.2580%" y="485" width="0.0412%" height="15" fill="rgb(231,19,0)" fg:x="9559" fg:w="8"/><text x="49.5080%" y="495.50"></text></g><g><title>zilliqa::transaction::ser_rlp::serialize (8 samples, 0.04%)</title><rect x="49.2580%" y="469" width="0.0412%" height="15" fill="rgb(226,192,25)" fg:x="9559" fg:w="8"/><text x="49.5080%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="49.2889%" y="453" width="0.0103%" height="15" fill="rgb(223,175,53)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="49.2889%" y="437" width="0.0103%" height="15" fill="rgb(248,35,51)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="49.2889%" y="421" width="0.0103%" height="15" fill="rgb(230,37,26)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="49.2889%" y="405" width="0.0103%" height="15" fill="rgb(206,120,22)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="49.2889%" y="389" width="0.0103%" height="15" fill="rgb(207,165,28)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="399.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="49.2889%" y="373" width="0.0103%" height="15" fill="rgb(226,23,46)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="383.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="49.2889%" y="357" width="0.0103%" height="15" fill="rgb(208,130,44)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="367.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="49.2889%" y="341" width="0.0103%" height="15" fill="rgb(231,67,8)" fg:x="9565" fg:w="2"/><text x="49.5389%" y="351.50"></text></g><g><title>bincode::internal::serialize_into (12 samples, 0.06%)</title><rect x="49.2580%" y="533" width="0.0618%" height="15" fill="rgb(205,183,22)" fg:x="9559" fg:w="12"/><text x="49.5080%" y="543.50"></text></g><g><title>zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize (12 samples, 0.06%)</title><rect x="49.2580%" y="517" width="0.0618%" height="15" fill="rgb(224,47,9)" fg:x="9559" fg:w="12"/><text x="49.5080%" y="527.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (12 samples, 0.06%)</title><rect x="49.2580%" y="501" width="0.0618%" height="15" fill="rgb(250,183,49)" fg:x="9559" fg:w="12"/><text x="49.5080%" y="511.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::signature_serde::&lt;impl serde::ser::Serialize for alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;::serialize (4 samples, 0.02%)</title><rect x="49.2992%" y="485" width="0.0206%" height="15" fill="rgb(220,151,39)" fg:x="9567" fg:w="4"/><text x="49.5492%" y="495.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::signature_serde::_::&lt;impl serde::ser::Serialize for alloy_primitives::signature::primitive_sig::signature_serde::NonHumanReadableRepr&gt;::serialize (3 samples, 0.02%)</title><rect x="49.3043%" y="469" width="0.0155%" height="15" fill="rgb(220,118,20)" fg:x="9568" fg:w="3"/><text x="49.5543%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for (T0,T1,T2)&gt;::serialize (3 samples, 0.02%)</title><rect x="49.3043%" y="453" width="0.0155%" height="15" fill="rgb(231,65,51)" fg:x="9568" fg:w="3"/><text x="49.5543%" y="463.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTuple&gt;::serialize_element (3 samples, 0.02%)</title><rect x="49.3043%" y="437" width="0.0155%" height="15" fill="rgb(253,125,37)" fg:x="9568" fg:w="3"/><text x="49.5543%" y="447.50"></text></g><g><title>ruint::support::serde::&lt;impl serde::ser::Serialize for ruint::Uint&lt;_,_&gt;&gt;::serialize (3 samples, 0.02%)</title><rect x="49.3043%" y="421" width="0.0155%" height="15" fill="rgb(232,102,6)" fg:x="9568" fg:w="3"/><text x="49.5543%" y="431.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::signature_serde::&lt;impl serde::ser::Serialize for alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;::serialize (2 samples, 0.01%)</title><rect x="49.3198%" y="517" width="0.0103%" height="15" fill="rgb(251,105,13)" fg:x="9571" fg:w="2"/><text x="49.5698%" y="527.50"></text></g><g><title>&lt;alloy_primitives::common::TxKind as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="49.3353%" y="405" width="0.0103%" height="15" fill="rgb(222,179,29)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="415.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="49.3353%" y="389" width="0.0103%" height="15" fill="rgb(229,180,53)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="399.50"></text></g><g><title>alloy_primitives::bits::rlp::&lt;impl alloy_rlp::encode::Encodable for alloy_primitives::bits::fixed::FixedBytes&lt;_&gt;&gt;::encode (2 samples, 0.01%)</title><rect x="49.3353%" y="373" width="0.0103%" height="15" fill="rgb(238,104,13)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="383.50"></text></g><g><title>&lt;[u8 (2 samples, 0.01%)</title><rect x="49.3353%" y="357" width="0.0103%" height="15" fill="rgb(210,130,5)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="367.50"></text></g><g><title> N] as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="49.3353%" y="341" width="0.0103%" height="15" fill="rgb(233,87,49)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="351.50"></text></g><g><title>&lt;[u8] as alloy_rlp::encode::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="49.3353%" y="325" width="0.0103%" height="15" fill="rgb(243,34,9)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.01%)</title><rect x="49.3353%" y="309" width="0.0103%" height="15" fill="rgb(235,225,10)" fg:x="9574" fg:w="2"/><text x="49.5853%" y="319.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::rlp_encode_fields (3 samples, 0.02%)</title><rect x="49.3353%" y="421" width="0.0155%" height="15" fill="rgb(212,0,30)" fg:x="9574" fg:w="3"/><text x="49.5853%" y="431.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_rlp::encode::Encodable&gt;::encode (5 samples, 0.03%)</title><rect x="49.3301%" y="453" width="0.0258%" height="15" fill="rgb(211,177,0)" fg:x="9573" fg:w="5"/><text x="49.5801%" y="463.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::SignableTransaction&lt;alloy_primitives::signature::primitive_sig::PrimitiveSignature&gt;&gt;::encode_for_signing (5 samples, 0.03%)</title><rect x="49.3301%" y="437" width="0.0258%" height="15" fill="rgb(225,220,11)" fg:x="9573" fg:w="5"/><text x="49.5801%" y="447.50"></text></g><g><title>&lt;&amp;T as rusqlite::types::to_sql::ToSql&gt;::to_sql (24 samples, 0.12%)</title><rect x="49.2528%" y="613" width="0.1237%" height="15" fill="rgb(215,10,13)" fg:x="9558" fg:w="24"/><text x="49.5028%" y="623.50"></text></g><g><title>zilliqa::db::&lt;impl rusqlite::types::to_sql::ToSql for zilliqa::transaction::SignedTransaction&gt;::to_sql (23 samples, 0.12%)</title><rect x="49.2580%" y="597" width="0.1185%" height="15" fill="rgb(240,177,14)" fg:x="9559" fg:w="23"/><text x="49.5080%" y="607.50"></text></g><g><title>bincode::serialize (23 samples, 0.12%)</title><rect x="49.2580%" y="581" width="0.1185%" height="15" fill="rgb(243,7,39)" fg:x="9559" fg:w="23"/><text x="49.5080%" y="591.50"></text></g><g><title>bincode::config::Options::serialize (23 samples, 0.12%)</title><rect x="49.2580%" y="565" width="0.1185%" height="15" fill="rgb(212,99,0)" fg:x="9559" fg:w="23"/><text x="49.5080%" y="575.50"></text></g><g><title>bincode::internal::serialize (23 samples, 0.12%)</title><rect x="49.2580%" y="549" width="0.1185%" height="15" fill="rgb(225,162,48)" fg:x="9559" fg:w="23"/><text x="49.5080%" y="559.50"></text></g><g><title>bincode::internal::serialized_size (11 samples, 0.06%)</title><rect x="49.3198%" y="533" width="0.0567%" height="15" fill="rgb(246,16,25)" fg:x="9571" fg:w="11"/><text x="49.5698%" y="543.50"></text></g><g><title>zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize (9 samples, 0.05%)</title><rect x="49.3301%" y="517" width="0.0464%" height="15" fill="rgb(220,150,2)" fg:x="9573" fg:w="9"/><text x="49.5801%" y="527.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (9 samples, 0.05%)</title><rect x="49.3301%" y="501" width="0.0464%" height="15" fill="rgb(237,113,11)" fg:x="9573" fg:w="9"/><text x="49.5801%" y="511.50"></text></g><g><title>&lt;zilliqa::transaction::_::&lt;impl serde::ser::Serialize for zilliqa::transaction::SignedTransaction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (9 samples, 0.05%)</title><rect x="49.3301%" y="485" width="0.0464%" height="15" fill="rgb(236,70,20)" fg:x="9573" fg:w="9"/><text x="49.5801%" y="495.50"></text></g><g><title>zilliqa::transaction::ser_rlp::serialize (9 samples, 0.05%)</title><rect x="49.3301%" y="469" width="0.0464%" height="15" fill="rgb(234,94,7)" fg:x="9573" fg:w="9"/><text x="49.5801%" y="479.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_rlp::encode::Encodable&gt;::length (4 samples, 0.02%)</title><rect x="49.3559%" y="453" width="0.0206%" height="15" fill="rgb(250,221,0)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="463.50"></text></g><g><title>&lt;alloy_consensus::transaction::legacy::TxLegacy as alloy_consensus::transaction::rlp::RlpEcdsaTx&gt;::rlp_encoded_fields_length (4 samples, 0.02%)</title><rect x="49.3559%" y="437" width="0.0206%" height="15" fill="rgb(245,149,46)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="447.50"></text></g><g><title>ruint::support::alloy_rlp::&lt;impl alloy_rlp::encode::Encodable for ruint::Uint&lt;_,_&gt;&gt;::length (4 samples, 0.02%)</title><rect x="49.3559%" y="421" width="0.0206%" height="15" fill="rgb(215,37,27)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="431.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::bit_len (4 samples, 0.02%)</title><rect x="49.3559%" y="405" width="0.0206%" height="15" fill="rgb(232,65,3)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="415.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::leading_zeros (4 samples, 0.02%)</title><rect x="49.3559%" y="389" width="0.0206%" height="15" fill="rgb(214,2,16)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (4 samples, 0.02%)</title><rect x="49.3559%" y="373" width="0.0206%" height="15" fill="rgb(227,131,50)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="49.3559%" y="357" width="0.0206%" height="15" fill="rgb(247,131,45)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="367.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (4 samples, 0.02%)</title><rect x="49.3559%" y="341" width="0.0206%" height="15" fill="rgb(215,97,47)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (4 samples, 0.02%)</title><rect x="49.3559%" y="325" width="0.0206%" height="15" fill="rgb(233,143,12)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="335.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::leading_zeros::{{closure}} (4 samples, 0.02%)</title><rect x="49.3559%" y="309" width="0.0206%" height="15" fill="rgb(222,57,17)" fg:x="9578" fg:w="4"/><text x="49.6059%" y="319.50"></text></g><g><title>&lt;(A,B) as rusqlite::params::Params&gt;::__bind_in (28 samples, 0.14%)</title><rect x="49.2528%" y="661" width="0.1443%" height="15" fill="rgb(214,119,38)" fg:x="9558" fg:w="28"/><text x="49.5028%" y="671.50"></text></g><g><title>rusqlite::statement::Statement::raw_bind_parameter (28 samples, 0.14%)</title><rect x="49.2528%" y="645" width="0.1443%" height="15" fill="rgb(217,28,47)" fg:x="9558" fg:w="28"/><text x="49.5028%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (28 samples, 0.14%)</title><rect x="49.2528%" y="629" width="0.1443%" height="15" fill="rgb(231,14,52)" fg:x="9558" fg:w="28"/><text x="49.5028%" y="639.50"></text></g><g><title>sqlite3_bind_blob (3 samples, 0.02%)</title><rect x="49.3816%" y="613" width="0.0155%" height="15" fill="rgb(220,158,18)" fg:x="9583" fg:w="3"/><text x="49.6316%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="49.3971%" y="661" width="0.0155%" height="15" fill="rgb(222,143,46)" fg:x="9586" fg:w="3"/><text x="49.6471%" y="671.50"></text></g><g><title>sqlite3OsRead (109 samples, 0.56%)</title><rect x="49.4486%" y="421" width="0.5617%" height="15" fill="rgb(227,165,5)" fg:x="9596" fg:w="109"/><text x="49.6986%" y="431.50"></text></g><g><title>unixRead (109 samples, 0.56%)</title><rect x="49.4486%" y="405" width="0.5617%" height="15" fill="rgb(216,222,49)" fg:x="9596" fg:w="109"/><text x="49.6986%" y="415.50"></text></g><g><title>seekAndRead (109 samples, 0.56%)</title><rect x="49.4486%" y="389" width="0.5617%" height="15" fill="rgb(238,73,39)" fg:x="9596" fg:w="109"/><text x="49.6986%" y="399.50"></text></g><g><title>__libc_pread64 (109 samples, 0.56%)</title><rect x="49.4486%" y="373" width="0.5617%" height="15" fill="rgb(252,115,9)" fg:x="9596" fg:w="109"/><text x="49.6986%" y="383.50"></text></g><g><title>__libc_pread64 (109 samples, 0.56%)</title><rect x="49.4486%" y="357" width="0.5617%" height="15" fill="rgb(238,202,4)" fg:x="9596" fg:w="109"/><text x="49.6986%" y="367.50"></text></g><g><title>sqlite3OsSync (444 samples, 2.29%)</title><rect x="50.0103%" y="421" width="2.2880%" height="15" fill="rgb(252,153,44)" fg:x="9705" fg:w="444"/><text x="50.2603%" y="431.50">s..</text></g><g><title>sqlite3OsSync (444 samples, 2.29%)</title><rect x="50.0103%" y="405" width="2.2880%" height="15" fill="rgb(235,128,27)" fg:x="9705" fg:w="444"/><text x="50.2603%" y="415.50">s..</text></g><g><title>unixSync (444 samples, 2.29%)</title><rect x="50.0103%" y="389" width="2.2880%" height="15" fill="rgb(221,121,47)" fg:x="9705" fg:w="444"/><text x="50.2603%" y="399.50">u..</text></g><g><title>full_fsync (444 samples, 2.29%)</title><rect x="50.0103%" y="373" width="2.2880%" height="15" fill="rgb(247,211,47)" fg:x="9705" fg:w="444"/><text x="50.2603%" y="383.50">f..</text></g><g><title>__GI_fsync (444 samples, 2.29%)</title><rect x="50.0103%" y="357" width="2.2880%" height="15" fill="rgb(252,47,49)" fg:x="9705" fg:w="444"/><text x="50.2603%" y="367.50">_..</text></g><g><title>sqlite3OsWrite (231 samples, 1.19%)</title><rect x="52.2983%" y="421" width="1.1904%" height="15" fill="rgb(219,119,53)" fg:x="10149" fg:w="231"/><text x="52.5483%" y="431.50"></text></g><g><title>unixWrite (231 samples, 1.19%)</title><rect x="52.2983%" y="405" width="1.1904%" height="15" fill="rgb(243,165,53)" fg:x="10149" fg:w="231"/><text x="52.5483%" y="415.50"></text></g><g><title>seekAndWrite (230 samples, 1.19%)</title><rect x="52.3034%" y="389" width="1.1852%" height="15" fill="rgb(230,12,35)" fg:x="10150" fg:w="230"/><text x="52.5534%" y="399.50"></text></g><g><title>seekAndWriteFd (230 samples, 1.19%)</title><rect x="52.3034%" y="373" width="1.1852%" height="15" fill="rgb(239,57,49)" fg:x="10150" fg:w="230"/><text x="52.5534%" y="383.50"></text></g><g><title>__libc_pwrite64 (230 samples, 1.19%)</title><rect x="52.3034%" y="357" width="1.1852%" height="15" fill="rgb(231,154,7)" fg:x="10150" fg:w="230"/><text x="52.5534%" y="367.50"></text></g><g><title>__libc_pwrite64 (230 samples, 1.19%)</title><rect x="52.3034%" y="341" width="1.1852%" height="15" fill="rgb(248,81,34)" fg:x="10150" fg:w="230"/><text x="52.5534%" y="351.50"></text></g><g><title>walCheckpoint (788 samples, 4.06%)</title><rect x="49.4435%" y="437" width="4.0606%" height="15" fill="rgb(247,9,5)" fg:x="9595" fg:w="788"/><text x="49.6935%" y="447.50">walC..</text></g><g><title>walIteratorInit (3 samples, 0.02%)</title><rect x="53.4886%" y="421" width="0.0155%" height="15" fill="rgb(228,172,27)" fg:x="10380" fg:w="3"/><text x="53.7386%" y="431.50"></text></g><g><title>walMergesort (3 samples, 0.02%)</title><rect x="53.4886%" y="405" width="0.0155%" height="15" fill="rgb(230,57,44)" fg:x="10380" fg:w="3"/><text x="53.7386%" y="415.50"></text></g><g><title>doWalCallbacks (792 samples, 4.08%)</title><rect x="49.4280%" y="581" width="4.0812%" height="15" fill="rgb(249,35,22)" fg:x="9592" fg:w="792"/><text x="49.6780%" y="591.50">doWa..</text></g><g><title>sqlite3WalDefaultHook (790 samples, 4.07%)</title><rect x="49.4383%" y="565" width="4.0709%" height="15" fill="rgb(250,137,27)" fg:x="9594" fg:w="790"/><text x="49.6883%" y="575.50">sqli..</text></g><g><title>sqlite3WalDefaultHook (790 samples, 4.07%)</title><rect x="49.4383%" y="549" width="4.0709%" height="15" fill="rgb(251,57,31)" fg:x="9594" fg:w="790"/><text x="49.6883%" y="559.50">sqli..</text></g><g><title>sqlite3_wal_checkpoint_v2 (790 samples, 4.07%)</title><rect x="49.4383%" y="533" width="4.0709%" height="15" fill="rgb(238,60,0)" fg:x="9594" fg:w="790"/><text x="49.6883%" y="543.50">sqli..</text></g><g><title>sqlite3_wal_checkpoint_v2 (790 samples, 4.07%)</title><rect x="49.4383%" y="517" width="4.0709%" height="15" fill="rgb(242,185,39)" fg:x="9594" fg:w="790"/><text x="49.6883%" y="527.50">sqli..</text></g><g><title>sqlite3Checkpoint (789 samples, 4.07%)</title><rect x="49.4435%" y="501" width="4.0658%" height="15" fill="rgb(240,63,43)" fg:x="9595" fg:w="789"/><text x="49.6935%" y="511.50">sqli..</text></g><g><title>sqlite3BtreeCheckpoint (789 samples, 4.07%)</title><rect x="49.4435%" y="485" width="4.0658%" height="15" fill="rgb(236,155,6)" fg:x="9595" fg:w="789"/><text x="49.6935%" y="495.50">sqli..</text></g><g><title>sqlite3PagerCheckpoint (789 samples, 4.07%)</title><rect x="49.4435%" y="469" width="4.0658%" height="15" fill="rgb(215,11,29)" fg:x="9595" fg:w="789"/><text x="49.6935%" y="479.50">sqli..</text></g><g><title>sqlite3WalCheckpoint (789 samples, 4.07%)</title><rect x="49.4435%" y="453" width="4.0658%" height="15" fill="rgb(228,180,48)" fg:x="9595" fg:w="789"/><text x="49.6935%" y="463.50">sqli..</text></g><g><title>alloc::ffi::c_str::&lt;impl core::ffi::c_str::CStr&gt;::to_string_lossy (2 samples, 0.01%)</title><rect x="53.5195%" y="549" width="0.0103%" height="15" fill="rgb(241,102,12)" fg:x="10386" fg:w="2"/><text x="53.7695%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.01%)</title><rect x="53.5195%" y="533" width="0.0103%" height="15" fill="rgb(246,213,4)" fg:x="10386" fg:w="2"/><text x="53.7695%" y="543.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="53.5195%" y="517" width="0.0103%" height="15" fill="rgb(218,134,35)" fg:x="10386" fg:w="2"/><text x="53.7695%" y="527.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (3 samples, 0.02%)</title><rect x="53.5195%" y="565" width="0.0155%" height="15" fill="rgb(251,117,35)" fg:x="10386" fg:w="3"/><text x="53.7695%" y="575.50"></text></g><g><title>walIndexReadHdr (3 samples, 0.02%)</title><rect x="53.5401%" y="437" width="0.0155%" height="15" fill="rgb(206,156,45)" fg:x="10390" fg:w="3"/><text x="53.7901%" y="447.50"></text></g><g><title>walIndexTryHdr (2 samples, 0.01%)</title><rect x="53.5453%" y="421" width="0.0103%" height="15" fill="rgb(218,52,27)" fg:x="10391" fg:w="2"/><text x="53.7953%" y="431.50"></text></g><g><title>lockBtree (27 samples, 0.14%)</title><rect x="53.5350%" y="533" width="0.1391%" height="15" fill="rgb(238,83,36)" fg:x="10389" fg:w="27"/><text x="53.7850%" y="543.50"></text></g><g><title>sqlite3PagerSharedLock (27 samples, 0.14%)</title><rect x="53.5350%" y="517" width="0.1391%" height="15" fill="rgb(218,53,43)" fg:x="10389" fg:w="27"/><text x="53.7850%" y="527.50"></text></g><g><title>pagerBeginReadTransaction (26 samples, 0.13%)</title><rect x="53.5401%" y="501" width="0.1340%" height="15" fill="rgb(239,54,39)" fg:x="10390" fg:w="26"/><text x="53.7901%" y="511.50"></text></g><g><title>sqlite3WalBeginReadTransaction (26 samples, 0.13%)</title><rect x="53.5401%" y="485" width="0.1340%" height="15" fill="rgb(212,198,13)" fg:x="10390" fg:w="26"/><text x="53.7901%" y="495.50"></text></g><g><title>walBeginReadTransaction (26 samples, 0.13%)</title><rect x="53.5401%" y="469" width="0.1340%" height="15" fill="rgb(234,54,46)" fg:x="10390" fg:w="26"/><text x="53.7901%" y="479.50"></text></g><g><title>walTryBeginRead (26 samples, 0.13%)</title><rect x="53.5401%" y="453" width="0.1340%" height="15" fill="rgb(217,120,7)" fg:x="10390" fg:w="26"/><text x="53.7901%" y="463.50"></text></g><g><title>walLockShared (23 samples, 0.12%)</title><rect x="53.5556%" y="437" width="0.1185%" height="15" fill="rgb(246,39,15)" fg:x="10393" fg:w="23"/><text x="53.8056%" y="447.50"></text></g><g><title>walLockShared (23 samples, 0.12%)</title><rect x="53.5556%" y="421" width="0.1185%" height="15" fill="rgb(242,143,31)" fg:x="10393" fg:w="23"/><text x="53.8056%" y="431.50"></text></g><g><title>sqlite3OsShmLock (23 samples, 0.12%)</title><rect x="53.5556%" y="405" width="0.1185%" height="15" fill="rgb(252,60,24)" fg:x="10393" fg:w="23"/><text x="53.8056%" y="415.50"></text></g><g><title>unixShmLock (23 samples, 0.12%)</title><rect x="53.5556%" y="389" width="0.1185%" height="15" fill="rgb(249,220,7)" fg:x="10393" fg:w="23"/><text x="53.8056%" y="399.50"></text></g><g><title>unixShmSystemLock (21 samples, 0.11%)</title><rect x="53.5659%" y="373" width="0.1082%" height="15" fill="rgb(236,67,13)" fg:x="10395" fg:w="21"/><text x="53.8159%" y="383.50"></text></g><g><title>__GI___libc_fcntl64 (21 samples, 0.11%)</title><rect x="53.5659%" y="357" width="0.1082%" height="15" fill="rgb(210,62,39)" fg:x="10395" fg:w="21"/><text x="53.8159%" y="367.50"></text></g><g><title>__fcntl64_nocancel_adjusted (21 samples, 0.11%)</title><rect x="53.5659%" y="341" width="0.1082%" height="15" fill="rgb(219,122,53)" fg:x="10395" fg:w="21"/><text x="53.8159%" y="351.50"></text></g><g><title>sqlite3BtreeBeginTrans (47 samples, 0.24%)</title><rect x="53.5350%" y="565" width="0.2422%" height="15" fill="rgb(218,87,25)" fg:x="10389" fg:w="47"/><text x="53.7850%" y="575.50"></text></g><g><title>btreeBeginTrans (47 samples, 0.24%)</title><rect x="53.5350%" y="549" width="0.2422%" height="15" fill="rgb(234,179,48)" fg:x="10389" fg:w="47"/><text x="53.7850%" y="559.50"></text></g><g><title>sqlite3PagerBegin (20 samples, 0.10%)</title><rect x="53.6741%" y="533" width="0.1031%" height="15" fill="rgb(248,90,0)" fg:x="10416" fg:w="20"/><text x="53.9241%" y="543.50"></text></g><g><title>sqlite3WalBeginWriteTransaction (20 samples, 0.10%)</title><rect x="53.6741%" y="517" width="0.1031%" height="15" fill="rgb(207,228,37)" fg:x="10416" fg:w="20"/><text x="53.9241%" y="527.50"></text></g><g><title>walLockExclusive (15 samples, 0.08%)</title><rect x="53.6999%" y="501" width="0.0773%" height="15" fill="rgb(235,214,15)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="511.50"></text></g><g><title>walLockExclusive (15 samples, 0.08%)</title><rect x="53.6999%" y="485" width="0.0773%" height="15" fill="rgb(210,144,39)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="495.50"></text></g><g><title>sqlite3OsShmLock (15 samples, 0.08%)</title><rect x="53.6999%" y="469" width="0.0773%" height="15" fill="rgb(222,67,41)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="479.50"></text></g><g><title>unixShmLock (15 samples, 0.08%)</title><rect x="53.6999%" y="453" width="0.0773%" height="15" fill="rgb(205,35,37)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="463.50"></text></g><g><title>unixShmSystemLock (15 samples, 0.08%)</title><rect x="53.6999%" y="437" width="0.0773%" height="15" fill="rgb(216,125,40)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="447.50"></text></g><g><title>__GI___libc_fcntl64 (15 samples, 0.08%)</title><rect x="53.6999%" y="421" width="0.0773%" height="15" fill="rgb(228,227,20)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="431.50"></text></g><g><title>__fcntl64_nocancel_adjusted (15 samples, 0.08%)</title><rect x="53.6999%" y="405" width="0.0773%" height="15" fill="rgb(242,173,45)" fg:x="10421" fg:w="15"/><text x="53.9499%" y="415.50"></text></g><g><title>sqlite3OsRead (143 samples, 0.74%)</title><rect x="53.8596%" y="485" width="0.7369%" height="15" fill="rgb(215,79,24)" fg:x="10452" fg:w="143"/><text x="54.1096%" y="495.50"></text></g><g><title>unixRead (143 samples, 0.74%)</title><rect x="53.8596%" y="469" width="0.7369%" height="15" fill="rgb(238,164,38)" fg:x="10452" fg:w="143"/><text x="54.1096%" y="479.50"></text></g><g><title>seekAndRead (143 samples, 0.74%)</title><rect x="53.8596%" y="453" width="0.7369%" height="15" fill="rgb(245,196,38)" fg:x="10452" fg:w="143"/><text x="54.1096%" y="463.50"></text></g><g><title>__libc_pread64 (143 samples, 0.74%)</title><rect x="53.8596%" y="437" width="0.7369%" height="15" fill="rgb(231,217,29)" fg:x="10452" fg:w="143"/><text x="54.1096%" y="447.50"></text></g><g><title>__libc_pread64 (143 samples, 0.74%)</title><rect x="53.8596%" y="421" width="0.7369%" height="15" fill="rgb(245,6,4)" fg:x="10452" fg:w="143"/><text x="54.1096%" y="431.50"></text></g><g><title>readDbPage (146 samples, 0.75%)</title><rect x="53.8596%" y="501" width="0.7523%" height="15" fill="rgb(214,76,49)" fg:x="10452" fg:w="146"/><text x="54.1096%" y="511.50"></text></g><g><title>sqlite3WalFindFrame (3 samples, 0.02%)</title><rect x="54.5965%" y="485" width="0.0155%" height="15" fill="rgb(205,96,12)" fg:x="10595" fg:w="3"/><text x="54.8465%" y="495.50"></text></g><g><title>walFindFrame (3 samples, 0.02%)</title><rect x="54.5965%" y="469" width="0.0155%" height="15" fill="rgb(243,131,4)" fg:x="10595" fg:w="3"/><text x="54.8465%" y="479.50"></text></g><g><title>sqlite3PcacheFetch (7 samples, 0.04%)</title><rect x="54.6120%" y="501" width="0.0361%" height="15" fill="rgb(214,114,4)" fg:x="10598" fg:w="7"/><text x="54.8620%" y="511.50"></text></g><g><title>pcache1Fetch (7 samples, 0.04%)</title><rect x="54.6120%" y="485" width="0.0361%" height="15" fill="rgb(234,215,15)" fg:x="10598" fg:w="7"/><text x="54.8620%" y="495.50"></text></g><g><title>pcache1FetchWithMutex (7 samples, 0.04%)</title><rect x="54.6120%" y="469" width="0.0361%" height="15" fill="rgb(250,216,45)" fg:x="10598" fg:w="7"/><text x="54.8620%" y="479.50"></text></g><g><title>pcache1FetchNoMutex (6 samples, 0.03%)</title><rect x="54.6171%" y="453" width="0.0309%" height="15" fill="rgb(236,128,4)" fg:x="10599" fg:w="6"/><text x="54.8671%" y="463.50"></text></g><g><title>pcache1FetchNoMutex (3 samples, 0.02%)</title><rect x="54.6326%" y="437" width="0.0155%" height="15" fill="rgb(234,50,33)" fg:x="10602" fg:w="3"/><text x="54.8826%" y="447.50"></text></g><g><title>pcache1FetchStage2 (3 samples, 0.02%)</title><rect x="54.6326%" y="421" width="0.0155%" height="15" fill="rgb(253,131,37)" fg:x="10602" fg:w="3"/><text x="54.8826%" y="431.50"></text></g><g><title>getAndInitPage (156 samples, 0.80%)</title><rect x="53.8545%" y="549" width="0.8039%" height="15" fill="rgb(218,55,27)" fg:x="10451" fg:w="156"/><text x="54.1045%" y="559.50"></text></g><g><title>sqlite3PagerGet (156 samples, 0.80%)</title><rect x="53.8545%" y="533" width="0.8039%" height="15" fill="rgb(241,220,28)" fg:x="10451" fg:w="156"/><text x="54.1045%" y="543.50"></text></g><g><title>getPageNormal (155 samples, 0.80%)</title><rect x="53.8596%" y="517" width="0.7987%" height="15" fill="rgb(241,90,48)" fg:x="10452" fg:w="155"/><text x="54.1096%" y="527.50"></text></g><g><title>sqlite3PcacheFetchFinish (2 samples, 0.01%)</title><rect x="54.6480%" y="501" width="0.0103%" height="15" fill="rgb(216,43,37)" fg:x="10605" fg:w="2"/><text x="54.8980%" y="511.50"></text></g><g><title>moveToRoot (2 samples, 0.01%)</title><rect x="54.6584%" y="549" width="0.0103%" height="15" fill="rgb(207,173,9)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="559.50"></text></g><g><title>getAndInitPage (2 samples, 0.01%)</title><rect x="54.6584%" y="533" width="0.0103%" height="15" fill="rgb(240,126,30)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="543.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="54.6584%" y="517" width="0.0103%" height="15" fill="rgb(228,178,53)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="527.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="54.6584%" y="501" width="0.0103%" height="15" fill="rgb(217,33,4)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="511.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="54.6584%" y="485" width="0.0103%" height="15" fill="rgb(206,124,34)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="495.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="54.6584%" y="469" width="0.0103%" height="15" fill="rgb(208,122,53)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="479.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="54.6584%" y="453" width="0.0103%" height="15" fill="rgb(215,202,26)" fg:x="10607" fg:w="2"/><text x="54.9084%" y="463.50"></text></g><g><title>sqlite3BtreeIndexMoveto (179 samples, 0.92%)</title><rect x="53.7772%" y="565" width="0.9224%" height="15" fill="rgb(232,198,31)" fg:x="10436" fg:w="179"/><text x="54.0272%" y="575.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (6 samples, 0.03%)</title><rect x="54.6687%" y="549" width="0.0309%" height="15" fill="rgb(222,23,35)" fg:x="10609" fg:w="6"/><text x="54.9187%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.03%)</title><rect x="54.6738%" y="533" width="0.0258%" height="15" fill="rgb(242,27,53)" fg:x="10610" fg:w="5"/><text x="54.9238%" y="543.50"></text></g><g><title>readDbPage (13 samples, 0.07%)</title><rect x="54.7150%" y="469" width="0.0670%" height="15" fill="rgb(210,216,42)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="479.50"></text></g><g><title>sqlite3WalReadFrame (13 samples, 0.07%)</title><rect x="54.7150%" y="453" width="0.0670%" height="15" fill="rgb(234,39,38)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="463.50"></text></g><g><title>sqlite3OsRead (13 samples, 0.07%)</title><rect x="54.7150%" y="437" width="0.0670%" height="15" fill="rgb(235,126,54)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="447.50"></text></g><g><title>unixRead (13 samples, 0.07%)</title><rect x="54.7150%" y="421" width="0.0670%" height="15" fill="rgb(235,150,33)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="431.50"></text></g><g><title>seekAndRead (13 samples, 0.07%)</title><rect x="54.7150%" y="405" width="0.0670%" height="15" fill="rgb(249,49,53)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="415.50"></text></g><g><title>__libc_pread64 (13 samples, 0.07%)</title><rect x="54.7150%" y="389" width="0.0670%" height="15" fill="rgb(238,60,50)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="399.50"></text></g><g><title>__libc_pread64 (13 samples, 0.07%)</title><rect x="54.7150%" y="373" width="0.0670%" height="15" fill="rgb(210,5,2)" fg:x="10618" fg:w="13"/><text x="54.9650%" y="383.50"></text></g><g><title>balance_nonroot (18 samples, 0.09%)</title><rect x="54.6996%" y="533" width="0.0928%" height="15" fill="rgb(214,207,24)" fg:x="10615" fg:w="18"/><text x="54.9496%" y="543.50"></text></g><g><title>getAndInitPage (15 samples, 0.08%)</title><rect x="54.7150%" y="517" width="0.0773%" height="15" fill="rgb(228,173,2)" fg:x="10618" fg:w="15"/><text x="54.9650%" y="527.50"></text></g><g><title>sqlite3PagerGet (15 samples, 0.08%)</title><rect x="54.7150%" y="501" width="0.0773%" height="15" fill="rgb(244,26,8)" fg:x="10618" fg:w="15"/><text x="54.9650%" y="511.50"></text></g><g><title>getPageNormal (15 samples, 0.08%)</title><rect x="54.7150%" y="485" width="0.0773%" height="15" fill="rgb(249,153,35)" fg:x="10618" fg:w="15"/><text x="54.9650%" y="495.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="54.7820%" y="469" width="0.0103%" height="15" fill="rgb(221,215,40)" fg:x="10631" fg:w="2"/><text x="55.0320%" y="479.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="54.7820%" y="453" width="0.0103%" height="15" fill="rgb(238,106,35)" fg:x="10631" fg:w="2"/><text x="55.0320%" y="463.50"></text></g><g><title>balance (22 samples, 0.11%)</title><rect x="54.6996%" y="549" width="0.1134%" height="15" fill="rgb(207,195,21)" fg:x="10615" fg:w="22"/><text x="54.9496%" y="559.50"></text></g><g><title>sqlite3PageMalloc (4 samples, 0.02%)</title><rect x="54.7923%" y="533" width="0.0206%" height="15" fill="rgb(205,43,29)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="543.50"></text></g><g><title>pcache1Alloc (4 samples, 0.02%)</title><rect x="54.7923%" y="517" width="0.0206%" height="15" fill="rgb(236,35,21)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="527.50"></text></g><g><title>pcache1Alloc (4 samples, 0.02%)</title><rect x="54.7923%" y="501" width="0.0206%" height="15" fill="rgb(244,74,8)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="511.50"></text></g><g><title>sqlite3Malloc (4 samples, 0.02%)</title><rect x="54.7923%" y="485" width="0.0206%" height="15" fill="rgb(241,229,7)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="495.50"></text></g><g><title>sqlite3Malloc (4 samples, 0.02%)</title><rect x="54.7923%" y="469" width="0.0206%" height="15" fill="rgb(212,223,25)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="479.50"></text></g><g><title>mallocWithAlarm (4 samples, 0.02%)</title><rect x="54.7923%" y="453" width="0.0206%" height="15" fill="rgb(234,58,53)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="463.50"></text></g><g><title>sqlite3MemMalloc (4 samples, 0.02%)</title><rect x="54.7923%" y="437" width="0.0206%" height="15" fill="rgb(244,36,1)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="54.7923%" y="421" width="0.0206%" height="15" fill="rgb(222,40,54)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="431.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="54.7923%" y="405" width="0.0206%" height="15" fill="rgb(210,207,39)" fg:x="10633" fg:w="4"/><text x="55.0423%" y="415.50"></text></g><g><title>malloc_consolidate (3 samples, 0.02%)</title><rect x="54.7975%" y="389" width="0.0155%" height="15" fill="rgb(234,52,14)" fg:x="10634" fg:w="3"/><text x="55.0475%" y="399.50"></text></g><g><title>fillInCell (3 samples, 0.02%)</title><rect x="54.8181%" y="549" width="0.0155%" height="15" fill="rgb(239,108,46)" fg:x="10638" fg:w="3"/><text x="55.0681%" y="559.50"></text></g><g><title>memset (3 samples, 0.02%)</title><rect x="54.8181%" y="533" width="0.0155%" height="15" fill="rgb(252,223,5)" fg:x="10638" fg:w="3"/><text x="55.0681%" y="543.50"></text></g><g><title>Unknown (3 samples, 0.02%)</title><rect x="54.8181%" y="517" width="0.0155%" height="15" fill="rgb(227,181,11)" fg:x="10638" fg:w="3"/><text x="55.0681%" y="527.50"></text></g><g><title>sqlite3BtreeInsert (37 samples, 0.19%)</title><rect x="54.6996%" y="565" width="0.1907%" height="15" fill="rgb(248,126,40)" fg:x="10615" fg:w="37"/><text x="54.9496%" y="575.50"></text></g><g><title>insertCellFast (11 samples, 0.06%)</title><rect x="54.8336%" y="549" width="0.0567%" height="15" fill="rgb(243,1,18)" fg:x="10641" fg:w="11"/><text x="55.0836%" y="559.50"></text></g><g><title>enlargeAndAppend (2 samples, 0.01%)</title><rect x="54.9109%" y="549" width="0.0103%" height="15" fill="rgb(214,145,23)" fg:x="10656" fg:w="2"/><text x="55.1609%" y="559.50"></text></g><g><title>sqlite3StrAccumEnlarge (2 samples, 0.01%)</title><rect x="54.9109%" y="533" width="0.0103%" height="15" fill="rgb(241,218,11)" fg:x="10656" fg:w="2"/><text x="55.1609%" y="543.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.01%)</title><rect x="54.9109%" y="517" width="0.0103%" height="15" fill="rgb(214,219,24)" fg:x="10656" fg:w="2"/><text x="55.1609%" y="527.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="54.9212%" y="533" width="0.0103%" height="15" fill="rgb(235,32,7)" fg:x="10658" fg:w="2"/><text x="55.1712%" y="543.50"></text></g><g><title>findNextHostParameter (4 samples, 0.02%)</title><rect x="54.9212%" y="549" width="0.0206%" height="15" fill="rgb(227,121,28)" fg:x="10658" fg:w="4"/><text x="55.1712%" y="559.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.01%)</title><rect x="54.9315%" y="533" width="0.0103%" height="15" fill="rgb(216,129,49)" fg:x="10660" fg:w="2"/><text x="55.1815%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.04%)</title><rect x="55.4159%" y="517" width="0.0412%" height="15" fill="rgb(207,194,50)" fg:x="10754" fg:w="8"/><text x="55.6659%" y="527.50"></text></g><g><title>enlargeAndAppend (17 samples, 0.09%)</title><rect x="55.4571%" y="517" width="0.0876%" height="15" fill="rgb(207,4,18)" fg:x="10762" fg:w="17"/><text x="55.7071%" y="527.50"></text></g><g><title>sqlite3StrAccumEnlarge (17 samples, 0.09%)</title><rect x="55.4571%" y="501" width="0.0876%" height="15" fill="rgb(213,50,30)" fg:x="10762" fg:w="17"/><text x="55.7071%" y="511.50"></text></g><g><title>sqlite3Realloc (17 samples, 0.09%)</title><rect x="55.4571%" y="485" width="0.0876%" height="15" fill="rgb(208,77,22)" fg:x="10762" fg:w="17"/><text x="55.7071%" y="495.50"></text></g><g><title>sqlite3MemRealloc (15 samples, 0.08%)</title><rect x="55.4674%" y="469" width="0.0773%" height="15" fill="rgb(244,204,34)" fg:x="10764" fg:w="15"/><text x="55.7174%" y="479.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.07%)</title><rect x="55.4725%" y="453" width="0.0721%" height="15" fill="rgb(230,20,17)" fg:x="10765" fg:w="14"/><text x="55.7225%" y="463.50"></text></g><g><title>_int_realloc (13 samples, 0.07%)</title><rect x="55.4777%" y="437" width="0.0670%" height="15" fill="rgb(237,83,15)" fg:x="10766" fg:w="13"/><text x="55.7277%" y="447.50"></text></g><g><title>_int_malloc (10 samples, 0.05%)</title><rect x="55.4931%" y="421" width="0.0515%" height="15" fill="rgb(221,109,25)" fg:x="10769" fg:w="10"/><text x="55.7431%" y="431.50"></text></g><g><title>unlink_chunk (4 samples, 0.02%)</title><rect x="55.5241%" y="405" width="0.0206%" height="15" fill="rgb(205,194,52)" fg:x="10775" fg:w="4"/><text x="55.7741%" y="415.50"></text></g><g><title>sqlite3VdbeExpandSql (132 samples, 0.68%)</title><rect x="54.8902%" y="565" width="0.6802%" height="15" fill="rgb(244,173,54)" fg:x="10652" fg:w="132"/><text x="55.1402%" y="575.50"></text></g><g><title>sqlite3_str_appendf (121 samples, 0.62%)</title><rect x="54.9469%" y="549" width="0.6235%" height="15" fill="rgb(227,181,18)" fg:x="10663" fg:w="121"/><text x="55.1969%" y="559.50"></text></g><g><title>sqlite3_str_vappendf (114 samples, 0.59%)</title><rect x="54.9830%" y="533" width="0.5874%" height="15" fill="rgb(238,36,30)" fg:x="10670" fg:w="114"/><text x="55.2330%" y="543.50"></text></g><g><title>sqlite3_str_append (5 samples, 0.03%)</title><rect x="55.5447%" y="517" width="0.0258%" height="15" fill="rgb(254,85,0)" fg:x="10779" fg:w="5"/><text x="55.7947%" y="527.50"></text></g><g><title>closeAllCursors (2 samples, 0.01%)</title><rect x="55.5859%" y="549" width="0.0103%" height="15" fill="rgb(247,63,33)" fg:x="10787" fg:w="2"/><text x="55.8359%" y="559.50"></text></g><g><title>sqlite3OsSync (7 samples, 0.04%)</title><rect x="55.6014%" y="421" width="0.0361%" height="15" fill="rgb(220,7,54)" fg:x="10790" fg:w="7"/><text x="55.8514%" y="431.50"></text></g><g><title>sqlite3OsSync (7 samples, 0.04%)</title><rect x="55.6014%" y="405" width="0.0361%" height="15" fill="rgb(238,227,21)" fg:x="10790" fg:w="7"/><text x="55.8514%" y="415.50"></text></g><g><title>unixSync (7 samples, 0.04%)</title><rect x="55.6014%" y="389" width="0.0361%" height="15" fill="rgb(237,29,31)" fg:x="10790" fg:w="7"/><text x="55.8514%" y="399.50"></text></g><g><title>full_fsync (7 samples, 0.04%)</title><rect x="55.6014%" y="373" width="0.0361%" height="15" fill="rgb(211,21,50)" fg:x="10790" fg:w="7"/><text x="55.8514%" y="383.50"></text></g><g><title>__GI_fsync (7 samples, 0.04%)</title><rect x="55.6014%" y="357" width="0.0361%" height="15" fill="rgb(239,119,2)" fg:x="10790" fg:w="7"/><text x="55.8514%" y="367.50"></text></g><g><title>walIndexWriteHdr (4 samples, 0.02%)</title><rect x="55.6374%" y="421" width="0.0206%" height="15" fill="rgb(250,2,39)" fg:x="10797" fg:w="4"/><text x="55.8874%" y="431.50"></text></g><g><title>walShmBarrier (4 samples, 0.02%)</title><rect x="55.6374%" y="405" width="0.0206%" height="15" fill="rgb(244,46,53)" fg:x="10797" fg:w="4"/><text x="55.8874%" y="415.50"></text></g><g><title>walShmBarrier (4 samples, 0.02%)</title><rect x="55.6374%" y="389" width="0.0206%" height="15" fill="rgb(209,21,19)" fg:x="10797" fg:w="4"/><text x="55.8874%" y="399.50"></text></g><g><title>sqlite3OsShmBarrier (4 samples, 0.02%)</title><rect x="55.6374%" y="373" width="0.0206%" height="15" fill="rgb(236,145,4)" fg:x="10797" fg:w="4"/><text x="55.8874%" y="383.50"></text></g><g><title>unixShmBarrier (4 samples, 0.02%)</title><rect x="55.6374%" y="357" width="0.0206%" height="15" fill="rgb(220,133,36)" fg:x="10797" fg:w="4"/><text x="55.8874%" y="367.50"></text></g><g><title>unixEnterMutex (4 samples, 0.02%)</title><rect x="55.6374%" y="341" width="0.0206%" height="15" fill="rgb(244,18,3)" fg:x="10797" fg:w="4"/><text x="55.8874%" y="351.50"></text></g><g><title>__pthread_mutex_lock_full (2 samples, 0.01%)</title><rect x="55.6477%" y="325" width="0.0103%" height="15" fill="rgb(232,171,48)" fg:x="10799" fg:w="2"/><text x="55.8977%" y="335.50"></text></g><g><title>walRestartLog (2 samples, 0.01%)</title><rect x="55.6632%" y="421" width="0.0103%" height="15" fill="rgb(223,223,53)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="431.50"></text></g><g><title>walUnlockExclusive (2 samples, 0.01%)</title><rect x="55.6632%" y="405" width="0.0103%" height="15" fill="rgb(246,92,13)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="415.50"></text></g><g><title>walUnlockExclusive (2 samples, 0.01%)</title><rect x="55.6632%" y="389" width="0.0103%" height="15" fill="rgb(229,171,10)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="399.50"></text></g><g><title>sqlite3OsShmLock (2 samples, 0.01%)</title><rect x="55.6632%" y="373" width="0.0103%" height="15" fill="rgb(213,131,26)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="383.50"></text></g><g><title>unixShmLock (2 samples, 0.01%)</title><rect x="55.6632%" y="357" width="0.0103%" height="15" fill="rgb(242,87,54)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="367.50"></text></g><g><title>unixShmSystemLock (2 samples, 0.01%)</title><rect x="55.6632%" y="341" width="0.0103%" height="15" fill="rgb(237,21,35)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="351.50"></text></g><g><title>__GI___libc_fcntl64 (2 samples, 0.01%)</title><rect x="55.6632%" y="325" width="0.0103%" height="15" fill="rgb(253,13,47)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="335.50"></text></g><g><title>__fcntl64_nocancel_adjusted (2 samples, 0.01%)</title><rect x="55.6632%" y="309" width="0.0103%" height="15" fill="rgb(215,122,49)" fg:x="10802" fg:w="2"/><text x="55.9132%" y="319.50"></text></g><g><title>unixWrite (277 samples, 1.43%)</title><rect x="55.6735%" y="405" width="1.4274%" height="15" fill="rgb(209,179,30)" fg:x="10804" fg:w="277"/><text x="55.9235%" y="415.50"></text></g><g><title>seekAndWrite (277 samples, 1.43%)</title><rect x="55.6735%" y="389" width="1.4274%" height="15" fill="rgb(235,100,24)" fg:x="10804" fg:w="277"/><text x="55.9235%" y="399.50"></text></g><g><title>seekAndWriteFd (277 samples, 1.43%)</title><rect x="55.6735%" y="373" width="1.4274%" height="15" fill="rgb(209,67,24)" fg:x="10804" fg:w="277"/><text x="55.9235%" y="383.50"></text></g><g><title>__libc_pwrite64 (276 samples, 1.42%)</title><rect x="55.6787%" y="357" width="1.4222%" height="15" fill="rgb(206,74,32)" fg:x="10805" fg:w="276"/><text x="55.9287%" y="367.50"></text></g><g><title>__libc_pwrite64 (276 samples, 1.42%)</title><rect x="55.6787%" y="341" width="1.4222%" height="15" fill="rgb(212,45,25)" fg:x="10805" fg:w="276"/><text x="55.9287%" y="351.50"></text></g><g><title>walEncodeFrame (58 samples, 0.30%)</title><rect x="57.1009%" y="405" width="0.2989%" height="15" fill="rgb(239,26,3)" fg:x="11081" fg:w="58"/><text x="57.3509%" y="415.50"></text></g><g><title>walChecksumBytes (58 samples, 0.30%)</title><rect x="57.1009%" y="389" width="0.2989%" height="15" fill="rgb(218,36,15)" fg:x="11081" fg:w="58"/><text x="57.3509%" y="399.50"></text></g><g><title>pagerWalFrames (351 samples, 1.81%)</title><rect x="55.5962%" y="469" width="1.8087%" height="15" fill="rgb(206,108,24)" fg:x="10789" fg:w="351"/><text x="55.8462%" y="479.50">p..</text></g><g><title>sqlite3WalFrames (351 samples, 1.81%)</title><rect x="55.5962%" y="453" width="1.8087%" height="15" fill="rgb(234,204,42)" fg:x="10789" fg:w="351"/><text x="55.8462%" y="463.50">s..</text></g><g><title>walFrames (351 samples, 1.81%)</title><rect x="55.5962%" y="437" width="1.8087%" height="15" fill="rgb(229,2,11)" fg:x="10789" fg:w="351"/><text x="55.8462%" y="447.50">w..</text></g><g><title>walWriteOneFrame (336 samples, 1.73%)</title><rect x="55.6735%" y="421" width="1.7314%" height="15" fill="rgb(221,20,48)" fg:x="10804" fg:w="336"/><text x="55.9235%" y="431.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (355 samples, 1.83%)</title><rect x="55.5962%" y="533" width="1.8293%" height="15" fill="rgb(244,164,10)" fg:x="10789" fg:w="355"/><text x="55.8462%" y="543.50">s..</text></g><g><title>sqlite3BtreeCommitPhaseOne (355 samples, 1.83%)</title><rect x="55.5962%" y="517" width="1.8293%" height="15" fill="rgb(243,229,2)" fg:x="10789" fg:w="355"/><text x="55.8462%" y="527.50">s..</text></g><g><title>sqlite3PagerCommitPhaseOne (355 samples, 1.83%)</title><rect x="55.5962%" y="501" width="1.8293%" height="15" fill="rgb(232,131,37)" fg:x="10789" fg:w="355"/><text x="55.8462%" y="511.50">s..</text></g><g><title>sqlite3PagerCommitPhaseOne (355 samples, 1.83%)</title><rect x="55.5962%" y="485" width="1.8293%" height="15" fill="rgb(217,156,11)" fg:x="10789" fg:w="355"/><text x="55.8462%" y="495.50">s..</text></g><g><title>sqlite3PcacheDirtyList (3 samples, 0.02%)</title><rect x="57.4101%" y="469" width="0.0155%" height="15" fill="rgb(239,99,48)" fg:x="11141" fg:w="3"/><text x="57.6601%" y="479.50"></text></g><g><title>pcacheSortDirtyList (3 samples, 0.02%)</title><rect x="57.4101%" y="453" width="0.0155%" height="15" fill="rgb(231,209,9)" fg:x="11141" fg:w="3"/><text x="57.6601%" y="463.50"></text></g><g><title>pager_unlock (12 samples, 0.06%)</title><rect x="57.4307%" y="517" width="0.0618%" height="15" fill="rgb(254,97,27)" fg:x="11145" fg:w="12"/><text x="57.6807%" y="527.50"></text></g><g><title>sqlite3WalEndReadTransaction (11 samples, 0.06%)</title><rect x="57.4358%" y="501" width="0.0567%" height="15" fill="rgb(223,151,38)" fg:x="11146" fg:w="11"/><text x="57.6858%" y="511.50"></text></g><g><title>walUnlockShared (11 samples, 0.06%)</title><rect x="57.4358%" y="485" width="0.0567%" height="15" fill="rgb(219,206,35)" fg:x="11146" fg:w="11"/><text x="57.6858%" y="495.50"></text></g><g><title>walUnlockShared (11 samples, 0.06%)</title><rect x="57.4358%" y="469" width="0.0567%" height="15" fill="rgb(216,130,31)" fg:x="11146" fg:w="11"/><text x="57.6858%" y="479.50"></text></g><g><title>sqlite3OsShmLock (11 samples, 0.06%)</title><rect x="57.4358%" y="453" width="0.0567%" height="15" fill="rgb(251,97,34)" fg:x="11146" fg:w="11"/><text x="57.6858%" y="463.50"></text></g><g><title>unixShmLock (11 samples, 0.06%)</title><rect x="57.4358%" y="437" width="0.0567%" height="15" fill="rgb(246,159,47)" fg:x="11146" fg:w="11"/><text x="57.6858%" y="447.50"></text></g><g><title>unixShmSystemLock (10 samples, 0.05%)</title><rect x="57.4410%" y="421" width="0.0515%" height="15" fill="rgb(232,87,10)" fg:x="11147" fg:w="10"/><text x="57.6910%" y="431.50"></text></g><g><title>__GI___libc_fcntl64 (9 samples, 0.05%)</title><rect x="57.4462%" y="405" width="0.0464%" height="15" fill="rgb(249,1,37)" fg:x="11148" fg:w="9"/><text x="57.6962%" y="415.50"></text></g><g><title>__fcntl64_nocancel_adjusted (9 samples, 0.05%)</title><rect x="57.4462%" y="389" width="0.0464%" height="15" fill="rgb(239,135,14)" fg:x="11148" fg:w="9"/><text x="57.6962%" y="399.50"></text></g><g><title>pcache1Truncate (5 samples, 0.03%)</title><rect x="57.4977%" y="485" width="0.0258%" height="15" fill="rgb(253,116,46)" fg:x="11158" fg:w="5"/><text x="57.7477%" y="495.50"></text></g><g><title>pcache1TruncateUnsafe (3 samples, 0.02%)</title><rect x="57.5080%" y="469" width="0.0155%" height="15" fill="rgb(222,217,37)" fg:x="11160" fg:w="3"/><text x="57.7580%" y="479.50"></text></g><g><title>Unknown (2 samples, 0.01%)</title><rect x="57.5389%" y="389" width="0.0103%" height="15" fill="rgb(252,96,8)" fg:x="11166" fg:w="2"/><text x="57.7889%" y="399.50"></text></g><g><title>sqlite3VdbeHalt (408 samples, 2.10%)</title><rect x="55.5704%" y="565" width="2.1024%" height="15" fill="rgb(254,103,41)" fg:x="10784" fg:w="408"/><text x="55.8204%" y="575.50">s..</text></g><g><title>vdbeCommit (403 samples, 2.08%)</title><rect x="55.5962%" y="549" width="2.0767%" height="15" fill="rgb(218,213,19)" fg:x="10789" fg:w="403"/><text x="55.8462%" y="559.50">v..</text></g><g><title>sqlite3BtreeCommitPhaseTwo (48 samples, 0.25%)</title><rect x="57.4255%" y="533" width="0.2473%" height="15" fill="rgb(253,95,21)" fg:x="11144" fg:w="48"/><text x="57.6755%" y="543.50"></text></g><g><title>sqlite3PagerCommitPhaseTwo (35 samples, 0.18%)</title><rect x="57.4925%" y="517" width="0.1804%" height="15" fill="rgb(229,26,28)" fg:x="11157" fg:w="35"/><text x="57.7425%" y="527.50"></text></g><g><title>pager_end_transaction (35 samples, 0.18%)</title><rect x="57.4925%" y="501" width="0.1804%" height="15" fill="rgb(230,129,16)" fg:x="11157" fg:w="35"/><text x="57.7425%" y="511.50"></text></g><g><title>sqlite3WalEndWriteTransaction (27 samples, 0.14%)</title><rect x="57.5338%" y="485" width="0.1391%" height="15" fill="rgb(236,126,17)" fg:x="11165" fg:w="27"/><text x="57.7838%" y="495.50"></text></g><g><title>sqlite3WalEndWriteTransaction (27 samples, 0.14%)</title><rect x="57.5338%" y="469" width="0.1391%" height="15" fill="rgb(209,33,33)" fg:x="11165" fg:w="27"/><text x="57.7838%" y="479.50"></text></g><g><title>walUnlockExclusive (27 samples, 0.14%)</title><rect x="57.5338%" y="453" width="0.1391%" height="15" fill="rgb(227,85,29)" fg:x="11165" fg:w="27"/><text x="57.7838%" y="463.50"></text></g><g><title>walUnlockExclusive (27 samples, 0.14%)</title><rect x="57.5338%" y="437" width="0.1391%" height="15" fill="rgb(241,53,46)" fg:x="11165" fg:w="27"/><text x="57.7838%" y="447.50"></text></g><g><title>sqlite3OsShmLock (27 samples, 0.14%)</title><rect x="57.5338%" y="421" width="0.1391%" height="15" fill="rgb(228,167,53)" fg:x="11165" fg:w="27"/><text x="57.7838%" y="431.50"></text></g><g><title>unixShmLock (27 samples, 0.14%)</title><rect x="57.5338%" y="405" width="0.1391%" height="15" fill="rgb(238,195,45)" fg:x="11165" fg:w="27"/><text x="57.7838%" y="415.50"></text></g><g><title>unixShmSystemLock (23 samples, 0.12%)</title><rect x="57.5544%" y="389" width="0.1185%" height="15" fill="rgb(252,124,45)" fg:x="11169" fg:w="23"/><text x="57.8044%" y="399.50"></text></g><g><title>__GI___libc_fcntl64 (23 samples, 0.12%)</title><rect x="57.5544%" y="373" width="0.1185%" height="15" fill="rgb(251,38,35)" fg:x="11169" fg:w="23"/><text x="57.8044%" y="383.50"></text></g><g><title>__fcntl64_nocancel_adjusted (23 samples, 0.12%)</title><rect x="57.5544%" y="357" width="0.1185%" height="15" fill="rgb(227,33,2)" fg:x="11169" fg:w="23"/><text x="57.8044%" y="367.50"></text></g><g><title>sqlite3VdbeSorterNext (15 samples, 0.08%)</title><rect x="57.6729%" y="565" width="0.0773%" height="15" fill="rgb(223,157,46)" fg:x="11192" fg:w="15"/><text x="57.9229%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,654 samples, 8.52%)</title><rect x="49.2322%" y="741" width="8.5231%" height="15" fill="rgb(222,78,41)" fg:x="9554" fg:w="1654"/><text x="49.4822%" y="751.50">core::result..</text></g><g><title>rusqlite::Connection::execute::{{closure}} (1,654 samples, 8.52%)</title><rect x="49.2322%" y="725" width="8.5231%" height="15" fill="rgb(248,176,11)" fg:x="9554" fg:w="1654"/><text x="49.4822%" y="735.50">rusqlite::Co..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,650 samples, 8.50%)</title><rect x="49.2528%" y="709" width="8.5025%" height="15" fill="rgb(241,221,18)" fg:x="9558" fg:w="1650"/><text x="49.5028%" y="719.50">core::result..</text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (1,650 samples, 8.50%)</title><rect x="49.2528%" y="693" width="8.5025%" height="15" fill="rgb(218,85,22)" fg:x="9558" fg:w="1650"/><text x="49.5028%" y="703.50">rusqlite::Co..</text></g><g><title>rusqlite::statement::Statement::execute (1,650 samples, 8.50%)</title><rect x="49.2528%" y="677" width="8.5025%" height="15" fill="rgb(222,223,7)" fg:x="9558" fg:w="1650"/><text x="49.5028%" y="687.50">rusqlite::st..</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1,619 samples, 8.34%)</title><rect x="49.4126%" y="661" width="8.3428%" height="15" fill="rgb(254,59,39)" fg:x="9589" fg:w="1619"/><text x="49.6626%" y="671.50">rusqlite::st..</text></g><g><title>rusqlite::raw_statement::RawStatement::step (1,616 samples, 8.33%)</title><rect x="49.4280%" y="645" width="8.3273%" height="15" fill="rgb(247,100,27)" fg:x="9592" fg:w="1616"/><text x="49.6780%" y="655.50">rusqlite::ra..</text></g><g><title>sqlite3_step (1,616 samples, 8.33%)</title><rect x="49.4280%" y="629" width="8.3273%" height="15" fill="rgb(237,207,10)" fg:x="9592" fg:w="1616"/><text x="49.6780%" y="639.50">sqlite3_step</text></g><g><title>sqlite3_step (1,616 samples, 8.33%)</title><rect x="49.4280%" y="613" width="8.3273%" height="15" fill="rgb(220,121,28)" fg:x="9592" fg:w="1616"/><text x="49.6780%" y="623.50">sqlite3_step</text></g><g><title>sqlite3Step (1,616 samples, 8.33%)</title><rect x="49.4280%" y="597" width="8.3273%" height="15" fill="rgb(213,223,20)" fg:x="9592" fg:w="1616"/><text x="49.6780%" y="607.50">sqlite3Step</text></g><g><title>sqlite3VdbeExec (824 samples, 4.25%)</title><rect x="53.5092%" y="581" width="4.2461%" height="15" fill="rgb(205,121,27)" fg:x="10384" fg:w="824"/><text x="53.7592%" y="591.50">sqlit..</text></g><g><title>sqlite3GetToken (3 samples, 0.02%)</title><rect x="57.7708%" y="597" width="0.0155%" height="15" fill="rgb(253,24,53)" fg:x="11211" fg:w="3"/><text x="58.0208%" y="607.50"></text></g><g><title>yy_find_shift_action (10 samples, 0.05%)</title><rect x="57.7863%" y="581" width="0.0515%" height="15" fill="rgb(224,224,47)" fg:x="11214" fg:w="10"/><text x="58.0363%" y="591.50"></text></g><g><title>sqlite3FinishCoding (3 samples, 0.02%)</title><rect x="57.8378%" y="565" width="0.0155%" height="15" fill="rgb(250,125,36)" fg:x="11224" fg:w="3"/><text x="58.0878%" y="575.50"></text></g><g><title>sqlite3VdbeMakeReady (2 samples, 0.01%)</title><rect x="57.8429%" y="549" width="0.0103%" height="15" fill="rgb(240,144,38)" fg:x="11225" fg:w="2"/><text x="58.0929%" y="559.50"></text></g><g><title>sqlite3FkRequired (2 samples, 0.01%)</title><rect x="57.9151%" y="533" width="0.0103%" height="15" fill="rgb(250,15,50)" fg:x="11239" fg:w="2"/><text x="58.1651%" y="543.50"></text></g><g><title>sqlite3FkReferences (2 samples, 0.01%)</title><rect x="57.9151%" y="517" width="0.0103%" height="15" fill="rgb(210,24,26)" fg:x="11239" fg:w="2"/><text x="58.1651%" y="527.50"></text></g><g><title>sqlite3HashFind (2 samples, 0.01%)</title><rect x="57.9151%" y="501" width="0.0103%" height="15" fill="rgb(234,53,53)" fg:x="11239" fg:w="2"/><text x="58.1651%" y="511.50"></text></g><g><title>findElementWithHash (2 samples, 0.01%)</title><rect x="57.9151%" y="485" width="0.0103%" height="15" fill="rgb(208,108,28)" fg:x="11239" fg:w="2"/><text x="58.1651%" y="495.50"></text></g><g><title>sqlite3StrICmp (2 samples, 0.01%)</title><rect x="57.9151%" y="469" width="0.0103%" height="15" fill="rgb(227,143,7)" fg:x="11239" fg:w="2"/><text x="58.1651%" y="479.50"></text></g><g><title>sqlite3TableAffinity (2 samples, 0.01%)</title><rect x="57.9254%" y="533" width="0.0103%" height="15" fill="rgb(238,189,38)" fg:x="11241" fg:w="2"/><text x="58.1754%" y="543.50"></text></g><g><title>sqlite3GenerateConstraintChecks (9 samples, 0.05%)</title><rect x="57.8945%" y="549" width="0.0464%" height="15" fill="rgb(222,69,15)" fg:x="11235" fg:w="9"/><text x="58.1445%" y="559.50"></text></g><g><title>sqlite3GetVdbe (3 samples, 0.02%)</title><rect x="57.9408%" y="549" width="0.0155%" height="15" fill="rgb(213,169,7)" fg:x="11244" fg:w="3"/><text x="58.1908%" y="559.50"></text></g><g><title>sqlite3GetVdbe (3 samples, 0.02%)</title><rect x="57.9408%" y="533" width="0.0155%" height="15" fill="rgb(251,219,4)" fg:x="11244" fg:w="3"/><text x="58.1908%" y="543.50"></text></g><g><title>sqlite3IdListDelete (2 samples, 0.01%)</title><rect x="57.9563%" y="549" width="0.0103%" height="15" fill="rgb(241,55,40)" fg:x="11247" fg:w="2"/><text x="58.2063%" y="559.50"></text></g><g><title>sqlite3IdListDelete (2 samples, 0.01%)</title><rect x="57.9563%" y="533" width="0.0103%" height="15" fill="rgb(243,57,30)" fg:x="11247" fg:w="2"/><text x="58.2063%" y="543.50"></text></g><g><title>sqlite3DbNNFreeNN (2 samples, 0.01%)</title><rect x="57.9563%" y="517" width="0.0103%" height="15" fill="rgb(234,50,30)" fg:x="11247" fg:w="2"/><text x="58.2063%" y="527.50"></text></g><g><title>sqlite3OpenTableAndIndices (2 samples, 0.01%)</title><rect x="57.9666%" y="549" width="0.0103%" height="15" fill="rgb(239,23,42)" fg:x="11249" fg:w="2"/><text x="58.2166%" y="559.50"></text></g><g><title>sqlite3SrcListLookup (2 samples, 0.01%)</title><rect x="57.9769%" y="549" width="0.0103%" height="15" fill="rgb(217,38,19)" fg:x="11251" fg:w="2"/><text x="58.2269%" y="559.50"></text></g><g><title>sqlite3LocateTableItem (2 samples, 0.01%)</title><rect x="57.9769%" y="533" width="0.0103%" height="15" fill="rgb(215,179,16)" fg:x="11251" fg:w="2"/><text x="58.2269%" y="543.50"></text></g><g><title>sqlite3LocateTable (2 samples, 0.01%)</title><rect x="57.9769%" y="517" width="0.0103%" height="15" fill="rgb(254,21,37)" fg:x="11251" fg:w="2"/><text x="58.2269%" y="527.50"></text></g><g><title>sqlite3Insert (27 samples, 0.14%)</title><rect x="57.8532%" y="565" width="0.1391%" height="15" fill="rgb(219,207,48)" fg:x="11227" fg:w="27"/><text x="58.1032%" y="575.50"></text></g><g><title>sqlite3RunParser (53 samples, 0.27%)</title><rect x="57.7656%" y="613" width="0.2731%" height="15" fill="rgb(227,225,41)" fg:x="11210" fg:w="53"/><text x="58.0156%" y="623.50"></text></g><g><title>sqlite3Parser (49 samples, 0.25%)</title><rect x="57.7863%" y="597" width="0.2525%" height="15" fill="rgb(223,130,1)" fg:x="11214" fg:w="49"/><text x="58.0363%" y="607.50"></text></g><g><title>yy_reduce (39 samples, 0.20%)</title><rect x="57.8378%" y="581" width="0.2010%" height="15" fill="rgb(249,54,42)" fg:x="11224" fg:w="39"/><text x="58.0878%" y="591.50"></text></g><g><title>yy_find_reduce_action (7 samples, 0.04%)</title><rect x="58.0027%" y="565" width="0.0361%" height="15" fill="rgb(248,69,25)" fg:x="11256" fg:w="7"/><text x="58.2527%" y="575.50"></text></g><g><title>zilliqa::db::Db::insert_transaction (1,710 samples, 8.81%)</title><rect x="49.2322%" y="789" width="8.8117%" height="15" fill="rgb(234,21,32)" fg:x="9554" fg:w="1710"/><text x="49.4822%" y="799.50">zilliqa::db:..</text></g><g><title>zilliqa::db::Db::insert_transaction_with_db_tx (1,710 samples, 8.81%)</title><rect x="49.2322%" y="773" width="8.8117%" height="15" fill="rgb(252,136,6)" fg:x="9554" fg:w="1710"/><text x="49.4822%" y="783.50">zilliqa::db:..</text></g><g><title>rusqlite::Connection::execute (1,710 samples, 8.81%)</title><rect x="49.2322%" y="757" width="8.8117%" height="15" fill="rgb(245,87,12)" fg:x="9554" fg:w="1710"/><text x="49.4822%" y="767.50">rusqlite::Co..</text></g><g><title>rusqlite::Connection::prepare (56 samples, 0.29%)</title><rect x="57.7553%" y="741" width="0.2886%" height="15" fill="rgb(208,12,15)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="751.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (56 samples, 0.29%)</title><rect x="57.7553%" y="725" width="0.2886%" height="15" fill="rgb(250,98,2)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="735.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (56 samples, 0.29%)</title><rect x="57.7553%" y="709" width="0.2886%" height="15" fill="rgb(205,213,15)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="719.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (56 samples, 0.29%)</title><rect x="57.7553%" y="693" width="0.2886%" height="15" fill="rgb(248,192,44)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="703.50"></text></g><g><title>sqlite3_prepare_v3 (56 samples, 0.29%)</title><rect x="57.7553%" y="677" width="0.2886%" height="15" fill="rgb(221,89,17)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="687.50"></text></g><g><title>sqlite3LockAndPrepare (56 samples, 0.29%)</title><rect x="57.7553%" y="661" width="0.2886%" height="15" fill="rgb(209,55,3)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="671.50"></text></g><g><title>sqlite3LockAndPrepare (56 samples, 0.29%)</title><rect x="57.7553%" y="645" width="0.2886%" height="15" fill="rgb(247,23,45)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="655.50"></text></g><g><title>sqlite3Prepare (56 samples, 0.29%)</title><rect x="57.7553%" y="629" width="0.2886%" height="15" fill="rgb(235,152,23)" fg:x="11208" fg:w="56"/><text x="58.0053%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="58.0491%" y="773" width="0.0103%" height="15" fill="rgb(244,63,13)" fg:x="11265" fg:w="2"/><text x="58.2991%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="58.0491%" y="757" width="0.0103%" height="15" fill="rgb(227,30,37)" fg:x="11265" fg:w="2"/><text x="58.2991%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="58.0491%" y="741" width="0.0103%" height="15" fill="rgb(224,49,42)" fg:x="11265" fg:w="2"/><text x="58.2991%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (2 samples, 0.01%)</title><rect x="58.0491%" y="725" width="0.0103%" height="15" fill="rgb(218,129,5)" fg:x="11265" fg:w="2"/><text x="58.2991%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (2 samples, 0.01%)</title><rect x="58.0491%" y="709" width="0.0103%" height="15" fill="rgb(240,199,54)" fg:x="11265" fg:w="2"/><text x="58.2991%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.01%)</title><rect x="58.0594%" y="773" width="0.0103%" height="15" fill="rgb(234,31,13)" fg:x="11267" fg:w="2"/><text x="58.3094%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.01%)</title><rect x="58.0594%" y="757" width="0.0103%" height="15" fill="rgb(219,73,54)" fg:x="11267" fg:w="2"/><text x="58.3094%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.01%)</title><rect x="58.0594%" y="741" width="0.0103%" height="15" fill="rgb(251,162,10)" fg:x="11267" fg:w="2"/><text x="58.3094%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="58.0594%" y="725" width="0.0103%" height="15" fill="rgb(240,138,47)" fg:x="11267" fg:w="2"/><text x="58.3094%" y="735.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::msg (2 samples, 0.01%)</title><rect x="58.0748%" y="773" width="0.0103%" height="15" fill="rgb(216,138,26)" fg:x="11270" fg:w="2"/><text x="58.3248%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::nibbles::Nibbles&gt; (2 samples, 0.01%)</title><rect x="58.1006%" y="725" width="0.0103%" height="15" fill="rgb(243,17,35)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="58.1006%" y="709" width="0.0103%" height="15" fill="rgb(241,60,18)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="58.1006%" y="693" width="0.0103%" height="15" fill="rgb(234,2,44)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="58.1006%" y="677" width="0.0103%" height="15" fill="rgb(225,225,33)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="58.1006%" y="661" width="0.0103%" height="15" fill="rgb(234,50,31)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="58.1006%" y="645" width="0.0103%" height="15" fill="rgb(249,6,25)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="655.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="58.1006%" y="629" width="0.0103%" height="15" fill="rgb(241,5,17)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="639.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="58.1006%" y="613" width="0.0103%" height="15" fill="rgb(207,116,10)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="58.1006%" y="597" width="0.0103%" height="15" fill="rgb(222,128,18)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="58.1006%" y="581" width="0.0103%" height="15" fill="rgb(229,109,25)" fg:x="11275" fg:w="2"/><text x="58.3506%" y="591.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (3 samples, 0.02%)</title><rect x="58.1109%" y="725" width="0.0155%" height="15" fill="rgb(222,102,25)" fg:x="11277" fg:w="3"/><text x="58.3609%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="58.1418%" y="693" width="0.0258%" height="15" fill="rgb(239,211,5)" fg:x="11283" fg:w="5"/><text x="58.3918%" y="703.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="58.1418%" y="677" width="0.0258%" height="15" fill="rgb(223,136,26)" fg:x="11283" fg:w="5"/><text x="58.3918%" y="687.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="58.1418%" y="661" width="0.0258%" height="15" fill="rgb(227,30,15)" fg:x="11283" fg:w="5"/><text x="58.3918%" y="671.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="58.1418%" y="645" width="0.0258%" height="15" fill="rgb(247,76,4)" fg:x="11283" fg:w="5"/><text x="58.3918%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="58.1418%" y="629" width="0.0258%" height="15" fill="rgb(245,38,48)" fg:x="11283" fg:w="5"/><text x="58.3918%" y="639.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="58.1418%" y="613" width="0.0258%" height="15" fill="rgb(210,220,14)" fg:x="11283" fg:w="5"/><text x="58.3918%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="58.1470%" y="597" width="0.0206%" height="15" fill="rgb(224,60,51)" fg:x="11284" fg:w="4"/><text x="58.3970%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="58.1470%" y="581" width="0.0206%" height="15" fill="rgb(212,133,49)" fg:x="11284" fg:w="4"/><text x="58.3970%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="58.1470%" y="565" width="0.0206%" height="15" fill="rgb(231,39,22)" fg:x="11284" fg:w="4"/><text x="58.3970%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="58.1470%" y="549" width="0.0206%" height="15" fill="rgb(236,173,22)" fg:x="11284" fg:w="4"/><text x="58.3970%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="58.1470%" y="533" width="0.0206%" height="15" fill="rgb(210,70,0)" fg:x="11284" fg:w="4"/><text x="58.3970%" y="543.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="58.1470%" y="517" width="0.0206%" height="15" fill="rgb(215,170,11)" fg:x="11284" fg:w="4"/><text x="58.3970%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (2 samples, 0.01%)</title><rect x="58.1676%" y="693" width="0.0103%" height="15" fill="rgb(220,154,28)" fg:x="11288" fg:w="2"/><text x="58.4176%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::ExtensionNode&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="58.1676%" y="677" width="0.0103%" height="15" fill="rgb(240,160,41)" fg:x="11288" fg:w="2"/><text x="58.4176%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="58.1676%" y="661" width="0.0103%" height="15" fill="rgb(243,215,41)" fg:x="11288" fg:w="2"/><text x="58.4176%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="58.1676%" y="645" width="0.0103%" height="15" fill="rgb(214,208,31)" fg:x="11288" fg:w="2"/><text x="58.4176%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="58.1676%" y="629" width="0.0103%" height="15" fill="rgb(247,57,22)" fg:x="11288" fg:w="2"/><text x="58.4176%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="58.1779%" y="677" width="0.0103%" height="15" fill="rgb(228,73,52)" fg:x="11290" fg:w="2"/><text x="58.4279%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.01%)</title><rect x="58.1779%" y="661" width="0.0103%" height="15" fill="rgb(252,60,9)" fg:x="11290" fg:w="2"/><text x="58.4279%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="58.1779%" y="645" width="0.0103%" height="15" fill="rgb(233,9,51)" fg:x="11290" fg:w="2"/><text x="58.4279%" y="655.50"></text></g><g><title>eth_trie::nibbles::Nibbles::offset (2 samples, 0.01%)</title><rect x="58.1882%" y="677" width="0.0103%" height="15" fill="rgb(223,67,14)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="687.50"></text></g><g><title>eth_trie::nibbles::Nibbles::slice (2 samples, 0.01%)</title><rect x="58.1882%" y="661" width="0.0103%" height="15" fill="rgb(222,86,2)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="671.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_hex (2 samples, 0.01%)</title><rect x="58.1882%" y="645" width="0.0103%" height="15" fill="rgb(243,58,54)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="58.1882%" y="629" width="0.0103%" height="15" fill="rgb(210,200,39)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="58.1882%" y="613" width="0.0103%" height="15" fill="rgb(238,135,9)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="58.1882%" y="597" width="0.0103%" height="15" fill="rgb(232,179,7)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="58.1882%" y="581" width="0.0103%" height="15" fill="rgb(245,65,41)" fg:x="11292" fg:w="2"/><text x="58.4382%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="58.1985%" y="661" width="0.0103%" height="15" fill="rgb(227,43,8)" fg:x="11294" fg:w="2"/><text x="58.4485%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (2 samples, 0.01%)</title><rect x="58.1985%" y="645" width="0.0103%" height="15" fill="rgb(235,91,14)" fg:x="11294" fg:w="2"/><text x="58.4485%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (2 samples, 0.01%)</title><rect x="58.1985%" y="629" width="0.0103%" height="15" fill="rgb(235,219,31)" fg:x="11294" fg:w="2"/><text x="58.4485%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (2 samples, 0.01%)</title><rect x="58.1985%" y="613" width="0.0103%" height="15" fill="rgb(227,121,25)" fg:x="11294" fg:w="2"/><text x="58.4485%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (2 samples, 0.01%)</title><rect x="58.1985%" y="597" width="0.0103%" height="15" fill="rgb(254,129,24)" fg:x="11294" fg:w="2"/><text x="58.4485%" y="607.50"></text></g><g><title> 16]&gt; (2 samples, 0.01%)</title><rect x="58.1985%" y="581" width="0.0103%" height="15" fill="rgb(226,144,49)" fg:x="11294" fg:w="2"/><text x="58.4485%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256 (4 samples, 0.02%)</title><rect x="58.2088%" y="661" width="0.0206%" height="15" fill="rgb(214,187,32)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (4 samples, 0.02%)</title><rect x="58.2088%" y="645" width="0.0206%" height="15" fill="rgb(243,129,46)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="655.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (4 samples, 0.02%)</title><rect x="58.2088%" y="629" width="0.0206%" height="15" fill="rgb(221,185,35)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (4 samples, 0.02%)</title><rect x="58.2088%" y="613" width="0.0206%" height="15" fill="rgb(205,0,32)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (4 samples, 0.02%)</title><rect x="58.2088%" y="597" width="0.0206%" height="15" fill="rgb(229,179,12)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 0.02%)</title><rect x="58.2088%" y="581" width="0.0206%" height="15" fill="rgb(252,107,19)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="58.2088%" y="565" width="0.0206%" height="15" fill="rgb(220,95,27)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="58.2088%" y="549" width="0.0206%" height="15" fill="rgb(240,113,40)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="58.2088%" y="533" width="0.0206%" height="15" fill="rgb(208,4,43)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="58.2088%" y="517" width="0.0206%" height="15" fill="rgb(247,189,30)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="58.2088%" y="501" width="0.0206%" height="15" fill="rgb(231,157,17)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="511.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="58.2088%" y="485" width="0.0206%" height="15" fill="rgb(224,139,6)" fg:x="11296" fg:w="4"/><text x="58.4588%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256 (9 samples, 0.05%)</title><rect x="58.2346%" y="629" width="0.0464%" height="15" fill="rgb(223,83,16)" fg:x="11301" fg:w="9"/><text x="58.4846%" y="639.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (9 samples, 0.05%)</title><rect x="58.2346%" y="613" width="0.0464%" height="15" fill="rgb(232,211,20)" fg:x="11301" fg:w="9"/><text x="58.4846%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (9 samples, 0.05%)</title><rect x="58.2346%" y="597" width="0.0464%" height="15" fill="rgb(225,203,35)" fg:x="11301" fg:w="9"/><text x="58.4846%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (9 samples, 0.05%)</title><rect x="58.2346%" y="581" width="0.0464%" height="15" fill="rgb(215,211,44)" fg:x="11301" fg:w="9"/><text x="58.4846%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (9 samples, 0.05%)</title><rect x="58.2346%" y="565" width="0.0464%" height="15" fill="rgb(248,213,26)" fg:x="11301" fg:w="9"/><text x="58.4846%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (9 samples, 0.05%)</title><rect x="58.2346%" y="549" width="0.0464%" height="15" fill="rgb(214,23,52)" fg:x="11301" fg:w="9"/><text x="58.4846%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (8 samples, 0.04%)</title><rect x="58.2397%" y="533" width="0.0412%" height="15" fill="rgb(225,173,50)" fg:x="11302" fg:w="8"/><text x="58.4897%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (8 samples, 0.04%)</title><rect x="58.2397%" y="517" width="0.0412%" height="15" fill="rgb(206,150,22)" fg:x="11302" fg:w="8"/><text x="58.4897%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (8 samples, 0.04%)</title><rect x="58.2397%" y="501" width="0.0412%" height="15" fill="rgb(239,64,23)" fg:x="11302" fg:w="8"/><text x="58.4897%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (8 samples, 0.04%)</title><rect x="58.2397%" y="485" width="0.0412%" height="15" fill="rgb(242,50,38)" fg:x="11302" fg:w="8"/><text x="58.4897%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (8 samples, 0.04%)</title><rect x="58.2397%" y="469" width="0.0412%" height="15" fill="rgb(217,91,15)" fg:x="11302" fg:w="8"/><text x="58.4897%" y="479.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (8 samples, 0.04%)</title><rect x="58.2397%" y="453" width="0.0412%" height="15" fill="rgb(230,172,6)" fg:x="11302" fg:w="8"/><text x="58.4897%" y="463.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::insert (3 samples, 0.02%)</title><rect x="58.2964%" y="597" width="0.0155%" height="15" fill="rgb(221,98,26)" fg:x="11313" fg:w="3"/><text x="58.5464%" y="607.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::eject_to_target (3 samples, 0.02%)</title><rect x="58.2964%" y="581" width="0.0155%" height="15" fill="rgb(227,210,45)" fg:x="11313" fg:w="3"/><text x="58.5464%" y="591.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_lru (2 samples, 0.01%)</title><rect x="58.3016%" y="565" width="0.0103%" height="15" fill="rgb(206,8,30)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="58.3016%" y="549" width="0.0103%" height="15" fill="rgb(241,219,17)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="559.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_lru::{{closure}} (2 samples, 0.01%)</title><rect x="58.3016%" y="533" width="0.0103%" height="15" fill="rgb(247,121,29)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="543.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_ptr (2 samples, 0.01%)</title><rect x="58.3016%" y="517" width="0.0103%" height="15" fill="rgb(219,169,49)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="527.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_from_table (2 samples, 0.01%)</title><rect x="58.3016%" y="501" width="0.0103%" height="15" fill="rgb(253,49,49)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="511.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.01%)</title><rect x="58.3016%" y="485" width="0.0103%" height="15" fill="rgb(217,178,3)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="58.3016%" y="469" width="0.0103%" height="15" fill="rgb(234,73,37)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="479.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (2 samples, 0.01%)</title><rect x="58.3016%" y="453" width="0.0103%" height="15" fill="rgb(250,98,22)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="58.3016%" y="437" width="0.0103%" height="15" fill="rgb(220,108,37)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::bucket (2 samples, 0.01%)</title><rect x="58.3016%" y="421" width="0.0103%" height="15" fill="rgb(225,168,10)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="431.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (2 samples, 0.01%)</title><rect x="58.3016%" y="405" width="0.0103%" height="15" fill="rgb(247,215,21)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.01%)</title><rect x="58.3016%" y="389" width="0.0103%" height="15" fill="rgb(253,189,31)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="58.3016%" y="373" width="0.0103%" height="15" fill="rgb(241,54,22)" fg:x="11314" fg:w="2"/><text x="58.5516%" y="383.50"></text></g><g><title>sqlite3FinishCoding (5 samples, 0.03%)</title><rect x="58.3170%" y="405" width="0.0258%" height="15" fill="rgb(211,87,4)" fg:x="11317" fg:w="5"/><text x="58.5670%" y="415.50"></text></g><g><title>sqlite3AutoincrementBegin (5 samples, 0.03%)</title><rect x="58.3170%" y="389" width="0.0258%" height="15" fill="rgb(245,112,24)" fg:x="11317" fg:w="5"/><text x="58.5670%" y="399.50"></text></g><g><title>sqlite3GenerateColumnNames (2 samples, 0.01%)</title><rect x="58.3582%" y="389" width="0.0103%" height="15" fill="rgb(235,190,41)" fg:x="11325" fg:w="2"/><text x="58.6082%" y="399.50"></text></g><g><title>generateColumnTypes (2 samples, 0.01%)</title><rect x="58.3582%" y="373" width="0.0103%" height="15" fill="rgb(214,89,8)" fg:x="11325" fg:w="2"/><text x="58.6082%" y="383.50"></text></g><g><title>sqlite3ResolveExprListNames (6 samples, 0.03%)</title><rect x="58.3737%" y="325" width="0.0309%" height="15" fill="rgb(249,155,35)" fg:x="11328" fg:w="6"/><text x="58.6237%" y="335.50"></text></g><g><title>sqlite3WalkExprNN (6 samples, 0.03%)</title><rect x="58.3737%" y="309" width="0.0309%" height="15" fill="rgb(249,88,26)" fg:x="11328" fg:w="6"/><text x="58.6237%" y="319.50"></text></g><g><title>resolveExprStep (5 samples, 0.03%)</title><rect x="58.3789%" y="293" width="0.0258%" height="15" fill="rgb(232,56,8)" fg:x="11329" fg:w="5"/><text x="58.6289%" y="303.50"></text></g><g><title>lookupName (5 samples, 0.03%)</title><rect x="58.3789%" y="277" width="0.0258%" height="15" fill="rgb(240,95,3)" fg:x="11329" fg:w="5"/><text x="58.6289%" y="287.50"></text></g><g><title>sqlite3ExprColUsed (5 samples, 0.03%)</title><rect x="58.3789%" y="261" width="0.0258%" height="15" fill="rgb(222,44,28)" fg:x="11329" fg:w="5"/><text x="58.6289%" y="271.50"></text></g><g><title>sqlite3ResolveSelectNames (9 samples, 0.05%)</title><rect x="58.3685%" y="373" width="0.0464%" height="15" fill="rgb(234,16,30)" fg:x="11327" fg:w="9"/><text x="58.6185%" y="383.50"></text></g><g><title>sqlite3WalkSelect (9 samples, 0.05%)</title><rect x="58.3685%" y="357" width="0.0464%" height="15" fill="rgb(223,26,17)" fg:x="11327" fg:w="9"/><text x="58.6185%" y="367.50"></text></g><g><title>resolveSelectStep (9 samples, 0.05%)</title><rect x="58.3685%" y="341" width="0.0464%" height="15" fill="rgb(239,187,47)" fg:x="11327" fg:w="9"/><text x="58.6185%" y="351.50"></text></g><g><title>sqlite3ResolveExprNames (2 samples, 0.01%)</title><rect x="58.4046%" y="325" width="0.0103%" height="15" fill="rgb(247,102,50)" fg:x="11334" fg:w="2"/><text x="58.6546%" y="335.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="58.4046%" y="309" width="0.0103%" height="15" fill="rgb(231,216,22)" fg:x="11334" fg:w="2"/><text x="58.6546%" y="319.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="58.4046%" y="293" width="0.0103%" height="15" fill="rgb(216,201,26)" fg:x="11334" fg:w="2"/><text x="58.6546%" y="303.50"></text></g><g><title>resolveExprStep (2 samples, 0.01%)</title><rect x="58.4046%" y="277" width="0.0103%" height="15" fill="rgb(214,186,23)" fg:x="11334" fg:w="2"/><text x="58.6546%" y="287.50"></text></g><g><title>lookupName (2 samples, 0.01%)</title><rect x="58.4046%" y="261" width="0.0103%" height="15" fill="rgb(235,184,4)" fg:x="11334" fg:w="2"/><text x="58.6546%" y="271.50"></text></g><g><title>sqlite3StrICmp (2 samples, 0.01%)</title><rect x="58.4046%" y="245" width="0.0103%" height="15" fill="rgb(244,46,17)" fg:x="11334" fg:w="2"/><text x="58.6546%" y="255.50"></text></g><g><title>sqlite3LocateTableItem (2 samples, 0.01%)</title><rect x="58.4201%" y="325" width="0.0103%" height="15" fill="rgb(248,74,46)" fg:x="11337" fg:w="2"/><text x="58.6701%" y="335.50"></text></g><g><title>sqlite3LocateTable (2 samples, 0.01%)</title><rect x="58.4201%" y="309" width="0.0103%" height="15" fill="rgb(243,79,5)" fg:x="11337" fg:w="2"/><text x="58.6701%" y="319.50"></text></g><g><title>sqlite3SelectExpand (5 samples, 0.03%)</title><rect x="58.4149%" y="373" width="0.0258%" height="15" fill="rgb(213,148,1)" fg:x="11336" fg:w="5"/><text x="58.6649%" y="383.50"></text></g><g><title>sqlite3WalkSelect (5 samples, 0.03%)</title><rect x="58.4149%" y="357" width="0.0258%" height="15" fill="rgb(221,30,0)" fg:x="11336" fg:w="5"/><text x="58.6649%" y="367.50"></text></g><g><title>selectExpander (5 samples, 0.03%)</title><rect x="58.4149%" y="341" width="0.0258%" height="15" fill="rgb(207,85,29)" fg:x="11336" fg:w="5"/><text x="58.6649%" y="351.50"></text></g><g><title>sqlite3SrcListAssignCursors (2 samples, 0.01%)</title><rect x="58.4304%" y="325" width="0.0103%" height="15" fill="rgb(239,31,46)" fg:x="11339" fg:w="2"/><text x="58.6804%" y="335.50"></text></g><g><title>sqlite3SelectPrep (17 samples, 0.09%)</title><rect x="58.3685%" y="389" width="0.0876%" height="15" fill="rgb(219,6,1)" fg:x="11327" fg:w="17"/><text x="58.6185%" y="399.50"></text></g><g><title>sqlite3SelectPrep (3 samples, 0.02%)</title><rect x="58.4407%" y="373" width="0.0155%" height="15" fill="rgb(229,90,29)" fg:x="11341" fg:w="3"/><text x="58.6907%" y="383.50"></text></g><g><title>sqlite3SelectAddTypeInfo (3 samples, 0.02%)</title><rect x="58.4407%" y="357" width="0.0155%" height="15" fill="rgb(242,201,42)" fg:x="11341" fg:w="3"/><text x="58.6907%" y="367.50"></text></g><g><title>sqlite3WalkSelect (3 samples, 0.02%)</title><rect x="58.4407%" y="341" width="0.0155%" height="15" fill="rgb(243,80,54)" fg:x="11341" fg:w="3"/><text x="58.6907%" y="351.50"></text></g><g><title>sqlite3WalkSelectExpr (3 samples, 0.02%)</title><rect x="58.4407%" y="325" width="0.0155%" height="15" fill="rgb(223,166,15)" fg:x="11341" fg:w="3"/><text x="58.6907%" y="335.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (4 samples, 0.02%)</title><rect x="58.4716%" y="373" width="0.0206%" height="15" fill="rgb(238,78,27)" fg:x="11347" fg:w="4"/><text x="58.7216%" y="383.50"></text></g><g><title>codeAllEqualityTerms (2 samples, 0.01%)</title><rect x="58.4819%" y="357" width="0.0103%" height="15" fill="rgb(235,28,43)" fg:x="11349" fg:w="2"/><text x="58.7319%" y="367.50"></text></g><g><title>sqlite3WhereBegin (8 samples, 0.04%)</title><rect x="58.4561%" y="389" width="0.0412%" height="15" fill="rgb(240,210,28)" fg:x="11344" fg:w="8"/><text x="58.7061%" y="399.50"></text></g><g><title>sqlite3Select (31 samples, 0.16%)</title><rect x="58.3428%" y="405" width="0.1597%" height="15" fill="rgb(253,6,46)" fg:x="11322" fg:w="31"/><text x="58.5928%" y="415.50"></text></g><g><title>sqlite3SelectDelete (2 samples, 0.01%)</title><rect x="58.5025%" y="405" width="0.0103%" height="15" fill="rgb(250,159,47)" fg:x="11353" fg:w="2"/><text x="58.7525%" y="415.50"></text></g><g><title>sqlite3SelectDelete (2 samples, 0.01%)</title><rect x="58.5025%" y="389" width="0.0103%" height="15" fill="rgb(216,139,2)" fg:x="11353" fg:w="2"/><text x="58.7525%" y="399.50"></text></g><g><title>clearSelect (2 samples, 0.01%)</title><rect x="58.5025%" y="373" width="0.0103%" height="15" fill="rgb(221,124,44)" fg:x="11353" fg:w="2"/><text x="58.7525%" y="383.50"></text></g><g><title>sqlite3RunParser (45 samples, 0.23%)</title><rect x="58.3119%" y="453" width="0.2319%" height="15" fill="rgb(205,37,22)" fg:x="11316" fg:w="45"/><text x="58.5619%" y="463.50"></text></g><g><title>sqlite3Parser (44 samples, 0.23%)</title><rect x="58.3170%" y="437" width="0.2267%" height="15" fill="rgb(250,55,8)" fg:x="11317" fg:w="44"/><text x="58.5670%" y="447.50"></text></g><g><title>yy_reduce (44 samples, 0.23%)</title><rect x="58.3170%" y="421" width="0.2267%" height="15" fill="rgb(215,83,48)" fg:x="11317" fg:w="44"/><text x="58.5670%" y="431.50"></text></g><g><title>yy_find_reduce_action (5 samples, 0.03%)</title><rect x="58.5180%" y="405" width="0.0258%" height="15" fill="rgb(253,2,32)" fg:x="11356" fg:w="5"/><text x="58.7680%" y="415.50"></text></g><g><title>rusqlite::Connection::prepare (46 samples, 0.24%)</title><rect x="58.3119%" y="581" width="0.2370%" height="15" fill="rgb(236,67,28)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="591.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (46 samples, 0.24%)</title><rect x="58.3119%" y="565" width="0.2370%" height="15" fill="rgb(252,55,15)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="575.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (46 samples, 0.24%)</title><rect x="58.3119%" y="549" width="0.2370%" height="15" fill="rgb(243,173,17)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="559.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (46 samples, 0.24%)</title><rect x="58.3119%" y="533" width="0.2370%" height="15" fill="rgb(215,212,13)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="543.50"></text></g><g><title>sqlite3_prepare_v3 (46 samples, 0.24%)</title><rect x="58.3119%" y="517" width="0.2370%" height="15" fill="rgb(253,176,6)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="527.50"></text></g><g><title>sqlite3LockAndPrepare (46 samples, 0.24%)</title><rect x="58.3119%" y="501" width="0.2370%" height="15" fill="rgb(236,105,26)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="511.50"></text></g><g><title>sqlite3LockAndPrepare (46 samples, 0.24%)</title><rect x="58.3119%" y="485" width="0.2370%" height="15" fill="rgb(239,226,32)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="495.50"></text></g><g><title>sqlite3Prepare (46 samples, 0.24%)</title><rect x="58.3119%" y="469" width="0.2370%" height="15" fill="rgb(236,104,51)" fg:x="11316" fg:w="46"/><text x="58.5619%" y="479.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="58.5489%" y="405" width="0.0103%" height="15" fill="rgb(220,172,33)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="415.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="58.5489%" y="389" width="0.0103%" height="15" fill="rgb(224,182,25)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="399.50"></text></g><g><title>sqlite3BtreeCloseCursor (2 samples, 0.01%)</title><rect x="58.5489%" y="373" width="0.0103%" height="15" fill="rgb(236,184,24)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="383.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="58.5489%" y="357" width="0.0103%" height="15" fill="rgb(241,221,14)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="367.50"></text></g><g><title>btreeReleaseAllCursorPages (2 samples, 0.01%)</title><rect x="58.5489%" y="341" width="0.0103%" height="15" fill="rgb(227,146,5)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="351.50"></text></g><g><title>releasePageNotNull (2 samples, 0.01%)</title><rect x="58.5489%" y="325" width="0.0103%" height="15" fill="rgb(214,15,23)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="335.50"></text></g><g><title>sqlite3PagerUnrefNotNull (2 samples, 0.01%)</title><rect x="58.5489%" y="309" width="0.0103%" height="15" fill="rgb(233,157,31)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="319.50"></text></g><g><title>___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="58.5489%" y="293" width="0.0103%" height="15" fill="rgb(211,27,52)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="303.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.01%)</title><rect x="58.5489%" y="277" width="0.0103%" height="15" fill="rgb(212,223,15)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="287.50"></text></g><g><title>lll_mutex_unlock_optimized (2 samples, 0.01%)</title><rect x="58.5489%" y="261" width="0.0103%" height="15" fill="rgb(254,211,0)" fg:x="11362" fg:w="2"/><text x="58.7989%" y="271.50"></text></g><g><title>closeAllCursors (3 samples, 0.02%)</title><rect x="58.5489%" y="421" width="0.0155%" height="15" fill="rgb(205,43,38)" fg:x="11362" fg:w="3"/><text x="58.7989%" y="431.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (20 samples, 0.10%)</title><rect x="58.5644%" y="405" width="0.1031%" height="15" fill="rgb(242,206,46)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="415.50"></text></g><g><title>pager_unlock (20 samples, 0.10%)</title><rect x="58.5644%" y="389" width="0.1031%" height="15" fill="rgb(220,221,12)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="399.50"></text></g><g><title>sqlite3WalEndReadTransaction (20 samples, 0.10%)</title><rect x="58.5644%" y="373" width="0.1031%" height="15" fill="rgb(217,156,35)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="383.50"></text></g><g><title>walUnlockShared (20 samples, 0.10%)</title><rect x="58.5644%" y="357" width="0.1031%" height="15" fill="rgb(207,181,49)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="367.50"></text></g><g><title>walUnlockShared (20 samples, 0.10%)</title><rect x="58.5644%" y="341" width="0.1031%" height="15" fill="rgb(235,103,47)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="351.50"></text></g><g><title>sqlite3OsShmLock (20 samples, 0.10%)</title><rect x="58.5644%" y="325" width="0.1031%" height="15" fill="rgb(222,63,28)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="335.50"></text></g><g><title>unixShmLock (20 samples, 0.10%)</title><rect x="58.5644%" y="309" width="0.1031%" height="15" fill="rgb(244,137,21)" fg:x="11365" fg:w="20"/><text x="58.8144%" y="319.50"></text></g><g><title>unixShmSystemLock (19 samples, 0.10%)</title><rect x="58.5695%" y="293" width="0.0979%" height="15" fill="rgb(228,35,27)" fg:x="11366" fg:w="19"/><text x="58.8195%" y="303.50"></text></g><g><title>__GI___libc_fcntl64 (19 samples, 0.10%)</title><rect x="58.5695%" y="277" width="0.0979%" height="15" fill="rgb(226,191,41)" fg:x="11366" fg:w="19"/><text x="58.8195%" y="287.50"></text></g><g><title>__fcntl64_nocancel_adjusted (19 samples, 0.10%)</title><rect x="58.5695%" y="261" width="0.0979%" height="15" fill="rgb(210,154,3)" fg:x="11366" fg:w="19"/><text x="58.8195%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (24 samples, 0.12%)</title><rect x="58.5489%" y="565" width="0.1237%" height="15" fill="rgb(216,60,49)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="575.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (24 samples, 0.12%)</title><rect x="58.5489%" y="549" width="0.1237%" height="15" fill="rgb(226,17,20)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="559.50"></text></g><g><title>rusqlite::row::Rows::reset (24 samples, 0.12%)</title><rect x="58.5489%" y="533" width="0.1237%" height="15" fill="rgb(206,115,35)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="543.50"></text></g><g><title>rusqlite::statement::Statement::reset (24 samples, 0.12%)</title><rect x="58.5489%" y="517" width="0.1237%" height="15" fill="rgb(227,88,1)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="527.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (24 samples, 0.12%)</title><rect x="58.5489%" y="501" width="0.1237%" height="15" fill="rgb(230,222,24)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="511.50"></text></g><g><title>sqlite3_reset (24 samples, 0.12%)</title><rect x="58.5489%" y="485" width="0.1237%" height="15" fill="rgb(214,124,32)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="495.50"></text></g><g><title>sqlite3_reset (24 samples, 0.12%)</title><rect x="58.5489%" y="469" width="0.1237%" height="15" fill="rgb(240,41,36)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="479.50"></text></g><g><title>sqlite3VdbeReset (24 samples, 0.12%)</title><rect x="58.5489%" y="453" width="0.1237%" height="15" fill="rgb(221,17,52)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="463.50"></text></g><g><title>sqlite3VdbeHalt (24 samples, 0.12%)</title><rect x="58.5489%" y="437" width="0.1237%" height="15" fill="rgb(252,70,16)" fg:x="11362" fg:w="24"/><text x="58.7989%" y="447.50"></text></g><g><title>vdbeCommit (21 samples, 0.11%)</title><rect x="58.5644%" y="421" width="0.1082%" height="15" fill="rgb(250,177,4)" fg:x="11365" fg:w="21"/><text x="58.8144%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="58.6726%" y="565" width="0.0103%" height="15" fill="rgb(240,188,47)" fg:x="11386" fg:w="2"/><text x="58.9226%" y="575.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (3 samples, 0.02%)</title><rect x="58.7086%" y="421" width="0.0155%" height="15" fill="rgb(215,92,12)" fg:x="11393" fg:w="3"/><text x="58.9586%" y="431.50"></text></g><g><title>pagerBeginReadTransaction (20 samples, 0.10%)</title><rect x="58.7293%" y="357" width="0.1031%" height="15" fill="rgb(242,110,29)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="367.50"></text></g><g><title>sqlite3WalBeginReadTransaction (20 samples, 0.10%)</title><rect x="58.7293%" y="341" width="0.1031%" height="15" fill="rgb(208,211,26)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="351.50"></text></g><g><title>walBeginReadTransaction (20 samples, 0.10%)</title><rect x="58.7293%" y="325" width="0.1031%" height="15" fill="rgb(244,147,6)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="335.50"></text></g><g><title>walTryBeginRead (20 samples, 0.10%)</title><rect x="58.7293%" y="309" width="0.1031%" height="15" fill="rgb(211,130,42)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="319.50"></text></g><g><title>walLockShared (20 samples, 0.10%)</title><rect x="58.7293%" y="293" width="0.1031%" height="15" fill="rgb(220,63,1)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="303.50"></text></g><g><title>walLockShared (20 samples, 0.10%)</title><rect x="58.7293%" y="277" width="0.1031%" height="15" fill="rgb(241,212,30)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="287.50"></text></g><g><title>sqlite3OsShmLock (20 samples, 0.10%)</title><rect x="58.7293%" y="261" width="0.1031%" height="15" fill="rgb(233,153,17)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="271.50"></text></g><g><title>unixShmLock (20 samples, 0.10%)</title><rect x="58.7293%" y="245" width="0.1031%" height="15" fill="rgb(236,3,10)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="255.50"></text></g><g><title>unixShmSystemLock (20 samples, 0.10%)</title><rect x="58.7293%" y="229" width="0.1031%" height="15" fill="rgb(232,41,21)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="239.50"></text></g><g><title>__GI___libc_fcntl64 (20 samples, 0.10%)</title><rect x="58.7293%" y="213" width="0.1031%" height="15" fill="rgb(206,63,51)" fg:x="11397" fg:w="20"/><text x="58.9793%" y="223.50"></text></g><g><title>__fcntl64_nocancel_adjusted (18 samples, 0.09%)</title><rect x="58.7396%" y="197" width="0.0928%" height="15" fill="rgb(250,214,3)" fg:x="11399" fg:w="18"/><text x="58.9896%" y="207.50"></text></g><g><title>sqlite3BtreeBeginTrans (23 samples, 0.12%)</title><rect x="58.7241%" y="421" width="0.1185%" height="15" fill="rgb(254,89,27)" fg:x="11396" fg:w="23"/><text x="58.9741%" y="431.50"></text></g><g><title>btreeBeginTrans (23 samples, 0.12%)</title><rect x="58.7241%" y="405" width="0.1185%" height="15" fill="rgb(249,41,14)" fg:x="11396" fg:w="23"/><text x="58.9741%" y="415.50"></text></g><g><title>lockBtree (22 samples, 0.11%)</title><rect x="58.7293%" y="389" width="0.1134%" height="15" fill="rgb(221,196,51)" fg:x="11397" fg:w="22"/><text x="58.9793%" y="399.50"></text></g><g><title>sqlite3PagerSharedLock (22 samples, 0.11%)</title><rect x="58.7293%" y="373" width="0.1134%" height="15" fill="rgb(214,116,26)" fg:x="11397" fg:w="22"/><text x="58.9793%" y="383.50"></text></g><g><title>pagerPagecount (2 samples, 0.01%)</title><rect x="58.8323%" y="357" width="0.0103%" height="15" fill="rgb(236,67,7)" fg:x="11417" fg:w="2"/><text x="59.0823%" y="367.50"></text></g><g><title>sqlite3WalDbsize (2 samples, 0.01%)</title><rect x="58.8323%" y="341" width="0.0103%" height="15" fill="rgb(253,179,32)" fg:x="11417" fg:w="2"/><text x="59.0823%" y="351.50"></text></g><g><title>sqlite3BtreeIndexMoveto (7 samples, 0.04%)</title><rect x="58.8426%" y="421" width="0.0361%" height="15" fill="rgb(218,33,15)" fg:x="11419" fg:w="7"/><text x="59.0926%" y="431.50"></text></g><g><title>sqlite3MemRealloc (3 samples, 0.02%)</title><rect x="59.0178%" y="325" width="0.0155%" height="15" fill="rgb(217,202,41)" fg:x="11453" fg:w="3"/><text x="59.2678%" y="335.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="59.0178%" y="309" width="0.0155%" height="15" fill="rgb(234,133,5)" fg:x="11453" fg:w="3"/><text x="59.2678%" y="319.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="59.0178%" y="293" width="0.0155%" height="15" fill="rgb(240,47,40)" fg:x="11453" fg:w="3"/><text x="59.2678%" y="303.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="59.0230%" y="277" width="0.0103%" height="15" fill="rgb(234,166,26)" fg:x="11454" fg:w="2"/><text x="59.2730%" y="287.50"></text></g><g><title>enlargeAndAppend (4 samples, 0.02%)</title><rect x="59.0178%" y="373" width="0.0206%" height="15" fill="rgb(244,125,51)" fg:x="11453" fg:w="4"/><text x="59.2678%" y="383.50"></text></g><g><title>sqlite3StrAccumEnlarge (4 samples, 0.02%)</title><rect x="59.0178%" y="357" width="0.0206%" height="15" fill="rgb(229,171,11)" fg:x="11453" fg:w="4"/><text x="59.2678%" y="367.50"></text></g><g><title>sqlite3Realloc (4 samples, 0.02%)</title><rect x="59.0178%" y="341" width="0.0206%" height="15" fill="rgb(224,38,45)" fg:x="11453" fg:w="4"/><text x="59.2678%" y="351.50"></text></g><g><title>sqlite3VdbeExpandSql (32 samples, 0.16%)</title><rect x="58.8787%" y="421" width="0.1649%" height="15" fill="rgb(237,27,7)" fg:x="11426" fg:w="32"/><text x="59.1287%" y="431.50"></text></g><g><title>sqlite3_str_appendf (27 samples, 0.14%)</title><rect x="58.9045%" y="405" width="0.1391%" height="15" fill="rgb(216,52,7)" fg:x="11431" fg:w="27"/><text x="59.1545%" y="415.50"></text></g><g><title>sqlite3_str_vappendf (26 samples, 0.13%)</title><rect x="58.9096%" y="389" width="0.1340%" height="15" fill="rgb(243,11,11)" fg:x="11432" fg:w="26"/><text x="59.1596%" y="399.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (71 samples, 0.37%)</title><rect x="58.6829%" y="565" width="0.3659%" height="15" fill="rgb(253,167,20)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="575.50"></text></g><g><title>rusqlite::row::Rows::next (71 samples, 0.37%)</title><rect x="58.6829%" y="549" width="0.3659%" height="15" fill="rgb(215,207,5)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="559.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (71 samples, 0.37%)</title><rect x="58.6829%" y="533" width="0.3659%" height="15" fill="rgb(252,127,31)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="543.50"></text></g><g><title>rusqlite::statement::Statement::step (71 samples, 0.37%)</title><rect x="58.6829%" y="517" width="0.3659%" height="15" fill="rgb(209,106,27)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="527.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (71 samples, 0.37%)</title><rect x="58.6829%" y="501" width="0.3659%" height="15" fill="rgb(214,220,18)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="511.50"></text></g><g><title>sqlite3_step (71 samples, 0.37%)</title><rect x="58.6829%" y="485" width="0.3659%" height="15" fill="rgb(237,89,12)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="495.50"></text></g><g><title>sqlite3_step (71 samples, 0.37%)</title><rect x="58.6829%" y="469" width="0.3659%" height="15" fill="rgb(209,167,36)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="479.50"></text></g><g><title>sqlite3Step (71 samples, 0.37%)</title><rect x="58.6829%" y="453" width="0.3659%" height="15" fill="rgb(243,45,22)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="463.50"></text></g><g><title>sqlite3VdbeExec (71 samples, 0.37%)</title><rect x="58.6829%" y="437" width="0.3659%" height="15" fill="rgb(239,2,46)" fg:x="11388" fg:w="71"/><text x="58.9329%" y="447.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (148 samples, 0.76%)</title><rect x="58.2913%" y="613" width="0.7627%" height="15" fill="rgb(241,101,0)" fg:x="11312" fg:w="148"/><text x="58.5413%" y="623.50"></text></g><g><title>rusqlite::Connection::query_row (144 samples, 0.74%)</title><rect x="58.3119%" y="597" width="0.7420%" height="15" fill="rgb(244,34,31)" fg:x="11316" fg:w="144"/><text x="58.5619%" y="607.50"></text></g><g><title>rusqlite::statement::Statement::query_row (98 samples, 0.50%)</title><rect x="58.5489%" y="581" width="0.5050%" height="15" fill="rgb(248,23,22)" fg:x="11362" fg:w="98"/><text x="58.7989%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256 (10 samples, 0.05%)</title><rect x="59.0539%" y="613" width="0.0515%" height="15" fill="rgb(218,27,48)" fg:x="11460" fg:w="10"/><text x="59.3039%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (10 samples, 0.05%)</title><rect x="59.0539%" y="597" width="0.0515%" height="15" fill="rgb(232,78,1)" fg:x="11460" fg:w="10"/><text x="59.3039%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (9 samples, 0.05%)</title><rect x="59.0591%" y="581" width="0.0464%" height="15" fill="rgb(233,169,12)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="591.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (9 samples, 0.05%)</title><rect x="59.0591%" y="565" width="0.0464%" height="15" fill="rgb(225,222,54)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="575.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (9 samples, 0.05%)</title><rect x="59.0591%" y="549" width="0.0464%" height="15" fill="rgb(245,126,29)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (9 samples, 0.05%)</title><rect x="59.0591%" y="533" width="0.0464%" height="15" fill="rgb(241,63,48)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (9 samples, 0.05%)</title><rect x="59.0591%" y="517" width="0.0464%" height="15" fill="rgb(235,126,38)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (9 samples, 0.05%)</title><rect x="59.0591%" y="501" width="0.0464%" height="15" fill="rgb(232,96,49)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (9 samples, 0.05%)</title><rect x="59.0591%" y="485" width="0.0464%" height="15" fill="rgb(211,146,40)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.05%)</title><rect x="59.0591%" y="469" width="0.0464%" height="15" fill="rgb(247,93,44)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="479.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.05%)</title><rect x="59.0591%" y="453" width="0.0464%" height="15" fill="rgb(251,41,49)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="463.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="59.0591%" y="437" width="0.0464%" height="15" fill="rgb(218,155,12)" fg:x="11461" fg:w="9"/><text x="59.3091%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="59.1106%" y="597" width="0.0103%" height="15" fill="rgb(221,161,30)" fg:x="11471" fg:w="2"/><text x="59.3606%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="59.1106%" y="581" width="0.0103%" height="15" fill="rgb(221,179,11)" fg:x="11471" fg:w="2"/><text x="59.3606%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="59.1106%" y="565" width="0.0103%" height="15" fill="rgb(224,170,48)" fg:x="11471" fg:w="2"/><text x="59.3606%" y="575.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="59.1209%" y="421" width="0.0206%" height="15" fill="rgb(223,117,5)" fg:x="11473" fg:w="4"/><text x="59.3709%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="59.1209%" y="517" width="0.0258%" height="15" fill="rgb(209,52,20)" fg:x="11473" fg:w="5"/><text x="59.3709%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="59.1209%" y="501" width="0.0258%" height="15" fill="rgb(209,19,41)" fg:x="11473" fg:w="5"/><text x="59.3709%" y="511.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="59.1209%" y="485" width="0.0258%" height="15" fill="rgb(210,177,12)" fg:x="11473" fg:w="5"/><text x="59.3709%" y="495.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="59.1209%" y="469" width="0.0258%" height="15" fill="rgb(211,159,37)" fg:x="11473" fg:w="5"/><text x="59.3709%" y="479.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.03%)</title><rect x="59.1209%" y="453" width="0.0258%" height="15" fill="rgb(209,20,2)" fg:x="11473" fg:w="5"/><text x="59.3709%" y="463.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="59.1209%" y="437" width="0.0258%" height="15" fill="rgb(244,3,46)" fg:x="11473" fg:w="5"/><text x="59.3709%" y="447.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_compact (6 samples, 0.03%)</title><rect x="59.1209%" y="597" width="0.0309%" height="15" fill="rgb(220,94,38)" fg:x="11473" fg:w="6"/><text x="59.3709%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.03%)</title><rect x="59.1209%" y="581" width="0.0309%" height="15" fill="rgb(253,14,31)" fg:x="11473" fg:w="6"/><text x="59.3709%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.03%)</title><rect x="59.1209%" y="565" width="0.0309%" height="15" fill="rgb(234,176,13)" fg:x="11473" fg:w="6"/><text x="59.3709%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.03%)</title><rect x="59.1209%" y="549" width="0.0309%" height="15" fill="rgb(218,62,25)" fg:x="11473" fg:w="6"/><text x="59.3709%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="59.1209%" y="533" width="0.0309%" height="15" fill="rgb(216,124,40)" fg:x="11473" fg:w="6"/><text x="59.3709%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (181 samples, 0.93%)</title><rect x="58.2346%" y="661" width="0.9327%" height="15" fill="rgb(228,170,12)" fg:x="11301" fg:w="181"/><text x="58.4846%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (181 samples, 0.93%)</title><rect x="58.2346%" y="645" width="0.9327%" height="15" fill="rgb(231,226,5)" fg:x="11301" fg:w="181"/><text x="58.4846%" y="655.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (171 samples, 0.88%)</title><rect x="58.2861%" y="629" width="0.8812%" height="15" fill="rgb(237,122,22)" fg:x="11311" fg:w="171"/><text x="58.5361%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (11 samples, 0.06%)</title><rect x="59.1106%" y="613" width="0.0567%" height="15" fill="rgb(209,185,25)" fg:x="11471" fg:w="11"/><text x="59.3606%" y="623.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (2 samples, 0.01%)</title><rect x="59.1570%" y="597" width="0.0103%" height="15" fill="rgb(228,200,32)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="607.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (2 samples, 0.01%)</title><rect x="59.1570%" y="581" width="0.0103%" height="15" fill="rgb(217,140,10)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="59.1570%" y="565" width="0.0103%" height="15" fill="rgb(253,17,24)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="59.1570%" y="549" width="0.0103%" height="15" fill="rgb(212,61,6)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="559.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="59.1570%" y="533" width="0.0103%" height="15" fill="rgb(205,14,25)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="543.50"></text></g><g><title>rlp::rlpin::Rlp::at (2 samples, 0.01%)</title><rect x="59.1570%" y="517" width="0.0103%" height="15" fill="rgb(232,69,41)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="527.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="59.1570%" y="501" width="0.0103%" height="15" fill="rgb(241,106,47)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="59.1570%" y="485" width="0.0103%" height="15" fill="rgb(210,213,53)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="59.1570%" y="469" width="0.0103%" height="15" fill="rgb(253,175,27)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="479.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="59.1570%" y="453" width="0.0103%" height="15" fill="rgb(211,171,24)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="463.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="59.1570%" y="437" width="0.0103%" height="15" fill="rgb(229,80,7)" fg:x="11480" fg:w="2"/><text x="59.4070%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="59.1724%" y="581" width="0.0103%" height="15" fill="rgb(212,46,39)" fg:x="11483" fg:w="2"/><text x="59.4224%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="59.1724%" y="565" width="0.0103%" height="15" fill="rgb(240,80,45)" fg:x="11483" fg:w="2"/><text x="59.4224%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (2 samples, 0.01%)</title><rect x="59.1724%" y="549" width="0.0103%" height="15" fill="rgb(253,177,40)" fg:x="11483" fg:w="2"/><text x="59.4224%" y="559.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="59.1724%" y="629" width="0.0155%" height="15" fill="rgb(249,200,15)" fg:x="11483" fg:w="3"/><text x="59.4224%" y="639.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_entry (3 samples, 0.02%)</title><rect x="59.1724%" y="613" width="0.0155%" height="15" fill="rgb(217,78,26)" fg:x="11483" fg:w="3"/><text x="59.4224%" y="623.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::get_mut_from_table (3 samples, 0.02%)</title><rect x="59.1724%" y="597" width="0.0155%" height="15" fill="rgb(254,151,32)" fg:x="11483" fg:w="3"/><text x="59.4224%" y="607.50"></text></g><g><title>sqlite3FinishCoding (2 samples, 0.01%)</title><rect x="59.2343%" y="437" width="0.0103%" height="15" fill="rgb(226,165,27)" fg:x="11495" fg:w="2"/><text x="59.4843%" y="447.50"></text></g><g><title>sqlite3VdbeMakeReady (2 samples, 0.01%)</title><rect x="59.2343%" y="421" width="0.0103%" height="15" fill="rgb(250,206,4)" fg:x="11495" fg:w="2"/><text x="59.4843%" y="431.50"></text></g><g><title>generateColumnTypes (2 samples, 0.01%)</title><rect x="59.2446%" y="405" width="0.0103%" height="15" fill="rgb(231,229,27)" fg:x="11497" fg:w="2"/><text x="59.4946%" y="415.50"></text></g><g><title>sqlite3VdbeSetColName (2 samples, 0.01%)</title><rect x="59.2446%" y="389" width="0.0103%" height="15" fill="rgb(239,217,8)" fg:x="11497" fg:w="2"/><text x="59.4946%" y="399.50"></text></g><g><title>sqlite3VdbeSetColName (2 samples, 0.01%)</title><rect x="59.2446%" y="373" width="0.0103%" height="15" fill="rgb(225,204,27)" fg:x="11497" fg:w="2"/><text x="59.4946%" y="383.50"></text></g><g><title>sqlite3VdbeMemSetStr (2 samples, 0.01%)</title><rect x="59.2446%" y="357" width="0.0103%" height="15" fill="rgb(230,56,32)" fg:x="11497" fg:w="2"/><text x="59.4946%" y="367.50"></text></g><g><title>sqlite3GenerateColumnNames (3 samples, 0.02%)</title><rect x="59.2446%" y="421" width="0.0155%" height="15" fill="rgb(222,56,27)" fg:x="11497" fg:w="3"/><text x="59.4946%" y="431.50"></text></g><g><title>sqlite3ResolveExprListNames (2 samples, 0.01%)</title><rect x="59.2652%" y="357" width="0.0103%" height="15" fill="rgb(253,108,27)" fg:x="11501" fg:w="2"/><text x="59.5152%" y="367.50"></text></g><g><title>sqlite3ResolveSelectNames (5 samples, 0.03%)</title><rect x="59.2652%" y="405" width="0.0258%" height="15" fill="rgb(212,87,36)" fg:x="11501" fg:w="5"/><text x="59.5152%" y="415.50"></text></g><g><title>sqlite3WalkSelect (5 samples, 0.03%)</title><rect x="59.2652%" y="389" width="0.0258%" height="15" fill="rgb(247,82,36)" fg:x="11501" fg:w="5"/><text x="59.5152%" y="399.50"></text></g><g><title>resolveSelectStep (5 samples, 0.03%)</title><rect x="59.2652%" y="373" width="0.0258%" height="15" fill="rgb(222,143,9)" fg:x="11501" fg:w="5"/><text x="59.5152%" y="383.50"></text></g><g><title>sqlite3ResolveExprNames (3 samples, 0.02%)</title><rect x="59.2755%" y="357" width="0.0155%" height="15" fill="rgb(238,162,48)" fg:x="11503" fg:w="3"/><text x="59.5255%" y="367.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="59.2806%" y="341" width="0.0103%" height="15" fill="rgb(221,59,43)" fg:x="11504" fg:w="2"/><text x="59.5306%" y="351.50"></text></g><g><title>resolveExprStep (2 samples, 0.01%)</title><rect x="59.2806%" y="325" width="0.0103%" height="15" fill="rgb(205,166,41)" fg:x="11504" fg:w="2"/><text x="59.5306%" y="335.50"></text></g><g><title>selectExpander (2 samples, 0.01%)</title><rect x="59.2909%" y="373" width="0.0103%" height="15" fill="rgb(241,186,40)" fg:x="11506" fg:w="2"/><text x="59.5409%" y="383.50"></text></g><g><title>sqlite3LocateTableItem (2 samples, 0.01%)</title><rect x="59.2909%" y="357" width="0.0103%" height="15" fill="rgb(216,119,35)" fg:x="11506" fg:w="2"/><text x="59.5409%" y="367.50"></text></g><g><title>sqlite3SelectPrep (10 samples, 0.05%)</title><rect x="59.2600%" y="421" width="0.0515%" height="15" fill="rgb(208,68,38)" fg:x="11500" fg:w="10"/><text x="59.5100%" y="431.50"></text></g><g><title>sqlite3SelectExpand (4 samples, 0.02%)</title><rect x="59.2909%" y="405" width="0.0206%" height="15" fill="rgb(217,113,1)" fg:x="11506" fg:w="4"/><text x="59.5409%" y="415.50"></text></g><g><title>sqlite3WalkSelect (4 samples, 0.02%)</title><rect x="59.2909%" y="389" width="0.0206%" height="15" fill="rgb(242,153,3)" fg:x="11506" fg:w="4"/><text x="59.5409%" y="399.50"></text></g><g><title>sqlite3WhereBegin (7 samples, 0.04%)</title><rect x="59.3116%" y="421" width="0.0361%" height="15" fill="rgb(229,76,35)" fg:x="11510" fg:w="7"/><text x="59.5616%" y="431.50"></text></g><g><title>whereShortCut (4 samples, 0.02%)</title><rect x="59.3270%" y="405" width="0.0206%" height="15" fill="rgb(229,125,34)" fg:x="11513" fg:w="4"/><text x="59.5770%" y="415.50"></text></g><g><title>sqlite3Select (22 samples, 0.11%)</title><rect x="59.2446%" y="437" width="0.1134%" height="15" fill="rgb(238,179,36)" fg:x="11497" fg:w="22"/><text x="59.4946%" y="447.50"></text></g><g><title>sqlite3WhereEnd (2 samples, 0.01%)</title><rect x="59.3476%" y="421" width="0.0103%" height="15" fill="rgb(244,183,19)" fg:x="11517" fg:w="2"/><text x="59.5976%" y="431.50"></text></g><g><title>rusqlite::Connection::prepare (36 samples, 0.19%)</title><rect x="59.1982%" y="613" width="0.1855%" height="15" fill="rgb(216,85,49)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="623.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (36 samples, 0.19%)</title><rect x="59.1982%" y="597" width="0.1855%" height="15" fill="rgb(208,161,47)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="607.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (36 samples, 0.19%)</title><rect x="59.1982%" y="581" width="0.1855%" height="15" fill="rgb(233,210,18)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="591.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (36 samples, 0.19%)</title><rect x="59.1982%" y="565" width="0.1855%" height="15" fill="rgb(205,104,42)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="575.50"></text></g><g><title>sqlite3_prepare_v3 (36 samples, 0.19%)</title><rect x="59.1982%" y="549" width="0.1855%" height="15" fill="rgb(248,90,43)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="559.50"></text></g><g><title>sqlite3LockAndPrepare (36 samples, 0.19%)</title><rect x="59.1982%" y="533" width="0.1855%" height="15" fill="rgb(206,198,11)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="543.50"></text></g><g><title>sqlite3LockAndPrepare (36 samples, 0.19%)</title><rect x="59.1982%" y="517" width="0.1855%" height="15" fill="rgb(239,165,27)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="527.50"></text></g><g><title>sqlite3Prepare (36 samples, 0.19%)</title><rect x="59.1982%" y="501" width="0.1855%" height="15" fill="rgb(246,44,32)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="511.50"></text></g><g><title>sqlite3RunParser (36 samples, 0.19%)</title><rect x="59.1982%" y="485" width="0.1855%" height="15" fill="rgb(252,65,42)" fg:x="11488" fg:w="36"/><text x="59.4482%" y="495.50"></text></g><g><title>sqlite3Parser (30 samples, 0.15%)</title><rect x="59.2291%" y="469" width="0.1546%" height="15" fill="rgb(246,197,18)" fg:x="11494" fg:w="30"/><text x="59.4791%" y="479.50"></text></g><g><title>yy_reduce (30 samples, 0.15%)</title><rect x="59.2291%" y="453" width="0.1546%" height="15" fill="rgb(216,192,4)" fg:x="11494" fg:w="30"/><text x="59.4791%" y="463.50"></text></g><g><title>yy_find_reduce_action (3 samples, 0.02%)</title><rect x="59.3682%" y="437" width="0.0155%" height="15" fill="rgb(208,117,10)" fg:x="11521" fg:w="3"/><text x="59.6182%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (14 samples, 0.07%)</title><rect x="59.3837%" y="597" width="0.0721%" height="15" fill="rgb(240,61,47)" fg:x="11524" fg:w="14"/><text x="59.6337%" y="607.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (14 samples, 0.07%)</title><rect x="59.3837%" y="581" width="0.0721%" height="15" fill="rgb(228,178,21)" fg:x="11524" fg:w="14"/><text x="59.6337%" y="591.50"></text></g><g><title>rusqlite::row::Rows::reset (14 samples, 0.07%)</title><rect x="59.3837%" y="565" width="0.0721%" height="15" fill="rgb(219,96,54)" fg:x="11524" fg:w="14"/><text x="59.6337%" y="575.50"></text></g><g><title>rusqlite::statement::Statement::reset (13 samples, 0.07%)</title><rect x="59.3888%" y="549" width="0.0670%" height="15" fill="rgb(250,177,24)" fg:x="11525" fg:w="13"/><text x="59.6388%" y="559.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (13 samples, 0.07%)</title><rect x="59.3888%" y="533" width="0.0670%" height="15" fill="rgb(242,154,46)" fg:x="11525" fg:w="13"/><text x="59.6388%" y="543.50"></text></g><g><title>sqlite3_reset (13 samples, 0.07%)</title><rect x="59.3888%" y="517" width="0.0670%" height="15" fill="rgb(226,176,29)" fg:x="11525" fg:w="13"/><text x="59.6388%" y="527.50"></text></g><g><title>sqlite3_reset (13 samples, 0.07%)</title><rect x="59.3888%" y="501" width="0.0670%" height="15" fill="rgb(226,29,2)" fg:x="11525" fg:w="13"/><text x="59.6388%" y="511.50"></text></g><g><title>sqlite3VdbeReset (13 samples, 0.07%)</title><rect x="59.3888%" y="485" width="0.0670%" height="15" fill="rgb(237,104,14)" fg:x="11525" fg:w="13"/><text x="59.6388%" y="495.50"></text></g><g><title>sqlite3VdbeHalt (13 samples, 0.07%)</title><rect x="59.3888%" y="469" width="0.0670%" height="15" fill="rgb(245,207,31)" fg:x="11525" fg:w="13"/><text x="59.6388%" y="479.50"></text></g><g><title>vdbeCommit (12 samples, 0.06%)</title><rect x="59.3940%" y="453" width="0.0618%" height="15" fill="rgb(229,211,45)" fg:x="11526" fg:w="12"/><text x="59.6440%" y="463.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (10 samples, 0.05%)</title><rect x="59.4043%" y="437" width="0.0515%" height="15" fill="rgb(229,113,15)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="447.50"></text></g><g><title>pager_unlock (10 samples, 0.05%)</title><rect x="59.4043%" y="421" width="0.0515%" height="15" fill="rgb(237,147,15)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="431.50"></text></g><g><title>sqlite3WalEndReadTransaction (10 samples, 0.05%)</title><rect x="59.4043%" y="405" width="0.0515%" height="15" fill="rgb(244,120,12)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="415.50"></text></g><g><title>walUnlockShared (10 samples, 0.05%)</title><rect x="59.4043%" y="389" width="0.0515%" height="15" fill="rgb(205,120,12)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="399.50"></text></g><g><title>walUnlockShared (10 samples, 0.05%)</title><rect x="59.4043%" y="373" width="0.0515%" height="15" fill="rgb(231,26,45)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="383.50"></text></g><g><title>sqlite3OsShmLock (10 samples, 0.05%)</title><rect x="59.4043%" y="357" width="0.0515%" height="15" fill="rgb(246,98,1)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="367.50"></text></g><g><title>unixShmLock (10 samples, 0.05%)</title><rect x="59.4043%" y="341" width="0.0515%" height="15" fill="rgb(207,68,45)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="351.50"></text></g><g><title>unixShmSystemLock (10 samples, 0.05%)</title><rect x="59.4043%" y="325" width="0.0515%" height="15" fill="rgb(231,27,38)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="335.50"></text></g><g><title>__GI___libc_fcntl64 (10 samples, 0.05%)</title><rect x="59.4043%" y="309" width="0.0515%" height="15" fill="rgb(214,223,3)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="319.50"></text></g><g><title>__fcntl64_nocancel_adjusted (10 samples, 0.05%)</title><rect x="59.4043%" y="293" width="0.0515%" height="15" fill="rgb(228,195,46)" fg:x="11528" fg:w="10"/><text x="59.6543%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="59.4558%" y="597" width="0.0155%" height="15" fill="rgb(231,100,42)" fg:x="11538" fg:w="3"/><text x="59.7058%" y="607.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get::{{closure}} (3 samples, 0.02%)</title><rect x="59.4558%" y="581" width="0.0155%" height="15" fill="rgb(236,53,4)" fg:x="11538" fg:w="3"/><text x="59.7058%" y="591.50"></text></g><g><title>rusqlite::row::Row::get (3 samples, 0.02%)</title><rect x="59.4558%" y="565" width="0.0155%" height="15" fill="rgb(230,152,12)" fg:x="11538" fg:w="3"/><text x="59.7058%" y="575.50"></text></g><g><title>rusqlite::statement::Statement::value_ref (3 samples, 0.02%)</title><rect x="59.4558%" y="549" width="0.0155%" height="15" fill="rgb(226,101,19)" fg:x="11538" fg:w="3"/><text x="59.7058%" y="559.50"></text></g><g><title>sqlite3_column_blob (2 samples, 0.01%)</title><rect x="59.4610%" y="533" width="0.0103%" height="15" fill="rgb(250,149,32)" fg:x="11539" fg:w="2"/><text x="59.7110%" y="543.50"></text></g><g><title>sqlite3BtreeBeginTrans (16 samples, 0.08%)</title><rect x="59.4868%" y="453" width="0.0824%" height="15" fill="rgb(232,178,12)" fg:x="11544" fg:w="16"/><text x="59.7368%" y="463.50"></text></g><g><title>btreeBeginTrans (16 samples, 0.08%)</title><rect x="59.4868%" y="437" width="0.0824%" height="15" fill="rgb(246,151,17)" fg:x="11544" fg:w="16"/><text x="59.7368%" y="447.50"></text></g><g><title>lockBtree (15 samples, 0.08%)</title><rect x="59.4919%" y="421" width="0.0773%" height="15" fill="rgb(252,17,51)" fg:x="11545" fg:w="15"/><text x="59.7419%" y="431.50"></text></g><g><title>sqlite3PagerSharedLock (15 samples, 0.08%)</title><rect x="59.4919%" y="405" width="0.0773%" height="15" fill="rgb(250,207,23)" fg:x="11545" fg:w="15"/><text x="59.7419%" y="415.50"></text></g><g><title>pagerBeginReadTransaction (15 samples, 0.08%)</title><rect x="59.4919%" y="389" width="0.0773%" height="15" fill="rgb(205,27,5)" fg:x="11545" fg:w="15"/><text x="59.7419%" y="399.50"></text></g><g><title>sqlite3WalBeginReadTransaction (15 samples, 0.08%)</title><rect x="59.4919%" y="373" width="0.0773%" height="15" fill="rgb(224,32,19)" fg:x="11545" fg:w="15"/><text x="59.7419%" y="383.50"></text></g><g><title>walBeginReadTransaction (15 samples, 0.08%)</title><rect x="59.4919%" y="357" width="0.0773%" height="15" fill="rgb(247,214,40)" fg:x="11545" fg:w="15"/><text x="59.7419%" y="367.50"></text></g><g><title>walTryBeginRead (15 samples, 0.08%)</title><rect x="59.4919%" y="341" width="0.0773%" height="15" fill="rgb(239,199,17)" fg:x="11545" fg:w="15"/><text x="59.7419%" y="351.50"></text></g><g><title>walLockShared (12 samples, 0.06%)</title><rect x="59.5074%" y="325" width="0.0618%" height="15" fill="rgb(251,159,9)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="335.50"></text></g><g><title>walLockShared (12 samples, 0.06%)</title><rect x="59.5074%" y="309" width="0.0618%" height="15" fill="rgb(225,78,32)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="319.50"></text></g><g><title>sqlite3OsShmLock (12 samples, 0.06%)</title><rect x="59.5074%" y="293" width="0.0618%" height="15" fill="rgb(206,97,47)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="303.50"></text></g><g><title>unixShmLock (12 samples, 0.06%)</title><rect x="59.5074%" y="277" width="0.0618%" height="15" fill="rgb(227,107,4)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="287.50"></text></g><g><title>unixShmSystemLock (12 samples, 0.06%)</title><rect x="59.5074%" y="261" width="0.0618%" height="15" fill="rgb(241,146,50)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="271.50"></text></g><g><title>__GI___libc_fcntl64 (12 samples, 0.06%)</title><rect x="59.5074%" y="245" width="0.0618%" height="15" fill="rgb(232,92,30)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="255.50"></text></g><g><title>__fcntl64_nocancel_adjusted (12 samples, 0.06%)</title><rect x="59.5074%" y="229" width="0.0618%" height="15" fill="rgb(222,0,40)" fg:x="11548" fg:w="12"/><text x="59.7574%" y="239.50"></text></g><g><title>sqlite3BtreeIndexMoveto (10 samples, 0.05%)</title><rect x="59.5692%" y="453" width="0.0515%" height="15" fill="rgb(219,54,33)" fg:x="11560" fg:w="10"/><text x="59.8192%" y="463.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (107 samples, 0.55%)</title><rect x="59.1673%" y="645" width="0.5514%" height="15" fill="rgb(226,209,28)" fg:x="11482" fg:w="107"/><text x="59.4173%" y="655.50"></text></g><g><title>rusqlite::Connection::query_row (102 samples, 0.53%)</title><rect x="59.1930%" y="629" width="0.5256%" height="15" fill="rgb(254,205,35)" fg:x="11487" fg:w="102"/><text x="59.4430%" y="639.50"></text></g><g><title>rusqlite::statement::Statement::query_row (65 samples, 0.33%)</title><rect x="59.3837%" y="613" width="0.3349%" height="15" fill="rgb(230,159,3)" fg:x="11524" fg:w="65"/><text x="59.6337%" y="623.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (48 samples, 0.25%)</title><rect x="59.4713%" y="597" width="0.2473%" height="15" fill="rgb(232,190,24)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="607.50"></text></g><g><title>rusqlite::row::Rows::next (48 samples, 0.25%)</title><rect x="59.4713%" y="581" width="0.2473%" height="15" fill="rgb(217,227,44)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="591.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (48 samples, 0.25%)</title><rect x="59.4713%" y="565" width="0.2473%" height="15" fill="rgb(236,211,1)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="575.50"></text></g><g><title>rusqlite::statement::Statement::step (48 samples, 0.25%)</title><rect x="59.4713%" y="549" width="0.2473%" height="15" fill="rgb(250,127,46)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="559.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (48 samples, 0.25%)</title><rect x="59.4713%" y="533" width="0.2473%" height="15" fill="rgb(229,213,6)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="543.50"></text></g><g><title>sqlite3_step (48 samples, 0.25%)</title><rect x="59.4713%" y="517" width="0.2473%" height="15" fill="rgb(237,15,36)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="527.50"></text></g><g><title>sqlite3_step (48 samples, 0.25%)</title><rect x="59.4713%" y="501" width="0.2473%" height="15" fill="rgb(213,131,41)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="511.50"></text></g><g><title>sqlite3Step (48 samples, 0.25%)</title><rect x="59.4713%" y="485" width="0.2473%" height="15" fill="rgb(225,82,44)" fg:x="11541" fg:w="48"/><text x="59.7213%" y="495.50"></text></g><g><title>sqlite3VdbeExec (47 samples, 0.24%)</title><rect x="59.4765%" y="469" width="0.2422%" height="15" fill="rgb(249,42,11)" fg:x="11542" fg:w="47"/><text x="59.7265%" y="479.50"></text></g><g><title>sqlite3VdbeExpandSql (19 samples, 0.10%)</title><rect x="59.6207%" y="453" width="0.0979%" height="15" fill="rgb(253,11,29)" fg:x="11570" fg:w="19"/><text x="59.8707%" y="463.50"></text></g><g><title>sqlite3_str_appendf (14 samples, 0.07%)</title><rect x="59.6465%" y="437" width="0.0721%" height="15" fill="rgb(206,8,54)" fg:x="11575" fg:w="14"/><text x="59.8965%" y="447.50"></text></g><g><title>sqlite3_str_vappendf (13 samples, 0.07%)</title><rect x="59.6517%" y="421" width="0.0670%" height="15" fill="rgb(222,186,2)" fg:x="11576" fg:w="13"/><text x="59.9017%" y="431.50"></text></g><g><title>enlargeAndAppend (2 samples, 0.01%)</title><rect x="59.7083%" y="405" width="0.0103%" height="15" fill="rgb(221,206,53)" fg:x="11587" fg:w="2"/><text x="59.9583%" y="415.50"></text></g><g><title>sqlite3StrAccumEnlarge (2 samples, 0.01%)</title><rect x="59.7083%" y="389" width="0.0103%" height="15" fill="rgb(230,150,21)" fg:x="11587" fg:w="2"/><text x="59.9583%" y="399.50"></text></g><g><title>sqlite3Realloc (2 samples, 0.01%)</title><rect x="59.7083%" y="373" width="0.0103%" height="15" fill="rgb(253,202,10)" fg:x="11587" fg:w="2"/><text x="59.9583%" y="383.50"></text></g><g><title>alloy_primitives::utils::keccak256 (9 samples, 0.05%)</title><rect x="59.7186%" y="645" width="0.0464%" height="15" fill="rgb(238,109,40)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (9 samples, 0.05%)</title><rect x="59.7186%" y="629" width="0.0464%" height="15" fill="rgb(247,120,22)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (9 samples, 0.05%)</title><rect x="59.7186%" y="613" width="0.0464%" height="15" fill="rgb(207,43,30)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (9 samples, 0.05%)</title><rect x="59.7186%" y="597" width="0.0464%" height="15" fill="rgb(213,211,24)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="607.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (9 samples, 0.05%)</title><rect x="59.7186%" y="581" width="0.0464%" height="15" fill="rgb(239,73,39)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="591.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (9 samples, 0.05%)</title><rect x="59.7186%" y="565" width="0.0464%" height="15" fill="rgb(245,182,19)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (9 samples, 0.05%)</title><rect x="59.7186%" y="549" width="0.0464%" height="15" fill="rgb(247,143,26)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (9 samples, 0.05%)</title><rect x="59.7186%" y="533" width="0.0464%" height="15" fill="rgb(228,191,23)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (9 samples, 0.05%)</title><rect x="59.7186%" y="517" width="0.0464%" height="15" fill="rgb(253,165,31)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.05%)</title><rect x="59.7186%" y="501" width="0.0464%" height="15" fill="rgb(234,138,20)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="511.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.05%)</title><rect x="59.7186%" y="485" width="0.0464%" height="15" fill="rgb(218,191,29)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="495.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="59.7186%" y="469" width="0.0464%" height="15" fill="rgb(221,157,19)" fg:x="11589" fg:w="9"/><text x="59.9686%" y="479.50"></text></g><g><title>eth_trie::node::Node::from_branch (3 samples, 0.02%)</title><rect x="59.7959%" y="629" width="0.0155%" height="15" fill="rgb(237,26,42)" fg:x="11604" fg:w="3"/><text x="60.0459%" y="639.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (3 samples, 0.02%)</title><rect x="59.8114%" y="629" width="0.0155%" height="15" fill="rgb(220,163,24)" fg:x="11607" fg:w="3"/><text x="60.0614%" y="639.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (2 samples, 0.01%)</title><rect x="59.8166%" y="613" width="0.0103%" height="15" fill="rgb(242,115,20)" fg:x="11608" fg:w="2"/><text x="60.0666%" y="623.50"></text></g><g><title>rlp::rlpin::Rlp::at (4 samples, 0.02%)</title><rect x="59.8269%" y="629" width="0.0206%" height="15" fill="rgb(210,206,9)" fg:x="11610" fg:w="4"/><text x="60.0769%" y="639.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (4 samples, 0.02%)</title><rect x="59.8269%" y="613" width="0.0206%" height="15" fill="rgb(208,71,17)" fg:x="11610" fg:w="4"/><text x="60.0769%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (4 samples, 0.02%)</title><rect x="59.8269%" y="597" width="0.0206%" height="15" fill="rgb(233,7,5)" fg:x="11610" fg:w="4"/><text x="60.0769%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (325 samples, 1.67%)</title><rect x="58.1779%" y="693" width="1.6747%" height="15" fill="rgb(207,92,33)" fg:x="11290" fg:w="325"/><text x="58.4279%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (321 samples, 1.65%)</title><rect x="58.1985%" y="677" width="1.6541%" height="15" fill="rgb(218,87,9)" fg:x="11294" fg:w="321"/><text x="58.4485%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (133 samples, 0.69%)</title><rect x="59.1673%" y="661" width="0.6854%" height="15" fill="rgb(219,47,37)" fg:x="11482" fg:w="133"/><text x="59.4173%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (16 samples, 0.08%)</title><rect x="59.7702%" y="645" width="0.0824%" height="15" fill="rgb(221,152,34)" fg:x="11599" fg:w="16"/><text x="60.0202%" y="655.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::insert (3 samples, 0.02%)</title><rect x="59.8578%" y="661" width="0.0155%" height="15" fill="rgb(235,176,21)" fg:x="11616" fg:w="3"/><text x="60.1078%" y="671.50"></text></g><g><title>sqlite3FinishCoding (2 samples, 0.01%)</title><rect x="59.8887%" y="469" width="0.0103%" height="15" fill="rgb(232,212,21)" fg:x="11622" fg:w="2"/><text x="60.1387%" y="479.50"></text></g><g><title>sqlite3VdbeMakeReady (2 samples, 0.01%)</title><rect x="59.8887%" y="453" width="0.0103%" height="15" fill="rgb(245,82,39)" fg:x="11622" fg:w="2"/><text x="60.1387%" y="463.50"></text></g><g><title>sqlite3ResolveSelectNames (4 samples, 0.02%)</title><rect x="59.9145%" y="437" width="0.0206%" height="15" fill="rgb(241,52,51)" fg:x="11627" fg:w="4"/><text x="60.1645%" y="447.50"></text></g><g><title>sqlite3WalkSelect (4 samples, 0.02%)</title><rect x="59.9145%" y="421" width="0.0206%" height="15" fill="rgb(219,91,24)" fg:x="11627" fg:w="4"/><text x="60.1645%" y="431.50"></text></g><g><title>resolveSelectStep (4 samples, 0.02%)</title><rect x="59.9145%" y="405" width="0.0206%" height="15" fill="rgb(241,142,12)" fg:x="11627" fg:w="4"/><text x="60.1645%" y="415.50"></text></g><g><title>sqlite3ResolveExprListNames (2 samples, 0.01%)</title><rect x="59.9248%" y="389" width="0.0103%" height="15" fill="rgb(230,27,9)" fg:x="11629" fg:w="2"/><text x="60.1748%" y="399.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="59.9248%" y="373" width="0.0103%" height="15" fill="rgb(249,181,32)" fg:x="11629" fg:w="2"/><text x="60.1748%" y="383.50"></text></g><g><title>resolveExprStep (2 samples, 0.01%)</title><rect x="59.9248%" y="357" width="0.0103%" height="15" fill="rgb(230,107,3)" fg:x="11629" fg:w="2"/><text x="60.1748%" y="367.50"></text></g><g><title>sqlite3SelectPrep (7 samples, 0.04%)</title><rect x="59.9093%" y="453" width="0.0361%" height="15" fill="rgb(246,204,14)" fg:x="11626" fg:w="7"/><text x="60.1593%" y="463.50"></text></g><g><title>sqlite3SelectExpand (2 samples, 0.01%)</title><rect x="59.9351%" y="437" width="0.0103%" height="15" fill="rgb(213,192,47)" fg:x="11631" fg:w="2"/><text x="60.1851%" y="447.50"></text></g><g><title>sqlite3WalkSelect (2 samples, 0.01%)</title><rect x="59.9351%" y="421" width="0.0103%" height="15" fill="rgb(240,44,36)" fg:x="11631" fg:w="2"/><text x="60.1851%" y="431.50"></text></g><g><title>sqlite3SelectPopWith (2 samples, 0.01%)</title><rect x="59.9351%" y="405" width="0.0103%" height="15" fill="rgb(244,209,38)" fg:x="11631" fg:w="2"/><text x="60.1851%" y="415.50"></text></g><g><title>sqlite3WhereExprAnalyze (2 samples, 0.01%)</title><rect x="59.9557%" y="437" width="0.0103%" height="15" fill="rgb(219,34,37)" fg:x="11635" fg:w="2"/><text x="60.2057%" y="447.50"></text></g><g><title>exprAnalyze (2 samples, 0.01%)</title><rect x="59.9557%" y="421" width="0.0103%" height="15" fill="rgb(210,28,6)" fg:x="11635" fg:w="2"/><text x="60.2057%" y="431.50"></text></g><g><title>exprMightBeIndexed (2 samples, 0.01%)</title><rect x="59.9557%" y="405" width="0.0103%" height="15" fill="rgb(244,110,52)" fg:x="11635" fg:w="2"/><text x="60.2057%" y="415.50"></text></g><g><title>sqlite3WhereBegin (9 samples, 0.05%)</title><rect x="59.9454%" y="453" width="0.0464%" height="15" fill="rgb(254,124,47)" fg:x="11633" fg:w="9"/><text x="60.1954%" y="463.50"></text></g><g><title>whereShortCut (4 samples, 0.02%)</title><rect x="59.9711%" y="437" width="0.0206%" height="15" fill="rgb(254,110,13)" fg:x="11638" fg:w="4"/><text x="60.2211%" y="447.50"></text></g><g><title>whereScanNext (4 samples, 0.02%)</title><rect x="59.9711%" y="421" width="0.0206%" height="15" fill="rgb(252,57,21)" fg:x="11638" fg:w="4"/><text x="60.2211%" y="431.50"></text></g><g><title>sqlite3StrICmp (3 samples, 0.02%)</title><rect x="59.9763%" y="405" width="0.0155%" height="15" fill="rgb(242,60,45)" fg:x="11639" fg:w="3"/><text x="60.2263%" y="415.50"></text></g><g><title>sqlite3Select (20 samples, 0.10%)</title><rect x="59.8990%" y="469" width="0.1031%" height="15" fill="rgb(234,49,30)" fg:x="11624" fg:w="20"/><text x="60.1490%" y="479.50"></text></g><g><title>sqlite3WhereEnd (2 samples, 0.01%)</title><rect x="59.9918%" y="453" width="0.0103%" height="15" fill="rgb(218,98,6)" fg:x="11642" fg:w="2"/><text x="60.2418%" y="463.50"></text></g><g><title>sqlite3SelectDelete (2 samples, 0.01%)</title><rect x="60.0021%" y="469" width="0.0103%" height="15" fill="rgb(220,174,29)" fg:x="11644" fg:w="2"/><text x="60.2521%" y="479.50"></text></g><g><title>sqlite3SelectDelete (2 samples, 0.01%)</title><rect x="60.0021%" y="453" width="0.0103%" height="15" fill="rgb(236,163,23)" fg:x="11644" fg:w="2"/><text x="60.2521%" y="463.50"></text></g><g><title>clearSelect (2 samples, 0.01%)</title><rect x="60.0021%" y="437" width="0.0103%" height="15" fill="rgb(242,114,45)" fg:x="11644" fg:w="2"/><text x="60.2521%" y="447.50"></text></g><g><title>sqlite3SrcListAppendFromTerm (2 samples, 0.01%)</title><rect x="60.0175%" y="469" width="0.0103%" height="15" fill="rgb(232,10,53)" fg:x="11647" fg:w="2"/><text x="60.2675%" y="479.50"></text></g><g><title>sqlite3Parser (34 samples, 0.18%)</title><rect x="59.8887%" y="501" width="0.1752%" height="15" fill="rgb(245,108,29)" fg:x="11622" fg:w="34"/><text x="60.1387%" y="511.50"></text></g><g><title>yy_reduce (34 samples, 0.18%)</title><rect x="59.8887%" y="485" width="0.1752%" height="15" fill="rgb(240,89,53)" fg:x="11622" fg:w="34"/><text x="60.1387%" y="495.50"></text></g><g><title>yy_find_reduce_action (7 samples, 0.04%)</title><rect x="60.0278%" y="469" width="0.0361%" height="15" fill="rgb(226,60,45)" fg:x="11649" fg:w="7"/><text x="60.2778%" y="479.50"></text></g><g><title>rusqlite::Connection::prepare (40 samples, 0.21%)</title><rect x="59.8784%" y="645" width="0.2061%" height="15" fill="rgb(230,41,44)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="655.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (40 samples, 0.21%)</title><rect x="59.8784%" y="629" width="0.2061%" height="15" fill="rgb(230,26,20)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="639.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (40 samples, 0.21%)</title><rect x="59.8784%" y="613" width="0.2061%" height="15" fill="rgb(237,170,32)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="623.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (40 samples, 0.21%)</title><rect x="59.8784%" y="597" width="0.2061%" height="15" fill="rgb(212,35,42)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="607.50"></text></g><g><title>sqlite3_prepare_v3 (40 samples, 0.21%)</title><rect x="59.8784%" y="581" width="0.2061%" height="15" fill="rgb(227,31,34)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="591.50"></text></g><g><title>sqlite3LockAndPrepare (40 samples, 0.21%)</title><rect x="59.8784%" y="565" width="0.2061%" height="15" fill="rgb(216,19,18)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="575.50"></text></g><g><title>sqlite3LockAndPrepare (40 samples, 0.21%)</title><rect x="59.8784%" y="549" width="0.2061%" height="15" fill="rgb(211,133,42)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="559.50"></text></g><g><title>sqlite3Prepare (40 samples, 0.21%)</title><rect x="59.8784%" y="533" width="0.2061%" height="15" fill="rgb(244,66,13)" fg:x="11620" fg:w="40"/><text x="60.1284%" y="543.50"></text></g><g><title>sqlite3RunParser (39 samples, 0.20%)</title><rect x="59.8835%" y="517" width="0.2010%" height="15" fill="rgb(218,185,50)" fg:x="11621" fg:w="39"/><text x="60.1335%" y="527.50"></text></g><g><title>sqlite3ParserInit (4 samples, 0.02%)</title><rect x="60.0639%" y="501" width="0.0206%" height="15" fill="rgb(219,149,13)" fg:x="11656" fg:w="4"/><text x="60.3139%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (9 samples, 0.05%)</title><rect x="60.0845%" y="629" width="0.0464%" height="15" fill="rgb(221,125,0)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="639.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (9 samples, 0.05%)</title><rect x="60.0845%" y="613" width="0.0464%" height="15" fill="rgb(247,126,27)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="623.50"></text></g><g><title>rusqlite::row::Rows::reset (9 samples, 0.05%)</title><rect x="60.0845%" y="597" width="0.0464%" height="15" fill="rgb(250,138,30)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="607.50"></text></g><g><title>rusqlite::statement::Statement::reset (9 samples, 0.05%)</title><rect x="60.0845%" y="581" width="0.0464%" height="15" fill="rgb(230,151,9)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="591.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (9 samples, 0.05%)</title><rect x="60.0845%" y="565" width="0.0464%" height="15" fill="rgb(233,80,38)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="575.50"></text></g><g><title>sqlite3_reset (9 samples, 0.05%)</title><rect x="60.0845%" y="549" width="0.0464%" height="15" fill="rgb(232,68,43)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="559.50"></text></g><g><title>sqlite3_reset (9 samples, 0.05%)</title><rect x="60.0845%" y="533" width="0.0464%" height="15" fill="rgb(254,5,50)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="543.50"></text></g><g><title>sqlite3VdbeReset (9 samples, 0.05%)</title><rect x="60.0845%" y="517" width="0.0464%" height="15" fill="rgb(225,45,5)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="527.50"></text></g><g><title>sqlite3VdbeHalt (9 samples, 0.05%)</title><rect x="60.0845%" y="501" width="0.0464%" height="15" fill="rgb(239,22,3)" fg:x="11660" fg:w="9"/><text x="60.3345%" y="511.50"></text></g><g><title>vdbeCommit (7 samples, 0.04%)</title><rect x="60.0948%" y="485" width="0.0361%" height="15" fill="rgb(243,129,0)" fg:x="11662" fg:w="7"/><text x="60.3448%" y="495.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (7 samples, 0.04%)</title><rect x="60.0948%" y="469" width="0.0361%" height="15" fill="rgb(223,164,0)" fg:x="11662" fg:w="7"/><text x="60.3448%" y="479.50"></text></g><g><title>pager_unlock (7 samples, 0.04%)</title><rect x="60.0948%" y="453" width="0.0361%" height="15" fill="rgb(221,46,29)" fg:x="11662" fg:w="7"/><text x="60.3448%" y="463.50"></text></g><g><title>sqlite3WalEndReadTransaction (6 samples, 0.03%)</title><rect x="60.1000%" y="437" width="0.0309%" height="15" fill="rgb(205,97,47)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="447.50"></text></g><g><title>walUnlockShared (6 samples, 0.03%)</title><rect x="60.1000%" y="421" width="0.0309%" height="15" fill="rgb(249,14,8)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="431.50"></text></g><g><title>walUnlockShared (6 samples, 0.03%)</title><rect x="60.1000%" y="405" width="0.0309%" height="15" fill="rgb(216,77,3)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="415.50"></text></g><g><title>sqlite3OsShmLock (6 samples, 0.03%)</title><rect x="60.1000%" y="389" width="0.0309%" height="15" fill="rgb(206,168,54)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="399.50"></text></g><g><title>unixShmLock (6 samples, 0.03%)</title><rect x="60.1000%" y="373" width="0.0309%" height="15" fill="rgb(236,3,41)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="383.50"></text></g><g><title>unixShmSystemLock (6 samples, 0.03%)</title><rect x="60.1000%" y="357" width="0.0309%" height="15" fill="rgb(231,132,24)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="367.50"></text></g><g><title>__GI___libc_fcntl64 (6 samples, 0.03%)</title><rect x="60.1000%" y="341" width="0.0309%" height="15" fill="rgb(227,221,40)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="351.50"></text></g><g><title>__fcntl64_nocancel_adjusted (6 samples, 0.03%)</title><rect x="60.1000%" y="325" width="0.0309%" height="15" fill="rgb(233,151,11)" fg:x="11663" fg:w="6"/><text x="60.3500%" y="335.50"></text></g><g><title>pagerBeginReadTransaction (6 samples, 0.03%)</title><rect x="60.1515%" y="421" width="0.0309%" height="15" fill="rgb(247,81,35)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="431.50"></text></g><g><title>sqlite3WalBeginReadTransaction (6 samples, 0.03%)</title><rect x="60.1515%" y="405" width="0.0309%" height="15" fill="rgb(243,128,48)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="415.50"></text></g><g><title>walBeginReadTransaction (6 samples, 0.03%)</title><rect x="60.1515%" y="389" width="0.0309%" height="15" fill="rgb(253,16,10)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="399.50"></text></g><g><title>walTryBeginRead (6 samples, 0.03%)</title><rect x="60.1515%" y="373" width="0.0309%" height="15" fill="rgb(228,67,27)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="383.50"></text></g><g><title>walLockShared (6 samples, 0.03%)</title><rect x="60.1515%" y="357" width="0.0309%" height="15" fill="rgb(231,105,25)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="367.50"></text></g><g><title>walLockShared (6 samples, 0.03%)</title><rect x="60.1515%" y="341" width="0.0309%" height="15" fill="rgb(213,166,47)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="351.50"></text></g><g><title>sqlite3OsShmLock (6 samples, 0.03%)</title><rect x="60.1515%" y="325" width="0.0309%" height="15" fill="rgb(209,27,10)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="335.50"></text></g><g><title>unixShmLock (6 samples, 0.03%)</title><rect x="60.1515%" y="309" width="0.0309%" height="15" fill="rgb(241,44,30)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="319.50"></text></g><g><title>unixShmSystemLock (6 samples, 0.03%)</title><rect x="60.1515%" y="293" width="0.0309%" height="15" fill="rgb(223,216,15)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="303.50"></text></g><g><title>__GI___libc_fcntl64 (6 samples, 0.03%)</title><rect x="60.1515%" y="277" width="0.0309%" height="15" fill="rgb(227,14,7)" fg:x="11673" fg:w="6"/><text x="60.4015%" y="287.50"></text></g><g><title>__fcntl64_nocancel_adjusted (5 samples, 0.03%)</title><rect x="60.1567%" y="261" width="0.0258%" height="15" fill="rgb(237,14,5)" fg:x="11674" fg:w="5"/><text x="60.4067%" y="271.50"></text></g><g><title>sqlite3BtreeBeginTrans (7 samples, 0.04%)</title><rect x="60.1515%" y="485" width="0.0361%" height="15" fill="rgb(232,14,36)" fg:x="11673" fg:w="7"/><text x="60.4015%" y="495.50"></text></g><g><title>btreeBeginTrans (7 samples, 0.04%)</title><rect x="60.1515%" y="469" width="0.0361%" height="15" fill="rgb(234,0,38)" fg:x="11673" fg:w="7"/><text x="60.4015%" y="479.50"></text></g><g><title>lockBtree (7 samples, 0.04%)</title><rect x="60.1515%" y="453" width="0.0361%" height="15" fill="rgb(207,170,14)" fg:x="11673" fg:w="7"/><text x="60.4015%" y="463.50"></text></g><g><title>sqlite3PagerSharedLock (7 samples, 0.04%)</title><rect x="60.1515%" y="437" width="0.0361%" height="15" fill="rgb(252,45,13)" fg:x="11673" fg:w="7"/><text x="60.4015%" y="447.50"></text></g><g><title>sqlite3BtreeIndexMoveto (10 samples, 0.05%)</title><rect x="60.1876%" y="485" width="0.0515%" height="15" fill="rgb(213,142,7)" fg:x="11680" fg:w="10"/><text x="60.4376%" y="495.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (4 samples, 0.02%)</title><rect x="60.2185%" y="469" width="0.0206%" height="15" fill="rgb(216,157,23)" fg:x="11686" fg:w="4"/><text x="60.4685%" y="479.50"></text></g><g><title>findNextHostParameter (2 samples, 0.01%)</title><rect x="60.2494%" y="469" width="0.0103%" height="15" fill="rgb(212,145,33)" fg:x="11692" fg:w="2"/><text x="60.4994%" y="479.50"></text></g><g><title>rusqlite::Connection::query_row (87 samples, 0.45%)</title><rect x="59.8732%" y="661" width="0.4483%" height="15" fill="rgb(233,26,13)" fg:x="11619" fg:w="87"/><text x="60.1232%" y="671.50"></text></g><g><title>rusqlite::statement::Statement::query_row (46 samples, 0.24%)</title><rect x="60.0845%" y="645" width="0.2370%" height="15" fill="rgb(219,196,19)" fg:x="11660" fg:w="46"/><text x="60.3345%" y="655.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (37 samples, 0.19%)</title><rect x="60.1309%" y="629" width="0.1907%" height="15" fill="rgb(246,56,21)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="639.50"></text></g><g><title>rusqlite::row::Rows::next (37 samples, 0.19%)</title><rect x="60.1309%" y="613" width="0.1907%" height="15" fill="rgb(222,28,53)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="623.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (37 samples, 0.19%)</title><rect x="60.1309%" y="597" width="0.1907%" height="15" fill="rgb(224,5,27)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="607.50"></text></g><g><title>rusqlite::statement::Statement::step (37 samples, 0.19%)</title><rect x="60.1309%" y="581" width="0.1907%" height="15" fill="rgb(220,153,33)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="591.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (37 samples, 0.19%)</title><rect x="60.1309%" y="565" width="0.1907%" height="15" fill="rgb(226,58,19)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="575.50"></text></g><g><title>sqlite3_step (37 samples, 0.19%)</title><rect x="60.1309%" y="549" width="0.1907%" height="15" fill="rgb(239,112,23)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="559.50"></text></g><g><title>sqlite3_step (37 samples, 0.19%)</title><rect x="60.1309%" y="533" width="0.1907%" height="15" fill="rgb(251,213,20)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="543.50"></text></g><g><title>sqlite3Step (37 samples, 0.19%)</title><rect x="60.1309%" y="517" width="0.1907%" height="15" fill="rgb(215,181,21)" fg:x="11669" fg:w="37"/><text x="60.3809%" y="527.50"></text></g><g><title>sqlite3VdbeExec (36 samples, 0.19%)</title><rect x="60.1360%" y="501" width="0.1855%" height="15" fill="rgb(240,8,35)" fg:x="11670" fg:w="36"/><text x="60.3860%" y="511.50"></text></g><g><title>sqlite3VdbeExpandSql (16 samples, 0.08%)</title><rect x="60.2391%" y="485" width="0.0824%" height="15" fill="rgb(232,203,3)" fg:x="11690" fg:w="16"/><text x="60.4891%" y="495.50"></text></g><g><title>sqlite3_str_appendf (12 samples, 0.06%)</title><rect x="60.2597%" y="469" width="0.0618%" height="15" fill="rgb(214,202,43)" fg:x="11694" fg:w="12"/><text x="60.5097%" y="479.50"></text></g><g><title>sqlite3_str_vappendf (11 samples, 0.06%)</title><rect x="60.2649%" y="453" width="0.0567%" height="15" fill="rgb(254,35,11)" fg:x="11695" fg:w="11"/><text x="60.5149%" y="463.50"></text></g><g><title>enlargeAndAppend (4 samples, 0.02%)</title><rect x="60.3009%" y="437" width="0.0206%" height="15" fill="rgb(239,173,13)" fg:x="11702" fg:w="4"/><text x="60.5509%" y="447.50"></text></g><g><title>sqlite3StrAccumEnlarge (4 samples, 0.02%)</title><rect x="60.3009%" y="421" width="0.0206%" height="15" fill="rgb(220,141,0)" fg:x="11702" fg:w="4"/><text x="60.5509%" y="431.50"></text></g><g><title>sqlite3Realloc (3 samples, 0.02%)</title><rect x="60.3061%" y="405" width="0.0155%" height="15" fill="rgb(210,98,12)" fg:x="11703" fg:w="3"/><text x="60.5561%" y="415.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (92 samples, 0.47%)</title><rect x="59.8526%" y="677" width="0.4741%" height="15" fill="rgb(254,153,22)" fg:x="11615" fg:w="92"/><text x="60.1026%" y="687.50"></text></g><g><title>alloy_primitives::utils::keccak256 (5 samples, 0.03%)</title><rect x="60.3267%" y="677" width="0.0258%" height="15" fill="rgb(247,223,17)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="687.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (5 samples, 0.03%)</title><rect x="60.3267%" y="661" width="0.0258%" height="15" fill="rgb(246,56,7)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="671.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (5 samples, 0.03%)</title><rect x="60.3267%" y="645" width="0.0258%" height="15" fill="rgb(240,226,12)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="655.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (5 samples, 0.03%)</title><rect x="60.3267%" y="629" width="0.0258%" height="15" fill="rgb(205,87,46)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="639.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (5 samples, 0.03%)</title><rect x="60.3267%" y="613" width="0.0258%" height="15" fill="rgb(245,214,51)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="623.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.03%)</title><rect x="60.3267%" y="597" width="0.0258%" height="15" fill="rgb(223,172,33)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.03%)</title><rect x="60.3267%" y="581" width="0.0258%" height="15" fill="rgb(227,203,34)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.03%)</title><rect x="60.3267%" y="565" width="0.0258%" height="15" fill="rgb(248,143,44)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.03%)</title><rect x="60.3267%" y="549" width="0.0258%" height="15" fill="rgb(226,162,5)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.03%)</title><rect x="60.3267%" y="533" width="0.0258%" height="15" fill="rgb(211,143,1)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="543.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.03%)</title><rect x="60.3267%" y="517" width="0.0258%" height="15" fill="rgb(224,96,15)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="527.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.03%)</title><rect x="60.3267%" y="501" width="0.0258%" height="15" fill="rgb(222,4,38)" fg:x="11707" fg:w="5"/><text x="60.5767%" y="511.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (445 samples, 2.29%)</title><rect x="58.0903%" y="741" width="2.2931%" height="15" fill="rgb(253,228,15)" fg:x="11273" fg:w="445"/><text x="58.3403%" y="751.50">&lt;..</text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (438 samples, 2.26%)</title><rect x="58.1264%" y="725" width="2.2570%" height="15" fill="rgb(242,194,12)" fg:x="11280" fg:w="438"/><text x="58.3764%" y="735.50">e..</text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (436 samples, 2.25%)</title><rect x="58.1367%" y="709" width="2.2467%" height="15" fill="rgb(214,177,31)" fg:x="11282" fg:w="436"/><text x="58.3867%" y="719.50">e..</text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (103 samples, 0.53%)</title><rect x="59.8526%" y="693" width="0.5308%" height="15" fill="rgb(226,58,51)" fg:x="11615" fg:w="103"/><text x="60.1026%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (6 samples, 0.03%)</title><rect x="60.3525%" y="677" width="0.0309%" height="15" fill="rgb(250,119,16)" fg:x="11712" fg:w="6"/><text x="60.6025%" y="687.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (2 samples, 0.01%)</title><rect x="60.3731%" y="661" width="0.0103%" height="15" fill="rgb(223,128,53)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="671.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (2 samples, 0.01%)</title><rect x="60.3731%" y="645" width="0.0103%" height="15" fill="rgb(251,199,15)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="60.3731%" y="629" width="0.0103%" height="15" fill="rgb(235,168,42)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="60.3731%" y="613" width="0.0103%" height="15" fill="rgb(250,210,17)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="623.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="60.3731%" y="597" width="0.0103%" height="15" fill="rgb(226,36,41)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="607.50"></text></g><g><title>rlp::rlpin::Rlp::at (2 samples, 0.01%)</title><rect x="60.3731%" y="581" width="0.0103%" height="15" fill="rgb(225,87,10)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="591.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (2 samples, 0.01%)</title><rect x="60.3731%" y="565" width="0.0103%" height="15" fill="rgb(228,83,9)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="575.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (2 samples, 0.01%)</title><rect x="60.3731%" y="549" width="0.0103%" height="15" fill="rgb(225,16,36)" fg:x="11716" fg:w="2"/><text x="60.6231%" y="559.50"></text></g><g><title>alloy_primitives::bits::serde::&lt;impl serde::de::Deserialize for alloy_primitives::bits::fixed::FixedBytes&lt;_&gt;&gt;::deserialize (2 samples, 0.01%)</title><rect x="60.3834%" y="517" width="0.0103%" height="15" fill="rgb(242,198,13)" fg:x="11718" fg:w="2"/><text x="60.6334%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="60.3834%" y="741" width="0.0155%" height="15" fill="rgb(239,25,51)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="751.50"></text></g><g><title>zilliqa::state::State::get_account::{{closure}} (3 samples, 0.02%)</title><rect x="60.3834%" y="725" width="0.0155%" height="15" fill="rgb(239,28,37)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="735.50"></text></g><g><title>bincode::deserialize (3 samples, 0.02%)</title><rect x="60.3834%" y="709" width="0.0155%" height="15" fill="rgb(234,70,17)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="719.50"></text></g><g><title>bincode::config::Options::deserialize (3 samples, 0.02%)</title><rect x="60.3834%" y="693" width="0.0155%" height="15" fill="rgb(231,215,53)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="703.50"></text></g><g><title>bincode::internal::deserialize (3 samples, 0.02%)</title><rect x="60.3834%" y="677" width="0.0155%" height="15" fill="rgb(218,140,42)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="687.50"></text></g><g><title>bincode::internal::deserialize_seed (3 samples, 0.02%)</title><rect x="60.3834%" y="661" width="0.0155%" height="15" fill="rgb(233,227,45)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.02%)</title><rect x="60.3834%" y="645" width="0.0155%" height="15" fill="rgb(225,189,21)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="655.50"></text></g><g><title>zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize (3 samples, 0.02%)</title><rect x="60.3834%" y="629" width="0.0155%" height="15" fill="rgb(237,176,54)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="639.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.02%)</title><rect x="60.3834%" y="613" width="0.0155%" height="15" fill="rgb(215,131,46)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="623.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (3 samples, 0.02%)</title><rect x="60.3834%" y="597" width="0.0155%" height="15" fill="rgb(218,95,20)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="607.50"></text></g><g><title>&lt;zilliqa::state::_::&lt;impl serde::de::Deserialize for zilliqa::state::Account&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.02%)</title><rect x="60.3834%" y="581" width="0.0155%" height="15" fill="rgb(208,198,12)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="591.50"></text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.02%)</title><rect x="60.3834%" y="565" width="0.0155%" height="15" fill="rgb(239,107,50)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="575.50"></text></g><g><title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.02%)</title><rect x="60.3834%" y="549" width="0.0155%" height="15" fill="rgb(240,217,37)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.02%)</title><rect x="60.3834%" y="533" width="0.0155%" height="15" fill="rgb(242,197,49)" fg:x="11718" fg:w="3"/><text x="60.6334%" y="543.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (9 samples, 0.05%)</title><rect x="60.3988%" y="709" width="0.0464%" height="15" fill="rgb(219,171,17)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="719.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (9 samples, 0.05%)</title><rect x="60.3988%" y="693" width="0.0464%" height="15" fill="rgb(209,81,40)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="703.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (9 samples, 0.05%)</title><rect x="60.3988%" y="677" width="0.0464%" height="15" fill="rgb(237,156,30)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="687.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (9 samples, 0.05%)</title><rect x="60.3988%" y="661" width="0.0464%" height="15" fill="rgb(212,127,16)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="671.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (9 samples, 0.05%)</title><rect x="60.3988%" y="645" width="0.0464%" height="15" fill="rgb(226,66,32)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="655.50"></text></g><g><title>keccak::p1600 (9 samples, 0.05%)</title><rect x="60.3988%" y="629" width="0.0464%" height="15" fill="rgb(245,22,46)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="639.50"></text></g><g><title>keccak::keccak_p (9 samples, 0.05%)</title><rect x="60.3988%" y="613" width="0.0464%" height="15" fill="rgb(210,112,21)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="623.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (9 samples, 0.05%)</title><rect x="60.3988%" y="597" width="0.0464%" height="15" fill="rgb(207,118,39)" fg:x="11721" fg:w="9"/><text x="60.6488%" y="607.50"></text></g><g><title>zilliqa::pool::TransactionPool::best_transaction (467 samples, 2.41%)</title><rect x="58.0439%" y="789" width="2.4065%" height="15" fill="rgb(205,206,35)" fg:x="11264" fg:w="467"/><text x="58.2939%" y="799.50">zi..</text></g><g><title>zilliqa::state::State::must_get_account (459 samples, 2.37%)</title><rect x="58.0851%" y="773" width="2.3652%" height="15" fill="rgb(222,120,2)" fg:x="11272" fg:w="459"/><text x="58.3351%" y="783.50">zi..</text></g><g><title>zilliqa::state::State::get_account (458 samples, 2.36%)</title><rect x="58.0903%" y="757" width="2.3601%" height="15" fill="rgb(205,38,18)" fg:x="11273" fg:w="458"/><text x="58.3403%" y="767.50">zi..</text></g><g><title>zilliqa::state::State::account_key (10 samples, 0.05%)</title><rect x="60.3988%" y="741" width="0.0515%" height="15" fill="rgb(226,61,2)" fg:x="11721" fg:w="10"/><text x="60.6488%" y="751.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (10 samples, 0.05%)</title><rect x="60.3988%" y="725" width="0.0515%" height="15" fill="rgb(242,161,23)" fg:x="11721" fg:w="10"/><text x="60.6488%" y="735.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_internal_kv (4 samples, 0.02%)</title><rect x="60.4658%" y="693" width="0.0206%" height="15" fill="rgb(213,13,52)" fg:x="11734" fg:w="4"/><text x="60.7158%" y="703.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (3 samples, 0.02%)</title><rect x="60.4710%" y="677" width="0.0155%" height="15" fill="rgb(246,209,47)" fg:x="11735" fg:w="3"/><text x="60.7210%" y="687.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::can_merge (3 samples, 0.02%)</title><rect x="60.4710%" y="661" width="0.0155%" height="15" fill="rgb(214,41,3)" fg:x="11735" fg:w="3"/><text x="60.7210%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (3 samples, 0.02%)</title><rect x="60.4710%" y="645" width="0.0155%" height="15" fill="rgb(236,119,38)" fg:x="11735" fg:w="3"/><text x="60.7210%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="60.5019%" y="677" width="0.0155%" height="15" fill="rgb(218,50,11)" fg:x="11741" fg:w="3"/><text x="60.7519%" y="687.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (3 samples, 0.02%)</title><rect x="60.5174%" y="677" width="0.0155%" height="15" fill="rgb(228,38,11)" fg:x="11744" fg:w="3"/><text x="60.7674%" y="687.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (3 samples, 0.02%)</title><rect x="60.5174%" y="661" width="0.0155%" height="15" fill="rgb(212,13,9)" fg:x="11744" fg:w="3"/><text x="60.7674%" y="671.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (3 samples, 0.02%)</title><rect x="60.5174%" y="645" width="0.0155%" height="15" fill="rgb(208,211,9)" fg:x="11744" fg:w="3"/><text x="60.7674%" y="655.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (2 samples, 0.01%)</title><rect x="60.5225%" y="629" width="0.0103%" height="15" fill="rgb(239,39,32)" fg:x="11745" fg:w="2"/><text x="60.7725%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="60.5225%" y="613" width="0.0103%" height="15" fill="rgb(254,179,26)" fg:x="11745" fg:w="2"/><text x="60.7725%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (17 samples, 0.09%)</title><rect x="60.4504%" y="741" width="0.0876%" height="15" fill="rgb(249,165,28)" fg:x="11731" fg:w="17"/><text x="60.7004%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (17 samples, 0.09%)</title><rect x="60.4504%" y="725" width="0.0876%" height="15" fill="rgb(225,59,50)" fg:x="11731" fg:w="17"/><text x="60.7004%" y="735.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (15 samples, 0.08%)</title><rect x="60.4607%" y="709" width="0.0773%" height="15" fill="rgb(209,122,5)" fg:x="11733" fg:w="15"/><text x="60.7107%" y="719.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (10 samples, 0.05%)</title><rect x="60.4864%" y="693" width="0.0515%" height="15" fill="rgb(214,65,34)" fg:x="11738" fg:w="10"/><text x="60.7364%" y="703.50"></text></g><g><title>&lt;zilliqa::crypto::Hash as core::cmp::Ord&gt;::cmp (10 samples, 0.05%)</title><rect x="60.5534%" y="693" width="0.0515%" height="15" fill="rgb(249,183,32)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="703.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T (10 samples, 0.05%)</title><rect x="60.5534%" y="677" width="0.0515%" height="15" fill="rgb(218,122,24)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="687.50"></text></g><g><title> N]&gt;::cmp (10 samples, 0.05%)</title><rect x="60.5534%" y="661" width="0.0515%" height="15" fill="rgb(224,109,18)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (10 samples, 0.05%)</title><rect x="60.5534%" y="645" width="0.0515%" height="15" fill="rgb(210,68,50)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (10 samples, 0.05%)</title><rect x="60.5534%" y="629" width="0.0515%" height="15" fill="rgb(212,184,34)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="639.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (10 samples, 0.05%)</title><rect x="60.5534%" y="613" width="0.0515%" height="15" fill="rgb(238,105,48)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.05%)</title><rect x="60.5534%" y="597" width="0.0515%" height="15" fill="rgb(222,134,54)" fg:x="11751" fg:w="10"/><text x="60.8034%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (52 samples, 0.27%)</title><rect x="60.4504%" y="773" width="0.2680%" height="15" fill="rgb(246,24,43)" fg:x="11731" fg:w="52"/><text x="60.7004%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (52 samples, 0.27%)</title><rect x="60.4504%" y="757" width="0.2680%" height="15" fill="rgb(227,169,22)" fg:x="11731" fg:w="52"/><text x="60.7004%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (35 samples, 0.18%)</title><rect x="60.5380%" y="741" width="0.1804%" height="15" fill="rgb(253,152,4)" fg:x="11748" fg:w="35"/><text x="60.7880%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (32 samples, 0.16%)</title><rect x="60.5534%" y="725" width="0.1649%" height="15" fill="rgb(219,158,36)" fg:x="11751" fg:w="32"/><text x="60.8034%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (32 samples, 0.16%)</title><rect x="60.5534%" y="709" width="0.1649%" height="15" fill="rgb(251,128,40)" fg:x="11751" fg:w="32"/><text x="60.8034%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (22 samples, 0.11%)</title><rect x="60.6050%" y="693" width="0.1134%" height="15" fill="rgb(254,101,39)" fg:x="11761" fg:w="22"/><text x="60.8550%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.01%)</title><rect x="60.7183%" y="773" width="0.0103%" height="15" fill="rgb(221,168,40)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="783.50"></text></g><g><title>zilliqa::pool::TransactionPool::mark_executed::{{closure}} (2 samples, 0.01%)</title><rect x="60.7183%" y="757" width="0.0103%" height="15" fill="rgb(221,14,27)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.01%)</title><rect x="60.7183%" y="741" width="0.0103%" height="15" fill="rgb(207,36,43)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.01%)</title><rect x="60.7183%" y="725" width="0.0103%" height="15" fill="rgb(240,172,53)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.01%)</title><rect x="60.7183%" y="709" width="0.0103%" height="15" fill="rgb(241,138,43)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="60.7183%" y="693" width="0.0103%" height="15" fill="rgb(227,78,19)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="703.50"></text></g><g><title>&lt;zilliqa::pool::TxIndex as core::cmp::Ord&gt;::cmp (2 samples, 0.01%)</title><rect x="60.7183%" y="677" width="0.0103%" height="15" fill="rgb(215,127,44)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="687.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::cmp::Ord&gt;::cmp (2 samples, 0.01%)</title><rect x="60.7183%" y="661" width="0.0103%" height="15" fill="rgb(227,13,10)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="671.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.01%)</title><rect x="60.7183%" y="645" width="0.0103%" height="15" fill="rgb(249,177,6)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="655.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T (2 samples, 0.01%)</title><rect x="60.7183%" y="629" width="0.0103%" height="15" fill="rgb(215,154,26)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="639.50"></text></g><g><title> N]&gt;::cmp (2 samples, 0.01%)</title><rect x="60.7183%" y="613" width="0.0103%" height="15" fill="rgb(250,168,20)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (2 samples, 0.01%)</title><rect x="60.7183%" y="597" width="0.0103%" height="15" fill="rgb(222,53,38)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2 samples, 0.01%)</title><rect x="60.7183%" y="581" width="0.0103%" height="15" fill="rgb(245,154,5)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="591.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (2 samples, 0.01%)</title><rect x="60.7183%" y="565" width="0.0103%" height="15" fill="rgb(214,89,50)" fg:x="11783" fg:w="2"/><text x="60.9683%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;zilliqa::transaction::VerifiedTransaction&gt;&gt; (2 samples, 0.01%)</title><rect x="60.7286%" y="773" width="0.0103%" height="15" fill="rgb(232,73,14)" fg:x="11785" fg:w="2"/><text x="60.9786%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::transaction::VerifiedTransaction&gt; (2 samples, 0.01%)</title><rect x="60.7286%" y="757" width="0.0103%" height="15" fill="rgb(230,101,20)" fg:x="11785" fg:w="2"/><text x="60.9786%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;zilliqa::transaction::SignedTransaction&gt; (2 samples, 0.01%)</title><rect x="60.7286%" y="741" width="0.0103%" height="15" fill="rgb(208,56,28)" fg:x="11785" fg:w="2"/><text x="60.9786%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (4 samples, 0.02%)</title><rect x="60.7493%" y="757" width="0.0206%" height="15" fill="rgb(247,205,22)" fg:x="11789" fg:w="4"/><text x="60.9993%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (4 samples, 0.02%)</title><rect x="60.7493%" y="741" width="0.0206%" height="15" fill="rgb(252,109,51)" fg:x="11789" fg:w="4"/><text x="60.9993%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (4 samples, 0.02%)</title><rect x="60.7493%" y="725" width="0.0206%" height="15" fill="rgb(220,40,24)" fg:x="11789" fg:w="4"/><text x="60.9993%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (4 samples, 0.02%)</title><rect x="60.7493%" y="709" width="0.0206%" height="15" fill="rgb(251,108,7)" fg:x="11789" fg:w="4"/><text x="60.9993%" y="719.50"></text></g><g><title>zilliqa::pool::TransactionPool::mark_executed (64 samples, 0.33%)</title><rect x="60.4504%" y="789" width="0.3298%" height="15" fill="rgb(238,102,51)" fg:x="11731" fg:w="64"/><text x="60.7004%" y="799.50"></text></g><g><title>zilliqa::pool::TransactionPool::remove_from_gas_index (7 samples, 0.04%)</title><rect x="60.7441%" y="773" width="0.0361%" height="15" fill="rgb(219,149,34)" fg:x="11788" fg:w="7"/><text x="60.9941%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="60.7853%" y="517" width="0.0206%" height="15" fill="rgb(239,70,0)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="60.7853%" y="501" width="0.0206%" height="15" fill="rgb(246,214,23)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="60.7853%" y="485" width="0.0206%" height="15" fill="rgb(239,221,51)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="60.7853%" y="469" width="0.0206%" height="15" fill="rgb(254,62,14)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="60.7853%" y="453" width="0.0206%" height="15" fill="rgb(253,57,33)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="60.7853%" y="437" width="0.0206%" height="15" fill="rgb(229,34,6)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="60.7853%" y="421" width="0.0206%" height="15" fill="rgb(235,191,23)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="431.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="60.7853%" y="405" width="0.0206%" height="15" fill="rgb(217,207,27)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="415.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="60.7853%" y="389" width="0.0206%" height="15" fill="rgb(232,41,44)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="60.7853%" y="373" width="0.0206%" height="15" fill="rgb(221,188,19)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="383.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="60.7853%" y="357" width="0.0206%" height="15" fill="rgb(245,180,45)" fg:x="11796" fg:w="4"/><text x="61.0353%" y="367.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="60.7905%" y="341" width="0.0155%" height="15" fill="rgb(250,220,42)" fg:x="11797" fg:w="3"/><text x="61.0405%" y="351.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="60.7905%" y="325" width="0.0155%" height="15" fill="rgb(234,16,34)" fg:x="11797" fg:w="3"/><text x="61.0405%" y="335.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="60.7956%" y="309" width="0.0103%" height="15" fill="rgb(233,217,23)" fg:x="11798" fg:w="2"/><text x="61.0456%" y="319.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.04%)</title><rect x="60.7802%" y="725" width="0.0361%" height="15" fill="rgb(209,22,46)" fg:x="11795" fg:w="7"/><text x="61.0302%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (7 samples, 0.04%)</title><rect x="60.7802%" y="709" width="0.0361%" height="15" fill="rgb(213,101,18)" fg:x="11795" fg:w="7"/><text x="61.0302%" y="719.50"></text></g><g><title>alloc::fmt::format::{{closure}} (7 samples, 0.04%)</title><rect x="60.7802%" y="693" width="0.0361%" height="15" fill="rgb(215,179,52)" fg:x="11795" fg:w="7"/><text x="61.0302%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.04%)</title><rect x="60.7802%" y="677" width="0.0361%" height="15" fill="rgb(223,50,25)" fg:x="11795" fg:w="7"/><text x="61.0302%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.03%)</title><rect x="60.7853%" y="661" width="0.0309%" height="15" fill="rgb(224,51,44)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (6 samples, 0.03%)</title><rect x="60.7853%" y="645" width="0.0309%" height="15" fill="rgb(224,13,54)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="655.50"></text></g><g><title>core::fmt::write (6 samples, 0.03%)</title><rect x="60.7853%" y="629" width="0.0309%" height="15" fill="rgb(219,58,47)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.03%)</title><rect x="60.7853%" y="613" width="0.0309%" height="15" fill="rgb(246,124,34)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.03%)</title><rect x="60.7853%" y="597" width="0.0309%" height="15" fill="rgb(245,109,25)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="607.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.03%)</title><rect x="60.7853%" y="581" width="0.0309%" height="15" fill="rgb(235,48,23)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.03%)</title><rect x="60.7853%" y="565" width="0.0309%" height="15" fill="rgb(229,203,36)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.03%)</title><rect x="60.7853%" y="549" width="0.0309%" height="15" fill="rgb(234,180,9)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.03%)</title><rect x="60.7853%" y="533" width="0.0309%" height="15" fill="rgb(228,98,45)" fg:x="11796" fg:w="6"/><text x="61.0353%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="60.8059%" y="517" width="0.0103%" height="15" fill="rgb(240,24,36)" fg:x="11800" fg:w="2"/><text x="61.0559%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="60.8059%" y="501" width="0.0103%" height="15" fill="rgb(227,154,19)" fg:x="11800" fg:w="2"/><text x="61.0559%" y="511.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="60.8162%" y="517" width="0.0309%" height="15" fill="rgb(231,2,48)" fg:x="11802" fg:w="6"/><text x="61.0662%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.05%)</title><rect x="60.8162%" y="661" width="0.0515%" height="15" fill="rgb(219,216,0)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.05%)</title><rect x="60.8162%" y="645" width="0.0515%" height="15" fill="rgb(251,88,0)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (10 samples, 0.05%)</title><rect x="60.8162%" y="629" width="0.0515%" height="15" fill="rgb(242,45,45)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.05%)</title><rect x="60.8162%" y="613" width="0.0515%" height="15" fill="rgb(218,149,45)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.05%)</title><rect x="60.8162%" y="597" width="0.0515%" height="15" fill="rgb(247,194,10)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="607.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.05%)</title><rect x="60.8162%" y="581" width="0.0515%" height="15" fill="rgb(234,33,37)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="591.50"></text></g><g><title>__rdl_alloc (10 samples, 0.05%)</title><rect x="60.8162%" y="565" width="0.0515%" height="15" fill="rgb(218,61,13)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.05%)</title><rect x="60.8162%" y="549" width="0.0515%" height="15" fill="rgb(210,80,52)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="559.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.05%)</title><rect x="60.8162%" y="533" width="0.0515%" height="15" fill="rgb(218,203,27)" fg:x="11802" fg:w="10"/><text x="61.0662%" y="543.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="60.8472%" y="517" width="0.0206%" height="15" fill="rgb(209,126,33)" fg:x="11808" fg:w="4"/><text x="61.0972%" y="527.50"></text></g><g><title>tcache_get_n (4 samples, 0.02%)</title><rect x="60.8472%" y="501" width="0.0206%" height="15" fill="rgb(234,173,41)" fg:x="11808" fg:w="4"/><text x="61.0972%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.07%)</title><rect x="60.8162%" y="725" width="0.0670%" height="15" fill="rgb(228,166,9)" fg:x="11802" fg:w="13"/><text x="61.0662%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.07%)</title><rect x="60.8162%" y="709" width="0.0670%" height="15" fill="rgb(208,124,43)" fg:x="11802" fg:w="13"/><text x="61.0662%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.07%)</title><rect x="60.8162%" y="693" width="0.0670%" height="15" fill="rgb(212,154,38)" fg:x="11802" fg:w="13"/><text x="61.0662%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.07%)</title><rect x="60.8162%" y="677" width="0.0670%" height="15" fill="rgb(246,179,35)" fg:x="11802" fg:w="13"/><text x="61.0662%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.02%)</title><rect x="60.8678%" y="661" width="0.0155%" height="15" fill="rgb(251,3,50)" fg:x="11812" fg:w="3"/><text x="61.1178%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="60.8678%" y="645" width="0.0155%" height="15" fill="rgb(219,96,8)" fg:x="11812" fg:w="3"/><text x="61.1178%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="60.8678%" y="629" width="0.0155%" height="15" fill="rgb(251,216,33)" fg:x="11812" fg:w="3"/><text x="61.1178%" y="639.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="60.8832%" y="533" width="0.0155%" height="15" fill="rgb(243,145,29)" fg:x="11815" fg:w="3"/><text x="61.1332%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="60.8832%" y="517" width="0.0155%" height="15" fill="rgb(210,75,20)" fg:x="11815" fg:w="3"/><text x="61.1332%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="60.8832%" y="501" width="0.0155%" height="15" fill="rgb(235,56,8)" fg:x="11815" fg:w="3"/><text x="61.1332%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="60.8832%" y="485" width="0.0155%" height="15" fill="rgb(226,175,49)" fg:x="11815" fg:w="3"/><text x="61.1332%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="60.8884%" y="469" width="0.0103%" height="15" fill="rgb(242,204,23)" fg:x="11816" fg:w="2"/><text x="61.1384%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="60.8884%" y="453" width="0.0103%" height="15" fill="rgb(225,104,24)" fg:x="11816" fg:w="2"/><text x="61.1384%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="60.8884%" y="437" width="0.0103%" height="15" fill="rgb(253,34,1)" fg:x="11816" fg:w="2"/><text x="61.1384%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="60.8884%" y="421" width="0.0103%" height="15" fill="rgb(233,199,23)" fg:x="11816" fg:w="2"/><text x="61.1384%" y="431.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (4 samples, 0.02%)</title><rect x="60.8832%" y="581" width="0.0206%" height="15" fill="rgb(247,7,51)" fg:x="11815" fg:w="4"/><text x="61.1332%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="60.8832%" y="565" width="0.0206%" height="15" fill="rgb(214,146,12)" fg:x="11815" fg:w="4"/><text x="61.1332%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (4 samples, 0.02%)</title><rect x="60.8832%" y="549" width="0.0206%" height="15" fill="rgb(234,181,43)" fg:x="11815" fg:w="4"/><text x="61.1332%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (8 samples, 0.04%)</title><rect x="60.8832%" y="693" width="0.0412%" height="15" fill="rgb(239,148,6)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.04%)</title><rect x="60.8832%" y="677" width="0.0412%" height="15" fill="rgb(206,151,17)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="687.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="60.8832%" y="661" width="0.0412%" height="15" fill="rgb(213,215,10)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="60.8832%" y="645" width="0.0412%" height="15" fill="rgb(215,220,44)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="60.8832%" y="629" width="0.0412%" height="15" fill="rgb(245,205,37)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.04%)</title><rect x="60.8832%" y="613" width="0.0412%" height="15" fill="rgb(245,130,43)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.04%)</title><rect x="60.8832%" y="597" width="0.0412%" height="15" fill="rgb(231,227,38)" fg:x="11815" fg:w="8"/><text x="61.1332%" y="607.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::insert_batch::{{closure}} (4 samples, 0.02%)</title><rect x="60.9038%" y="581" width="0.0206%" height="15" fill="rgb(233,185,4)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="591.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.02%)</title><rect x="60.9038%" y="565" width="0.0206%" height="15" fill="rgb(224,154,43)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (4 samples, 0.02%)</title><rect x="60.9038%" y="549" width="0.0206%" height="15" fill="rgb(235,156,15)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="559.50"></text></g><g><title>alloc::fmt::format::{{closure}} (4 samples, 0.02%)</title><rect x="60.9038%" y="533" width="0.0206%" height="15" fill="rgb(211,55,43)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.02%)</title><rect x="60.9038%" y="517" width="0.0206%" height="15" fill="rgb(247,149,40)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.02%)</title><rect x="60.9038%" y="501" width="0.0206%" height="15" fill="rgb(232,171,16)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (4 samples, 0.02%)</title><rect x="60.9038%" y="485" width="0.0206%" height="15" fill="rgb(215,117,49)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="495.50"></text></g><g><title>core::fmt::write (4 samples, 0.02%)</title><rect x="60.9038%" y="469" width="0.0206%" height="15" fill="rgb(246,194,11)" fg:x="11819" fg:w="4"/><text x="61.1538%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.01%)</title><rect x="60.9142%" y="453" width="0.0103%" height="15" fill="rgb(242,101,44)" fg:x="11821" fg:w="2"/><text x="61.1642%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.01%)</title><rect x="60.9142%" y="437" width="0.0103%" height="15" fill="rgb(226,174,6)" fg:x="11821" fg:w="2"/><text x="61.1642%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.01%)</title><rect x="60.9142%" y="421" width="0.0103%" height="15" fill="rgb(213,150,20)" fg:x="11821" fg:w="2"/><text x="61.1642%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.07%)</title><rect x="60.8832%" y="725" width="0.0721%" height="15" fill="rgb(222,124,42)" fg:x="11815" fg:w="14"/><text x="61.1332%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (14 samples, 0.07%)</title><rect x="60.8832%" y="709" width="0.0721%" height="15" fill="rgb(250,19,47)" fg:x="11815" fg:w="14"/><text x="61.1332%" y="719.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="60.9245%" y="693" width="0.0309%" height="15" fill="rgb(241,217,19)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="60.9245%" y="677" width="0.0309%" height="15" fill="rgb(207,210,34)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (6 samples, 0.03%)</title><rect x="60.9245%" y="661" width="0.0309%" height="15" fill="rgb(244,45,4)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="60.9245%" y="645" width="0.0309%" height="15" fill="rgb(252,134,50)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.03%)</title><rect x="60.9245%" y="629" width="0.0309%" height="15" fill="rgb(238,74,2)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.03%)</title><rect x="60.9245%" y="613" width="0.0309%" height="15" fill="rgb(226,58,46)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="623.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::insert_batch::{{closure}} (6 samples, 0.03%)</title><rect x="60.9245%" y="597" width="0.0309%" height="15" fill="rgb(232,83,35)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="607.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.03%)</title><rect x="60.9245%" y="581" width="0.0309%" height="15" fill="rgb(212,148,47)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (6 samples, 0.03%)</title><rect x="60.9245%" y="565" width="0.0309%" height="15" fill="rgb(235,29,1)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="575.50"></text></g><g><title>alloc::fmt::format::{{closure}} (6 samples, 0.03%)</title><rect x="60.9245%" y="549" width="0.0309%" height="15" fill="rgb(247,55,37)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.03%)</title><rect x="60.9245%" y="533" width="0.0309%" height="15" fill="rgb(222,48,3)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.03%)</title><rect x="60.9245%" y="517" width="0.0309%" height="15" fill="rgb(234,21,33)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (6 samples, 0.03%)</title><rect x="60.9245%" y="501" width="0.0309%" height="15" fill="rgb(247,178,53)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="511.50"></text></g><g><title>core::fmt::write (6 samples, 0.03%)</title><rect x="60.9245%" y="485" width="0.0309%" height="15" fill="rgb(225,75,7)" fg:x="11823" fg:w="6"/><text x="61.1745%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.02%)</title><rect x="60.9399%" y="469" width="0.0155%" height="15" fill="rgb(219,199,7)" fg:x="11826" fg:w="3"/><text x="61.1899%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (3 samples, 0.02%)</title><rect x="60.9399%" y="453" width="0.0155%" height="15" fill="rgb(209,93,42)" fg:x="11826" fg:w="3"/><text x="61.1899%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.02%)</title><rect x="60.9399%" y="437" width="0.0155%" height="15" fill="rgb(240,175,17)" fg:x="11826" fg:w="3"/><text x="61.1899%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.01%)</title><rect x="60.9451%" y="421" width="0.0103%" height="15" fill="rgb(232,106,7)" fg:x="11827" fg:w="2"/><text x="61.1951%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;,lru_mem::error::InsertError&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="60.9554%" y="725" width="0.0103%" height="15" fill="rgb(242,106,43)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="60.9554%" y="709" width="0.0103%" height="15" fill="rgb(242,61,37)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="60.9554%" y="693" width="0.0103%" height="15" fill="rgb(205,72,10)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="60.9554%" y="677" width="0.0103%" height="15" fill="rgb(214,184,36)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="687.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="60.9554%" y="661" width="0.0103%" height="15" fill="rgb(206,107,18)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="60.9554%" y="645" width="0.0103%" height="15" fill="rgb(210,75,5)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="60.9554%" y="629" width="0.0103%" height="15" fill="rgb(205,3,19)" fg:x="11829" fg:w="2"/><text x="61.2054%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (5 samples, 0.03%)</title><rect x="60.9657%" y="693" width="0.0258%" height="15" fill="rgb(207,181,42)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (5 samples, 0.03%)</title><rect x="60.9657%" y="677" width="0.0258%" height="15" fill="rgb(229,179,43)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.03%)</title><rect x="60.9657%" y="661" width="0.0258%" height="15" fill="rgb(246,95,30)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.03%)</title><rect x="60.9657%" y="645" width="0.0258%" height="15" fill="rgb(234,144,45)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="60.9657%" y="629" width="0.0258%" height="15" fill="rgb(250,54,25)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="60.9657%" y="613" width="0.0258%" height="15" fill="rgb(215,195,40)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="60.9657%" y="597" width="0.0258%" height="15" fill="rgb(233,188,42)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="607.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.03%)</title><rect x="60.9657%" y="581" width="0.0258%" height="15" fill="rgb(247,227,35)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.03%)</title><rect x="60.9657%" y="565" width="0.0258%" height="15" fill="rgb(249,124,27)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="575.50"></text></g><g><title>__GI___libc_free (5 samples, 0.03%)</title><rect x="60.9657%" y="549" width="0.0258%" height="15" fill="rgb(219,207,25)" fg:x="11831" fg:w="5"/><text x="61.2157%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="60.9811%" y="533" width="0.0103%" height="15" fill="rgb(241,216,47)" fg:x="11834" fg:w="2"/><text x="61.2311%" y="543.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::remove_entry (4 samples, 0.02%)</title><rect x="60.9914%" y="613" width="0.0206%" height="15" fill="rgb(233,82,50)" fg:x="11836" fg:w="4"/><text x="61.2414%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="60.9914%" y="597" width="0.0206%" height="15" fill="rgb(232,63,2)" fg:x="11836" fg:w="4"/><text x="61.2414%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="60.9914%" y="581" width="0.0206%" height="15" fill="rgb(236,184,28)" fg:x="11836" fg:w="4"/><text x="61.2414%" y="591.50"></text></g><g><title>hashbrown::raw::inner::h2 (4 samples, 0.02%)</title><rect x="60.9914%" y="565" width="0.0206%" height="15" fill="rgb(254,63,27)" fg:x="11836" fg:w="4"/><text x="61.2414%" y="575.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::eject_to_target (11 samples, 0.06%)</title><rect x="60.9657%" y="709" width="0.0567%" height="15" fill="rgb(253,106,28)" fg:x="11831" fg:w="11"/><text x="61.2157%" y="719.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_lru (6 samples, 0.03%)</title><rect x="60.9914%" y="693" width="0.0309%" height="15" fill="rgb(225,141,39)" fg:x="11836" fg:w="6"/><text x="61.2414%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.03%)</title><rect x="60.9914%" y="677" width="0.0309%" height="15" fill="rgb(222,157,20)" fg:x="11836" fg:w="6"/><text x="61.2414%" y="687.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_lru::{{closure}} (6 samples, 0.03%)</title><rect x="60.9914%" y="661" width="0.0309%" height="15" fill="rgb(210,190,9)" fg:x="11836" fg:w="6"/><text x="61.2414%" y="671.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_ptr (6 samples, 0.03%)</title><rect x="60.9914%" y="645" width="0.0309%" height="15" fill="rgb(242,167,7)" fg:x="11836" fg:w="6"/><text x="61.2414%" y="655.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::remove_from_table (6 samples, 0.03%)</title><rect x="60.9914%" y="629" width="0.0309%" height="15" fill="rgb(227,82,41)" fg:x="11836" fg:w="6"/><text x="61.2414%" y="639.50"></text></g><g><title>lru_mem::make_hash (2 samples, 0.01%)</title><rect x="61.0121%" y="613" width="0.0103%" height="15" fill="rgb(222,131,13)" fg:x="11840" fg:w="2"/><text x="61.2621%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="61.0121%" y="597" width="0.0103%" height="15" fill="rgb(221,98,26)" fg:x="11840" fg:w="2"/><text x="61.2621%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.01%)</title><rect x="61.0121%" y="581" width="0.0103%" height="15" fill="rgb(251,63,52)" fg:x="11840" fg:w="2"/><text x="61.2621%" y="591.50"></text></g><g><title>lru_mem::LruCache&lt;K,V,S&gt;::insert (12 samples, 0.06%)</title><rect x="60.9657%" y="725" width="0.0618%" height="15" fill="rgb(246,25,43)" fg:x="11831" fg:w="12"/><text x="61.2157%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::raw_statement::RawStatement&gt; (2 samples, 0.01%)</title><rect x="61.0378%" y="613" width="0.0103%" height="15" fill="rgb(247,167,15)" fg:x="11845" fg:w="2"/><text x="61.2878%" y="623.50"></text></g><g><title>sqlite3DbNNFreeNN (4 samples, 0.02%)</title><rect x="61.0533%" y="549" width="0.0206%" height="15" fill="rgb(240,104,42)" fg:x="11848" fg:w="4"/><text x="61.3033%" y="559.50"></text></g><g><title>sqlite3_free (2 samples, 0.01%)</title><rect x="61.0636%" y="533" width="0.0103%" height="15" fill="rgb(224,54,6)" fg:x="11850" fg:w="2"/><text x="61.3136%" y="543.50"></text></g><g><title>sqlite3_free (2 samples, 0.01%)</title><rect x="61.0636%" y="517" width="0.0103%" height="15" fill="rgb(244,108,35)" fg:x="11850" fg:w="2"/><text x="61.3136%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="61.0636%" y="501" width="0.0103%" height="15" fill="rgb(216,154,2)" fg:x="11850" fg:w="2"/><text x="61.3136%" y="511.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="61.0636%" y="485" width="0.0103%" height="15" fill="rgb(222,8,47)" fg:x="11850" fg:w="2"/><text x="61.3136%" y="495.50"></text></g><g><title>_int_free_merge_chunk (2 samples, 0.01%)</title><rect x="61.0636%" y="469" width="0.0103%" height="15" fill="rgb(252,93,1)" fg:x="11850" fg:w="2"/><text x="61.3136%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (9 samples, 0.05%)</title><rect x="61.0327%" y="677" width="0.0464%" height="15" fill="rgb(223,226,51)" fg:x="11844" fg:w="9"/><text x="61.2827%" y="687.50"></text></g><g><title>&lt;rusqlite::statement::Statement as core::ops::drop::Drop&gt;::drop (9 samples, 0.05%)</title><rect x="61.0327%" y="661" width="0.0464%" height="15" fill="rgb(206,147,9)" fg:x="11844" fg:w="9"/><text x="61.2827%" y="671.50"></text></g><g><title>rusqlite::statement::Statement::finalize_ (9 samples, 0.05%)</title><rect x="61.0327%" y="645" width="0.0464%" height="15" fill="rgb(248,180,41)" fg:x="11844" fg:w="9"/><text x="61.2827%" y="655.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize (8 samples, 0.04%)</title><rect x="61.0378%" y="629" width="0.0412%" height="15" fill="rgb(209,47,50)" fg:x="11845" fg:w="8"/><text x="61.2878%" y="639.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::finalize_ (6 samples, 0.03%)</title><rect x="61.0481%" y="613" width="0.0309%" height="15" fill="rgb(243,65,31)" fg:x="11847" fg:w="6"/><text x="61.2981%" y="623.50"></text></g><g><title>sqlite3_finalize (6 samples, 0.03%)</title><rect x="61.0481%" y="597" width="0.0309%" height="15" fill="rgb(228,128,1)" fg:x="11847" fg:w="6"/><text x="61.2981%" y="607.50"></text></g><g><title>sqlite3VdbeDelete (5 samples, 0.03%)</title><rect x="61.0533%" y="581" width="0.0258%" height="15" fill="rgb(231,192,16)" fg:x="11848" fg:w="5"/><text x="61.3033%" y="591.50"></text></g><g><title>sqlite3VdbeClearObject (5 samples, 0.03%)</title><rect x="61.0533%" y="565" width="0.0258%" height="15" fill="rgb(224,26,40)" fg:x="11848" fg:w="5"/><text x="61.3033%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="597" width="0.0412%" height="15" fill="rgb(214,192,17)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="581" width="0.0412%" height="15" fill="rgb(225,147,18)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="565" width="0.0412%" height="15" fill="rgb(205,35,11)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="549" width="0.0412%" height="15" fill="rgb(242,40,42)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="533" width="0.0412%" height="15" fill="rgb(250,170,13)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="517" width="0.0412%" height="15" fill="rgb(240,161,28)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8 samples, 0.04%)</title><rect x="61.0790%" y="501" width="0.0412%" height="15" fill="rgb(245,179,12)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (8 samples, 0.04%)</title><rect x="61.0790%" y="485" width="0.0412%" height="15" fill="rgb(250,92,32)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.04%)</title><rect x="61.0790%" y="469" width="0.0412%" height="15" fill="rgb(233,10,40)" fg:x="11853" fg:w="8"/><text x="61.3290%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="61.1357%" y="501" width="0.0155%" height="15" fill="rgb(217,98,1)" fg:x="11864" fg:w="3"/><text x="61.3857%" y="511.50"></text></g><g><title>memcpy (4 samples, 0.02%)</title><rect x="61.1357%" y="517" width="0.0206%" height="15" fill="rgb(238,202,7)" fg:x="11864" fg:w="4"/><text x="61.3857%" y="527.50"></text></g><g><title>&lt;rusqlite::params::ParamsFromIter&lt;I&gt; as rusqlite::params::Params&gt;::__bind_in (18 samples, 0.09%)</title><rect x="61.0790%" y="629" width="0.0928%" height="15" fill="rgb(222,91,3)" fg:x="11853" fg:w="18"/><text x="61.3290%" y="639.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameters (18 samples, 0.09%)</title><rect x="61.0790%" y="613" width="0.0928%" height="15" fill="rgb(211,170,49)" fg:x="11853" fg:w="18"/><text x="61.3290%" y="623.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (10 samples, 0.05%)</title><rect x="61.1203%" y="597" width="0.0515%" height="15" fill="rgb(253,139,18)" fg:x="11861" fg:w="10"/><text x="61.3703%" y="607.50"></text></g><g><title>sqlite3_bind_blob (8 samples, 0.04%)</title><rect x="61.1306%" y="581" width="0.0412%" height="15" fill="rgb(222,4,43)" fg:x="11863" fg:w="8"/><text x="61.3806%" y="591.50"></text></g><g><title>bindText (8 samples, 0.04%)</title><rect x="61.1306%" y="565" width="0.0412%" height="15" fill="rgb(207,205,12)" fg:x="11863" fg:w="8"/><text x="61.3806%" y="575.50"></text></g><g><title>bindText (8 samples, 0.04%)</title><rect x="61.1306%" y="549" width="0.0412%" height="15" fill="rgb(216,159,46)" fg:x="11863" fg:w="8"/><text x="61.3806%" y="559.50"></text></g><g><title>sqlite3VdbeMemSetStr (8 samples, 0.04%)</title><rect x="61.1306%" y="533" width="0.0412%" height="15" fill="rgb(236,115,1)" fg:x="11863" fg:w="8"/><text x="61.3806%" y="543.50"></text></g><g><title>sqlite3VdbeMemClearAndResize (3 samples, 0.02%)</title><rect x="61.1563%" y="517" width="0.0155%" height="15" fill="rgb(251,35,33)" fg:x="11868" fg:w="3"/><text x="61.4063%" y="527.50"></text></g><g><title>sqlite3VdbeMemClearAndResize (3 samples, 0.02%)</title><rect x="61.1563%" y="501" width="0.0155%" height="15" fill="rgb(248,62,51)" fg:x="11868" fg:w="3"/><text x="61.4063%" y="511.50"></text></g><g><title>sqlite3VdbeMemGrow (3 samples, 0.02%)</title><rect x="61.1563%" y="485" width="0.0155%" height="15" fill="rgb(254,180,19)" fg:x="11868" fg:w="3"/><text x="61.4063%" y="495.50"></text></g><g><title>sqlite3DbMallocRaw (3 samples, 0.02%)</title><rect x="61.1563%" y="469" width="0.0155%" height="15" fill="rgb(217,100,32)" fg:x="11868" fg:w="3"/><text x="61.4063%" y="479.50"></text></g><g><title>sqlite3DbMallocRawNN (3 samples, 0.02%)</title><rect x="61.1563%" y="453" width="0.0155%" height="15" fill="rgb(224,71,22)" fg:x="11868" fg:w="3"/><text x="61.4063%" y="463.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (2 samples, 0.01%)</title><rect x="61.1718%" y="613" width="0.0103%" height="15" fill="rgb(251,185,33)" fg:x="11871" fg:w="2"/><text x="61.4218%" y="623.50"></text></g><g><title>sqlite3_reset (2 samples, 0.01%)</title><rect x="61.1718%" y="597" width="0.0103%" height="15" fill="rgb(209,75,48)" fg:x="11871" fg:w="2"/><text x="61.4218%" y="607.50"></text></g><g><title>sqlite3OsFileSize (3 samples, 0.02%)</title><rect x="61.2027%" y="389" width="0.0155%" height="15" fill="rgb(253,190,16)" fg:x="11877" fg:w="3"/><text x="61.4527%" y="399.50"></text></g><g><title>unixFileSize (3 samples, 0.02%)</title><rect x="61.2027%" y="373" width="0.0155%" height="15" fill="rgb(226,140,1)" fg:x="11877" fg:w="3"/><text x="61.4527%" y="383.50"></text></g><g><title>__GI___fstat64 (3 samples, 0.02%)</title><rect x="61.2027%" y="357" width="0.0155%" height="15" fill="rgb(206,75,30)" fg:x="11877" fg:w="3"/><text x="61.4527%" y="367.50"></text></g><g><title>sqlite3OsRead (424 samples, 2.18%)</title><rect x="61.2182%" y="389" width="2.1849%" height="15" fill="rgb(231,208,37)" fg:x="11880" fg:w="424"/><text x="61.4682%" y="399.50">s..</text></g><g><title>unixRead (424 samples, 2.18%)</title><rect x="61.2182%" y="373" width="2.1849%" height="15" fill="rgb(238,136,40)" fg:x="11880" fg:w="424"/><text x="61.4682%" y="383.50">u..</text></g><g><title>seekAndRead (422 samples, 2.17%)</title><rect x="61.2285%" y="357" width="2.1746%" height="15" fill="rgb(247,137,17)" fg:x="11882" fg:w="422"/><text x="61.4785%" y="367.50">s..</text></g><g><title>__libc_pread64 (422 samples, 2.17%)</title><rect x="61.2285%" y="341" width="2.1746%" height="15" fill="rgb(240,60,40)" fg:x="11882" fg:w="422"/><text x="61.4785%" y="351.50">_..</text></g><g><title>__libc_pread64 (422 samples, 2.17%)</title><rect x="61.2285%" y="325" width="2.1746%" height="15" fill="rgb(236,68,50)" fg:x="11882" fg:w="422"/><text x="61.4785%" y="335.50">_..</text></g><g><title>__GI_fsync (1,959 samples, 10.09%)</title><rect x="63.4082%" y="325" width="10.0948%" height="15" fill="rgb(230,42,12)" fg:x="12305" fg:w="1959"/><text x="63.6582%" y="335.50">__GI_fsync</text></g><g><title>sqlite3OsSync (1,961 samples, 10.11%)</title><rect x="63.4031%" y="389" width="10.1051%" height="15" fill="rgb(219,16,16)" fg:x="12304" fg:w="1961"/><text x="63.6531%" y="399.50">sqlite3OsSync</text></g><g><title>sqlite3OsSync (1,961 samples, 10.11%)</title><rect x="63.4031%" y="373" width="10.1051%" height="15" fill="rgb(220,38,35)" fg:x="12304" fg:w="1961"/><text x="63.6531%" y="383.50">sqlite3OsSync</text></g><g><title>unixSync (1,961 samples, 10.11%)</title><rect x="63.4031%" y="357" width="10.1051%" height="15" fill="rgb(228,33,1)" fg:x="12304" fg:w="1961"/><text x="63.6531%" y="367.50">unixSync</text></g><g><title>full_fsync (1,960 samples, 10.10%)</title><rect x="63.4082%" y="341" width="10.1000%" height="15" fill="rgb(241,46,31)" fg:x="12305" fg:w="1960"/><text x="63.6582%" y="351.50">full_fsync</text></g><g><title>sqlite3OsTruncate (3 samples, 0.02%)</title><rect x="73.5082%" y="389" width="0.0155%" height="15" fill="rgb(232,58,20)" fg:x="14265" fg:w="3"/><text x="73.7582%" y="399.50"></text></g><g><title>unixTruncate (3 samples, 0.02%)</title><rect x="73.5082%" y="373" width="0.0155%" height="15" fill="rgb(206,228,53)" fg:x="14265" fg:w="3"/><text x="73.7582%" y="383.50"></text></g><g><title>robust_ftruncate (3 samples, 0.02%)</title><rect x="73.5082%" y="357" width="0.0155%" height="15" fill="rgb(206,88,33)" fg:x="14265" fg:w="3"/><text x="73.7582%" y="367.50"></text></g><g><title>__ftruncate64 (3 samples, 0.02%)</title><rect x="73.5082%" y="341" width="0.0155%" height="15" fill="rgb(238,69,7)" fg:x="14265" fg:w="3"/><text x="73.7582%" y="351.50"></text></g><g><title>sqlite3OsWrite (1,032 samples, 5.32%)</title><rect x="73.5237%" y="389" width="5.3179%" height="15" fill="rgb(250,21,46)" fg:x="14268" fg:w="1032"/><text x="73.7737%" y="399.50">sqlite3..</text></g><g><title>unixWrite (1,032 samples, 5.32%)</title><rect x="73.5237%" y="373" width="5.3179%" height="15" fill="rgb(215,212,21)" fg:x="14268" fg:w="1032"/><text x="73.7737%" y="383.50">unixWri..</text></g><g><title>seekAndWrite (1,032 samples, 5.32%)</title><rect x="73.5237%" y="357" width="5.3179%" height="15" fill="rgb(211,35,12)" fg:x="14268" fg:w="1032"/><text x="73.7737%" y="367.50">seekAnd..</text></g><g><title>seekAndWriteFd (1,032 samples, 5.32%)</title><rect x="73.5237%" y="341" width="5.3179%" height="15" fill="rgb(231,184,16)" fg:x="14268" fg:w="1032"/><text x="73.7737%" y="351.50">seekAnd..</text></g><g><title>__libc_pwrite64 (1,032 samples, 5.32%)</title><rect x="73.5237%" y="325" width="5.3179%" height="15" fill="rgb(242,140,15)" fg:x="14268" fg:w="1032"/><text x="73.7737%" y="335.50">__libc_..</text></g><g><title>__libc_pwrite64 (1,032 samples, 5.32%)</title><rect x="73.5237%" y="309" width="5.3179%" height="15" fill="rgb(220,37,14)" fg:x="14268" fg:w="1032"/><text x="73.7737%" y="319.50">__libc_..</text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="78.8467%" y="357" width="0.0155%" height="15" fill="rgb(223,146,22)" fg:x="15301" fg:w="3"/><text x="79.0967%" y="367.50"></text></g><g><title>walIteratorInit (6 samples, 0.03%)</title><rect x="78.8467%" y="389" width="0.0309%" height="15" fill="rgb(216,132,15)" fg:x="15301" fg:w="6"/><text x="79.0967%" y="399.50"></text></g><g><title>walMergesort (6 samples, 0.03%)</title><rect x="78.8467%" y="373" width="0.0309%" height="15" fill="rgb(248,83,5)" fg:x="15301" fg:w="6"/><text x="79.0967%" y="383.50"></text></g><g><title>walMerge (3 samples, 0.02%)</title><rect x="78.8622%" y="357" width="0.0155%" height="15" fill="rgb(231,206,48)" fg:x="15304" fg:w="3"/><text x="79.1122%" y="367.50"></text></g><g><title>walIteratorNext (6 samples, 0.03%)</title><rect x="78.8777%" y="389" width="0.0309%" height="15" fill="rgb(253,185,37)" fg:x="15307" fg:w="6"/><text x="79.1277%" y="399.50"></text></g><g><title>doWalCallbacks (3,440 samples, 17.73%)</title><rect x="61.2027%" y="549" width="17.7265%" height="15" fill="rgb(208,21,44)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="559.50">doWalCallbacks</text></g><g><title>sqlite3WalDefaultHook (3,440 samples, 17.73%)</title><rect x="61.2027%" y="533" width="17.7265%" height="15" fill="rgb(236,125,4)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="543.50">sqlite3WalDefaultHook</text></g><g><title>sqlite3WalDefaultHook (3,440 samples, 17.73%)</title><rect x="61.2027%" y="517" width="17.7265%" height="15" fill="rgb(226,134,25)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="527.50">sqlite3WalDefaultHook</text></g><g><title>sqlite3_wal_checkpoint_v2 (3,440 samples, 17.73%)</title><rect x="61.2027%" y="501" width="17.7265%" height="15" fill="rgb(250,201,12)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="511.50">sqlite3_wal_checkpoint_v2</text></g><g><title>sqlite3_wal_checkpoint_v2 (3,440 samples, 17.73%)</title><rect x="61.2027%" y="485" width="17.7265%" height="15" fill="rgb(225,92,18)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="495.50">sqlite3_wal_checkpoint_v2</text></g><g><title>sqlite3Checkpoint (3,440 samples, 17.73%)</title><rect x="61.2027%" y="469" width="17.7265%" height="15" fill="rgb(227,35,22)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="479.50">sqlite3Checkpoint</text></g><g><title>sqlite3BtreeCheckpoint (3,440 samples, 17.73%)</title><rect x="61.2027%" y="453" width="17.7265%" height="15" fill="rgb(214,180,52)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="463.50">sqlite3BtreeCheckpoint</text></g><g><title>sqlite3PagerCheckpoint (3,440 samples, 17.73%)</title><rect x="61.2027%" y="437" width="17.7265%" height="15" fill="rgb(233,55,38)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="447.50">sqlite3PagerCheckpoint</text></g><g><title>sqlite3WalCheckpoint (3,440 samples, 17.73%)</title><rect x="61.2027%" y="421" width="17.7265%" height="15" fill="rgb(249,171,43)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="431.50">sqlite3WalCheckpoint</text></g><g><title>walCheckpoint (3,440 samples, 17.73%)</title><rect x="61.2027%" y="405" width="17.7265%" height="15" fill="rgb(239,87,2)" fg:x="11877" fg:w="3440"/><text x="61.4527%" y="415.50">walCheckpoint</text></g><g><title>walUnlockExclusive (4 samples, 0.02%)</title><rect x="78.9086%" y="389" width="0.0206%" height="15" fill="rgb(248,141,5)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="399.50"></text></g><g><title>walUnlockExclusive (4 samples, 0.02%)</title><rect x="78.9086%" y="373" width="0.0206%" height="15" fill="rgb(238,33,42)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="383.50"></text></g><g><title>sqlite3OsShmLock (4 samples, 0.02%)</title><rect x="78.9086%" y="357" width="0.0206%" height="15" fill="rgb(231,57,19)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="367.50"></text></g><g><title>unixShmLock (4 samples, 0.02%)</title><rect x="78.9086%" y="341" width="0.0206%" height="15" fill="rgb(214,78,53)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="351.50"></text></g><g><title>unixShmSystemLock (4 samples, 0.02%)</title><rect x="78.9086%" y="325" width="0.0206%" height="15" fill="rgb(206,132,29)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="335.50"></text></g><g><title>__GI___libc_fcntl64 (4 samples, 0.02%)</title><rect x="78.9086%" y="309" width="0.0206%" height="15" fill="rgb(248,174,31)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="319.50"></text></g><g><title>__fcntl64_nocancel_adjusted (4 samples, 0.02%)</title><rect x="78.9086%" y="293" width="0.0206%" height="15" fill="rgb(221,87,13)" fg:x="15313" fg:w="4"/><text x="79.1586%" y="303.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl core::ffi::c_str::CStr&gt;::to_string_lossy (11 samples, 0.06%)</title><rect x="78.9344%" y="517" width="0.0567%" height="15" fill="rgb(223,197,17)" fg:x="15318" fg:w="11"/><text x="79.1844%" y="527.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (11 samples, 0.06%)</title><rect x="78.9344%" y="501" width="0.0567%" height="15" fill="rgb(220,144,50)" fg:x="15318" fg:w="11"/><text x="79.1844%" y="511.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="78.9447%" y="485" width="0.0464%" height="15" fill="rgb(244,201,11)" fg:x="15320" fg:w="9"/><text x="79.1947%" y="495.50"></text></g><g><title>rusqlite::trace::&lt;impl rusqlite::Connection&gt;::trace::trace_callback (12 samples, 0.06%)</title><rect x="78.9344%" y="533" width="0.0618%" height="15" fill="rgb(249,81,34)" fg:x="15318" fg:w="12"/><text x="79.1844%" y="543.50"></text></g><g><title>walIndexReadHdr (3 samples, 0.02%)</title><rect x="79.0426%" y="405" width="0.0155%" height="15" fill="rgb(205,161,12)" fg:x="15339" fg:w="3"/><text x="79.2926%" y="415.50"></text></g><g><title>walIndexTryHdr (2 samples, 0.01%)</title><rect x="79.0477%" y="389" width="0.0103%" height="15" fill="rgb(252,139,50)" fg:x="15340" fg:w="2"/><text x="79.2977%" y="399.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="79.0580%" y="341" width="0.0103%" height="15" fill="rgb(205,169,14)" fg:x="15342" fg:w="2"/><text x="79.3080%" y="351.50"></text></g><g><title>walLockExclusive (58 samples, 0.30%)</title><rect x="79.0580%" y="405" width="0.2989%" height="15" fill="rgb(248,198,33)" fg:x="15342" fg:w="58"/><text x="79.3080%" y="415.50"></text></g><g><title>walLockExclusive (58 samples, 0.30%)</title><rect x="79.0580%" y="389" width="0.2989%" height="15" fill="rgb(236,23,21)" fg:x="15342" fg:w="58"/><text x="79.3080%" y="399.50"></text></g><g><title>sqlite3OsShmLock (58 samples, 0.30%)</title><rect x="79.0580%" y="373" width="0.2989%" height="15" fill="rgb(231,13,38)" fg:x="15342" fg:w="58"/><text x="79.3080%" y="383.50"></text></g><g><title>unixShmLock (58 samples, 0.30%)</title><rect x="79.0580%" y="357" width="0.2989%" height="15" fill="rgb(239,139,21)" fg:x="15342" fg:w="58"/><text x="79.3080%" y="367.50"></text></g><g><title>unixShmSystemLock (55 samples, 0.28%)</title><rect x="79.0735%" y="341" width="0.2834%" height="15" fill="rgb(222,164,45)" fg:x="15345" fg:w="55"/><text x="79.3235%" y="351.50"></text></g><g><title>__GI___libc_fcntl64 (55 samples, 0.28%)</title><rect x="79.0735%" y="325" width="0.2834%" height="15" fill="rgb(230,52,27)" fg:x="15345" fg:w="55"/><text x="79.3235%" y="335.50"></text></g><g><title>__fcntl64_nocancel_adjusted (55 samples, 0.28%)</title><rect x="79.0735%" y="309" width="0.2834%" height="15" fill="rgb(227,143,42)" fg:x="15345" fg:w="55"/><text x="79.3235%" y="319.50"></text></g><g><title>walShmBarrier (3 samples, 0.02%)</title><rect x="79.3569%" y="405" width="0.0155%" height="15" fill="rgb(249,127,1)" fg:x="15400" fg:w="3"/><text x="79.6069%" y="415.50"></text></g><g><title>walShmBarrier (3 samples, 0.02%)</title><rect x="79.3569%" y="389" width="0.0155%" height="15" fill="rgb(243,107,26)" fg:x="15400" fg:w="3"/><text x="79.6069%" y="399.50"></text></g><g><title>sqlite3OsShmBarrier (3 samples, 0.02%)</title><rect x="79.3569%" y="373" width="0.0155%" height="15" fill="rgb(225,7,45)" fg:x="15400" fg:w="3"/><text x="79.6069%" y="383.50"></text></g><g><title>unixShmBarrier (2 samples, 0.01%)</title><rect x="79.3621%" y="357" width="0.0103%" height="15" fill="rgb(241,88,38)" fg:x="15401" fg:w="2"/><text x="79.6121%" y="367.50"></text></g><g><title>lockBtree (70 samples, 0.36%)</title><rect x="79.0220%" y="501" width="0.3607%" height="15" fill="rgb(226,121,9)" fg:x="15335" fg:w="70"/><text x="79.2720%" y="511.50"></text></g><g><title>sqlite3PagerSharedLock (69 samples, 0.36%)</title><rect x="79.0271%" y="485" width="0.3556%" height="15" fill="rgb(253,60,29)" fg:x="15336" fg:w="69"/><text x="79.2771%" y="495.50"></text></g><g><title>pagerBeginReadTransaction (69 samples, 0.36%)</title><rect x="79.0271%" y="469" width="0.3556%" height="15" fill="rgb(244,181,39)" fg:x="15336" fg:w="69"/><text x="79.2771%" y="479.50"></text></g><g><title>sqlite3WalBeginReadTransaction (69 samples, 0.36%)</title><rect x="79.0271%" y="453" width="0.3556%" height="15" fill="rgb(252,203,31)" fg:x="15336" fg:w="69"/><text x="79.2771%" y="463.50"></text></g><g><title>walBeginReadTransaction (69 samples, 0.36%)</title><rect x="79.0271%" y="437" width="0.3556%" height="15" fill="rgb(224,120,8)" fg:x="15336" fg:w="69"/><text x="79.2771%" y="447.50"></text></g><g><title>walTryBeginRead (69 samples, 0.36%)</title><rect x="79.0271%" y="421" width="0.3556%" height="15" fill="rgb(205,171,54)" fg:x="15336" fg:w="69"/><text x="79.2771%" y="431.50"></text></g><g><title>walUnlockExclusive (2 samples, 0.01%)</title><rect x="79.3724%" y="405" width="0.0103%" height="15" fill="rgb(235,89,11)" fg:x="15403" fg:w="2"/><text x="79.6224%" y="415.50"></text></g><g><title>walUnlockExclusive (2 samples, 0.01%)</title><rect x="79.3724%" y="389" width="0.0103%" height="15" fill="rgb(212,180,28)" fg:x="15403" fg:w="2"/><text x="79.6224%" y="399.50"></text></g><g><title>sqlite3OsShmLock (2 samples, 0.01%)</title><rect x="79.3724%" y="373" width="0.0103%" height="15" fill="rgb(247,84,49)" fg:x="15403" fg:w="2"/><text x="79.6224%" y="383.50"></text></g><g><title>unixShmLock (2 samples, 0.01%)</title><rect x="79.3724%" y="357" width="0.0103%" height="15" fill="rgb(236,187,52)" fg:x="15403" fg:w="2"/><text x="79.6224%" y="367.50"></text></g><g><title>sqlite3BtreeBeginTrans (84 samples, 0.43%)</title><rect x="78.9962%" y="533" width="0.4329%" height="15" fill="rgb(227,24,15)" fg:x="15330" fg:w="84"/><text x="79.2462%" y="543.50"></text></g><g><title>btreeBeginTrans (84 samples, 0.43%)</title><rect x="78.9962%" y="517" width="0.4329%" height="15" fill="rgb(227,211,13)" fg:x="15330" fg:w="84"/><text x="79.2462%" y="527.50"></text></g><g><title>sqlite3PagerBegin (9 samples, 0.05%)</title><rect x="79.3827%" y="501" width="0.0464%" height="15" fill="rgb(245,52,14)" fg:x="15405" fg:w="9"/><text x="79.6327%" y="511.50"></text></g><g><title>sqlite3WalBeginWriteTransaction (9 samples, 0.05%)</title><rect x="79.3827%" y="485" width="0.0464%" height="15" fill="rgb(225,185,13)" fg:x="15405" fg:w="9"/><text x="79.6327%" y="495.50"></text></g><g><title>walLockExclusive (9 samples, 0.05%)</title><rect x="79.3827%" y="469" width="0.0464%" height="15" fill="rgb(217,160,29)" fg:x="15405" fg:w="9"/><text x="79.6327%" y="479.50"></text></g><g><title>walLockExclusive (9 samples, 0.05%)</title><rect x="79.3827%" y="453" width="0.0464%" height="15" fill="rgb(216,115,53)" fg:x="15405" fg:w="9"/><text x="79.6327%" y="463.50"></text></g><g><title>sqlite3OsShmLock (9 samples, 0.05%)</title><rect x="79.3827%" y="437" width="0.0464%" height="15" fill="rgb(236,99,5)" fg:x="15405" fg:w="9"/><text x="79.6327%" y="447.50"></text></g><g><title>unixShmLock (9 samples, 0.05%)</title><rect x="79.3827%" y="421" width="0.0464%" height="15" fill="rgb(222,60,38)" fg:x="15405" fg:w="9"/><text x="79.6327%" y="431.50"></text></g><g><title>unixShmSystemLock (8 samples, 0.04%)</title><rect x="79.3878%" y="405" width="0.0412%" height="15" fill="rgb(212,82,22)" fg:x="15406" fg:w="8"/><text x="79.6378%" y="415.50"></text></g><g><title>__GI___libc_fcntl64 (8 samples, 0.04%)</title><rect x="79.3878%" y="389" width="0.0412%" height="15" fill="rgb(214,48,28)" fg:x="15406" fg:w="8"/><text x="79.6378%" y="399.50"></text></g><g><title>__fcntl64_nocancel_adjusted (8 samples, 0.04%)</title><rect x="79.3878%" y="373" width="0.0412%" height="15" fill="rgb(245,196,50)" fg:x="15406" fg:w="8"/><text x="79.6378%" y="383.50"></text></g><g><title>cachedCellSize (7 samples, 0.04%)</title><rect x="79.5321%" y="485" width="0.0361%" height="15" fill="rgb(225,159,46)" fg:x="15434" fg:w="7"/><text x="79.7821%" y="495.50"></text></g><g><title>computeCellSize (7 samples, 0.04%)</title><rect x="79.5321%" y="469" width="0.0361%" height="15" fill="rgb(207,195,48)" fg:x="15434" fg:w="7"/><text x="79.7821%" y="479.50"></text></g><g><title>cellSizePtrIdxLeaf (4 samples, 0.02%)</title><rect x="79.5476%" y="453" width="0.0206%" height="15" fill="rgb(240,73,3)" fg:x="15437" fg:w="4"/><text x="79.7976%" y="463.50"></text></g><g><title>pageFreeArray (3 samples, 0.02%)</title><rect x="79.5733%" y="469" width="0.0155%" height="15" fill="rgb(245,57,23)" fg:x="15442" fg:w="3"/><text x="79.8233%" y="479.50"></text></g><g><title>pageInsertArray (2 samples, 0.01%)</title><rect x="79.5888%" y="469" width="0.0103%" height="15" fill="rgb(240,75,18)" fg:x="15445" fg:w="2"/><text x="79.8388%" y="479.50"></text></g><g><title>populateCellCache (3 samples, 0.02%)</title><rect x="79.5991%" y="469" width="0.0155%" height="15" fill="rgb(238,168,12)" fg:x="15447" fg:w="3"/><text x="79.8491%" y="479.50"></text></g><g><title>cellSizePtrIdxLeaf (3 samples, 0.02%)</title><rect x="79.5991%" y="453" width="0.0155%" height="15" fill="rgb(226,20,40)" fg:x="15447" fg:w="3"/><text x="79.8491%" y="463.50"></text></g><g><title>editPage (10 samples, 0.05%)</title><rect x="79.5733%" y="485" width="0.0515%" height="15" fill="rgb(224,130,35)" fg:x="15442" fg:w="10"/><text x="79.8233%" y="495.50"></text></g><g><title>rebuildPage (2 samples, 0.01%)</title><rect x="79.6146%" y="469" width="0.0103%" height="15" fill="rgb(225,63,41)" fg:x="15450" fg:w="2"/><text x="79.8646%" y="479.50"></text></g><g><title>memmove (2 samples, 0.01%)</title><rect x="79.6146%" y="453" width="0.0103%" height="15" fill="rgb(219,3,3)" fg:x="15450" fg:w="2"/><text x="79.8646%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="79.6146%" y="437" width="0.0103%" height="15" fill="rgb(218,157,4)" fg:x="15450" fg:w="2"/><text x="79.8646%" y="447.50"></text></g><g><title>getAndInitPage (56 samples, 0.29%)</title><rect x="79.6249%" y="485" width="0.2886%" height="15" fill="rgb(232,76,36)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="495.50"></text></g><g><title>sqlite3PagerGet (56 samples, 0.29%)</title><rect x="79.6249%" y="469" width="0.2886%" height="15" fill="rgb(247,36,0)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="479.50"></text></g><g><title>getPageNormal (56 samples, 0.29%)</title><rect x="79.6249%" y="453" width="0.2886%" height="15" fill="rgb(205,2,34)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="463.50"></text></g><g><title>readDbPage (56 samples, 0.29%)</title><rect x="79.6249%" y="437" width="0.2886%" height="15" fill="rgb(239,136,13)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="447.50"></text></g><g><title>sqlite3OsRead (56 samples, 0.29%)</title><rect x="79.6249%" y="421" width="0.2886%" height="15" fill="rgb(253,122,12)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="431.50"></text></g><g><title>unixRead (56 samples, 0.29%)</title><rect x="79.6249%" y="405" width="0.2886%" height="15" fill="rgb(222,174,7)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="415.50"></text></g><g><title>seekAndRead (56 samples, 0.29%)</title><rect x="79.6249%" y="389" width="0.2886%" height="15" fill="rgb(208,191,42)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="399.50"></text></g><g><title>__libc_pread64 (56 samples, 0.29%)</title><rect x="79.6249%" y="373" width="0.2886%" height="15" fill="rgb(237,212,15)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="383.50"></text></g><g><title>__libc_pread64 (56 samples, 0.29%)</title><rect x="79.6249%" y="357" width="0.2886%" height="15" fill="rgb(215,65,20)" fg:x="15452" fg:w="56"/><text x="79.8749%" y="367.50"></text></g><g><title>insertCell (2 samples, 0.01%)</title><rect x="79.9134%" y="485" width="0.0103%" height="15" fill="rgb(232,103,11)" fg:x="15508" fg:w="2"/><text x="80.1634%" y="495.50"></text></g><g><title>allocateSpace (2 samples, 0.01%)</title><rect x="79.9134%" y="469" width="0.0103%" height="15" fill="rgb(235,148,18)" fg:x="15508" fg:w="2"/><text x="80.1634%" y="479.50"></text></g><g><title>defragmentPage (2 samples, 0.01%)</title><rect x="79.9134%" y="453" width="0.0103%" height="15" fill="rgb(240,173,7)" fg:x="15508" fg:w="2"/><text x="80.1634%" y="463.50"></text></g><g><title>memcpy (2 samples, 0.01%)</title><rect x="79.9134%" y="437" width="0.0103%" height="15" fill="rgb(228,182,25)" fg:x="15508" fg:w="2"/><text x="80.1634%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="79.9134%" y="421" width="0.0103%" height="15" fill="rgb(247,3,52)" fg:x="15508" fg:w="2"/><text x="80.1634%" y="431.50"></text></g><g><title>balance_nonroot (92 samples, 0.47%)</title><rect x="79.4703%" y="501" width="0.4741%" height="15" fill="rgb(226,155,8)" fg:x="15422" fg:w="92"/><text x="79.7203%" y="511.50"></text></g><g><title>sqlite3DbMallocRaw (4 samples, 0.02%)</title><rect x="79.9237%" y="485" width="0.0206%" height="15" fill="rgb(243,195,38)" fg:x="15510" fg:w="4"/><text x="80.1737%" y="495.50"></text></g><g><title>sqlite3Malloc (4 samples, 0.02%)</title><rect x="79.9237%" y="469" width="0.0206%" height="15" fill="rgb(254,181,33)" fg:x="15510" fg:w="4"/><text x="80.1737%" y="479.50"></text></g><g><title>sqlite3Malloc (4 samples, 0.02%)</title><rect x="79.9237%" y="453" width="0.0206%" height="15" fill="rgb(232,98,23)" fg:x="15510" fg:w="4"/><text x="80.1737%" y="463.50"></text></g><g><title>mallocWithAlarm (3 samples, 0.02%)</title><rect x="79.9289%" y="437" width="0.0155%" height="15" fill="rgb(205,23,10)" fg:x="15511" fg:w="3"/><text x="80.1789%" y="447.50"></text></g><g><title>sqlite3MemMalloc (3 samples, 0.02%)</title><rect x="79.9289%" y="421" width="0.0155%" height="15" fill="rgb(212,124,38)" fg:x="15511" fg:w="3"/><text x="80.1789%" y="431.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="79.9289%" y="405" width="0.0155%" height="15" fill="rgb(228,207,2)" fg:x="15511" fg:w="3"/><text x="80.1789%" y="415.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="79.9289%" y="389" width="0.0155%" height="15" fill="rgb(215,120,22)" fg:x="15511" fg:w="3"/><text x="80.1789%" y="399.50"></text></g><g><title>balance (93 samples, 0.48%)</title><rect x="79.4703%" y="517" width="0.4792%" height="15" fill="rgb(251,172,33)" fg:x="15422" fg:w="93"/><text x="79.7203%" y="527.50"></text></g><g><title>cellSizePtrIdxLeaf (2 samples, 0.01%)</title><rect x="79.9753%" y="469" width="0.0103%" height="15" fill="rgb(250,83,2)" fg:x="15520" fg:w="2"/><text x="80.2253%" y="479.50"></text></g><g><title>defragmentPage (6 samples, 0.03%)</title><rect x="79.9650%" y="485" width="0.0309%" height="15" fill="rgb(210,132,53)" fg:x="15518" fg:w="6"/><text x="80.2150%" y="495.50"></text></g><g><title>memcpy (2 samples, 0.01%)</title><rect x="79.9856%" y="469" width="0.0103%" height="15" fill="rgb(221,208,36)" fg:x="15522" fg:w="2"/><text x="80.2356%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="79.9856%" y="453" width="0.0103%" height="15" fill="rgb(205,192,46)" fg:x="15522" fg:w="2"/><text x="80.2356%" y="463.50"></text></g><g><title>allocateSpace (7 samples, 0.04%)</title><rect x="79.9650%" y="501" width="0.0361%" height="15" fill="rgb(223,163,14)" fg:x="15518" fg:w="7"/><text x="80.2150%" y="511.50"></text></g><g><title>insertCellFast (9 samples, 0.05%)</title><rect x="79.9650%" y="517" width="0.0464%" height="15" fill="rgb(218,41,28)" fg:x="15518" fg:w="9"/><text x="80.2150%" y="527.50"></text></g><g><title>memmove (2 samples, 0.01%)</title><rect x="80.0010%" y="501" width="0.0103%" height="15" fill="rgb(235,104,10)" fg:x="15525" fg:w="2"/><text x="80.2510%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="80.0010%" y="485" width="0.0103%" height="15" fill="rgb(246,17,4)" fg:x="15525" fg:w="2"/><text x="80.2510%" y="495.50"></text></g><g><title>btreeInitPage (2 samples, 0.01%)</title><rect x="80.2587%" y="485" width="0.0103%" height="15" fill="rgb(240,7,16)" fg:x="15575" fg:w="2"/><text x="80.5087%" y="495.50"></text></g><g><title>decodeFlags (2 samples, 0.01%)</title><rect x="80.2587%" y="469" width="0.0103%" height="15" fill="rgb(213,160,23)" fg:x="15575" fg:w="2"/><text x="80.5087%" y="479.50"></text></g><g><title>sqlite3OsRead (543 samples, 2.80%)</title><rect x="80.2896%" y="437" width="2.7981%" height="15" fill="rgb(251,179,49)" fg:x="15581" fg:w="543"/><text x="80.5396%" y="447.50">sq..</text></g><g><title>unixRead (543 samples, 2.80%)</title><rect x="80.2896%" y="421" width="2.7981%" height="15" fill="rgb(247,198,10)" fg:x="15581" fg:w="543"/><text x="80.5396%" y="431.50">un..</text></g><g><title>seekAndRead (540 samples, 2.78%)</title><rect x="80.3051%" y="405" width="2.7826%" height="15" fill="rgb(220,65,29)" fg:x="15584" fg:w="540"/><text x="80.5551%" y="415.50">se..</text></g><g><title>__libc_pread64 (540 samples, 2.78%)</title><rect x="80.3051%" y="389" width="2.7826%" height="15" fill="rgb(237,171,28)" fg:x="15584" fg:w="540"/><text x="80.5551%" y="399.50">__..</text></g><g><title>__libc_pread64 (540 samples, 2.78%)</title><rect x="80.3051%" y="373" width="2.7826%" height="15" fill="rgb(228,44,26)" fg:x="15584" fg:w="540"/><text x="80.5551%" y="383.50">__..</text></g><g><title>readDbPage (548 samples, 2.82%)</title><rect x="80.2896%" y="453" width="2.8239%" height="15" fill="rgb(216,210,27)" fg:x="15581" fg:w="548"/><text x="80.5396%" y="463.50">re..</text></g><g><title>sqlite3WalFindFrame (5 samples, 0.03%)</title><rect x="83.0877%" y="437" width="0.0258%" height="15" fill="rgb(252,10,17)" fg:x="16124" fg:w="5"/><text x="83.3377%" y="447.50"></text></g><g><title>walFindFrame (5 samples, 0.03%)</title><rect x="83.0877%" y="421" width="0.0258%" height="15" fill="rgb(214,172,30)" fg:x="16124" fg:w="5"/><text x="83.3377%" y="431.50"></text></g><g><title>___pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="83.1186%" y="405" width="0.0155%" height="15" fill="rgb(253,130,48)" fg:x="16130" fg:w="3"/><text x="83.3686%" y="415.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="83.1186%" y="389" width="0.0155%" height="15" fill="rgb(226,99,43)" fg:x="16130" fg:w="3"/><text x="83.3686%" y="399.50"></text></g><g><title>lll_mutex_unlock_optimized (3 samples, 0.02%)</title><rect x="83.1186%" y="373" width="0.0155%" height="15" fill="rgb(239,111,26)" fg:x="16130" fg:w="3"/><text x="83.3686%" y="383.50"></text></g><g><title>pcache1FetchStage2 (4 samples, 0.02%)</title><rect x="83.1702%" y="373" width="0.0206%" height="15" fill="rgb(240,27,53)" fg:x="16140" fg:w="4"/><text x="83.4202%" y="383.50"></text></g><g><title>sqlite3PcacheFetch (17 samples, 0.09%)</title><rect x="83.1135%" y="453" width="0.0876%" height="15" fill="rgb(254,163,12)" fg:x="16129" fg:w="17"/><text x="83.3635%" y="463.50"></text></g><g><title>pcache1Fetch (17 samples, 0.09%)</title><rect x="83.1135%" y="437" width="0.0876%" height="15" fill="rgb(225,51,48)" fg:x="16129" fg:w="17"/><text x="83.3635%" y="447.50"></text></g><g><title>pcache1FetchWithMutex (17 samples, 0.09%)</title><rect x="83.1135%" y="421" width="0.0876%" height="15" fill="rgb(205,19,32)" fg:x="16129" fg:w="17"/><text x="83.3635%" y="431.50"></text></g><g><title>pcache1FetchNoMutex (13 samples, 0.07%)</title><rect x="83.1341%" y="405" width="0.0670%" height="15" fill="rgb(218,119,26)" fg:x="16133" fg:w="13"/><text x="83.3841%" y="415.50"></text></g><g><title>pcache1FetchNoMutex (6 samples, 0.03%)</title><rect x="83.1702%" y="389" width="0.0309%" height="15" fill="rgb(231,173,33)" fg:x="16140" fg:w="6"/><text x="83.4202%" y="399.50"></text></g><g><title>sqlite3ExprDataType (2 samples, 0.01%)</title><rect x="83.1908%" y="373" width="0.0103%" height="15" fill="rgb(241,100,29)" fg:x="16144" fg:w="2"/><text x="83.4408%" y="383.50"></text></g><g><title>getAndInitPage (575 samples, 2.96%)</title><rect x="80.2587%" y="501" width="2.9630%" height="15" fill="rgb(250,194,34)" fg:x="15575" fg:w="575"/><text x="80.5087%" y="511.50">get..</text></g><g><title>sqlite3PagerGet (573 samples, 2.95%)</title><rect x="80.2690%" y="485" width="2.9527%" height="15" fill="rgb(215,23,50)" fg:x="15577" fg:w="573"/><text x="80.5190%" y="495.50">sql..</text></g><g><title>getPageNormal (569 samples, 2.93%)</title><rect x="80.2896%" y="469" width="2.9321%" height="15" fill="rgb(206,49,37)" fg:x="15581" fg:w="569"/><text x="80.5396%" y="479.50">ge..</text></g><g><title>sqlite3PcacheFetchFinish (4 samples, 0.02%)</title><rect x="83.2011%" y="453" width="0.0206%" height="15" fill="rgb(247,39,21)" fg:x="16146" fg:w="4"/><text x="83.4511%" y="463.50"></text></g><g><title>getAndInitPage (3 samples, 0.02%)</title><rect x="83.2268%" y="485" width="0.0155%" height="15" fill="rgb(209,220,15)" fg:x="16151" fg:w="3"/><text x="83.4768%" y="495.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.01%)</title><rect x="83.2320%" y="469" width="0.0103%" height="15" fill="rgb(206,41,33)" fg:x="16152" fg:w="2"/><text x="83.4820%" y="479.50"></text></g><g><title>getPageNormal (2 samples, 0.01%)</title><rect x="83.2320%" y="453" width="0.0103%" height="15" fill="rgb(221,225,45)" fg:x="16152" fg:w="2"/><text x="83.4820%" y="463.50"></text></g><g><title>sqlite3PcacheFetch (2 samples, 0.01%)</title><rect x="83.2320%" y="437" width="0.0103%" height="15" fill="rgb(216,27,18)" fg:x="16152" fg:w="2"/><text x="83.4820%" y="447.50"></text></g><g><title>pcache1Fetch (2 samples, 0.01%)</title><rect x="83.2320%" y="421" width="0.0103%" height="15" fill="rgb(250,193,34)" fg:x="16152" fg:w="2"/><text x="83.4820%" y="431.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.01%)</title><rect x="83.2320%" y="405" width="0.0103%" height="15" fill="rgb(227,215,20)" fg:x="16152" fg:w="2"/><text x="83.4820%" y="415.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.01%)</title><rect x="83.2320%" y="389" width="0.0103%" height="15" fill="rgb(242,211,27)" fg:x="16152" fg:w="2"/><text x="83.4820%" y="399.50"></text></g><g><title>pcache1Unpin (2 samples, 0.01%)</title><rect x="83.2423%" y="453" width="0.0103%" height="15" fill="rgb(229,190,30)" fg:x="16154" fg:w="2"/><text x="83.4923%" y="463.50"></text></g><g><title>moveToRoot (7 samples, 0.04%)</title><rect x="83.2217%" y="501" width="0.0361%" height="15" fill="rgb(253,31,29)" fg:x="16150" fg:w="7"/><text x="83.4717%" y="511.50"></text></g><g><title>releasePageNotNull (3 samples, 0.02%)</title><rect x="83.2423%" y="485" width="0.0155%" height="15" fill="rgb(229,177,52)" fg:x="16154" fg:w="3"/><text x="83.4923%" y="495.50"></text></g><g><title>sqlite3PagerUnrefNotNull (3 samples, 0.02%)</title><rect x="83.2423%" y="469" width="0.0155%" height="15" fill="rgb(226,88,8)" fg:x="16154" fg:w="3"/><text x="83.4923%" y="479.50"></text></g><g><title>sqlite3BtreeInsert (771 samples, 3.97%)</title><rect x="79.4290%" y="533" width="3.9730%" height="15" fill="rgb(214,55,27)" fg:x="15414" fg:w="771"/><text x="79.6790%" y="543.50">sqli..</text></g><g><title>sqlite3BtreeIndexMoveto (658 samples, 3.39%)</title><rect x="80.0113%" y="517" width="3.3907%" height="15" fill="rgb(233,202,5)" fg:x="15527" fg:w="658"/><text x="80.2613%" y="527.50">sql..</text></g><g><title>sqlite3VdbeRecordCompareWithSkip (28 samples, 0.14%)</title><rect x="83.2578%" y="501" width="0.1443%" height="15" fill="rgb(251,49,30)" fg:x="16157" fg:w="28"/><text x="83.5078%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (14 samples, 0.07%)</title><rect x="83.3299%" y="485" width="0.0721%" height="15" fill="rgb(235,18,52)" fg:x="16171" fg:w="14"/><text x="83.5799%" y="495.50"></text></g><g><title>sqlite3MallocSize (2 samples, 0.01%)</title><rect x="83.5051%" y="469" width="0.0103%" height="15" fill="rgb(250,111,51)" fg:x="16205" fg:w="2"/><text x="83.7551%" y="479.50"></text></g><g><title>enlargeAndAppend (4 samples, 0.02%)</title><rect x="83.5051%" y="517" width="0.0206%" height="15" fill="rgb(218,13,25)" fg:x="16205" fg:w="4"/><text x="83.7551%" y="527.50"></text></g><g><title>sqlite3StrAccumEnlarge (4 samples, 0.02%)</title><rect x="83.5051%" y="501" width="0.0206%" height="15" fill="rgb(248,96,7)" fg:x="16205" fg:w="4"/><text x="83.7551%" y="511.50"></text></g><g><title>sqlite3Realloc (4 samples, 0.02%)</title><rect x="83.5051%" y="485" width="0.0206%" height="15" fill="rgb(217,31,15)" fg:x="16205" fg:w="4"/><text x="83.7551%" y="495.50"></text></g><g><title>sqlite3MemRealloc (2 samples, 0.01%)</title><rect x="83.5154%" y="469" width="0.0103%" height="15" fill="rgb(228,59,49)" fg:x="16207" fg:w="2"/><text x="83.7654%" y="479.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="83.5154%" y="453" width="0.0103%" height="15" fill="rgb(210,152,38)" fg:x="16207" fg:w="2"/><text x="83.7654%" y="463.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="83.5154%" y="437" width="0.0103%" height="15" fill="rgb(206,71,11)" fg:x="16207" fg:w="2"/><text x="83.7654%" y="447.50"></text></g><g><title>keywordCode (4 samples, 0.02%)</title><rect x="83.5257%" y="501" width="0.0206%" height="15" fill="rgb(244,199,5)" fg:x="16209" fg:w="4"/><text x="83.7757%" y="511.50"></text></g><g><title>findNextHostParameter (12 samples, 0.06%)</title><rect x="83.5257%" y="517" width="0.0618%" height="15" fill="rgb(253,49,1)" fg:x="16209" fg:w="12"/><text x="83.7757%" y="527.50"></text></g><g><title>sqlite3GetToken (8 samples, 0.04%)</title><rect x="83.5463%" y="501" width="0.0412%" height="15" fill="rgb(225,206,40)" fg:x="16213" fg:w="8"/><text x="83.7963%" y="511.50"></text></g><g><title>Unknown (4 samples, 0.02%)</title><rect x="86.2311%" y="485" width="0.0206%" height="15" fill="rgb(243,116,47)" fg:x="16734" fg:w="4"/><text x="86.4811%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.20%)</title><rect x="86.2568%" y="485" width="0.1958%" height="15" fill="rgb(219,225,16)" fg:x="16739" fg:w="38"/><text x="86.5068%" y="495.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.03%)</title><rect x="86.4526%" y="485" width="0.0309%" height="15" fill="rgb(233,29,47)" fg:x="16777" fg:w="6"/><text x="86.7026%" y="495.50"></text></g><g><title>__GI_memcpy (2 samples, 0.01%)</title><rect x="86.5093%" y="389" width="0.0103%" height="15" fill="rgb(250,179,18)" fg:x="16788" fg:w="2"/><text x="86.7593%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="86.5093%" y="373" width="0.0103%" height="15" fill="rgb(215,176,6)" fg:x="16788" fg:w="2"/><text x="86.7593%" y="383.50"></text></g><g><title>_int_malloc (11 samples, 0.06%)</title><rect x="86.5248%" y="389" width="0.0567%" height="15" fill="rgb(214,117,39)" fg:x="16791" fg:w="11"/><text x="86.7748%" y="399.50"></text></g><g><title>unlink_chunk (3 samples, 0.02%)</title><rect x="86.5660%" y="373" width="0.0155%" height="15" fill="rgb(247,183,36)" fg:x="16799" fg:w="3"/><text x="86.8160%" y="383.50"></text></g><g><title>enlargeAndAppend (20 samples, 0.10%)</title><rect x="86.4836%" y="485" width="0.1031%" height="15" fill="rgb(237,200,3)" fg:x="16783" fg:w="20"/><text x="86.7336%" y="495.50"></text></g><g><title>sqlite3StrAccumEnlarge (18 samples, 0.09%)</title><rect x="86.4939%" y="469" width="0.0928%" height="15" fill="rgb(212,220,24)" fg:x="16785" fg:w="18"/><text x="86.7439%" y="479.50"></text></g><g><title>sqlite3Realloc (18 samples, 0.09%)</title><rect x="86.4939%" y="453" width="0.0928%" height="15" fill="rgb(245,216,20)" fg:x="16785" fg:w="18"/><text x="86.7439%" y="463.50"></text></g><g><title>sqlite3MemRealloc (17 samples, 0.09%)</title><rect x="86.4990%" y="437" width="0.0876%" height="15" fill="rgb(219,124,7)" fg:x="16786" fg:w="17"/><text x="86.7490%" y="447.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.09%)</title><rect x="86.4990%" y="421" width="0.0876%" height="15" fill="rgb(227,167,8)" fg:x="16786" fg:w="17"/><text x="86.7490%" y="431.50"></text></g><g><title>_int_realloc (17 samples, 0.09%)</title><rect x="86.4990%" y="405" width="0.0876%" height="15" fill="rgb(241,37,2)" fg:x="16786" fg:w="17"/><text x="86.7490%" y="415.50"></text></g><g><title>sqlite3VdbeExpandSql (627 samples, 3.23%)</title><rect x="83.4020%" y="533" width="3.2310%" height="15" fill="rgb(238,134,33)" fg:x="16185" fg:w="627"/><text x="83.6520%" y="543.50">sql..</text></g><g><title>sqlite3_str_appendf (591 samples, 3.05%)</title><rect x="83.5876%" y="517" width="3.0454%" height="15" fill="rgb(248,48,27)" fg:x="16221" fg:w="591"/><text x="83.8376%" y="527.50">sql..</text></g><g><title>sqlite3_str_vappendf (565 samples, 2.91%)</title><rect x="83.7215%" y="501" width="2.9115%" height="15" fill="rgb(212,14,16)" fg:x="16247" fg:w="565"/><text x="83.9715%" y="511.50">sq..</text></g><g><title>sqlite3_str_append (9 samples, 0.05%)</title><rect x="86.5866%" y="485" width="0.0464%" height="15" fill="rgb(217,205,37)" fg:x="16803" fg:w="9"/><text x="86.8366%" y="495.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="86.6639%" y="501" width="0.0103%" height="15" fill="rgb(233,185,47)" fg:x="16818" fg:w="2"/><text x="86.9139%" y="511.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (2 samples, 0.01%)</title><rect x="86.6639%" y="485" width="0.0103%" height="15" fill="rgb(244,88,8)" fg:x="16818" fg:w="2"/><text x="86.9139%" y="495.50"></text></g><g><title>closeAllCursors (3 samples, 0.02%)</title><rect x="86.6639%" y="517" width="0.0155%" height="15" fill="rgb(213,0,20)" fg:x="16818" fg:w="3"/><text x="86.9139%" y="527.50"></text></g><g><title>walIndexAppend (7 samples, 0.04%)</title><rect x="86.6845%" y="389" width="0.0361%" height="15" fill="rgb(238,159,36)" fg:x="16822" fg:w="7"/><text x="86.9345%" y="399.50"></text></g><g><title>unixWrite (1,321 samples, 6.81%)</title><rect x="86.7567%" y="373" width="6.8072%" height="15" fill="rgb(253,173,17)" fg:x="16836" fg:w="1321"/><text x="87.0067%" y="383.50">unixWrite</text></g><g><title>seekAndWrite (1,319 samples, 6.80%)</title><rect x="86.7670%" y="357" width="6.7969%" height="15" fill="rgb(221,23,28)" fg:x="16838" fg:w="1319"/><text x="87.0170%" y="367.50">seekAndWr..</text></g><g><title>seekAndWriteFd (1,319 samples, 6.80%)</title><rect x="86.7670%" y="341" width="6.7969%" height="15" fill="rgb(218,113,15)" fg:x="16838" fg:w="1319"/><text x="87.0170%" y="351.50">seekAndWr..</text></g><g><title>__libc_pwrite64 (1,319 samples, 6.80%)</title><rect x="86.7670%" y="325" width="6.7969%" height="15" fill="rgb(233,58,3)" fg:x="16838" fg:w="1319"/><text x="87.0170%" y="335.50">__libc_pw..</text></g><g><title>__libc_pwrite64 (1,319 samples, 6.80%)</title><rect x="86.7670%" y="309" width="6.7969%" height="15" fill="rgb(250,46,35)" fg:x="16838" fg:w="1319"/><text x="87.0170%" y="319.50">__libc_pw..</text></g><g><title>walEncodeFrame (275 samples, 1.42%)</title><rect x="93.5638%" y="373" width="1.4171%" height="15" fill="rgb(210,169,11)" fg:x="18157" fg:w="275"/><text x="93.8138%" y="383.50"></text></g><g><title>walChecksumBytes (273 samples, 1.41%)</title><rect x="93.5742%" y="357" width="1.4068%" height="15" fill="rgb(246,88,19)" fg:x="18159" fg:w="273"/><text x="93.8242%" y="367.50"></text></g><g><title>pagerWalFrames (1,613 samples, 8.31%)</title><rect x="86.6794%" y="437" width="8.3119%" height="15" fill="rgb(206,81,49)" fg:x="16821" fg:w="1613"/><text x="86.9294%" y="447.50">pagerWalFram..</text></g><g><title>sqlite3WalFrames (1,613 samples, 8.31%)</title><rect x="86.6794%" y="421" width="8.3119%" height="15" fill="rgb(232,144,18)" fg:x="16821" fg:w="1613"/><text x="86.9294%" y="431.50">sqlite3WalFr..</text></g><g><title>walFrames (1,613 samples, 8.31%)</title><rect x="86.6794%" y="405" width="8.3119%" height="15" fill="rgb(235,2,27)" fg:x="16821" fg:w="1613"/><text x="86.9294%" y="415.50">walFrames</text></g><g><title>walWriteOneFrame (1,605 samples, 8.27%)</title><rect x="86.7206%" y="389" width="8.2706%" height="15" fill="rgb(239,157,39)" fg:x="16829" fg:w="1605"/><text x="86.9706%" y="399.50">walWriteOneF..</text></g><g><title>walWriteToLog (2 samples, 0.01%)</title><rect x="94.9809%" y="373" width="0.0103%" height="15" fill="rgb(220,11,17)" fg:x="18432" fg:w="2"/><text x="95.2309%" y="383.50"></text></g><g><title>sqlite3OsWrite (2 samples, 0.01%)</title><rect x="94.9809%" y="357" width="0.0103%" height="15" fill="rgb(243,94,50)" fg:x="18432" fg:w="2"/><text x="95.2309%" y="367.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (1,617 samples, 8.33%)</title><rect x="86.6794%" y="501" width="8.3325%" height="15" fill="rgb(218,22,0)" fg:x="16821" fg:w="1617"/><text x="86.9294%" y="511.50">sqlite3Btree..</text></g><g><title>sqlite3BtreeCommitPhaseOne (1,617 samples, 8.33%)</title><rect x="86.6794%" y="485" width="8.3325%" height="15" fill="rgb(249,70,21)" fg:x="16821" fg:w="1617"/><text x="86.9294%" y="495.50">sqlite3Btree..</text></g><g><title>sqlite3PagerCommitPhaseOne (1,617 samples, 8.33%)</title><rect x="86.6794%" y="469" width="8.3325%" height="15" fill="rgb(245,111,46)" fg:x="16821" fg:w="1617"/><text x="86.9294%" y="479.50">sqlite3Pager..</text></g><g><title>sqlite3PagerCommitPhaseOne (1,617 samples, 8.33%)</title><rect x="86.6794%" y="453" width="8.3325%" height="15" fill="rgb(244,183,12)" fg:x="16821" fg:w="1617"/><text x="86.9294%" y="463.50">sqlite3Pager..</text></g><g><title>sqlite3PcacheDirtyList (3 samples, 0.02%)</title><rect x="94.9964%" y="437" width="0.0155%" height="15" fill="rgb(207,117,0)" fg:x="18435" fg:w="3"/><text x="95.2464%" y="447.50"></text></g><g><title>pcacheSortDirtyList (2 samples, 0.01%)</title><rect x="95.0015%" y="421" width="0.0103%" height="15" fill="rgb(206,20,43)" fg:x="18436" fg:w="2"/><text x="95.2515%" y="431.50"></text></g><g><title>btreeEndTransaction (2 samples, 0.01%)</title><rect x="95.0119%" y="485" width="0.0103%" height="15" fill="rgb(221,104,11)" fg:x="18438" fg:w="2"/><text x="95.2619%" y="495.50"></text></g><g><title>clearAllSharedCacheTableLocks (2 samples, 0.01%)</title><rect x="95.0119%" y="469" width="0.0103%" height="15" fill="rgb(254,36,50)" fg:x="18438" fg:w="2"/><text x="95.2619%" y="479.50"></text></g><g><title>pager_unlock (18 samples, 0.09%)</title><rect x="95.0222%" y="485" width="0.0928%" height="15" fill="rgb(252,17,15)" fg:x="18440" fg:w="18"/><text x="95.2722%" y="495.50"></text></g><g><title>sqlite3WalEndReadTransaction (17 samples, 0.09%)</title><rect x="95.0273%" y="469" width="0.0876%" height="15" fill="rgb(219,129,43)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="479.50"></text></g><g><title>walUnlockShared (17 samples, 0.09%)</title><rect x="95.0273%" y="453" width="0.0876%" height="15" fill="rgb(205,34,45)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="463.50"></text></g><g><title>walUnlockShared (17 samples, 0.09%)</title><rect x="95.0273%" y="437" width="0.0876%" height="15" fill="rgb(251,201,32)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="447.50"></text></g><g><title>sqlite3OsShmLock (17 samples, 0.09%)</title><rect x="95.0273%" y="421" width="0.0876%" height="15" fill="rgb(205,56,0)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="431.50"></text></g><g><title>unixShmLock (17 samples, 0.09%)</title><rect x="95.0273%" y="405" width="0.0876%" height="15" fill="rgb(211,193,27)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="415.50"></text></g><g><title>unixShmSystemLock (17 samples, 0.09%)</title><rect x="95.0273%" y="389" width="0.0876%" height="15" fill="rgb(231,100,42)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="399.50"></text></g><g><title>__GI___libc_fcntl64 (17 samples, 0.09%)</title><rect x="95.0273%" y="373" width="0.0876%" height="15" fill="rgb(245,85,27)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="383.50"></text></g><g><title>__fcntl64_nocancel_adjusted (17 samples, 0.09%)</title><rect x="95.0273%" y="357" width="0.0876%" height="15" fill="rgb(241,76,24)" fg:x="18441" fg:w="17"/><text x="95.2773%" y="367.50"></text></g><g><title>pcache1Truncate (3 samples, 0.02%)</title><rect x="95.1149%" y="453" width="0.0155%" height="15" fill="rgb(249,157,15)" fg:x="18458" fg:w="3"/><text x="95.3649%" y="463.50"></text></g><g><title>pcache1TruncateUnsafe (2 samples, 0.01%)</title><rect x="95.1201%" y="437" width="0.0103%" height="15" fill="rgb(222,218,25)" fg:x="18459" fg:w="2"/><text x="95.3701%" y="447.50"></text></g><g><title>sqlite3VdbeHalt (1,676 samples, 8.64%)</title><rect x="86.6330%" y="533" width="8.6365%" height="15" fill="rgb(252,156,52)" fg:x="16812" fg:w="1676"/><text x="86.8830%" y="543.50">sqlite3VdbeH..</text></g><g><title>vdbeCommit (1,667 samples, 8.59%)</title><rect x="86.6794%" y="517" width="8.5901%" height="15" fill="rgb(211,185,7)" fg:x="16821" fg:w="1667"/><text x="86.9294%" y="527.50">vdbeCommit</text></g><g><title>sqlite3BtreeCommitPhaseTwo (50 samples, 0.26%)</title><rect x="95.0119%" y="501" width="0.2577%" height="15" fill="rgb(234,108,24)" fg:x="18438" fg:w="50"/><text x="95.2619%" y="511.50"></text></g><g><title>sqlite3PagerCommitPhaseTwo (30 samples, 0.15%)</title><rect x="95.1149%" y="485" width="0.1546%" height="15" fill="rgb(227,218,2)" fg:x="18458" fg:w="30"/><text x="95.3649%" y="495.50"></text></g><g><title>pager_end_transaction (30 samples, 0.15%)</title><rect x="95.1149%" y="469" width="0.1546%" height="15" fill="rgb(224,0,36)" fg:x="18458" fg:w="30"/><text x="95.3649%" y="479.50"></text></g><g><title>sqlite3WalEndWriteTransaction (25 samples, 0.13%)</title><rect x="95.1407%" y="453" width="0.1288%" height="15" fill="rgb(233,201,10)" fg:x="18463" fg:w="25"/><text x="95.3907%" y="463.50"></text></g><g><title>sqlite3WalEndWriteTransaction (25 samples, 0.13%)</title><rect x="95.1407%" y="437" width="0.1288%" height="15" fill="rgb(252,209,14)" fg:x="18463" fg:w="25"/><text x="95.3907%" y="447.50"></text></g><g><title>walUnlockExclusive (23 samples, 0.12%)</title><rect x="95.1510%" y="421" width="0.1185%" height="15" fill="rgb(205,93,49)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="431.50"></text></g><g><title>walUnlockExclusive (23 samples, 0.12%)</title><rect x="95.1510%" y="405" width="0.1185%" height="15" fill="rgb(234,116,45)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="415.50"></text></g><g><title>sqlite3OsShmLock (23 samples, 0.12%)</title><rect x="95.1510%" y="389" width="0.1185%" height="15" fill="rgb(248,89,35)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="399.50"></text></g><g><title>unixShmLock (23 samples, 0.12%)</title><rect x="95.1510%" y="373" width="0.1185%" height="15" fill="rgb(233,167,45)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="383.50"></text></g><g><title>unixShmSystemLock (23 samples, 0.12%)</title><rect x="95.1510%" y="357" width="0.1185%" height="15" fill="rgb(248,228,14)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="367.50"></text></g><g><title>__GI___libc_fcntl64 (23 samples, 0.12%)</title><rect x="95.1510%" y="341" width="0.1185%" height="15" fill="rgb(246,91,14)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="351.50"></text></g><g><title>__fcntl64_nocancel_adjusted (23 samples, 0.12%)</title><rect x="95.1510%" y="325" width="0.1185%" height="15" fill="rgb(227,142,5)" fg:x="18465" fg:w="23"/><text x="95.4010%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6,681 samples, 34.43%)</title><rect x="61.0275%" y="709" width="34.4275%" height="15" fill="rgb(221,63,33)" fg:x="11843" fg:w="6681"/><text x="61.2775%" y="719.50">core::result::Result&lt;T,E&gt;::and_then</text></g><g><title>rusqlite::Connection::execute::{{closure}} (6,681 samples, 34.43%)</title><rect x="61.0275%" y="693" width="34.4275%" height="15" fill="rgb(233,49,0)" fg:x="11843" fg:w="6681"/><text x="61.2775%" y="703.50">rusqlite::Connection::execute::{{closure}}</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6,671 samples, 34.38%)</title><rect x="61.0790%" y="677" width="34.3760%" height="15" fill="rgb(251,115,38)" fg:x="11853" fg:w="6671"/><text x="61.3290%" y="687.50">core::result::Result&lt;T,E&gt;::and_then</text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (6,671 samples, 34.38%)</title><rect x="61.0790%" y="661" width="34.3760%" height="15" fill="rgb(231,214,32)" fg:x="11853" fg:w="6671"/><text x="61.3290%" y="671.50">rusqlite::Connection::execute::{{closure}}::{{closure}}</text></g><g><title>rusqlite::statement::Statement::execute (6,671 samples, 34.38%)</title><rect x="61.0790%" y="645" width="34.3760%" height="15" fill="rgb(248,73,46)" fg:x="11853" fg:w="6671"/><text x="61.3290%" y="655.50">rusqlite::statement::Statement::execute</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (6,653 samples, 34.28%)</title><rect x="61.1718%" y="629" width="34.2832%" height="15" fill="rgb(237,156,4)" fg:x="11871" fg:w="6653"/><text x="61.4218%" y="639.50">rusqlite::statement::Statement::execute_with_bound_param..</text></g><g><title>rusqlite::raw_statement::RawStatement::step (6,651 samples, 34.27%)</title><rect x="61.1821%" y="613" width="34.2729%" height="15" fill="rgb(227,132,2)" fg:x="11873" fg:w="6651"/><text x="61.4321%" y="623.50">rusqlite::raw_statement::RawStatement::step</text></g><g><title>sqlite3_step (6,650 samples, 34.27%)</title><rect x="61.1873%" y="597" width="34.2678%" height="15" fill="rgb(248,161,9)" fg:x="11874" fg:w="6650"/><text x="61.4373%" y="607.50">sqlite3_step</text></g><g><title>sqlite3_step (6,650 samples, 34.27%)</title><rect x="61.1873%" y="581" width="34.2678%" height="15" fill="rgb(238,77,38)" fg:x="11874" fg:w="6650"/><text x="61.4373%" y="591.50">sqlite3_step</text></g><g><title>sqlite3Step (6,650 samples, 34.27%)</title><rect x="61.1873%" y="565" width="34.2678%" height="15" fill="rgb(222,166,40)" fg:x="11874" fg:w="6650"/><text x="61.4373%" y="575.50">sqlite3Step</text></g><g><title>sqlite3VdbeExec (3,207 samples, 16.53%)</title><rect x="78.9292%" y="549" width="16.5258%" height="15" fill="rgb(214,168,45)" fg:x="15317" fg:w="3207"/><text x="79.1792%" y="559.50">sqlite3VdbeExec</text></g><g><title>sqlite3VdbeMemTooBig (35 samples, 0.18%)</title><rect x="95.2747%" y="533" width="0.1804%" height="15" fill="rgb(226,64,37)" fg:x="18489" fg:w="35"/><text x="95.5247%" y="543.50"></text></g><g><title>sqlite3DbStrNDup (2 samples, 0.01%)</title><rect x="95.4808%" y="581" width="0.0103%" height="15" fill="rgb(232,210,43)" fg:x="18529" fg:w="2"/><text x="95.7308%" y="591.50"></text></g><g><title>sqlite3DbMallocRawNN (2 samples, 0.01%)</title><rect x="95.4808%" y="565" width="0.0103%" height="15" fill="rgb(214,76,33)" fg:x="18529" fg:w="2"/><text x="95.7308%" y="575.50"></text></g><g><title>keywordCode (2 samples, 0.01%)</title><rect x="95.5632%" y="565" width="0.0103%" height="15" fill="rgb(210,78,5)" fg:x="18545" fg:w="2"/><text x="95.8132%" y="575.50"></text></g><g><title>sqlite3GetToken (11 samples, 0.06%)</title><rect x="95.5735%" y="565" width="0.0567%" height="15" fill="rgb(211,107,37)" fg:x="18547" fg:w="11"/><text x="95.8235%" y="575.50"></text></g><g><title>sqlite3ExprAssignVarNumber (3 samples, 0.02%)</title><rect x="95.6302%" y="533" width="0.0155%" height="15" fill="rgb(249,67,16)" fg:x="18558" fg:w="3"/><text x="95.8802%" y="543.50"></text></g><g><title>sqlite3VListAdd (2 samples, 0.01%)</title><rect x="95.6354%" y="517" width="0.0103%" height="15" fill="rgb(222,114,31)" fg:x="18559" fg:w="2"/><text x="95.8854%" y="527.50"></text></g><g><title>dbMallocRawFinish (133 samples, 0.69%)</title><rect x="95.6611%" y="501" width="0.6854%" height="15" fill="rgb(242,118,19)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="511.50"></text></g><g><title>sqlite3Malloc (133 samples, 0.69%)</title><rect x="95.6611%" y="485" width="0.6854%" height="15" fill="rgb(223,115,1)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="495.50"></text></g><g><title>sqlite3Malloc (133 samples, 0.69%)</title><rect x="95.6611%" y="469" width="0.6854%" height="15" fill="rgb(241,182,54)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="479.50"></text></g><g><title>mallocWithAlarm (133 samples, 0.69%)</title><rect x="95.6611%" y="453" width="0.6854%" height="15" fill="rgb(244,166,36)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="463.50"></text></g><g><title>sqlite3MemMalloc (133 samples, 0.69%)</title><rect x="95.6611%" y="437" width="0.6854%" height="15" fill="rgb(241,52,43)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="447.50"></text></g><g><title>__GI___libc_malloc (133 samples, 0.69%)</title><rect x="95.6611%" y="421" width="0.6854%" height="15" fill="rgb(236,82,9)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="431.50"></text></g><g><title>_int_malloc (133 samples, 0.69%)</title><rect x="95.6611%" y="405" width="0.6854%" height="15" fill="rgb(241,119,0)" fg:x="18564" fg:w="133"/><text x="95.9111%" y="415.50"></text></g><g><title>malloc_consolidate (103 samples, 0.53%)</title><rect x="95.8157%" y="389" width="0.5308%" height="15" fill="rgb(221,19,22)" fg:x="18594" fg:w="103"/><text x="96.0657%" y="399.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="96.3362%" y="373" width="0.0103%" height="15" fill="rgb(254,144,35)" fg:x="18695" fg:w="2"/><text x="96.5862%" y="383.50"></text></g><g><title>resolveP2Values (3 samples, 0.02%)</title><rect x="96.3465%" y="501" width="0.0155%" height="15" fill="rgb(246,132,30)" fg:x="18697" fg:w="3"/><text x="96.5965%" y="511.50"></text></g><g><title>sqlite3DbNNFreeNN (3 samples, 0.02%)</title><rect x="96.3465%" y="485" width="0.0155%" height="15" fill="rgb(234,69,28)" fg:x="18697" fg:w="3"/><text x="96.5965%" y="495.50"></text></g><g><title>sqlite3FinishCoding (141 samples, 0.73%)</title><rect x="95.6508%" y="533" width="0.7266%" height="15" fill="rgb(219,106,47)" fg:x="18562" fg:w="141"/><text x="95.9008%" y="543.50"></text></g><g><title>sqlite3VdbeMakeReady (139 samples, 0.72%)</title><rect x="95.6611%" y="517" width="0.7163%" height="15" fill="rgb(218,79,24)" fg:x="18564" fg:w="139"/><text x="95.9111%" y="527.50"></text></g><g><title>sqlite3VdbeRewind (3 samples, 0.02%)</title><rect x="96.3619%" y="501" width="0.0155%" height="15" fill="rgb(225,26,21)" fg:x="18700" fg:w="3"/><text x="96.6119%" y="511.50"></text></g><g><title>sqlite3IdListAppend (3 samples, 0.02%)</title><rect x="96.3774%" y="533" width="0.0155%" height="15" fill="rgb(217,68,49)" fg:x="18703" fg:w="3"/><text x="96.6274%" y="543.50"></text></g><g><title>sqlite3NameFromToken (3 samples, 0.02%)</title><rect x="96.3774%" y="517" width="0.0155%" height="15" fill="rgb(220,204,28)" fg:x="18703" fg:w="3"/><text x="96.6274%" y="527.50"></text></g><g><title>sqlite3DbStrNDup (3 samples, 0.02%)</title><rect x="96.3774%" y="501" width="0.0155%" height="15" fill="rgb(237,208,43)" fg:x="18703" fg:w="3"/><text x="96.6274%" y="511.50"></text></g><g><title>sqlite3StrAccumFinish (2 samples, 0.01%)</title><rect x="96.4289%" y="469" width="0.0103%" height="15" fill="rgb(213,97,42)" fg:x="18713" fg:w="2"/><text x="96.6789%" y="479.50"></text></g><g><title>strAccumFinishRealloc (2 samples, 0.01%)</title><rect x="96.4289%" y="453" width="0.0103%" height="15" fill="rgb(238,96,52)" fg:x="18713" fg:w="2"/><text x="96.6789%" y="463.50"></text></g><g><title>sqlite3MPrintf (7 samples, 0.04%)</title><rect x="96.4238%" y="501" width="0.0361%" height="15" fill="rgb(228,14,13)" fg:x="18712" fg:w="7"/><text x="96.6738%" y="511.50"></text></g><g><title>sqlite3VMPrintf (6 samples, 0.03%)</title><rect x="96.4289%" y="485" width="0.0309%" height="15" fill="rgb(219,123,13)" fg:x="18713" fg:w="6"/><text x="96.6789%" y="495.50"></text></g><g><title>sqlite3_str_vappendf (4 samples, 0.02%)</title><rect x="96.4392%" y="469" width="0.0206%" height="15" fill="rgb(216,144,17)" fg:x="18715" fg:w="4"/><text x="96.6892%" y="479.50"></text></g><g><title>sqlite3MayAbort (2 samples, 0.01%)</title><rect x="96.4599%" y="501" width="0.0103%" height="15" fill="rgb(230,228,29)" fg:x="18719" fg:w="2"/><text x="96.7099%" y="511.50"></text></g><g><title>sqlite3GenerateConstraintChecks (11 samples, 0.06%)</title><rect x="96.4186%" y="517" width="0.0567%" height="15" fill="rgb(233,18,5)" fg:x="18711" fg:w="11"/><text x="96.6686%" y="527.50"></text></g><g><title>sqlite3IdListDelete (3 samples, 0.02%)</title><rect x="96.4753%" y="517" width="0.0155%" height="15" fill="rgb(233,197,12)" fg:x="18722" fg:w="3"/><text x="96.7253%" y="527.50"></text></g><g><title>sqlite3IdListDelete (3 samples, 0.02%)</title><rect x="96.4753%" y="501" width="0.0155%" height="15" fill="rgb(234,140,29)" fg:x="18722" fg:w="3"/><text x="96.7253%" y="511.50"></text></g><g><title>sqlite3SelectDelete (4 samples, 0.02%)</title><rect x="96.4959%" y="517" width="0.0206%" height="15" fill="rgb(233,113,19)" fg:x="18726" fg:w="4"/><text x="96.7459%" y="527.50"></text></g><g><title>sqlite3SelectDelete (4 samples, 0.02%)</title><rect x="96.4959%" y="501" width="0.0206%" height="15" fill="rgb(246,209,13)" fg:x="18726" fg:w="4"/><text x="96.7459%" y="511.50"></text></g><g><title>clearSelect (4 samples, 0.02%)</title><rect x="96.4959%" y="485" width="0.0206%" height="15" fill="rgb(242,79,54)" fg:x="18726" fg:w="4"/><text x="96.7459%" y="495.50"></text></g><g><title>sqlite3SrcListDelete (3 samples, 0.02%)</title><rect x="96.5011%" y="469" width="0.0155%" height="15" fill="rgb(219,73,16)" fg:x="18727" fg:w="3"/><text x="96.7511%" y="479.50"></text></g><g><title>sqlite3SrcListLookup (2 samples, 0.01%)</title><rect x="96.5165%" y="517" width="0.0103%" height="15" fill="rgb(224,52,10)" fg:x="18730" fg:w="2"/><text x="96.7665%" y="527.50"></text></g><g><title>sqlite3Insert (27 samples, 0.14%)</title><rect x="96.3929%" y="533" width="0.1391%" height="15" fill="rgb(237,179,5)" fg:x="18706" fg:w="27"/><text x="96.6429%" y="543.50"></text></g><g><title>sqlite3ExprCodeExprList (2 samples, 0.01%)</title><rect x="96.5578%" y="517" width="0.0103%" height="15" fill="rgb(231,20,6)" fg:x="18738" fg:w="2"/><text x="96.8078%" y="527.50"></text></g><g><title>sqlite3ExprListDelete (2 samples, 0.01%)</title><rect x="96.5681%" y="517" width="0.0103%" height="15" fill="rgb(253,171,45)" fg:x="18740" fg:w="2"/><text x="96.8181%" y="527.50"></text></g><g><title>exprListDeleteNN (2 samples, 0.01%)</title><rect x="96.5681%" y="501" width="0.0103%" height="15" fill="rgb(230,75,49)" fg:x="18740" fg:w="2"/><text x="96.8181%" y="511.50"></text></g><g><title>sqlite3DbMallocRawNN (2 samples, 0.01%)</title><rect x="96.5784%" y="469" width="0.0103%" height="15" fill="rgb(216,83,46)" fg:x="18742" fg:w="2"/><text x="96.8284%" y="479.50"></text></g><g><title>sqlite3DbMallocRawNN (2 samples, 0.01%)</title><rect x="96.5784%" y="453" width="0.0103%" height="15" fill="rgb(236,56,9)" fg:x="18742" fg:w="2"/><text x="96.8284%" y="463.50"></text></g><g><title>sqlite3GetVdbe (3 samples, 0.02%)</title><rect x="96.5784%" y="517" width="0.0155%" height="15" fill="rgb(215,28,34)" fg:x="18742" fg:w="3"/><text x="96.8284%" y="527.50"></text></g><g><title>sqlite3GetVdbe (3 samples, 0.02%)</title><rect x="96.5784%" y="501" width="0.0155%" height="15" fill="rgb(230,222,20)" fg:x="18742" fg:w="3"/><text x="96.8284%" y="511.50"></text></g><g><title>sqlite3VdbeCreate (3 samples, 0.02%)</title><rect x="96.5784%" y="485" width="0.0155%" height="15" fill="rgb(235,209,51)" fg:x="18742" fg:w="3"/><text x="96.8284%" y="495.50"></text></g><g><title>selectInnerLoop (5 samples, 0.03%)</title><rect x="96.5990%" y="501" width="0.0258%" height="15" fill="rgb(235,167,1)" fg:x="18746" fg:w="5"/><text x="96.8490%" y="511.50"></text></g><g><title>innerLoopLoadRow (3 samples, 0.02%)</title><rect x="96.6093%" y="485" width="0.0155%" height="15" fill="rgb(248,220,0)" fg:x="18748" fg:w="3"/><text x="96.8593%" y="495.50"></text></g><g><title>sqlite3ExprCodeExprList (3 samples, 0.02%)</title><rect x="96.6093%" y="469" width="0.0155%" height="15" fill="rgb(239,0,18)" fg:x="18748" fg:w="3"/><text x="96.8593%" y="479.50"></text></g><g><title>sqlite3ResolveSelectNames (4 samples, 0.02%)</title><rect x="96.6248%" y="485" width="0.0206%" height="15" fill="rgb(229,179,11)" fg:x="18751" fg:w="4"/><text x="96.8748%" y="495.50"></text></g><g><title>sqlite3WalkSelect (4 samples, 0.02%)</title><rect x="96.6248%" y="469" width="0.0206%" height="15" fill="rgb(226,116,53)" fg:x="18751" fg:w="4"/><text x="96.8748%" y="479.50"></text></g><g><title>resolveSelectStep (2 samples, 0.01%)</title><rect x="96.6351%" y="453" width="0.0103%" height="15" fill="rgb(218,1,49)" fg:x="18753" fg:w="2"/><text x="96.8851%" y="463.50"></text></g><g><title>sqlite3SelectPrep (7 samples, 0.04%)</title><rect x="96.6248%" y="501" width="0.0361%" height="15" fill="rgb(208,184,47)" fg:x="18751" fg:w="7"/><text x="96.8748%" y="511.50"></text></g><g><title>sqlite3SelectExpand (3 samples, 0.02%)</title><rect x="96.6454%" y="485" width="0.0155%" height="15" fill="rgb(238,174,3)" fg:x="18755" fg:w="3"/><text x="96.8954%" y="495.50"></text></g><g><title>sqlite3WalkSelect (3 samples, 0.02%)</title><rect x="96.6454%" y="469" width="0.0155%" height="15" fill="rgb(247,188,6)" fg:x="18755" fg:w="3"/><text x="96.8954%" y="479.50"></text></g><g><title>sqlite3WalkSelectExpr (2 samples, 0.01%)</title><rect x="96.6505%" y="453" width="0.0103%" height="15" fill="rgb(211,165,46)" fg:x="18756" fg:w="2"/><text x="96.9005%" y="463.50"></text></g><g><title>sqlite3WalkExprList (2 samples, 0.01%)</title><rect x="96.6505%" y="437" width="0.0103%" height="15" fill="rgb(222,190,10)" fg:x="18756" fg:w="2"/><text x="96.9005%" y="447.50"></text></g><g><title>sqlite3WalkExpr (2 samples, 0.01%)</title><rect x="96.6505%" y="421" width="0.0103%" height="15" fill="rgb(206,185,3)" fg:x="18756" fg:w="2"/><text x="96.9005%" y="431.50"></text></g><g><title>sqlite3WalkExprNN (2 samples, 0.01%)</title><rect x="96.6505%" y="405" width="0.0103%" height="15" fill="rgb(244,125,37)" fg:x="18756" fg:w="2"/><text x="96.9005%" y="415.50"></text></g><g><title>sqlite3ExprWalkNoop (2 samples, 0.01%)</title><rect x="96.6505%" y="389" width="0.0103%" height="15" fill="rgb(211,43,7)" fg:x="18756" fg:w="2"/><text x="96.9005%" y="399.50"></text></g><g><title>whereLoopAddAll (2 samples, 0.01%)</title><rect x="96.6660%" y="485" width="0.0103%" height="15" fill="rgb(250,41,42)" fg:x="18759" fg:w="2"/><text x="96.9160%" y="495.50"></text></g><g><title>sqlite3WhereBegin (7 samples, 0.04%)</title><rect x="96.6608%" y="501" width="0.0361%" height="15" fill="rgb(254,54,42)" fg:x="18758" fg:w="7"/><text x="96.9108%" y="511.50"></text></g><g><title>wherePathSolver (4 samples, 0.02%)</title><rect x="96.6763%" y="485" width="0.0206%" height="15" fill="rgb(213,71,43)" fg:x="18761" fg:w="4"/><text x="96.9263%" y="495.50"></text></g><g><title>sqlite3Select (24 samples, 0.12%)</title><rect x="96.5938%" y="517" width="0.1237%" height="15" fill="rgb(249,3,44)" fg:x="18745" fg:w="24"/><text x="96.8438%" y="527.50"></text></g><g><title>sqlite3WhereEnd (4 samples, 0.02%)</title><rect x="96.6969%" y="501" width="0.0206%" height="15" fill="rgb(229,80,41)" fg:x="18765" fg:w="4"/><text x="96.9469%" y="511.50"></text></g><g><title>whereInfoFree (3 samples, 0.02%)</title><rect x="96.7021%" y="485" width="0.0155%" height="15" fill="rgb(231,25,28)" fg:x="18766" fg:w="3"/><text x="96.9521%" y="495.50"></text></g><g><title>sqlite3WhereClauseClear (2 samples, 0.01%)</title><rect x="96.7072%" y="469" width="0.0103%" height="15" fill="rgb(208,79,48)" fg:x="18767" fg:w="2"/><text x="96.9572%" y="479.50"></text></g><g><title>sqlite3Expr (2 samples, 0.01%)</title><rect x="96.7227%" y="501" width="0.0103%" height="15" fill="rgb(207,196,38)" fg:x="18770" fg:w="2"/><text x="96.9727%" y="511.50"></text></g><g><title>sqlite3ExprAlloc (2 samples, 0.01%)</title><rect x="96.7227%" y="485" width="0.0103%" height="15" fill="rgb(228,105,49)" fg:x="18770" fg:w="2"/><text x="96.9727%" y="495.50"></text></g><g><title>sqlite3MultiValues (40 samples, 0.21%)</title><rect x="96.5320%" y="533" width="0.2061%" height="15" fill="rgb(237,99,15)" fg:x="18733" fg:w="40"/><text x="96.7820%" y="543.50"></text></g><g><title>sqlite3SelectNew (4 samples, 0.02%)</title><rect x="96.7175%" y="517" width="0.0206%" height="15" fill="rgb(224,207,46)" fg:x="18769" fg:w="4"/><text x="96.9675%" y="527.50"></text></g><g><title>tokenExpr (5 samples, 0.03%)</title><rect x="96.7381%" y="533" width="0.0258%" height="15" fill="rgb(249,117,50)" fg:x="18773" fg:w="5"/><text x="96.9881%" y="543.50"></text></g><g><title>sqlite3DbMallocRawNN (2 samples, 0.01%)</title><rect x="96.7536%" y="517" width="0.0103%" height="15" fill="rgb(248,17,13)" fg:x="18776" fg:w="2"/><text x="97.0036%" y="527.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::insert_batch (6,996 samples, 36.05%)</title><rect x="60.7802%" y="741" width="36.0507%" height="15" fill="rgb(228,187,36)" fg:x="11795" fg:w="6996"/><text x="61.0302%" y="751.50">&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::insert_batch</text></g><g><title>rusqlite::Connection::execute (6,948 samples, 35.80%)</title><rect x="61.0275%" y="725" width="35.8034%" height="15" fill="rgb(234,132,20)" fg:x="11843" fg:w="6948"/><text x="61.2775%" y="735.50">rusqlite::Connection::execute</text></g><g><title>rusqlite::Connection::prepare (267 samples, 1.38%)</title><rect x="95.4550%" y="709" width="1.3759%" height="15" fill="rgb(209,170,46)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="719.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (267 samples, 1.38%)</title><rect x="95.4550%" y="693" width="1.3759%" height="15" fill="rgb(237,23,19)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="703.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (267 samples, 1.38%)</title><rect x="95.4550%" y="677" width="1.3759%" height="15" fill="rgb(227,21,26)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="687.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (267 samples, 1.38%)</title><rect x="95.4550%" y="661" width="1.3759%" height="15" fill="rgb(222,220,48)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="671.50"></text></g><g><title>sqlite3_prepare_v3 (267 samples, 1.38%)</title><rect x="95.4550%" y="645" width="1.3759%" height="15" fill="rgb(214,9,16)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="655.50"></text></g><g><title>sqlite3LockAndPrepare (267 samples, 1.38%)</title><rect x="95.4550%" y="629" width="1.3759%" height="15" fill="rgb(209,73,30)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="639.50"></text></g><g><title>sqlite3LockAndPrepare (267 samples, 1.38%)</title><rect x="95.4550%" y="613" width="1.3759%" height="15" fill="rgb(207,20,33)" fg:x="18524" fg:w="267"/><text x="95.7050%" y="623.50"></text></g><g><title>sqlite3Prepare (263 samples, 1.36%)</title><rect x="95.4756%" y="597" width="1.3553%" height="15" fill="rgb(219,153,12)" fg:x="18528" fg:w="263"/><text x="95.7256%" y="607.50"></text></g><g><title>sqlite3RunParser (260 samples, 1.34%)</title><rect x="95.4911%" y="581" width="1.3398%" height="15" fill="rgb(235,97,25)" fg:x="18531" fg:w="260"/><text x="95.7411%" y="591.50"></text></g><g><title>sqlite3Parser (233 samples, 1.20%)</title><rect x="95.6302%" y="565" width="1.2007%" height="15" fill="rgb(244,30,34)" fg:x="18558" fg:w="233"/><text x="95.8802%" y="575.50"></text></g><g><title>yy_reduce (233 samples, 1.20%)</title><rect x="95.6302%" y="549" width="1.2007%" height="15" fill="rgb(214,106,45)" fg:x="18558" fg:w="233"/><text x="95.8802%" y="559.50"></text></g><g><title>yy_find_reduce_action (13 samples, 0.07%)</title><rect x="96.7639%" y="533" width="0.0670%" height="15" fill="rgb(226,41,9)" fg:x="18778" fg:w="13"/><text x="97.0139%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.05%)</title><rect x="96.8824%" y="533" width="0.0464%" height="15" fill="rgb(253,139,29)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (9 samples, 0.05%)</title><rect x="96.8824%" y="517" width="0.0464%" height="15" fill="rgb(213,205,39)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (9 samples, 0.05%)</title><rect x="96.8824%" y="501" width="0.0464%" height="15" fill="rgb(209,27,10)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (9 samples, 0.05%)</title><rect x="96.8824%" y="485" width="0.0464%" height="15" fill="rgb(249,142,16)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (9 samples, 0.05%)</title><rect x="96.8824%" y="469" width="0.0464%" height="15" fill="rgb(242,65,12)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="479.50"></text></g><g><title> 16]&gt; (9 samples, 0.05%)</title><rect x="96.8824%" y="453" width="0.0464%" height="15" fill="rgb(232,48,10)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (9 samples, 0.05%)</title><rect x="96.8824%" y="437" width="0.0464%" height="15" fill="rgb(253,67,19)" fg:x="18801" fg:w="9"/><text x="97.1324%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::node::LeafNode&gt;&gt; (2 samples, 0.01%)</title><rect x="96.9185%" y="421" width="0.0103%" height="15" fill="rgb(227,93,29)" fg:x="18808" fg:w="2"/><text x="97.1685%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="96.9185%" y="405" width="0.0103%" height="15" fill="rgb(226,189,53)" fg:x="18808" fg:w="2"/><text x="97.1685%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (22 samples, 0.11%)</title><rect x="96.8309%" y="741" width="0.1134%" height="15" fill="rgb(223,224,1)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt; (22 samples, 0.11%)</title><rect x="96.8309%" y="725" width="0.1134%" height="15" fill="rgb(221,84,32)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::BranchNode&gt;&gt; (22 samples, 0.11%)</title><rect x="96.8309%" y="709" width="0.1134%" height="15" fill="rgb(214,189,28)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::BranchNode&gt; (22 samples, 0.11%)</title><rect x="96.8309%" y="693" width="0.1134%" height="15" fill="rgb(234,7,52)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[eth_trie::node::Node (22 samples, 0.11%)</title><rect x="96.8309%" y="677" width="0.1134%" height="15" fill="rgb(249,73,31)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="687.50"></text></g><g><title> 16]&gt; (22 samples, 0.11%)</title><rect x="96.8309%" y="661" width="0.1134%" height="15" fill="rgb(253,153,41)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (22 samples, 0.11%)</title><rect x="96.8309%" y="645" width="0.1134%" height="15" fill="rgb(249,52,34)" fg:x="18791" fg:w="22"/><text x="97.0809%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::ExtensionNode&gt;&gt;&gt; (12 samples, 0.06%)</title><rect x="96.8824%" y="629" width="0.0618%" height="15" fill="rgb(236,177,47)" fg:x="18801" fg:w="12"/><text x="97.1324%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="96.8824%" y="613" width="0.0618%" height="15" fill="rgb(252,185,45)" fg:x="18801" fg:w="12"/><text x="97.1324%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.06%)</title><rect x="96.8824%" y="597" width="0.0618%" height="15" fill="rgb(251,15,30)" fg:x="18801" fg:w="12"/><text x="97.1324%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::ExtensionNode&gt;&gt; (12 samples, 0.06%)</title><rect x="96.8824%" y="581" width="0.0618%" height="15" fill="rgb(233,31,4)" fg:x="18801" fg:w="12"/><text x="97.1324%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;eth_trie::node::ExtensionNode&gt;&gt; (12 samples, 0.06%)</title><rect x="96.8824%" y="565" width="0.0618%" height="15" fill="rgb(254,44,24)" fg:x="18801" fg:w="12"/><text x="97.1324%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::ExtensionNode&gt; (12 samples, 0.06%)</title><rect x="96.8824%" y="549" width="0.0618%" height="15" fill="rgb(218,54,1)" fg:x="18801" fg:w="12"/><text x="97.1324%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (2 samples, 0.01%)</title><rect x="96.9339%" y="533" width="0.0103%" height="15" fill="rgb(243,209,39)" fg:x="18811" fg:w="2"/><text x="97.1839%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;eth_trie::node::BranchNode&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="96.9339%" y="517" width="0.0103%" height="15" fill="rgb(206,75,33)" fg:x="18811" fg:w="2"/><text x="97.1839%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="96.9339%" y="501" width="0.0103%" height="15" fill="rgb(223,108,18)" fg:x="18811" fg:w="2"/><text x="97.1839%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.01%)</title><rect x="96.9339%" y="485" width="0.0103%" height="15" fill="rgb(244,89,31)" fg:x="18811" fg:w="2"/><text x="97.1839%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="96.9339%" y="469" width="0.0103%" height="15" fill="rgb(222,167,27)" fg:x="18811" fg:w="2"/><text x="97.1839%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="96.9442%" y="677" width="0.0103%" height="15" fill="rgb(247,41,16)" fg:x="18813" fg:w="2"/><text x="97.1942%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="96.9442%" y="661" width="0.0103%" height="15" fill="rgb(233,168,40)" fg:x="18813" fg:w="2"/><text x="97.1942%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="96.9442%" y="645" width="0.0103%" height="15" fill="rgb(205,211,8)" fg:x="18813" fg:w="2"/><text x="97.1942%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="96.9442%" y="629" width="0.0103%" height="15" fill="rgb(238,105,11)" fg:x="18813" fg:w="2"/><text x="97.1942%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="96.9442%" y="613" width="0.0103%" height="15" fill="rgb(223,142,52)" fg:x="18813" fg:w="2"/><text x="97.1942%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="96.9442%" y="597" width="0.0103%" height="15" fill="rgb(238,51,33)" fg:x="18813" fg:w="2"/><text x="97.1942%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.03%)</title><rect x="96.9442%" y="741" width="0.0309%" height="15" fill="rgb(231,188,43)" fg:x="18813" fg:w="6"/><text x="97.1942%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="96.9442%" y="725" width="0.0309%" height="15" fill="rgb(216,92,17)" fg:x="18813" fg:w="6"/><text x="97.1942%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="96.9442%" y="709" width="0.0309%" height="15" fill="rgb(228,2,40)" fg:x="18813" fg:w="6"/><text x="97.1942%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="96.9442%" y="693" width="0.0309%" height="15" fill="rgb(226,73,15)" fg:x="18813" fg:w="6"/><text x="97.1942%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="96.9546%" y="677" width="0.0206%" height="15" fill="rgb(227,66,46)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="96.9546%" y="661" width="0.0206%" height="15" fill="rgb(209,71,6)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.02%)</title><rect x="96.9546%" y="645" width="0.0206%" height="15" fill="rgb(246,100,25)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="96.9546%" y="629" width="0.0206%" height="15" fill="rgb(248,185,27)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4 samples, 0.02%)</title><rect x="96.9546%" y="613" width="0.0206%" height="15" fill="rgb(225,118,47)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.02%)</title><rect x="96.9546%" y="597" width="0.0206%" height="15" fill="rgb(220,185,44)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="607.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit::{{closure}} (4 samples, 0.02%)</title><rect x="96.9546%" y="581" width="0.0206%" height="15" fill="rgb(227,95,24)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.02%)</title><rect x="96.9546%" y="565" width="0.0206%" height="15" fill="rgb(252,84,24)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="96.9546%" y="549" width="0.0206%" height="15" fill="rgb(240,34,44)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="96.9546%" y="533" width="0.0206%" height="15" fill="rgb(209,72,54)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="96.9546%" y="517" width="0.0206%" height="15" fill="rgb(226,19,45)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="96.9546%" y="501" width="0.0206%" height="15" fill="rgb(246,7,45)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="96.9546%" y="485" width="0.0206%" height="15" fill="rgb(225,45,2)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned (4 samples, 0.02%)</title><rect x="96.9546%" y="469" width="0.0206%" height="15" fill="rgb(221,80,29)" fg:x="18815" fg:w="4"/><text x="97.2046%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lru_mem::LruCache&lt;alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="96.9855%" y="709" width="0.0206%" height="15" fill="rgb(228,11,19)" fg:x="18821" fg:w="4"/><text x="97.2355%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="96.9855%" y="693" width="0.0206%" height="15" fill="rgb(243,17,21)" fg:x="18821" fg:w="4"/><text x="97.2355%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4 samples, 0.02%)</title><rect x="96.9855%" y="677" width="0.0206%" height="15" fill="rgb(243,88,8)" fg:x="18821" fg:w="4"/><text x="97.2355%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.02%)</title><rect x="96.9855%" y="661" width="0.0206%" height="15" fill="rgb(214,17,9)" fg:x="18821" fg:w="4"/><text x="97.2355%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.02%)</title><rect x="96.9855%" y="645" width="0.0206%" height="15" fill="rgb(232,169,15)" fg:x="18821" fg:w="4"/><text x="97.2355%" y="655.50"></text></g><g><title>yy_find_shift_action (3 samples, 0.02%)</title><rect x="97.0215%" y="533" width="0.0155%" height="15" fill="rgb(232,86,53)" fg:x="18828" fg:w="3"/><text x="97.2715%" y="543.50"></text></g><g><title>sqlite3ResolveSelectNames (4 samples, 0.02%)</title><rect x="97.0679%" y="485" width="0.0206%" height="15" fill="rgb(222,100,4)" fg:x="18837" fg:w="4"/><text x="97.3179%" y="495.50"></text></g><g><title>sqlite3WalkSelect (4 samples, 0.02%)</title><rect x="97.0679%" y="469" width="0.0206%" height="15" fill="rgb(253,151,38)" fg:x="18837" fg:w="4"/><text x="97.3179%" y="479.50"></text></g><g><title>resolveSelectStep (4 samples, 0.02%)</title><rect x="97.0679%" y="453" width="0.0206%" height="15" fill="rgb(238,215,29)" fg:x="18837" fg:w="4"/><text x="97.3179%" y="463.50"></text></g><g><title>sqlite3ResolveExprListNames (3 samples, 0.02%)</title><rect x="97.0731%" y="437" width="0.0155%" height="15" fill="rgb(205,128,53)" fg:x="18838" fg:w="3"/><text x="97.3231%" y="447.50"></text></g><g><title>sqlite3WalkExprNN (3 samples, 0.02%)</title><rect x="97.0731%" y="421" width="0.0155%" height="15" fill="rgb(248,183,14)" fg:x="18838" fg:w="3"/><text x="97.3231%" y="431.50"></text></g><g><title>resolveExprStep (3 samples, 0.02%)</title><rect x="97.0731%" y="405" width="0.0155%" height="15" fill="rgb(244,172,35)" fg:x="18838" fg:w="3"/><text x="97.3231%" y="415.50"></text></g><g><title>lookupName (3 samples, 0.02%)</title><rect x="97.0731%" y="389" width="0.0155%" height="15" fill="rgb(234,93,19)" fg:x="18838" fg:w="3"/><text x="97.3231%" y="399.50"></text></g><g><title>sqlite3StrICmp (3 samples, 0.02%)</title><rect x="97.0731%" y="373" width="0.0155%" height="15" fill="rgb(227,109,7)" fg:x="18838" fg:w="3"/><text x="97.3231%" y="383.50"></text></g><g><title>sqlite3SelectPrep (5 samples, 0.03%)</title><rect x="97.0679%" y="501" width="0.0258%" height="15" fill="rgb(233,136,54)" fg:x="18837" fg:w="5"/><text x="97.3179%" y="511.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (3 samples, 0.02%)</title><rect x="97.0988%" y="485" width="0.0155%" height="15" fill="rgb(233,19,40)" fg:x="18843" fg:w="3"/><text x="97.3488%" y="495.50"></text></g><g><title>whereScanInit (2 samples, 0.01%)</title><rect x="97.1143%" y="469" width="0.0103%" height="15" fill="rgb(247,41,18)" fg:x="18846" fg:w="2"/><text x="97.3643%" y="479.50"></text></g><g><title>whereScanNext (2 samples, 0.01%)</title><rect x="97.1143%" y="453" width="0.0103%" height="15" fill="rgb(220,34,34)" fg:x="18846" fg:w="2"/><text x="97.3643%" y="463.50"></text></g><g><title>sqlite3WhereBegin (7 samples, 0.04%)</title><rect x="97.0937%" y="501" width="0.0361%" height="15" fill="rgb(222,135,32)" fg:x="18842" fg:w="7"/><text x="97.3437%" y="511.50"></text></g><g><title>whereShortCut (3 samples, 0.02%)</title><rect x="97.1143%" y="485" width="0.0155%" height="15" fill="rgb(214,80,19)" fg:x="18846" fg:w="3"/><text x="97.3643%" y="495.50"></text></g><g><title>sqlite3Select (16 samples, 0.08%)</title><rect x="97.0525%" y="517" width="0.0824%" height="15" fill="rgb(234,54,46)" fg:x="18834" fg:w="16"/><text x="97.3025%" y="527.50"></text></g><g><title>rusqlite::Connection::prepare (25 samples, 0.13%)</title><rect x="97.0164%" y="693" width="0.1288%" height="15" fill="rgb(251,48,23)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="703.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (25 samples, 0.13%)</title><rect x="97.0164%" y="677" width="0.1288%" height="15" fill="rgb(254,109,52)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="687.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (25 samples, 0.13%)</title><rect x="97.0164%" y="661" width="0.1288%" height="15" fill="rgb(240,186,19)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="671.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (25 samples, 0.13%)</title><rect x="97.0164%" y="645" width="0.1288%" height="15" fill="rgb(246,187,17)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="655.50"></text></g><g><title>sqlite3_prepare_v3 (25 samples, 0.13%)</title><rect x="97.0164%" y="629" width="0.1288%" height="15" fill="rgb(212,21,5)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="639.50"></text></g><g><title>sqlite3LockAndPrepare (25 samples, 0.13%)</title><rect x="97.0164%" y="613" width="0.1288%" height="15" fill="rgb(225,185,18)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="623.50"></text></g><g><title>sqlite3LockAndPrepare (25 samples, 0.13%)</title><rect x="97.0164%" y="597" width="0.1288%" height="15" fill="rgb(245,114,17)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="607.50"></text></g><g><title>sqlite3Prepare (25 samples, 0.13%)</title><rect x="97.0164%" y="581" width="0.1288%" height="15" fill="rgb(223,164,24)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="591.50"></text></g><g><title>sqlite3RunParser (25 samples, 0.13%)</title><rect x="97.0164%" y="565" width="0.1288%" height="15" fill="rgb(211,228,3)" fg:x="18827" fg:w="25"/><text x="97.2664%" y="575.50"></text></g><g><title>sqlite3Parser (24 samples, 0.12%)</title><rect x="97.0215%" y="549" width="0.1237%" height="15" fill="rgb(223,16,38)" fg:x="18828" fg:w="24"/><text x="97.2715%" y="559.50"></text></g><g><title>yy_reduce (21 samples, 0.11%)</title><rect x="97.0370%" y="533" width="0.1082%" height="15" fill="rgb(207,31,54)" fg:x="18831" fg:w="21"/><text x="97.2870%" y="543.50"></text></g><g><title>closeAllCursors (2 samples, 0.01%)</title><rect x="97.1452%" y="533" width="0.0103%" height="15" fill="rgb(220,39,11)" fg:x="18852" fg:w="2"/><text x="97.3952%" y="543.50"></text></g><g><title>closeCursorsInFrame (2 samples, 0.01%)</title><rect x="97.1452%" y="517" width="0.0103%" height="15" fill="rgb(235,185,0)" fg:x="18852" fg:w="2"/><text x="97.3952%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (5 samples, 0.03%)</title><rect x="97.1452%" y="677" width="0.0258%" height="15" fill="rgb(249,39,18)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="687.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="97.1452%" y="661" width="0.0258%" height="15" fill="rgb(240,110,33)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="671.50"></text></g><g><title>rusqlite::row::Rows::reset (5 samples, 0.03%)</title><rect x="97.1452%" y="645" width="0.0258%" height="15" fill="rgb(210,92,42)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::reset (5 samples, 0.03%)</title><rect x="97.1452%" y="629" width="0.0258%" height="15" fill="rgb(218,215,28)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="639.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (5 samples, 0.03%)</title><rect x="97.1452%" y="613" width="0.0258%" height="15" fill="rgb(238,215,36)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="623.50"></text></g><g><title>sqlite3_reset (5 samples, 0.03%)</title><rect x="97.1452%" y="597" width="0.0258%" height="15" fill="rgb(220,31,10)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="607.50"></text></g><g><title>sqlite3_reset (5 samples, 0.03%)</title><rect x="97.1452%" y="581" width="0.0258%" height="15" fill="rgb(212,93,14)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="591.50"></text></g><g><title>sqlite3VdbeReset (5 samples, 0.03%)</title><rect x="97.1452%" y="565" width="0.0258%" height="15" fill="rgb(254,207,2)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="575.50"></text></g><g><title>sqlite3VdbeHalt (5 samples, 0.03%)</title><rect x="97.1452%" y="549" width="0.0258%" height="15" fill="rgb(205,57,44)" fg:x="18852" fg:w="5"/><text x="97.3952%" y="559.50"></text></g><g><title>vdbeCommit (3 samples, 0.02%)</title><rect x="97.1555%" y="533" width="0.0155%" height="15" fill="rgb(226,151,19)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="543.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (3 samples, 0.02%)</title><rect x="97.1555%" y="517" width="0.0155%" height="15" fill="rgb(230,72,30)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="527.50"></text></g><g><title>pager_unlock (3 samples, 0.02%)</title><rect x="97.1555%" y="501" width="0.0155%" height="15" fill="rgb(244,0,8)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="511.50"></text></g><g><title>sqlite3WalEndReadTransaction (3 samples, 0.02%)</title><rect x="97.1555%" y="485" width="0.0155%" height="15" fill="rgb(230,192,6)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="495.50"></text></g><g><title>walUnlockShared (3 samples, 0.02%)</title><rect x="97.1555%" y="469" width="0.0155%" height="15" fill="rgb(233,207,13)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="479.50"></text></g><g><title>walUnlockShared (3 samples, 0.02%)</title><rect x="97.1555%" y="453" width="0.0155%" height="15" fill="rgb(206,227,7)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="463.50"></text></g><g><title>sqlite3OsShmLock (3 samples, 0.02%)</title><rect x="97.1555%" y="437" width="0.0155%" height="15" fill="rgb(213,217,25)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="447.50"></text></g><g><title>unixShmLock (3 samples, 0.02%)</title><rect x="97.1555%" y="421" width="0.0155%" height="15" fill="rgb(249,75,4)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="431.50"></text></g><g><title>unixShmSystemLock (3 samples, 0.02%)</title><rect x="97.1555%" y="405" width="0.0155%" height="15" fill="rgb(225,114,18)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="415.50"></text></g><g><title>__GI___libc_fcntl64 (3 samples, 0.02%)</title><rect x="97.1555%" y="389" width="0.0155%" height="15" fill="rgb(211,162,40)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="399.50"></text></g><g><title>__fcntl64_nocancel_adjusted (3 samples, 0.02%)</title><rect x="97.1555%" y="373" width="0.0155%" height="15" fill="rgb(206,49,29)" fg:x="18854" fg:w="3"/><text x="97.4055%" y="383.50"></text></g><g><title>walLockExclusive (3 samples, 0.02%)</title><rect x="97.2122%" y="405" width="0.0155%" height="15" fill="rgb(244,8,6)" fg:x="18865" fg:w="3"/><text x="97.4622%" y="415.50"></text></g><g><title>walLockExclusive (3 samples, 0.02%)</title><rect x="97.2122%" y="389" width="0.0155%" height="15" fill="rgb(231,194,28)" fg:x="18865" fg:w="3"/><text x="97.4622%" y="399.50"></text></g><g><title>sqlite3OsShmLock (3 samples, 0.02%)</title><rect x="97.2122%" y="373" width="0.0155%" height="15" fill="rgb(210,69,5)" fg:x="18865" fg:w="3"/><text x="97.4622%" y="383.50"></text></g><g><title>unixShmLock (3 samples, 0.02%)</title><rect x="97.2122%" y="357" width="0.0155%" height="15" fill="rgb(216,186,12)" fg:x="18865" fg:w="3"/><text x="97.4622%" y="367.50"></text></g><g><title>unixShmSystemLock (2 samples, 0.01%)</title><rect x="97.2174%" y="341" width="0.0103%" height="15" fill="rgb(238,61,15)" fg:x="18866" fg:w="2"/><text x="97.4674%" y="351.50"></text></g><g><title>sqlite3BtreeBeginTrans (26 samples, 0.13%)</title><rect x="97.2070%" y="533" width="0.1340%" height="15" fill="rgb(226,104,1)" fg:x="18864" fg:w="26"/><text x="97.4570%" y="543.50"></text></g><g><title>btreeBeginTrans (26 samples, 0.13%)</title><rect x="97.2070%" y="517" width="0.1340%" height="15" fill="rgb(229,128,15)" fg:x="18864" fg:w="26"/><text x="97.4570%" y="527.50"></text></g><g><title>lockBtree (26 samples, 0.13%)</title><rect x="97.2070%" y="501" width="0.1340%" height="15" fill="rgb(247,110,15)" fg:x="18864" fg:w="26"/><text x="97.4570%" y="511.50"></text></g><g><title>sqlite3PagerSharedLock (25 samples, 0.13%)</title><rect x="97.2122%" y="485" width="0.1288%" height="15" fill="rgb(210,74,48)" fg:x="18865" fg:w="25"/><text x="97.4622%" y="495.50"></text></g><g><title>pagerBeginReadTransaction (25 samples, 0.13%)</title><rect x="97.2122%" y="469" width="0.1288%" height="15" fill="rgb(246,121,10)" fg:x="18865" fg:w="25"/><text x="97.4622%" y="479.50"></text></g><g><title>sqlite3WalBeginReadTransaction (25 samples, 0.13%)</title><rect x="97.2122%" y="453" width="0.1288%" height="15" fill="rgb(214,156,37)" fg:x="18865" fg:w="25"/><text x="97.4622%" y="463.50"></text></g><g><title>walBeginReadTransaction (25 samples, 0.13%)</title><rect x="97.2122%" y="437" width="0.1288%" height="15" fill="rgb(214,210,34)" fg:x="18865" fg:w="25"/><text x="97.4622%" y="447.50"></text></g><g><title>walTryBeginRead (25 samples, 0.13%)</title><rect x="97.2122%" y="421" width="0.1288%" height="15" fill="rgb(237,93,35)" fg:x="18865" fg:w="25"/><text x="97.4622%" y="431.50"></text></g><g><title>walUnlockExclusive (21 samples, 0.11%)</title><rect x="97.2328%" y="405" width="0.1082%" height="15" fill="rgb(206,36,8)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="415.50"></text></g><g><title>walUnlockExclusive (21 samples, 0.11%)</title><rect x="97.2328%" y="389" width="0.1082%" height="15" fill="rgb(208,151,12)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="399.50"></text></g><g><title>sqlite3OsShmLock (21 samples, 0.11%)</title><rect x="97.2328%" y="373" width="0.1082%" height="15" fill="rgb(225,133,52)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="383.50"></text></g><g><title>unixShmLock (21 samples, 0.11%)</title><rect x="97.2328%" y="357" width="0.1082%" height="15" fill="rgb(231,71,53)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="367.50"></text></g><g><title>unixShmSystemLock (21 samples, 0.11%)</title><rect x="97.2328%" y="341" width="0.1082%" height="15" fill="rgb(243,76,21)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="351.50"></text></g><g><title>__GI___libc_fcntl64 (21 samples, 0.11%)</title><rect x="97.2328%" y="325" width="0.1082%" height="15" fill="rgb(252,144,3)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="335.50"></text></g><g><title>__fcntl64_nocancel_adjusted (21 samples, 0.11%)</title><rect x="97.2328%" y="309" width="0.1082%" height="15" fill="rgb(231,199,10)" fg:x="18869" fg:w="21"/><text x="97.4828%" y="319.50"></text></g><g><title>sqlite3BtreeIndexMoveto (2 samples, 0.01%)</title><rect x="97.3410%" y="533" width="0.0103%" height="15" fill="rgb(215,18,11)" fg:x="18890" fg:w="2"/><text x="97.5910%" y="543.50"></text></g><g><title>enlargeAndAppend (4 samples, 0.02%)</title><rect x="97.3823%" y="485" width="0.0206%" height="15" fill="rgb(241,65,24)" fg:x="18898" fg:w="4"/><text x="97.6323%" y="495.50"></text></g><g><title>sqlite3StrAccumEnlarge (4 samples, 0.02%)</title><rect x="97.3823%" y="469" width="0.0206%" height="15" fill="rgb(251,192,38)" fg:x="18898" fg:w="4"/><text x="97.6323%" y="479.50"></text></g><g><title>sqlite3Realloc (4 samples, 0.02%)</title><rect x="97.3823%" y="453" width="0.0206%" height="15" fill="rgb(205,9,35)" fg:x="18898" fg:w="4"/><text x="97.6323%" y="463.50"></text></g><g><title>sqlite3MemRealloc (4 samples, 0.02%)</title><rect x="97.3823%" y="437" width="0.0206%" height="15" fill="rgb(229,225,49)" fg:x="18898" fg:w="4"/><text x="97.6323%" y="447.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="97.3823%" y="421" width="0.0206%" height="15" fill="rgb(207,125,39)" fg:x="18898" fg:w="4"/><text x="97.6323%" y="431.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="97.3926%" y="405" width="0.0103%" height="15" fill="rgb(222,78,19)" fg:x="18900" fg:w="2"/><text x="97.6426%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="97.3926%" y="389" width="0.0103%" height="15" fill="rgb(248,207,20)" fg:x="18900" fg:w="2"/><text x="97.6426%" y="399.50"></text></g><g><title>sqlite3VdbeExpandSql (11 samples, 0.06%)</title><rect x="97.3513%" y="533" width="0.0567%" height="15" fill="rgb(205,103,49)" fg:x="18892" fg:w="11"/><text x="97.6013%" y="543.50"></text></g><g><title>sqlite3_str_appendf (9 samples, 0.05%)</title><rect x="97.3616%" y="517" width="0.0464%" height="15" fill="rgb(216,42,28)" fg:x="18894" fg:w="9"/><text x="97.6116%" y="527.50"></text></g><g><title>sqlite3_str_vappendf (9 samples, 0.05%)</title><rect x="97.3616%" y="501" width="0.0464%" height="15" fill="rgb(213,205,53)" fg:x="18894" fg:w="9"/><text x="97.6116%" y="511.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (47 samples, 0.24%)</title><rect x="97.1710%" y="677" width="0.2422%" height="15" fill="rgb(239,140,53)" fg:x="18857" fg:w="47"/><text x="97.4210%" y="687.50"></text></g><g><title>rusqlite::row::Rows::next (46 samples, 0.24%)</title><rect x="97.1761%" y="661" width="0.2370%" height="15" fill="rgb(248,95,9)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="671.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (46 samples, 0.24%)</title><rect x="97.1761%" y="645" width="0.2370%" height="15" fill="rgb(254,58,47)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="655.50"></text></g><g><title>rusqlite::statement::Statement::step (46 samples, 0.24%)</title><rect x="97.1761%" y="629" width="0.2370%" height="15" fill="rgb(234,227,14)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="639.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (46 samples, 0.24%)</title><rect x="97.1761%" y="613" width="0.2370%" height="15" fill="rgb(205,192,45)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="623.50"></text></g><g><title>sqlite3_step (46 samples, 0.24%)</title><rect x="97.1761%" y="597" width="0.2370%" height="15" fill="rgb(253,187,31)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="607.50"></text></g><g><title>sqlite3_step (46 samples, 0.24%)</title><rect x="97.1761%" y="581" width="0.2370%" height="15" fill="rgb(222,6,32)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="591.50"></text></g><g><title>sqlite3Step (46 samples, 0.24%)</title><rect x="97.1761%" y="565" width="0.2370%" height="15" fill="rgb(249,190,19)" fg:x="18858" fg:w="46"/><text x="97.4261%" y="575.50"></text></g><g><title>sqlite3VdbeExec (44 samples, 0.23%)</title><rect x="97.1864%" y="549" width="0.2267%" height="15" fill="rgb(251,28,20)" fg:x="18860" fg:w="44"/><text x="97.4364%" y="559.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (84 samples, 0.43%)</title><rect x="96.9855%" y="725" width="0.4329%" height="15" fill="rgb(210,223,40)" fg:x="18821" fg:w="84"/><text x="97.2355%" y="735.50"></text></g><g><title>rusqlite::Connection::query_row (78 samples, 0.40%)</title><rect x="97.0164%" y="709" width="0.4019%" height="15" fill="rgb(216,137,22)" fg:x="18827" fg:w="78"/><text x="97.2664%" y="719.50"></text></g><g><title>rusqlite::statement::Statement::query_row (53 samples, 0.27%)</title><rect x="97.1452%" y="693" width="0.2731%" height="15" fill="rgb(247,39,34)" fg:x="18852" fg:w="53"/><text x="97.3952%" y="703.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (9 samples, 0.05%)</title><rect x="97.4183%" y="693" width="0.0464%" height="15" fill="rgb(239,43,50)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="703.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (9 samples, 0.05%)</title><rect x="97.4183%" y="677" width="0.0464%" height="15" fill="rgb(241,212,9)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="687.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (9 samples, 0.05%)</title><rect x="97.4183%" y="661" width="0.0464%" height="15" fill="rgb(205,8,2)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="671.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (9 samples, 0.05%)</title><rect x="97.4183%" y="645" width="0.0464%" height="15" fill="rgb(217,173,54)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="655.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (9 samples, 0.05%)</title><rect x="97.4183%" y="629" width="0.0464%" height="15" fill="rgb(208,149,52)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (9 samples, 0.05%)</title><rect x="97.4183%" y="613" width="0.0464%" height="15" fill="rgb(239,99,40)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (9 samples, 0.05%)</title><rect x="97.4183%" y="597" width="0.0464%" height="15" fill="rgb(233,214,26)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.05%)</title><rect x="97.4183%" y="581" width="0.0464%" height="15" fill="rgb(231,225,37)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="591.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.05%)</title><rect x="97.4183%" y="565" width="0.0464%" height="15" fill="rgb(252,55,35)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="575.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.05%)</title><rect x="97.4183%" y="549" width="0.0464%" height="15" fill="rgb(239,43,18)" fg:x="18905" fg:w="9"/><text x="97.6683%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256 (10 samples, 0.05%)</title><rect x="97.4183%" y="725" width="0.0515%" height="15" fill="rgb(251,125,49)" fg:x="18905" fg:w="10"/><text x="97.6683%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (10 samples, 0.05%)</title><rect x="97.4183%" y="709" width="0.0515%" height="15" fill="rgb(212,83,54)" fg:x="18905" fg:w="10"/><text x="97.6683%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;eth_trie::node::Node&gt; (2 samples, 0.01%)</title><rect x="97.4750%" y="709" width="0.0103%" height="15" fill="rgb(250,75,6)" fg:x="18916" fg:w="2"/><text x="97.7250%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;eth_trie::node::HashNode&gt;&gt; (2 samples, 0.01%)</title><rect x="97.4750%" y="693" width="0.0103%" height="15" fill="rgb(252,36,40)" fg:x="18916" fg:w="2"/><text x="97.7250%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="97.4750%" y="677" width="0.0103%" height="15" fill="rgb(230,91,51)" fg:x="18916" fg:w="2"/><text x="97.7250%" y="687.50"></text></g><g><title>eth_trie::node::Node::from_hash (2 samples, 0.01%)</title><rect x="97.5162%" y="693" width="0.0103%" height="15" fill="rgb(212,92,28)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="97.5162%" y="677" width="0.0103%" height="15" fill="rgb(227,13,22)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="97.5162%" y="661" width="0.0103%" height="15" fill="rgb(239,204,32)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="97.5162%" y="645" width="0.0103%" height="15" fill="rgb(228,49,41)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="97.5162%" y="629" width="0.0103%" height="15" fill="rgb(206,95,6)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="97.5162%" y="613" width="0.0103%" height="15" fill="rgb(251,20,14)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="97.5162%" y="597" width="0.0103%" height="15" fill="rgb(214,99,28)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="607.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="97.5162%" y="581" width="0.0103%" height="15" fill="rgb(239,122,54)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="97.5162%" y="565" width="0.0103%" height="15" fill="rgb(218,217,46)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="97.5162%" y="549" width="0.0103%" height="15" fill="rgb(249,106,28)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="559.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="97.5162%" y="533" width="0.0103%" height="15" fill="rgb(250,158,18)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="543.50"></text></g><g><title>tcache_get_n (2 samples, 0.01%)</title><rect x="97.5162%" y="517" width="0.0103%" height="15" fill="rgb(226,137,29)" fg:x="18924" fg:w="2"/><text x="97.7662%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (9 samples, 0.05%)</title><rect x="97.4905%" y="709" width="0.0464%" height="15" fill="rgb(210,188,1)" fg:x="18919" fg:w="9"/><text x="97.7405%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.03%)</title><rect x="97.5368%" y="693" width="0.0258%" height="15" fill="rgb(227,84,42)" fg:x="18928" fg:w="5"/><text x="97.7868%" y="703.50"></text></g><g><title>rlp::rlpin::Rlp::at (6 samples, 0.03%)</title><rect x="97.5368%" y="709" width="0.0309%" height="15" fill="rgb(222,147,48)" fg:x="18928" fg:w="6"/><text x="97.7868%" y="719.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (120 samples, 0.62%)</title><rect x="96.9855%" y="741" width="0.6184%" height="15" fill="rgb(241,150,43)" fg:x="18821" fg:w="120"/><text x="97.2355%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (25 samples, 0.13%)</title><rect x="97.4750%" y="725" width="0.1288%" height="15" fill="rgb(206,139,52)" fg:x="18916" fg:w="25"/><text x="97.7250%" y="735.50"></text></g><g><title>rlp::rlpin::Rlp::prototype (7 samples, 0.04%)</title><rect x="97.5678%" y="709" width="0.0361%" height="15" fill="rgb(230,63,14)" fg:x="18934" fg:w="7"/><text x="97.8178%" y="719.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (6 samples, 0.03%)</title><rect x="97.5729%" y="693" width="0.0309%" height="15" fill="rgb(247,8,20)" fg:x="18935" fg:w="6"/><text x="97.8229%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.03%)</title><rect x="97.5729%" y="677" width="0.0309%" height="15" fill="rgb(213,115,4)" fg:x="18935" fg:w="6"/><text x="97.8229%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.03%)</title><rect x="97.5729%" y="661" width="0.0309%" height="15" fill="rgb(241,79,49)" fg:x="18935" fg:w="6"/><text x="97.8229%" y="671.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="97.5729%" y="645" width="0.0309%" height="15" fill="rgb(222,42,35)" fg:x="18935" fg:w="6"/><text x="97.8229%" y="655.50"></text></g><g><title>rlp::rlpin::Rlp::at (6 samples, 0.03%)</title><rect x="97.5729%" y="629" width="0.0309%" height="15" fill="rgb(247,59,23)" fg:x="18935" fg:w="6"/><text x="97.8229%" y="639.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (6 samples, 0.03%)</title><rect x="97.5729%" y="613" width="0.0309%" height="15" fill="rgb(247,93,18)" fg:x="18935" fg:w="6"/><text x="97.8229%" y="623.50"></text></g><g><title>rlp::rlpin::Rlp::consume_list_payload (5 samples, 0.03%)</title><rect x="97.5781%" y="597" width="0.0258%" height="15" fill="rgb(249,107,47)" fg:x="18936" fg:w="5"/><text x="97.8281%" y="607.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (5 samples, 0.03%)</title><rect x="97.5781%" y="581" width="0.0258%" height="15" fill="rgb(219,27,1)" fg:x="18936" fg:w="5"/><text x="97.8281%" y="591.50"></text></g><g><title>rlp::rlpin::PayloadInfo::from (4 samples, 0.02%)</title><rect x="97.5832%" y="565" width="0.0206%" height="15" fill="rgb(217,82,32)" fg:x="18937" fg:w="4"/><text x="97.8332%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="97.6038%" y="725" width="0.0103%" height="15" fill="rgb(250,129,47)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="97.6038%" y="709" width="0.0103%" height="15" fill="rgb(253,88,35)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="97.6038%" y="693" width="0.0103%" height="15" fill="rgb(245,221,14)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="97.6038%" y="677" width="0.0103%" height="15" fill="rgb(217,119,54)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="97.6038%" y="661" width="0.0103%" height="15" fill="rgb(247,128,31)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="97.6038%" y="645" width="0.0103%" height="15" fill="rgb(211,99,22)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.01%)</title><rect x="97.6038%" y="629" width="0.0103%" height="15" fill="rgb(212,20,17)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="97.6038%" y="613" width="0.0103%" height="15" fill="rgb(209,159,29)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="97.6038%" y="597" width="0.0103%" height="15" fill="rgb(222,177,53)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="97.6038%" y="581" width="0.0103%" height="15" fill="rgb(234,46,43)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="591.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="97.6038%" y="565" width="0.0103%" height="15" fill="rgb(208,108,14)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="97.6038%" y="549" width="0.0103%" height="15" fill="rgb(226,78,53)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="97.6038%" y="533" width="0.0103%" height="15" fill="rgb(230,20,41)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="97.6038%" y="517" width="0.0103%" height="15" fill="rgb(213,195,35)" fg:x="18941" fg:w="2"/><text x="97.8538%" y="527.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="97.6141%" y="693" width="0.0309%" height="15" fill="rgb(242,62,36)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="703.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="97.6141%" y="677" width="0.0309%" height="15" fill="rgb(222,210,37)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="687.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="97.6141%" y="661" width="0.0309%" height="15" fill="rgb(232,107,19)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="671.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="97.6141%" y="645" width="0.0309%" height="15" fill="rgb(235,85,17)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="655.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (6 samples, 0.03%)</title><rect x="97.6141%" y="629" width="0.0309%" height="15" fill="rgb(219,195,31)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="639.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (6 samples, 0.03%)</title><rect x="97.6141%" y="613" width="0.0309%" height="15" fill="rgb(231,183,30)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (6 samples, 0.03%)</title><rect x="97.6141%" y="597" width="0.0309%" height="15" fill="rgb(212,0,11)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.03%)</title><rect x="97.6141%" y="581" width="0.0309%" height="15" fill="rgb(249,53,54)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="591.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.03%)</title><rect x="97.6141%" y="565" width="0.0309%" height="15" fill="rgb(211,118,13)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="575.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.03%)</title><rect x="97.6141%" y="549" width="0.0309%" height="15" fill="rgb(237,42,9)" fg:x="18943" fg:w="6"/><text x="97.8641%" y="559.50"></text></g><g><title>alloy_primitives::utils::keccak256 (15 samples, 0.08%)</title><rect x="97.6141%" y="725" width="0.0773%" height="15" fill="rgb(227,68,32)" fg:x="18943" fg:w="15"/><text x="97.8641%" y="735.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (15 samples, 0.08%)</title><rect x="97.6141%" y="709" width="0.0773%" height="15" fill="rgb(238,10,7)" fg:x="18943" fg:w="15"/><text x="97.8641%" y="719.50"></text></g><g><title>alloy_primitives::utils::Keccak256::update (9 samples, 0.05%)</title><rect x="97.6451%" y="693" width="0.0464%" height="15" fill="rgb(224,42,12)" fg:x="18949" fg:w="9"/><text x="97.8951%" y="703.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::update (9 samples, 0.05%)</title><rect x="97.6451%" y="677" width="0.0464%" height="15" fill="rgb(252,190,5)" fg:x="18949" fg:w="9"/><text x="97.8951%" y="687.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (9 samples, 0.05%)</title><rect x="97.6451%" y="661" width="0.0464%" height="15" fill="rgb(220,214,39)" fg:x="18949" fg:w="9"/><text x="97.8951%" y="671.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (9 samples, 0.05%)</title><rect x="97.6451%" y="645" width="0.0464%" height="15" fill="rgb(247,98,4)" fg:x="18949" fg:w="9"/><text x="97.8951%" y="655.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (8 samples, 0.04%)</title><rect x="97.6502%" y="629" width="0.0412%" height="15" fill="rgb(211,60,12)" fg:x="18950" fg:w="8"/><text x="97.9002%" y="639.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (8 samples, 0.04%)</title><rect x="97.6502%" y="613" width="0.0412%" height="15" fill="rgb(224,42,10)" fg:x="18950" fg:w="8"/><text x="97.9002%" y="623.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (8 samples, 0.04%)</title><rect x="97.6502%" y="597" width="0.0412%" height="15" fill="rgb(217,167,4)" fg:x="18950" fg:w="8"/><text x="97.9002%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="97.6966%" y="485" width="0.0103%" height="15" fill="rgb(253,18,17)" fg:x="18959" fg:w="2"/><text x="97.9466%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.02%)</title><rect x="97.6966%" y="693" width="0.0155%" height="15" fill="rgb(249,186,44)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="97.6966%" y="677" width="0.0155%" height="15" fill="rgb(254,124,54)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="97.6966%" y="661" width="0.0155%" height="15" fill="rgb(220,124,39)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="97.6966%" y="645" width="0.0155%" height="15" fill="rgb(225,96,46)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="97.6966%" y="629" width="0.0155%" height="15" fill="rgb(221,106,12)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="97.6966%" y="613" width="0.0155%" height="15" fill="rgb(227,133,23)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.02%)</title><rect x="97.6966%" y="597" width="0.0155%" height="15" fill="rgb(216,44,52)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="97.6966%" y="581" width="0.0155%" height="15" fill="rgb(239,149,7)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="97.6966%" y="565" width="0.0155%" height="15" fill="rgb(211,157,31)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="97.6966%" y="549" width="0.0155%" height="15" fill="rgb(206,215,22)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="559.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="97.6966%" y="533" width="0.0155%" height="15" fill="rgb(208,113,15)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="97.6966%" y="517" width="0.0155%" height="15" fill="rgb(207,189,15)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="97.6966%" y="501" width="0.0155%" height="15" fill="rgb(231,115,4)" fg:x="18959" fg:w="3"/><text x="97.9466%" y="511.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (6 samples, 0.03%)</title><rect x="97.7120%" y="661" width="0.0309%" height="15" fill="rgb(253,117,2)" fg:x="18962" fg:w="6"/><text x="97.9620%" y="671.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (6 samples, 0.03%)</title><rect x="97.7120%" y="645" width="0.0309%" height="15" fill="rgb(248,48,24)" fg:x="18962" fg:w="6"/><text x="97.9620%" y="655.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (6 samples, 0.03%)</title><rect x="97.7120%" y="629" width="0.0309%" height="15" fill="rgb(241,28,46)" fg:x="18962" fg:w="6"/><text x="97.9620%" y="639.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (6 samples, 0.03%)</title><rect x="97.7120%" y="613" width="0.0309%" height="15" fill="rgb(216,165,52)" fg:x="18962" fg:w="6"/><text x="97.9620%" y="623.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.02%)</title><rect x="97.7224%" y="597" width="0.0206%" height="15" fill="rgb(220,222,34)" fg:x="18964" fg:w="4"/><text x="97.9724%" y="607.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 0.02%)</title><rect x="97.7224%" y="581" width="0.0206%" height="15" fill="rgb(247,222,49)" fg:x="18964" fg:w="4"/><text x="97.9724%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 0.02%)</title><rect x="97.7224%" y="565" width="0.0206%" height="15" fill="rgb(240,10,31)" fg:x="18964" fg:w="4"/><text x="97.9724%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.02%)</title><rect x="97.7224%" y="549" width="0.0206%" height="15" fill="rgb(221,199,35)" fg:x="18964" fg:w="4"/><text x="97.9724%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.02%)</title><rect x="97.7224%" y="533" width="0.0206%" height="15" fill="rgb(230,223,11)" fg:x="18964" fg:w="4"/><text x="97.9724%" y="543.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.02%)</title><rect x="97.7224%" y="517" width="0.0206%" height="15" fill="rgb(218,82,45)" fg:x="18964" fg:w="4"/><text x="97.9724%" y="527.50"></text></g><g><title>alloy_primitives::utils::keccak256 (7 samples, 0.04%)</title><rect x="97.7120%" y="693" width="0.0361%" height="15" fill="rgb(233,213,33)" fg:x="18962" fg:w="7"/><text x="97.9620%" y="703.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (7 samples, 0.04%)</title><rect x="97.7120%" y="677" width="0.0361%" height="15" fill="rgb(210,143,52)" fg:x="18962" fg:w="7"/><text x="97.9620%" y="687.50"></text></g><g><title>eth_trie::nibbles::Nibbles::encode_compact (7 samples, 0.04%)</title><rect x="97.7533%" y="677" width="0.0361%" height="15" fill="rgb(206,95,4)" fg:x="18970" fg:w="7"/><text x="98.0033%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="97.7687%" y="661" width="0.0206%" height="15" fill="rgb(246,164,46)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="97.7687%" y="645" width="0.0206%" height="15" fill="rgb(213,210,47)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="97.7687%" y="629" width="0.0206%" height="15" fill="rgb(210,12,38)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="97.7687%" y="613" width="0.0206%" height="15" fill="rgb(252,192,54)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="97.7687%" y="597" width="0.0206%" height="15" fill="rgb(242,92,6)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="97.7687%" y="581" width="0.0206%" height="15" fill="rgb(253,154,15)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="591.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="97.7687%" y="565" width="0.0206%" height="15" fill="rgb(209,20,43)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="575.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="97.7687%" y="549" width="0.0206%" height="15" fill="rgb(232,28,49)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="97.7687%" y="533" width="0.0206%" height="15" fill="rgb(248,131,53)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="543.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="97.7687%" y="517" width="0.0206%" height="15" fill="rgb(214,16,30)" fg:x="18973" fg:w="4"/><text x="98.0187%" y="527.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="97.7739%" y="501" width="0.0155%" height="15" fill="rgb(245,16,0)" fg:x="18974" fg:w="3"/><text x="98.0239%" y="511.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="97.7739%" y="485" width="0.0155%" height="15" fill="rgb(245,17,35)" fg:x="18974" fg:w="3"/><text x="98.0239%" y="495.50"></text></g><g><title>alloy_primitives::utils::keccak256 (3 samples, 0.02%)</title><rect x="97.7893%" y="661" width="0.0155%" height="15" fill="rgb(249,27,53)" fg:x="18977" fg:w="3"/><text x="98.0393%" y="671.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (3 samples, 0.02%)</title><rect x="97.7893%" y="645" width="0.0155%" height="15" fill="rgb(214,73,24)" fg:x="18977" fg:w="3"/><text x="98.0393%" y="655.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (2 samples, 0.01%)</title><rect x="97.7945%" y="629" width="0.0103%" height="15" fill="rgb(223,84,37)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="639.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (2 samples, 0.01%)</title><rect x="97.7945%" y="613" width="0.0103%" height="15" fill="rgb(210,109,28)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="623.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (2 samples, 0.01%)</title><rect x="97.7945%" y="597" width="0.0103%" height="15" fill="rgb(208,186,6)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="607.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (2 samples, 0.01%)</title><rect x="97.7945%" y="581" width="0.0103%" height="15" fill="rgb(235,201,30)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (2 samples, 0.01%)</title><rect x="97.7945%" y="565" width="0.0103%" height="15" fill="rgb(216,198,48)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (2 samples, 0.01%)</title><rect x="97.7945%" y="549" width="0.0103%" height="15" fill="rgb(254,186,25)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (2 samples, 0.01%)</title><rect x="97.7945%" y="533" width="0.0103%" height="15" fill="rgb(227,87,5)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (2 samples, 0.01%)</title><rect x="97.7945%" y="517" width="0.0103%" height="15" fill="rgb(236,205,25)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="527.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (2 samples, 0.01%)</title><rect x="97.7945%" y="501" width="0.0103%" height="15" fill="rgb(229,99,32)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="511.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (2 samples, 0.01%)</title><rect x="97.7945%" y="485" width="0.0103%" height="15" fill="rgb(231,177,31)" fg:x="18978" fg:w="2"/><text x="98.0445%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.02%)</title><rect x="97.8151%" y="645" width="0.0206%" height="15" fill="rgb(246,15,2)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.02%)</title><rect x="97.8151%" y="629" width="0.0206%" height="15" fill="rgb(207,39,15)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="97.8151%" y="613" width="0.0206%" height="15" fill="rgb(207,44,9)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="97.8151%" y="597" width="0.0206%" height="15" fill="rgb(225,224,33)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="97.8151%" y="581" width="0.0206%" height="15" fill="rgb(252,151,3)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="591.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.02%)</title><rect x="97.8151%" y="565" width="0.0206%" height="15" fill="rgb(211,140,13)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="575.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.02%)</title><rect x="97.8151%" y="549" width="0.0206%" height="15" fill="rgb(239,225,17)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="559.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="97.8151%" y="533" width="0.0206%" height="15" fill="rgb(223,170,52)" fg:x="18982" fg:w="4"/><text x="98.0651%" y="543.50"></text></g><g><title>alloy_primitives::utils::keccak256 (15 samples, 0.08%)</title><rect x="97.8357%" y="629" width="0.0773%" height="15" fill="rgb(212,64,21)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="639.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (15 samples, 0.08%)</title><rect x="97.8357%" y="613" width="0.0773%" height="15" fill="rgb(236,126,48)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="623.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (15 samples, 0.08%)</title><rect x="97.8357%" y="597" width="0.0773%" height="15" fill="rgb(209,135,11)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="607.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (15 samples, 0.08%)</title><rect x="97.8357%" y="581" width="0.0773%" height="15" fill="rgb(228,126,40)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="591.50"></text></g><g><title>alloy_primitives::utils::keccak256_state::State::finalize_into (15 samples, 0.08%)</title><rect x="97.8357%" y="565" width="0.0773%" height="15" fill="rgb(205,196,36)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="575.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (15 samples, 0.08%)</title><rect x="97.8357%" y="549" width="0.0773%" height="15" fill="rgb(243,160,33)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (15 samples, 0.08%)</title><rect x="97.8357%" y="533" width="0.0773%" height="15" fill="rgb(210,84,20)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (15 samples, 0.08%)</title><rect x="97.8357%" y="517" width="0.0773%" height="15" fill="rgb(228,213,30)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (15 samples, 0.08%)</title><rect x="97.8357%" y="501" width="0.0773%" height="15" fill="rgb(252,33,45)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (15 samples, 0.08%)</title><rect x="97.8357%" y="485" width="0.0773%" height="15" fill="rgb(254,227,20)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (15 samples, 0.08%)</title><rect x="97.8357%" y="469" width="0.0773%" height="15" fill="rgb(228,192,2)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="479.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (15 samples, 0.08%)</title><rect x="97.8357%" y="453" width="0.0773%" height="15" fill="rgb(233,32,8)" fg:x="18986" fg:w="15"/><text x="98.0857%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.02%)</title><rect x="97.9233%" y="613" width="0.0206%" height="15" fill="rgb(220,146,47)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="97.9233%" y="597" width="0.0206%" height="15" fill="rgb(246,194,1)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="97.9233%" y="581" width="0.0206%" height="15" fill="rgb(218,203,9)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="97.9233%" y="565" width="0.0206%" height="15" fill="rgb(237,97,14)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="97.9233%" y="549" width="0.0206%" height="15" fill="rgb(239,76,15)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="97.9233%" y="533" width="0.0206%" height="15" fill="rgb(222,53,45)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.02%)</title><rect x="97.9233%" y="517" width="0.0206%" height="15" fill="rgb(237,88,5)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="97.9233%" y="501" width="0.0206%" height="15" fill="rgb(218,223,35)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="97.9233%" y="485" width="0.0206%" height="15" fill="rgb(243,229,38)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="495.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="97.9233%" y="469" width="0.0206%" height="15" fill="rgb(240,75,41)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="479.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="97.9233%" y="453" width="0.0206%" height="15" fill="rgb(209,110,37)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="463.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="97.9233%" y="437" width="0.0206%" height="15" fill="rgb(221,130,46)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="97.9233%" y="421" width="0.0206%" height="15" fill="rgb(237,160,20)" fg:x="19003" fg:w="4"/><text x="98.1733%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.01%)</title><rect x="97.9697%" y="549" width="0.0103%" height="15" fill="rgb(234,126,24)" fg:x="19012" fg:w="2"/><text x="98.2197%" y="559.50"></text></g><g><title>eth_trie::nibbles::Nibbles::encode_compact (8 samples, 0.04%)</title><rect x="97.9491%" y="613" width="0.0412%" height="15" fill="rgb(207,177,9)" fg:x="19008" fg:w="8"/><text x="98.1991%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="97.9697%" y="597" width="0.0206%" height="15" fill="rgb(231,191,33)" fg:x="19012" fg:w="4"/><text x="98.2197%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="97.9697%" y="581" width="0.0206%" height="15" fill="rgb(207,42,1)" fg:x="19012" fg:w="4"/><text x="98.2197%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="97.9697%" y="565" width="0.0206%" height="15" fill="rgb(218,34,50)" fg:x="19012" fg:w="4"/><text x="98.2197%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="97.9800%" y="549" width="0.0103%" height="15" fill="rgb(254,126,39)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="97.9800%" y="533" width="0.0103%" height="15" fill="rgb(251,17,26)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="97.9800%" y="517" width="0.0103%" height="15" fill="rgb(252,215,34)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="527.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="97.9800%" y="501" width="0.0103%" height="15" fill="rgb(217,120,44)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="511.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="97.9800%" y="485" width="0.0103%" height="15" fill="rgb(211,31,11)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="495.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="97.9800%" y="469" width="0.0103%" height="15" fill="rgb(222,69,51)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="479.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="97.9800%" y="453" width="0.0103%" height="15" fill="rgb(215,229,42)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="463.50"></text></g><g><title>musable (2 samples, 0.01%)</title><rect x="97.9800%" y="437" width="0.0103%" height="15" fill="rgb(212,102,15)" fg:x="19014" fg:w="2"/><text x="98.2300%" y="447.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="97.9955%" y="549" width="0.0206%" height="15" fill="rgb(205,179,41)" fg:x="19017" fg:w="4"/><text x="98.2455%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="97.9955%" y="533" width="0.0206%" height="15" fill="rgb(219,148,46)" fg:x="19017" fg:w="4"/><text x="98.2455%" y="543.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.02%)</title><rect x="97.9955%" y="517" width="0.0206%" height="15" fill="rgb(243,40,19)" fg:x="19017" fg:w="4"/><text x="98.2455%" y="527.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (4 samples, 0.02%)</title><rect x="97.9955%" y="501" width="0.0206%" height="15" fill="rgb(208,206,34)" fg:x="19017" fg:w="4"/><text x="98.2455%" y="511.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (6 samples, 0.03%)</title><rect x="97.9903%" y="597" width="0.0309%" height="15" fill="rgb(244,184,38)" fg:x="19016" fg:w="6"/><text x="98.2403%" y="607.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (6 samples, 0.03%)</title><rect x="97.9903%" y="581" width="0.0309%" height="15" fill="rgb(244,151,47)" fg:x="19016" fg:w="6"/><text x="98.2403%" y="591.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (6 samples, 0.03%)</title><rect x="97.9903%" y="565" width="0.0309%" height="15" fill="rgb(236,134,42)" fg:x="19016" fg:w="6"/><text x="98.2403%" y="575.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (24 samples, 0.12%)</title><rect x="97.9130%" y="629" width="0.1237%" height="15" fill="rgb(233,93,22)" fg:x="19001" fg:w="24"/><text x="98.1630%" y="639.50"></text></g><g><title>rlp::stream::RlpStream::append (9 samples, 0.05%)</title><rect x="97.9903%" y="613" width="0.0464%" height="15" fill="rgb(211,202,10)" fg:x="19016" fg:w="9"/><text x="98.2403%" y="623.50"></text></g><g><title>rlp::stream::RlpStream::note_appended (3 samples, 0.02%)</title><rect x="98.0212%" y="597" width="0.0155%" height="15" fill="rgb(240,63,8)" fg:x="19022" fg:w="3"/><text x="98.2712%" y="607.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_list_payload (3 samples, 0.02%)</title><rect x="98.0212%" y="581" width="0.0155%" height="15" fill="rgb(214,9,4)" fg:x="19022" fg:w="3"/><text x="98.2712%" y="591.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_size (3 samples, 0.02%)</title><rect x="98.0212%" y="565" width="0.0155%" height="15" fill="rgb(243,66,45)" fg:x="19022" fg:w="3"/><text x="98.2712%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_right (3 samples, 0.02%)</title><rect x="98.0212%" y="549" width="0.0155%" height="15" fill="rgb(220,50,42)" fg:x="19022" fg:w="3"/><text x="98.2712%" y="559.50"></text></g><g><title>core::slice::rotate::ptr_rotate (3 samples, 0.02%)</title><rect x="98.0212%" y="533" width="0.0155%" height="15" fill="rgb(220,134,27)" fg:x="19022" fg:w="3"/><text x="98.2712%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="98.0264%" y="517" width="0.0103%" height="15" fill="rgb(246,151,50)" fg:x="19023" fg:w="2"/><text x="98.2764%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="98.0264%" y="501" width="0.0103%" height="15" fill="rgb(238,216,27)" fg:x="19023" fg:w="2"/><text x="98.2764%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="98.0367%" y="629" width="0.0103%" height="15" fill="rgb(250,92,11)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="98.0367%" y="613" width="0.0103%" height="15" fill="rgb(248,183,6)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.01%)</title><rect x="98.0367%" y="597" width="0.0103%" height="15" fill="rgb(211,204,50)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.01%)</title><rect x="98.0367%" y="581" width="0.0103%" height="15" fill="rgb(252,55,47)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (2 samples, 0.01%)</title><rect x="98.0367%" y="565" width="0.0103%" height="15" fill="rgb(240,198,32)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="98.0367%" y="549" width="0.0103%" height="15" fill="rgb(224,203,19)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="98.0367%" y="533" width="0.0103%" height="15" fill="rgb(205,27,16)" fg:x="19025" fg:w="2"/><text x="98.2867%" y="543.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (44 samples, 0.23%)</title><rect x="97.8357%" y="645" width="0.2267%" height="15" fill="rgb(224,226,17)" fg:x="18986" fg:w="44"/><text x="98.0857%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="98.0470%" y="629" width="0.0155%" height="15" fill="rgb(205,216,54)" fg:x="19027" fg:w="3"/><text x="98.2970%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="98.0470%" y="613" width="0.0155%" height="15" fill="rgb(248,168,46)" fg:x="19027" fg:w="3"/><text x="98.2970%" y="623.50"></text></g><g><title>rlp::stream::RlpStream::append (3 samples, 0.02%)</title><rect x="98.0625%" y="645" width="0.0155%" height="15" fill="rgb(226,111,45)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="655.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for &amp;[u8]&gt;::rlp_append (3 samples, 0.02%)</title><rect x="98.0625%" y="629" width="0.0155%" height="15" fill="rgb(231,15,9)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="639.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (3 samples, 0.02%)</title><rect x="98.0625%" y="613" width="0.0155%" height="15" fill="rgb(243,168,3)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="623.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (3 samples, 0.02%)</title><rect x="98.0625%" y="597" width="0.0155%" height="15" fill="rgb(221,220,54)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="607.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (3 samples, 0.02%)</title><rect x="98.0625%" y="581" width="0.0155%" height="15" fill="rgb(232,174,38)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="591.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (3 samples, 0.02%)</title><rect x="98.0625%" y="565" width="0.0155%" height="15" fill="rgb(205,14,38)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="575.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (3 samples, 0.02%)</title><rect x="98.0625%" y="549" width="0.0155%" height="15" fill="rgb(234,89,19)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (3 samples, 0.02%)</title><rect x="98.0625%" y="533" width="0.0155%" height="15" fill="rgb(216,68,51)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="98.0625%" y="517" width="0.0155%" height="15" fill="rgb(213,49,2)" fg:x="19030" fg:w="3"/><text x="98.3125%" y="527.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (54 samples, 0.28%)</title><rect x="97.8048%" y="661" width="0.2783%" height="15" fill="rgb(242,146,30)" fg:x="18980" fg:w="54"/><text x="98.0548%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (58 samples, 0.30%)</title><rect x="97.7893%" y="677" width="0.2989%" height="15" fill="rgb(224,188,11)" fg:x="18977" fg:w="58"/><text x="98.0393%" y="687.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (2 samples, 0.01%)</title><rect x="98.0882%" y="645" width="0.0103%" height="15" fill="rgb(213,159,11)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="655.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (2 samples, 0.01%)</title><rect x="98.0882%" y="629" width="0.0103%" height="15" fill="rgb(229,13,31)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="98.0882%" y="613" width="0.0103%" height="15" fill="rgb(209,103,11)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="623.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (2 samples, 0.01%)</title><rect x="98.0882%" y="597" width="0.0103%" height="15" fill="rgb(206,3,4)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="607.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.01%)</title><rect x="98.0882%" y="581" width="0.0103%" height="15" fill="rgb(252,10,49)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (2 samples, 0.01%)</title><rect x="98.0882%" y="565" width="0.0103%" height="15" fill="rgb(217,160,32)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="98.0882%" y="549" width="0.0103%" height="15" fill="rgb(249,196,0)" fg:x="19035" fg:w="2"/><text x="98.3382%" y="559.50"></text></g><g><title>rlp::stream::RlpStream::append (8 samples, 0.04%)</title><rect x="98.0882%" y="677" width="0.0412%" height="15" fill="rgb(213,17,48)" fg:x="19035" fg:w="8"/><text x="98.3382%" y="687.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (8 samples, 0.04%)</title><rect x="98.0882%" y="661" width="0.0412%" height="15" fill="rgb(206,42,46)" fg:x="19035" fg:w="8"/><text x="98.3382%" y="671.50"></text></g><g><title>rlp::stream::RlpStream::encoder (6 samples, 0.03%)</title><rect x="98.0985%" y="645" width="0.0309%" height="15" fill="rgb(212,105,24)" fg:x="19037" fg:w="6"/><text x="98.3485%" y="655.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (77 samples, 0.40%)</title><rect x="97.7481%" y="693" width="0.3968%" height="15" fill="rgb(243,216,30)" fg:x="18969" fg:w="77"/><text x="97.9981%" y="703.50"></text></g><g><title>rlp::stream::RlpStream::new_list (3 samples, 0.02%)</title><rect x="98.1294%" y="677" width="0.0155%" height="15" fill="rgb(207,121,3)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="687.50"></text></g><g><title>rlp::stream::RlpStream::new_list_with_buffer (3 samples, 0.02%)</title><rect x="98.1294%" y="661" width="0.0155%" height="15" fill="rgb(249,78,0)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="671.50"></text></g><g><title>rlp::stream::RlpStream::new_with_buffer (3 samples, 0.02%)</title><rect x="98.1294%" y="645" width="0.0155%" height="15" fill="rgb(244,151,32)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.02%)</title><rect x="98.1294%" y="629" width="0.0155%" height="15" fill="rgb(228,63,25)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="98.1294%" y="613" width="0.0155%" height="15" fill="rgb(231,158,23)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="98.1294%" y="597" width="0.0155%" height="15" fill="rgb(248,107,23)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.02%)</title><rect x="98.1294%" y="581" width="0.0155%" height="15" fill="rgb(215,168,21)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="98.1294%" y="565" width="0.0155%" height="15" fill="rgb(227,83,22)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="98.1294%" y="549" width="0.0155%" height="15" fill="rgb(217,118,43)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="559.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="98.1294%" y="533" width="0.0155%" height="15" fill="rgb(229,220,41)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="543.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="98.1294%" y="517" width="0.0155%" height="15" fill="rgb(254,146,46)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="98.1294%" y="501" width="0.0155%" height="15" fill="rgb(233,208,31)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="511.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="98.1294%" y="485" width="0.0155%" height="15" fill="rgb(222,162,7)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="495.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="98.1294%" y="469" width="0.0155%" height="15" fill="rgb(230,117,45)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="479.50"></text></g><g><title>tcache_get_n (3 samples, 0.02%)</title><rect x="98.1294%" y="453" width="0.0155%" height="15" fill="rgb(239,163,6)" fg:x="19043" fg:w="3"/><text x="98.3794%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (88 samples, 0.45%)</title><rect x="97.6966%" y="709" width="0.4535%" height="15" fill="rgb(246,130,17)" fg:x="18959" fg:w="88"/><text x="97.9466%" y="719.50"></text></g><g><title>rlp::stream::RlpStream::append (4 samples, 0.02%)</title><rect x="98.1501%" y="709" width="0.0206%" height="15" fill="rgb(216,84,5)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="719.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for &amp;[u8]&gt;::rlp_append (4 samples, 0.02%)</title><rect x="98.1501%" y="693" width="0.0206%" height="15" fill="rgb(230,200,21)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="703.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (4 samples, 0.02%)</title><rect x="98.1501%" y="677" width="0.0206%" height="15" fill="rgb(224,2,8)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="687.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (4 samples, 0.02%)</title><rect x="98.1501%" y="661" width="0.0206%" height="15" fill="rgb(238,178,10)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="98.1501%" y="645" width="0.0206%" height="15" fill="rgb(242,153,24)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="655.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (4 samples, 0.02%)</title><rect x="98.1501%" y="629" width="0.0206%" height="15" fill="rgb(242,32,48)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (4 samples, 0.02%)</title><rect x="98.1501%" y="613" width="0.0206%" height="15" fill="rgb(227,36,0)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (4 samples, 0.02%)</title><rect x="98.1501%" y="597" width="0.0206%" height="15" fill="rgb(251,33,35)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="98.1501%" y="581" width="0.0206%" height="15" fill="rgb(232,168,51)" fg:x="19047" fg:w="4"/><text x="98.4001%" y="591.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (117 samples, 0.60%)</title><rect x="97.6038%" y="741" width="0.6029%" height="15" fill="rgb(228,56,10)" fg:x="18941" fg:w="117"/><text x="97.8538%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (100 samples, 0.52%)</title><rect x="97.6914%" y="725" width="0.5153%" height="15" fill="rgb(231,10,26)" fg:x="18958" fg:w="100"/><text x="97.9414%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (4 samples, 0.02%)</title><rect x="98.1861%" y="709" width="0.0206%" height="15" fill="rgb(226,202,12)" fg:x="19054" fg:w="4"/><text x="98.4361%" y="719.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (4 samples, 0.02%)</title><rect x="98.1861%" y="693" width="0.0206%" height="15" fill="rgb(251,49,21)" fg:x="19054" fg:w="4"/><text x="98.4361%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (4 samples, 0.02%)</title><rect x="98.1861%" y="677" width="0.0206%" height="15" fill="rgb(206,228,28)" fg:x="19054" fg:w="4"/><text x="98.4361%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.02%)</title><rect x="98.1861%" y="661" width="0.0206%" height="15" fill="rgb(205,198,31)" fg:x="19054" fg:w="4"/><text x="98.4361%" y="671.50"></text></g><g><title>zilliqa::state::State::root_hash (7,266 samples, 37.44%)</title><rect x="60.7802%" y="789" width="37.4420%" height="15" fill="rgb(213,69,1)" fg:x="11795" fg:w="7266"/><text x="61.0302%" y="799.50">zilliqa::state::State::root_hash</text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (7,266 samples, 37.44%)</title><rect x="60.7802%" y="773" width="37.4420%" height="15" fill="rgb(209,177,9)" fg:x="11795" fg:w="7266"/><text x="61.0302%" y="783.50">&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root..</text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (7,266 samples, 37.44%)</title><rect x="60.7802%" y="757" width="37.4420%" height="15" fill="rgb(227,119,30)" fg:x="11795" fg:w="7266"/><text x="61.0302%" y="767.50">eth_trie::trie::EthTrie&lt;D&gt;::commit</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (3 samples, 0.02%)</title><rect x="98.2067%" y="741" width="0.0155%" height="15" fill="rgb(234,106,41)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (3 samples, 0.02%)</title><rect x="98.2067%" y="725" width="0.0155%" height="15" fill="rgb(244,103,47)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (3 samples, 0.02%)</title><rect x="98.2067%" y="709" width="0.0155%" height="15" fill="rgb(212,211,25)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.02%)</title><rect x="98.2067%" y="693" width="0.0155%" height="15" fill="rgb(208,63,53)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.2067%" y="677" width="0.0155%" height="15" fill="rgb(213,176,21)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (3 samples, 0.02%)</title><rect x="98.2067%" y="661" width="0.0155%" height="15" fill="rgb(243,124,12)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="671.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.2067%" y="645" width="0.0155%" height="15" fill="rgb(239,2,35)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="655.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="98.2067%" y="629" width="0.0155%" height="15" fill="rgb(253,169,22)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="639.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (3 samples, 0.02%)</title><rect x="98.2067%" y="613" width="0.0155%" height="15" fill="rgb(254,51,12)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="623.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (3 samples, 0.02%)</title><rect x="98.2067%" y="597" width="0.0155%" height="15" fill="rgb(244,17,47)" fg:x="19058" fg:w="3"/><text x="98.4567%" y="607.50"></text></g><g><title>zilliqa::crypto::HashBuilder::finalize (7 samples, 0.04%)</title><rect x="98.2222%" y="773" width="0.0361%" height="15" fill="rgb(251,45,46)" fg:x="19061" fg:w="7"/><text x="98.4722%" y="783.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (7 samples, 0.04%)</title><rect x="98.2222%" y="757" width="0.0361%" height="15" fill="rgb(223,87,43)" fg:x="19061" fg:w="7"/><text x="98.4722%" y="767.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (7 samples, 0.04%)</title><rect x="98.2222%" y="741" width="0.0361%" height="15" fill="rgb(230,132,31)" fg:x="19061" fg:w="7"/><text x="98.4722%" y="751.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (6 samples, 0.03%)</title><rect x="98.2274%" y="725" width="0.0309%" height="15" fill="rgb(206,99,1)" fg:x="19062" fg:w="6"/><text x="98.4774%" y="735.50"></text></g><g><title>&lt;sha3::Keccak256Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (6 samples, 0.03%)</title><rect x="98.2274%" y="709" width="0.0309%" height="15" fill="rgb(227,110,25)" fg:x="19062" fg:w="6"/><text x="98.4774%" y="719.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (5 samples, 0.03%)</title><rect x="98.2325%" y="693" width="0.0258%" height="15" fill="rgb(217,182,7)" fg:x="19063" fg:w="5"/><text x="98.4825%" y="703.50"></text></g><g><title>keccak::p1600 (5 samples, 0.03%)</title><rect x="98.2325%" y="677" width="0.0258%" height="15" fill="rgb(250,176,4)" fg:x="19063" fg:w="5"/><text x="98.4825%" y="687.50"></text></g><g><title>keccak::keccak_p (5 samples, 0.03%)</title><rect x="98.2325%" y="661" width="0.0258%" height="15" fill="rgb(244,98,30)" fg:x="19063" fg:w="5"/><text x="98.4825%" y="671.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (5 samples, 0.03%)</title><rect x="98.2325%" y="645" width="0.0258%" height="15" fill="rgb(228,150,42)" fg:x="19063" fg:w="5"/><text x="98.4825%" y="655.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (3 samples, 0.02%)</title><rect x="98.2583%" y="757" width="0.0155%" height="15" fill="rgb(231,91,46)" fg:x="19068" fg:w="3"/><text x="98.5083%" y="767.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (3 samples, 0.02%)</title><rect x="98.2583%" y="741" width="0.0155%" height="15" fill="rgb(252,161,32)" fg:x="19068" fg:w="3"/><text x="98.5083%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="98.2737%" y="757" width="0.0103%" height="15" fill="rgb(236,69,41)" fg:x="19071" fg:w="2"/><text x="98.5237%" y="767.50"></text></g><g><title>zilliqa::consensus::Consensus::early_proposal_apply_transactions (11,815 samples, 60.88%)</title><rect x="37.4060%" y="805" width="60.8832%" height="15" fill="rgb(212,160,3)" fg:x="7259" fg:w="11815"/><text x="37.6560%" y="815.50">zilliqa::consensus::Consensus::early_proposal_apply_transactions</text></g><g><title>zilliqa::transaction::TransactionReceipt::compute_hash (13 samples, 0.07%)</title><rect x="98.2222%" y="789" width="0.0670%" height="15" fill="rgb(216,5,50)" fg:x="19061" fg:w="13"/><text x="98.4722%" y="799.50"></text></g><g><title>zilliqa::crypto::HashBuilder::with (6 samples, 0.03%)</title><rect x="98.2583%" y="773" width="0.0309%" height="15" fill="rgb(241,138,25)" fg:x="19068" fg:w="6"/><text x="98.5083%" y="783.50"></text></g><g><title>zilliqa::consensus::Consensus::get_canonical_block_by_number (3 samples, 0.02%)</title><rect x="98.2892%" y="805" width="0.0155%" height="15" fill="rgb(239,42,18)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="815.50"></text></g><g><title>zilliqa::block_store::BlockStore::get_canonical_block_by_number (3 samples, 0.02%)</title><rect x="98.2892%" y="789" width="0.0155%" height="15" fill="rgb(239,40,7)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="799.50"></text></g><g><title>zilliqa::db::Db::get_canonical_block_by_number (3 samples, 0.02%)</title><rect x="98.2892%" y="773" width="0.0155%" height="15" fill="rgb(239,11,31)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="783.50"></text></g><g><title>zilliqa::db::Db::get_block (3 samples, 0.02%)</title><rect x="98.2892%" y="757" width="0.0155%" height="15" fill="rgb(224,77,40)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="98.2892%" y="741" width="0.0155%" height="15" fill="rgb(226,15,5)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="98.2892%" y="725" width="0.0155%" height="15" fill="rgb(254,188,5)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.02%)</title><rect x="98.2892%" y="709" width="0.0155%" height="15" fill="rgb(241,148,52)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3 samples, 0.02%)</title><rect x="98.2892%" y="693" width="0.0155%" height="15" fill="rgb(251,48,36)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="98.2892%" y="677" width="0.0155%" height="15" fill="rgb(243,83,13)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="98.2892%" y="661" width="0.0155%" height="15" fill="rgb(210,105,0)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="98.2892%" y="645" width="0.0155%" height="15" fill="rgb(239,60,36)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="98.2892%" y="629" width="0.0155%" height="15" fill="rgb(210,20,0)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="98.2892%" y="613" width="0.0155%" height="15" fill="rgb(244,26,53)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.02%)</title><rect x="98.2892%" y="597" width="0.0155%" height="15" fill="rgb(240,100,49)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.2892%" y="581" width="0.0155%" height="15" fill="rgb(250,46,45)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.02%)</title><rect x="98.2892%" y="565" width="0.0155%" height="15" fill="rgb(220,181,29)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="98.2892%" y="549" width="0.0155%" height="15" fill="rgb(213,137,33)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="98.2892%" y="533" width="0.0155%" height="15" fill="rgb(213,27,48)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="543.50"></text></g><g><title>&lt;rusqlite::row::MappedRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.2892%" y="517" width="0.0155%" height="15" fill="rgb(245,180,39)" fg:x="19074" fg:w="3"/><text x="98.5392%" y="527.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.01%)</title><rect x="98.2943%" y="501" width="0.0103%" height="15" fill="rgb(212,158,42)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="511.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2 samples, 0.01%)</title><rect x="98.2943%" y="485" width="0.0103%" height="15" fill="rgb(228,193,18)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="495.50"></text></g><g><title>rusqlite::statement::Statement::step (2 samples, 0.01%)</title><rect x="98.2943%" y="469" width="0.0103%" height="15" fill="rgb(245,172,29)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="479.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.01%)</title><rect x="98.2943%" y="453" width="0.0103%" height="15" fill="rgb(207,98,24)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="463.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="98.2943%" y="437" width="0.0103%" height="15" fill="rgb(249,92,26)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="447.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="98.2943%" y="421" width="0.0103%" height="15" fill="rgb(217,176,26)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="431.50"></text></g><g><title>sqlite3Step (2 samples, 0.01%)</title><rect x="98.2943%" y="405" width="0.0103%" height="15" fill="rgb(221,8,39)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="415.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.01%)</title><rect x="98.2943%" y="389" width="0.0103%" height="15" fill="rgb(208,90,18)" fg:x="19075" fg:w="2"/><text x="98.5443%" y="399.50"></text></g><g><title>&lt;blsful::impls::g2::Bls12381G2Impl as blsful::traits::hash_to_point::HashToPoint&gt;::hash_to_point (2 samples, 0.01%)</title><rect x="98.3046%" y="677" width="0.0103%" height="15" fill="rgb(207,202,30)" fg:x="19077" fg:w="2"/><text x="98.5546%" y="687.50"></text></g><g><title>blstrs_plus::g2::G2Projective::hash (2 samples, 0.01%)</title><rect x="98.3046%" y="661" width="0.0103%" height="15" fill="rgb(231,124,22)" fg:x="19077" fg:w="2"/><text x="98.5546%" y="671.50"></text></g><g><title>map_to_g2 (2 samples, 0.01%)</title><rect x="98.3046%" y="645" width="0.0103%" height="15" fill="rgb(206,15,5)" fg:x="19077" fg:w="2"/><text x="98.5546%" y="655.50"></text></g><g><title>zilliqa::message::Block::from_qc (4 samples, 0.02%)</title><rect x="98.3046%" y="805" width="0.0206%" height="15" fill="rgb(239,16,52)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="815.50"></text></g><g><title>zilliqa::message::Block::new (4 samples, 0.02%)</title><rect x="98.3046%" y="789" width="0.0206%" height="15" fill="rgb(245,213,29)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="799.50"></text></g><g><title>either::Either&lt;L,R&gt;::map_left (4 samples, 0.02%)</title><rect x="98.3046%" y="773" width="0.0206%" height="15" fill="rgb(213,203,36)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="783.50"></text></g><g><title>zilliqa::message::Block::new::{{closure}} (4 samples, 0.02%)</title><rect x="98.3046%" y="757" width="0.0206%" height="15" fill="rgb(209,55,18)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="767.50"></text></g><g><title>zilliqa::crypto::SecretKey::sign (4 samples, 0.02%)</title><rect x="98.3046%" y="741" width="0.0206%" height="15" fill="rgb(207,133,49)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="751.50"></text></g><g><title>blsful::secret_key::SecretKey&lt;C&gt;::sign (4 samples, 0.02%)</title><rect x="98.3046%" y="725" width="0.0206%" height="15" fill="rgb(240,33,46)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="735.50"></text></g><g><title>blsful::traits::sig_basic::BlsSignatureBasic::sign (4 samples, 0.02%)</title><rect x="98.3046%" y="709" width="0.0206%" height="15" fill="rgb(212,35,2)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="719.50"></text></g><g><title>blsful::traits::sig_core::BlsSignatureCore::core_sign (4 samples, 0.02%)</title><rect x="98.3046%" y="693" width="0.0206%" height="15" fill="rgb(231,119,28)" fg:x="19077" fg:w="4"/><text x="98.5546%" y="703.50"></text></g><g><title>&lt;blstrs_plus::g2::G2Projective as core::ops::arith::Mul&lt;&amp;blstrs_plus::scalar::Scalar&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="98.3150%" y="677" width="0.0103%" height="15" fill="rgb(252,178,7)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="687.50"></text></g><g><title>&lt;&amp;blstrs_plus::g2::G2Projective as core::ops::arith::Mul&lt;&amp;blstrs_plus::scalar::Scalar&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="98.3150%" y="661" width="0.0103%" height="15" fill="rgb(251,91,4)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="671.50"></text></g><g><title>blstrs_plus::g2::G2Projective::multiply (2 samples, 0.01%)</title><rect x="98.3150%" y="645" width="0.0103%" height="15" fill="rgb(233,122,19)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="655.50"></text></g><g><title>blst_p2_mult (2 samples, 0.01%)</title><rect x="98.3150%" y="629" width="0.0103%" height="15" fill="rgb(231,208,46)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="639.50"></text></g><g><title>blst_p2_mult (2 samples, 0.01%)</title><rect x="98.3150%" y="613" width="0.0103%" height="15" fill="rgb(243,15,41)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="623.50"></text></g><g><title>POINTonE2_mult_gls (2 samples, 0.01%)</title><rect x="98.3150%" y="597" width="0.0103%" height="15" fill="rgb(210,32,43)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="607.50"></text></g><g><title>POINTonE2s_mult_w5 (2 samples, 0.01%)</title><rect x="98.3150%" y="581" width="0.0103%" height="15" fill="rgb(222,177,15)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="591.50"></text></g><g><title>POINTonE2_dadd (2 samples, 0.01%)</title><rect x="98.3150%" y="565" width="0.0103%" height="15" fill="rgb(244,121,34)" fg:x="19079" fg:w="2"/><text x="98.5650%" y="575.50"></text></g><g><title>zilliqa::consensus::Consensus::early_proposal_assemble_at (11,831 samples, 60.97%)</title><rect x="37.3647%" y="821" width="60.9657%" height="15" fill="rgb(234,138,4)" fg:x="7251" fg:w="11831"/><text x="37.6147%" y="831.50">zilliqa::consensus::Consensus::early_proposal_assemble_at</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.02%)</title><rect x="98.3304%" y="757" width="0.0206%" height="15" fill="rgb(240,97,48)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="98.3304%" y="741" width="0.0206%" height="15" fill="rgb(237,65,54)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.02%)</title><rect x="98.3304%" y="725" width="0.0206%" height="15" fill="rgb(214,25,24)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (4 samples, 0.02%)</title><rect x="98.3304%" y="709" width="0.0206%" height="15" fill="rgb(213,5,3)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.02%)</title><rect x="98.3304%" y="693" width="0.0206%" height="15" fill="rgb(219,81,29)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="98.3304%" y="677" width="0.0206%" height="15" fill="rgb(220,43,48)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="98.3304%" y="661" width="0.0206%" height="15" fill="rgb(239,157,2)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="98.3304%" y="645" width="0.0206%" height="15" fill="rgb(213,104,43)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="98.3304%" y="629" width="0.0206%" height="15" fill="rgb(237,84,9)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.02%)</title><rect x="98.3304%" y="613" width="0.0206%" height="15" fill="rgb(252,6,33)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="98.3304%" y="597" width="0.0206%" height="15" fill="rgb(251,172,22)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.02%)</title><rect x="98.3304%" y="581" width="0.0206%" height="15" fill="rgb(244,91,53)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="98.3304%" y="565" width="0.0206%" height="15" fill="rgb(219,29,30)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="98.3304%" y="549" width="0.0206%" height="15" fill="rgb(213,3,15)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="559.50"></text></g><g><title>&lt;rusqlite::row::MappedRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="98.3304%" y="533" width="0.0206%" height="15" fill="rgb(208,25,28)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="543.50"></text></g><g><title>rusqlite::row::Rows::next (4 samples, 0.02%)</title><rect x="98.3304%" y="517" width="0.0206%" height="15" fill="rgb(252,144,25)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="527.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (4 samples, 0.02%)</title><rect x="98.3304%" y="501" width="0.0206%" height="15" fill="rgb(226,220,25)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="511.50"></text></g><g><title>rusqlite::statement::Statement::step (4 samples, 0.02%)</title><rect x="98.3304%" y="485" width="0.0206%" height="15" fill="rgb(212,131,28)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="495.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (4 samples, 0.02%)</title><rect x="98.3304%" y="469" width="0.0206%" height="15" fill="rgb(219,143,52)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="479.50"></text></g><g><title>sqlite3_step (4 samples, 0.02%)</title><rect x="98.3304%" y="453" width="0.0206%" height="15" fill="rgb(215,56,7)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="463.50"></text></g><g><title>sqlite3_step (4 samples, 0.02%)</title><rect x="98.3304%" y="437" width="0.0206%" height="15" fill="rgb(239,59,51)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="447.50"></text></g><g><title>sqlite3Step (4 samples, 0.02%)</title><rect x="98.3304%" y="421" width="0.0206%" height="15" fill="rgb(209,215,4)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="431.50"></text></g><g><title>sqlite3VdbeExec (4 samples, 0.02%)</title><rect x="98.3304%" y="405" width="0.0206%" height="15" fill="rgb(221,118,39)" fg:x="19082" fg:w="4"/><text x="98.5804%" y="415.50"></text></g><g><title>sqlite3VdbeFinishMoveto (2 samples, 0.01%)</title><rect x="98.3407%" y="389" width="0.0103%" height="15" fill="rgb(236,6,44)" fg:x="19084" fg:w="2"/><text x="98.5907%" y="399.50"></text></g><g><title>zilliqa::db::&lt;impl rusqlite::types::from_sql::FromSql for zilliqa::crypto::NodeSignature&gt;::column_result (2 samples, 0.01%)</title><rect x="98.3510%" y="645" width="0.0103%" height="15" fill="rgb(216,122,9)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="655.50"></text></g><g><title>bincode::deserialize (2 samples, 0.01%)</title><rect x="98.3510%" y="629" width="0.0103%" height="15" fill="rgb(244,134,42)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="639.50"></text></g><g><title>bincode::config::Options::deserialize (2 samples, 0.01%)</title><rect x="98.3510%" y="613" width="0.0103%" height="15" fill="rgb(209,189,35)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="623.50"></text></g><g><title>bincode::internal::deserialize (2 samples, 0.01%)</title><rect x="98.3510%" y="597" width="0.0103%" height="15" fill="rgb(250,47,36)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="607.50"></text></g><g><title>bincode::internal::deserialize_seed (2 samples, 0.01%)</title><rect x="98.3510%" y="581" width="0.0103%" height="15" fill="rgb(252,112,4)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.01%)</title><rect x="98.3510%" y="565" width="0.0103%" height="15" fill="rgb(221,79,51)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="575.50"></text></g><g><title>&lt;zilliqa::crypto::NodeSignature as serde::de::Deserialize&gt;::deserialize (2 samples, 0.01%)</title><rect x="98.3510%" y="549" width="0.0103%" height="15" fill="rgb(232,65,53)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="559.50"></text></g><g><title>zilliqa::crypto::NodeSignature::from_bytes (2 samples, 0.01%)</title><rect x="98.3510%" y="533" width="0.0103%" height="15" fill="rgb(211,37,7)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="543.50"></text></g><g><title>blstrs_plus::g2::G2Projective::from_compressed (2 samples, 0.01%)</title><rect x="98.3510%" y="517" width="0.0103%" height="15" fill="rgb(234,221,18)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="527.50"></text></g><g><title>blstrs_plus::g2::G2Affine::from_compressed (2 samples, 0.01%)</title><rect x="98.3510%" y="501" width="0.0103%" height="15" fill="rgb(220,158,26)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="511.50"></text></g><g><title>subtle::CtOption&lt;T&gt;::and_then (2 samples, 0.01%)</title><rect x="98.3510%" y="485" width="0.0103%" height="15" fill="rgb(220,70,6)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="495.50"></text></g><g><title>blstrs_plus::g2::G2Affine::from_compressed::{{closure}} (2 samples, 0.01%)</title><rect x="98.3510%" y="469" width="0.0103%" height="15" fill="rgb(250,39,48)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="479.50"></text></g><g><title>blstrs_plus::g2::G2Affine::is_torsion_free (2 samples, 0.01%)</title><rect x="98.3510%" y="453" width="0.0103%" height="15" fill="rgb(206,40,27)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="463.50"></text></g><g><title>blst_p2_affine_in_g2 (2 samples, 0.01%)</title><rect x="98.3510%" y="437" width="0.0103%" height="15" fill="rgb(247,80,36)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="447.50"></text></g><g><title>POINTonE2_in_G2 (2 samples, 0.01%)</title><rect x="98.3510%" y="421" width="0.0103%" height="15" fill="rgb(222,9,20)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="431.50"></text></g><g><title>POINTonE2_times_minus_z (2 samples, 0.01%)</title><rect x="98.3510%" y="405" width="0.0103%" height="15" fill="rgb(217,26,45)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="415.50"></text></g><g><title>POINTonE2_add_n_dbl (2 samples, 0.01%)</title><rect x="98.3510%" y="389" width="0.0103%" height="15" fill="rgb(221,67,14)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="399.50"></text></g><g><title>POINTonE2_double (2 samples, 0.01%)</title><rect x="98.3510%" y="373" width="0.0103%" height="15" fill="rgb(248,100,24)" fg:x="19086" fg:w="2"/><text x="98.6010%" y="383.50"></text></g><g><title>zilliqa::consensus::Consensus::get_block (7 samples, 0.04%)</title><rect x="98.3304%" y="821" width="0.0361%" height="15" fill="rgb(230,187,16)" fg:x="19082" fg:w="7"/><text x="98.5804%" y="831.50"></text></g><g><title>zilliqa::block_store::BlockStore::get_block (7 samples, 0.04%)</title><rect x="98.3304%" y="805" width="0.0361%" height="15" fill="rgb(205,108,13)" fg:x="19082" fg:w="7"/><text x="98.5804%" y="815.50"></text></g><g><title>zilliqa::db::Db::get_block_by_hash (7 samples, 0.04%)</title><rect x="98.3304%" y="789" width="0.0361%" height="15" fill="rgb(235,71,51)" fg:x="19082" fg:w="7"/><text x="98.5804%" y="799.50"></text></g><g><title>zilliqa::db::Db::get_block (7 samples, 0.04%)</title><rect x="98.3304%" y="773" width="0.0361%" height="15" fill="rgb(251,172,48)" fg:x="19082" fg:w="7"/><text x="98.5804%" y="783.50"></text></g><g><title>zilliqa::db::Db::get_transactionless_block (3 samples, 0.02%)</title><rect x="98.3510%" y="757" width="0.0155%" height="15" fill="rgb(240,96,49)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="767.50"></text></g><g><title>rusqlite::Connection::query_row (3 samples, 0.02%)</title><rect x="98.3510%" y="741" width="0.0155%" height="15" fill="rgb(235,46,36)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="751.50"></text></g><g><title>rusqlite::statement::Statement::query_row (3 samples, 0.02%)</title><rect x="98.3510%" y="725" width="0.0155%" height="15" fill="rgb(244,3,49)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="98.3510%" y="709" width="0.0155%" height="15" fill="rgb(206,78,54)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.02%)</title><rect x="98.3510%" y="693" width="0.0155%" height="15" fill="rgb(208,85,42)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="703.50"></text></g><g><title>zilliqa::db::Db::get_transactionless_block::make_block (3 samples, 0.02%)</title><rect x="98.3510%" y="677" width="0.0155%" height="15" fill="rgb(219,196,21)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="687.50"></text></g><g><title>rusqlite::row::Row::get (3 samples, 0.02%)</title><rect x="98.3510%" y="661" width="0.0155%" height="15" fill="rgb(238,19,9)" fg:x="19086" fg:w="3"/><text x="98.6010%" y="671.50"></text></g><g><title>zilliqa::consensus::Consensus::total_weight (2 samples, 0.01%)</title><rect x="98.3665%" y="821" width="0.0103%" height="15" fill="rgb(206,86,13)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.01%)</title><rect x="98.3665%" y="805" width="0.0103%" height="15" fill="rgb(214,123,40)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="815.50"></text></g><g><title>&lt;u128 as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.01%)</title><rect x="98.3665%" y="789" width="0.0103%" height="15" fill="rgb(243,53,5)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="98.3665%" y="773" width="0.0103%" height="15" fill="rgb(254,186,31)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="98.3665%" y="757" width="0.0103%" height="15" fill="rgb(221,216,25)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="98.3665%" y="741" width="0.0103%" height="15" fill="rgb(248,107,42)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="751.50"></text></g><g><title>zilliqa::consensus::Consensus::total_weight::{{closure}} (2 samples, 0.01%)</title><rect x="98.3665%" y="725" width="0.0103%" height="15" fill="rgb(221,85,43)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="735.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_stake (2 samples, 0.01%)</title><rect x="98.3665%" y="709" width="0.0103%" height="15" fill="rgb(225,34,24)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="719.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (2 samples, 0.01%)</title><rect x="98.3665%" y="693" width="0.0103%" height="15" fill="rgb(211,119,1)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="703.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (2 samples, 0.01%)</title><rect x="98.3665%" y="677" width="0.0103%" height="15" fill="rgb(254,216,46)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="687.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (2 samples, 0.01%)</title><rect x="98.3665%" y="661" width="0.0103%" height="15" fill="rgb(238,11,38)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="671.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (2 samples, 0.01%)</title><rect x="98.3665%" y="645" width="0.0103%" height="15" fill="rgb(233,50,15)" fg:x="19089" fg:w="2"/><text x="98.6165%" y="655.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::preverify_transaction_inner (2 samples, 0.01%)</title><rect x="98.3819%" y="757" width="0.0103%" height="15" fill="rgb(217,181,29)" fg:x="19092" fg:w="2"/><text x="98.6319%" y="767.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::tx_against_state (2 samples, 0.01%)</title><rect x="98.3819%" y="741" width="0.0103%" height="15" fill="rgb(214,56,3)" fg:x="19092" fg:w="2"/><text x="98.6319%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="98.3819%" y="725" width="0.0103%" height="15" fill="rgb(230,69,45)" fg:x="19092" fg:w="2"/><text x="98.6319%" y="735.50"></text></g><g><title>revm::handler::mainnet::validation::validate_tx_against_state (2 samples, 0.01%)</title><rect x="98.3819%" y="709" width="0.0103%" height="15" fill="rgb(224,201,50)" fg:x="19092" fg:w="2"/><text x="98.6319%" y="719.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (2 samples, 0.01%)</title><rect x="98.3819%" y="693" width="0.0103%" height="15" fill="rgb(217,228,18)" fg:x="19092" fg:w="2"/><text x="98.6319%" y="703.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::get_stakers (4 samples, 0.02%)</title><rect x="98.3819%" y="821" width="0.0206%" height="15" fill="rgb(239,33,44)" fg:x="19092" fg:w="4"/><text x="98.6319%" y="831.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::call_contract (4 samples, 0.02%)</title><rect x="98.3819%" y="805" width="0.0206%" height="15" fill="rgb(248,210,23)" fg:x="19092" fg:w="4"/><text x="98.6319%" y="815.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (4 samples, 0.02%)</title><rect x="98.3819%" y="789" width="0.0206%" height="15" fill="rgb(253,135,8)" fg:x="19092" fg:w="4"/><text x="98.6319%" y="799.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (4 samples, 0.02%)</title><rect x="98.3819%" y="773" width="0.0206%" height="15" fill="rgb(217,98,21)" fg:x="19092" fg:w="4"/><text x="98.6319%" y="783.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (2 samples, 0.01%)</title><rect x="98.3922%" y="757" width="0.0103%" height="15" fill="rgb(253,130,21)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="767.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::run_the_loop (2 samples, 0.01%)</title><rect x="98.3922%" y="741" width="0.0103%" height="15" fill="rgb(207,81,54)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="751.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::execute_frame (2 samples, 0.01%)</title><rect x="98.3922%" y="725" width="0.0103%" height="15" fill="rgb(232,48,33)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="735.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::execute_frame (2 samples, 0.01%)</title><rect x="98.3922%" y="709" width="0.0103%" height="15" fill="rgb(211,9,35)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="98.3922%" y="693" width="0.0103%" height="15" fill="rgb(205,152,21)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="703.50"></text></g><g><title>revm::handler::mainnet::execution::execute_frame (2 samples, 0.01%)</title><rect x="98.3922%" y="677" width="0.0103%" height="15" fill="rgb(249,21,27)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="687.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run (2 samples, 0.01%)</title><rect x="98.3922%" y="661" width="0.0103%" height="15" fill="rgb(252,29,24)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="671.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::step (2 samples, 0.01%)</title><rect x="98.3922%" y="645" width="0.0103%" height="15" fill="rgb(230,130,50)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2 samples, 0.01%)</title><rect x="98.3922%" y="629" width="0.0103%" height="15" fill="rgb(239,144,14)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="639.50"></text></g><g><title>revm_interpreter::instructions::host::sload (2 samples, 0.01%)</title><rect x="98.3922%" y="613" width="0.0103%" height="15" fill="rgb(227,111,50)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="623.50"></text></g><g><title>&lt;revm::context::Context&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::sload (2 samples, 0.01%)</title><rect x="98.3922%" y="597" width="0.0103%" height="15" fill="rgb(254,84,20)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="607.50"></text></g><g><title>revm::context::inner_evm_context::InnerEvmContext&lt;DB&gt;::sload (2 samples, 0.01%)</title><rect x="98.3922%" y="581" width="0.0103%" height="15" fill="rgb(232,90,48)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="591.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (2 samples, 0.01%)</title><rect x="98.3922%" y="565" width="0.0103%" height="15" fill="rgb(253,63,47)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="575.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::storage (2 samples, 0.01%)</title><rect x="98.3922%" y="549" width="0.0103%" height="15" fill="rgb(251,146,35)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="559.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::storage_ref (2 samples, 0.01%)</title><rect x="98.3922%" y="533" width="0.0103%" height="15" fill="rgb(229,192,35)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="543.50"></text></g><g><title>zilliqa::state::State::get_account_storage (2 samples, 0.01%)</title><rect x="98.3922%" y="517" width="0.0103%" height="15" fill="rgb(225,68,9)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="527.50"></text></g><g><title>zilliqa::state::State::get_account_trie (2 samples, 0.01%)</title><rect x="98.3922%" y="501" width="0.0103%" height="15" fill="rgb(214,97,34)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="511.50"></text></g><g><title>zilliqa::state::State::get_account (2 samples, 0.01%)</title><rect x="98.3922%" y="485" width="0.0103%" height="15" fill="rgb(253,31,26)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="495.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (2 samples, 0.01%)</title><rect x="98.3922%" y="469" width="0.0103%" height="15" fill="rgb(225,151,47)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="479.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="98.3922%" y="453" width="0.0103%" height="15" fill="rgb(206,185,9)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="463.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="98.3922%" y="437" width="0.0103%" height="15" fill="rgb(249,65,17)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="447.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="98.3922%" y="421" width="0.0103%" height="15" fill="rgb(220,110,10)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="431.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (2 samples, 0.01%)</title><rect x="98.3922%" y="405" width="0.0103%" height="15" fill="rgb(222,198,49)" fg:x="19094" fg:w="2"/><text x="98.6422%" y="415.50"></text></g><g><title>&lt;blstrs_plus::pairing::MillerLoopResult as pairing::MillerLoopResult&gt;::final_exponentiation (2 samples, 0.01%)</title><rect x="98.4077%" y="709" width="0.0103%" height="15" fill="rgb(239,81,13)" fg:x="19097" fg:w="2"/><text x="98.6577%" y="719.50"></text></g><g><title>final_exp (2 samples, 0.01%)</title><rect x="98.4077%" y="693" width="0.0103%" height="15" fill="rgb(216,128,11)" fg:x="19097" fg:w="2"/><text x="98.6577%" y="703.50"></text></g><g><title>raise_to_z_div_by_2 (2 samples, 0.01%)</title><rect x="98.4077%" y="677" width="0.0103%" height="15" fill="rgb(247,156,8)" fg:x="19097" fg:w="2"/><text x="98.6577%" y="687.50"></text></g><g><title>mul_n_sqr (2 samples, 0.01%)</title><rect x="98.4077%" y="661" width="0.0103%" height="15" fill="rgb(219,173,1)" fg:x="19097" fg:w="2"/><text x="98.6577%" y="671.50"></text></g><g><title>cyclotomic_sqr_fp12 (2 samples, 0.01%)</title><rect x="98.4077%" y="645" width="0.0103%" height="15" fill="rgb(227,42,24)" fg:x="19097" fg:w="2"/><text x="98.6577%" y="655.50"></text></g><g><title>blstrs_plus::pairing::multi_miller_loop (2 samples, 0.01%)</title><rect x="98.4180%" y="709" width="0.0103%" height="15" fill="rgb(253,219,50)" fg:x="19099" fg:w="2"/><text x="98.6680%" y="719.50"></text></g><g><title>&lt;blstrs_plus::Bls12 as pairing::MultiMillerLoop&gt;::multi_miller_loop (2 samples, 0.01%)</title><rect x="98.4180%" y="693" width="0.0103%" height="15" fill="rgb(215,191,54)" fg:x="19099" fg:w="2"/><text x="98.6680%" y="703.50"></text></g><g><title>miller_loop_lines (2 samples, 0.01%)</title><rect x="98.4180%" y="677" width="0.0103%" height="15" fill="rgb(238,83,12)" fg:x="19099" fg:w="2"/><text x="98.6680%" y="687.50"></text></g><g><title>post_add_n_dbl (2 samples, 0.01%)</title><rect x="98.4180%" y="661" width="0.0103%" height="15" fill="rgb(205,124,9)" fg:x="19099" fg:w="2"/><text x="98.6680%" y="671.50"></text></g><g><title>mul_by_xy00z0_fp12 (2 samples, 0.01%)</title><rect x="98.4180%" y="645" width="0.0103%" height="15" fill="rgb(253,174,7)" fg:x="19099" fg:w="2"/><text x="98.6680%" y="655.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (19,091 samples, 98.38%)</title><rect x="0.0618%" y="1093" width="98.3768%" height="15" fill="rgb(206,134,49)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1103.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>core::iter::traits::iterator::Iterator::collect (19,091 samples, 98.38%)</title><rect x="0.0618%" y="1077" width="98.3768%" height="15" fill="rgb(221,89,20)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1087.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19,091 samples, 98.38%)</title><rect x="0.0618%" y="1061" width="98.3768%" height="15" fill="rgb(240,205,13)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1071.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19,091 samples, 98.38%)</title><rect x="0.0618%" y="1045" width="98.3768%" height="15" fill="rgb(237,174,32)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1055.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19,091 samples, 98.38%)</title><rect x="0.0618%" y="1029" width="98.3768%" height="15" fill="rgb(226,12,15)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1039.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19,091 samples, 98.38%)</title><rect x="0.0618%" y="1013" width="98.3768%" height="15" fill="rgb(245,160,52)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1023.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (19,091 samples, 98.38%)</title><rect x="0.0618%" y="997" width="98.3768%" height="15" fill="rgb(253,80,21)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="1007.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19,091 samples, 98.38%)</title><rect x="0.0618%" y="981" width="98.3768%" height="15" fill="rgb(231,225,22)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="991.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,091 samples, 98.38%)</title><rect x="0.0618%" y="965" width="98.3768%" height="15" fill="rgb(253,185,12)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="975.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,091 samples, 98.38%)</title><rect x="0.0618%" y="949" width="98.3768%" height="15" fill="rgb(234,197,21)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="959.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (19,091 samples, 98.38%)</title><rect x="0.0618%" y="933" width="98.3768%" height="15" fill="rgb(210,47,30)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="943.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}} (19,091 samples, 98.38%)</title><rect x="0.0618%" y="917" width="98.3768%" height="15" fill="rgb(246,139,27)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="927.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}}</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (19,091 samples, 98.38%)</title><rect x="0.0618%" y="901" width="98.3768%" height="15" fill="rgb(226,130,16)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="911.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}}</text></g><g><title>it::produce_full::{{closure}}::{{closure}} (19,091 samples, 98.38%)</title><rect x="0.0618%" y="885" width="98.3768%" height="15" fill="rgb(237,208,20)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="895.50">it::produce_full::{{closure}}::{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (19,091 samples, 98.38%)</title><rect x="0.0618%" y="869" width="98.3768%" height="15" fill="rgb(245,186,28)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="879.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>it::produce_full::{{closure}}::{{closure}}::{{closure}} (19,091 samples, 98.38%)</title><rect x="0.0618%" y="853" width="98.3768%" height="15" fill="rgb(238,105,39)" fg:x="12" fg:w="19091"/><text x="0.3118%" y="863.50">it::produce_full::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>zilliqa::consensus::Consensus::vote (11,853 samples, 61.08%)</title><rect x="37.3596%" y="837" width="61.0790%" height="15" fill="rgb(253,228,11)" fg:x="7250" fg:w="11853"/><text x="37.6096%" y="847.50">zilliqa::consensus::Consensus::vote</text></g><g><title>zilliqa::message::Vote::verify (7 samples, 0.04%)</title><rect x="98.4026%" y="821" width="0.0361%" height="15" fill="rgb(224,136,38)" fg:x="19096" fg:w="7"/><text x="98.6526%" y="831.50"></text></g><g><title>zilliqa::crypto::NodePublicKey::verify (7 samples, 0.04%)</title><rect x="98.4026%" y="805" width="0.0361%" height="15" fill="rgb(211,3,25)" fg:x="19096" fg:w="7"/><text x="98.6526%" y="815.50"></text></g><g><title>blsful::signature::Signature&lt;C&gt;::verify (7 samples, 0.04%)</title><rect x="98.4026%" y="789" width="0.0361%" height="15" fill="rgb(238,66,34)" fg:x="19096" fg:w="7"/><text x="98.6526%" y="799.50"></text></g><g><title>blsful::traits::sig_basic::BlsSignatureBasic::verify (7 samples, 0.04%)</title><rect x="98.4026%" y="773" width="0.0361%" height="15" fill="rgb(223,188,11)" fg:x="19096" fg:w="7"/><text x="98.6526%" y="783.50"></text></g><g><title>blsful::traits::sig_core::BlsSignatureCore::core_verify (7 samples, 0.04%)</title><rect x="98.4026%" y="757" width="0.0361%" height="15" fill="rgb(221,10,35)" fg:x="19096" fg:w="7"/><text x="98.6526%" y="767.50"></text></g><g><title>&lt;blsful::impls::g2::Bls12381G2Impl as blsful::traits::pairings::Pairing&gt;::pairing (6 samples, 0.03%)</title><rect x="98.4077%" y="741" width="0.0309%" height="15" fill="rgb(223,18,44)" fg:x="19097" fg:w="6"/><text x="98.6577%" y="751.50"></text></g><g><title>blsful::helpers::pairing_g2_g1 (6 samples, 0.03%)</title><rect x="98.4077%" y="725" width="0.0309%" height="15" fill="rgb(220,97,41)" fg:x="19097" fg:w="6"/><text x="98.6577%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="98.4283%" y="709" width="0.0103%" height="15" fill="rgb(206,95,45)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="98.4283%" y="693" width="0.0103%" height="15" fill="rgb(209,96,13)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="98.4283%" y="677" width="0.0103%" height="15" fill="rgb(237,39,34)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="98.4283%" y="661" width="0.0103%" height="15" fill="rgb(213,49,47)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="98.4283%" y="645" width="0.0103%" height="15" fill="rgb(205,107,27)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="98.4283%" y="629" width="0.0103%" height="15" fill="rgb(212,142,9)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="98.4283%" y="613" width="0.0103%" height="15" fill="rgb(226,182,0)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="98.4283%" y="597" width="0.0103%" height="15" fill="rgb(231,3,53)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="98.4283%" y="581" width="0.0103%" height="15" fill="rgb(246,111,28)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="98.4283%" y="565" width="0.0103%" height="15" fill="rgb(254,183,7)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="575.50"></text></g><g><title>blsful::helpers::pairing_g2_g1::{{closure}} (2 samples, 0.01%)</title><rect x="98.4283%" y="549" width="0.0103%" height="15" fill="rgb(247,177,28)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="559.50"></text></g><g><title>&lt;blstrs_plus::g2::G2Prepared as core::convert::From&lt;blstrs_plus::g2::G2Affine&gt;&gt;::from (2 samples, 0.01%)</title><rect x="98.4283%" y="533" width="0.0103%" height="15" fill="rgb(244,43,1)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="543.50"></text></g><g><title>precompute_lines (2 samples, 0.01%)</title><rect x="98.4283%" y="517" width="0.0103%" height="15" fill="rgb(207,2,35)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="527.50"></text></g><g><title>pre_add_n_dbl (2 samples, 0.01%)</title><rect x="98.4283%" y="501" width="0.0103%" height="15" fill="rgb(213,83,22)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="511.50"></text></g><g><title>line_dbl (2 samples, 0.01%)</title><rect x="98.4283%" y="485" width="0.0103%" height="15" fill="rgb(246,212,13)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="495.50"></text></g><g><title>mul_fp2 (2 samples, 0.01%)</title><rect x="98.4283%" y="469" width="0.0103%" height="15" fill="rgb(213,127,46)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="479.50"></text></g><g><title>mulx_mont_384x (2 samples, 0.01%)</title><rect x="98.4283%" y="453" width="0.0103%" height="15" fill="rgb(219,215,39)" fg:x="19101" fg:w="2"/><text x="98.6783%" y="463.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (2 samples, 0.01%)</title><rect x="98.4438%" y="981" width="0.0103%" height="15" fill="rgb(227,99,17)" fg:x="19104" fg:w="2"/><text x="98.6938%" y="991.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (2 samples, 0.01%)</title><rect x="98.4438%" y="965" width="0.0103%" height="15" fill="rgb(208,155,18)" fg:x="19104" fg:w="2"/><text x="98.6938%" y="975.50"></text></g><g><title>eth_trie::db::DB::insert_batch (2 samples, 0.01%)</title><rect x="98.4438%" y="949" width="0.0103%" height="15" fill="rgb(223,204,38)" fg:x="19104" fg:w="2"/><text x="98.6938%" y="959.50"></text></g><g><title>&lt;eth_trie::db::MemoryDB as eth_trie::db::DB&gt;::insert (2 samples, 0.01%)</title><rect x="98.4438%" y="933" width="0.0103%" height="15" fill="rgb(212,114,21)" fg:x="19104" fg:w="2"/><text x="98.6938%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.05%)</title><rect x="98.4592%" y="805" width="0.0515%" height="15" fill="rgb(250,74,13)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.05%)</title><rect x="98.4592%" y="789" width="0.0515%" height="15" fill="rgb(234,7,1)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.05%)</title><rect x="98.4592%" y="773" width="0.0515%" height="15" fill="rgb(207,138,31)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (10 samples, 0.05%)</title><rect x="98.4592%" y="757" width="0.0515%" height="15" fill="rgb(215,186,42)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.05%)</title><rect x="98.4592%" y="741" width="0.0515%" height="15" fill="rgb(229,205,49)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="751.50"></text></g><g><title>k256::arithmetic::mul::lincomb::{{closure}} (10 samples, 0.05%)</title><rect x="98.4592%" y="725" width="0.0515%" height="15" fill="rgb(216,156,32)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="735.50"></text></g><g><title>&lt;k256::arithmetic::mul::LookupTable as core::convert::From&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::from (10 samples, 0.05%)</title><rect x="98.4592%" y="709" width="0.0515%" height="15" fill="rgb(238,7,21)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="719.50"></text></g><g><title>&lt;&amp;k256::arithmetic::projective::ProjectivePoint as core::ops::arith::Add&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::add (10 samples, 0.05%)</title><rect x="98.4592%" y="693" width="0.0515%" height="15" fill="rgb(249,190,22)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="703.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::add (10 samples, 0.05%)</title><rect x="98.4592%" y="677" width="0.0515%" height="15" fill="rgb(253,51,31)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="687.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (10 samples, 0.05%)</title><rect x="98.4592%" y="661" width="0.0515%" height="15" fill="rgb(237,90,54)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="671.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (10 samples, 0.05%)</title><rect x="98.4592%" y="645" width="0.0515%" height="15" fill="rgb(250,214,33)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="655.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (10 samples, 0.05%)</title><rect x="98.4592%" y="629" width="0.0515%" height="15" fill="rgb(237,10,49)" fg:x="19107" fg:w="10"/><text x="98.7092%" y="639.50"></text></g><g><title>k256::arithmetic::mul::LookupTable::select (5 samples, 0.03%)</title><rect x="98.5108%" y="805" width="0.0258%" height="15" fill="rgb(241,56,36)" fg:x="19117" fg:w="5"/><text x="98.7608%" y="815.50"></text></g><g><title>subtle::ConditionallySelectable::conditional_assign (5 samples, 0.03%)</title><rect x="98.5108%" y="789" width="0.0258%" height="15" fill="rgb(227,164,12)" fg:x="19117" fg:w="5"/><text x="98.7608%" y="799.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as subtle::ConditionallySelectable&gt;::conditional_select (3 samples, 0.02%)</title><rect x="98.5211%" y="773" width="0.0155%" height="15" fill="rgb(249,149,35)" fg:x="19119" fg:w="3"/><text x="98.7711%" y="783.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as subtle::ConditionallySelectable&gt;::conditional_select (3 samples, 0.02%)</title><rect x="98.5211%" y="757" width="0.0155%" height="15" fill="rgb(238,227,50)" fg:x="19119" fg:w="3"/><text x="98.7711%" y="767.50"></text></g><g><title>&lt;k256::arithmetic::field::field_5x52::FieldElement5x52 as subtle::ConditionallySelectable&gt;::conditional_select (3 samples, 0.02%)</title><rect x="98.5211%" y="741" width="0.0155%" height="15" fill="rgb(235,102,45)" fg:x="19119" fg:w="3"/><text x="98.7711%" y="751.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_select (3 samples, 0.02%)</title><rect x="98.5211%" y="725" width="0.0155%" height="15" fill="rgb(211,10,38)" fg:x="19119" fg:w="3"/><text x="98.7711%" y="735.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitXor&lt;u64&gt;&gt;::bitxor (3 samples, 0.02%)</title><rect x="98.5211%" y="709" width="0.0155%" height="15" fill="rgb(219,77,48)" fg:x="19119" fg:w="3"/><text x="98.7711%" y="719.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (3 samples, 0.02%)</title><rect x="98.5211%" y="693" width="0.0155%" height="15" fill="rgb(246,6,15)" fg:x="19119" fg:w="3"/><text x="98.7711%" y="703.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (11 samples, 0.06%)</title><rect x="98.5365%" y="789" width="0.0567%" height="15" fill="rgb(207,220,2)" fg:x="19122" fg:w="11"/><text x="98.7865%" y="799.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (11 samples, 0.06%)</title><rect x="98.5365%" y="773" width="0.0567%" height="15" fill="rgb(242,48,14)" fg:x="19122" fg:w="11"/><text x="98.7865%" y="783.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (11 samples, 0.06%)</title><rect x="98.5365%" y="757" width="0.0567%" height="15" fill="rgb(218,19,27)" fg:x="19122" fg:w="11"/><text x="98.7865%" y="767.50"></text></g><g><title>&lt;P as elliptic_curve::ops::LinearCombination&gt;::lincomb (29 samples, 0.15%)</title><rect x="98.4541%" y="869" width="0.1494%" height="15" fill="rgb(228,0,35)" fg:x="19106" fg:w="29"/><text x="98.7041%" y="879.50"></text></g><g><title>k256::arithmetic::mul::&lt;impl elliptic_curve::ops::LinearCombinationExt&lt;[(k256::arithmetic::projective::ProjectivePoint,k256::arithmetic::scalar::Scalar) (29 samples, 0.15%)</title><rect x="98.4541%" y="853" width="0.1494%" height="15" fill="rgb(244,142,54)" fg:x="19106" fg:w="29"/><text x="98.7041%" y="863.50"></text></g><g><title> N]&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::lincomb_ext (29 samples, 0.15%)</title><rect x="98.4541%" y="837" width="0.1494%" height="15" fill="rgb(243,217,40)" fg:x="19106" fg:w="29"/><text x="98.7041%" y="847.50"></text></g><g><title>k256::arithmetic::mul::lincomb (29 samples, 0.15%)</title><rect x="98.4541%" y="821" width="0.1494%" height="15" fill="rgb(207,114,16)" fg:x="19106" fg:w="29"/><text x="98.7041%" y="831.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::double (13 samples, 0.07%)</title><rect x="98.5365%" y="805" width="0.0670%" height="15" fill="rgb(224,33,25)" fg:x="19122" fg:w="13"/><text x="98.7865%" y="815.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (2 samples, 0.01%)</title><rect x="98.5932%" y="789" width="0.0103%" height="15" fill="rgb(230,93,54)" fg:x="19133" fg:w="2"/><text x="98.8432%" y="799.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (2 samples, 0.01%)</title><rect x="98.5932%" y="773" width="0.0103%" height="15" fill="rgb(224,56,24)" fg:x="19133" fg:w="2"/><text x="98.8432%" y="783.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (2 samples, 0.01%)</title><rect x="98.5932%" y="757" width="0.0103%" height="15" fill="rgb(235,189,50)" fg:x="19133" fg:w="2"/><text x="98.8432%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="98.6035%" y="869" width="0.0258%" height="15" fill="rgb(242,173,8)" fg:x="19135" fg:w="5"/><text x="98.8535%" y="879.50"></text></g><g><title>k256::arithmetic::projective::&lt;impl core::convert::From&lt;k256::arithmetic::projective::ProjectivePoint&gt; for k256::arithmetic::affine::AffinePoint&gt;::from (5 samples, 0.03%)</title><rect x="98.6035%" y="853" width="0.0258%" height="15" fill="rgb(209,206,10)" fg:x="19135" fg:w="5"/><text x="98.8535%" y="863.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::to_affine (5 samples, 0.03%)</title><rect x="98.6035%" y="837" width="0.0258%" height="15" fill="rgb(213,182,44)" fg:x="19135" fg:w="5"/><text x="98.8535%" y="847.50"></text></g><g><title>k256::arithmetic::field::FieldElement::invert (5 samples, 0.03%)</title><rect x="98.6035%" y="821" width="0.0258%" height="15" fill="rgb(243,51,15)" fg:x="19135" fg:w="5"/><text x="98.8535%" y="831.50"></text></g><g><title>k256::arithmetic::field::FieldElement::pow2k (5 samples, 0.03%)</title><rect x="98.6035%" y="805" width="0.0258%" height="15" fill="rgb(241,13,14)" fg:x="19135" fg:w="5"/><text x="98.8535%" y="815.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (5 samples, 0.03%)</title><rect x="98.6035%" y="789" width="0.0258%" height="15" fill="rgb(239,147,24)" fg:x="19135" fg:w="5"/><text x="98.8535%" y="799.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (4 samples, 0.02%)</title><rect x="98.6087%" y="773" width="0.0206%" height="15" fill="rgb(223,129,16)" fg:x="19136" fg:w="4"/><text x="98.8587%" y="783.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (4 samples, 0.02%)</title><rect x="98.6087%" y="757" width="0.0206%" height="15" fill="rgb(209,169,13)" fg:x="19136" fg:w="4"/><text x="98.8587%" y="767.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as core::ops::arith::AddAssign&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::add_assign (22 samples, 0.11%)</title><rect x="98.6293%" y="757" width="0.1134%" height="15" fill="rgb(235,159,41)" fg:x="19140" fg:w="22"/><text x="98.8793%" y="767.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::add (19 samples, 0.10%)</title><rect x="98.6447%" y="741" width="0.0979%" height="15" fill="rgb(223,219,48)" fg:x="19143" fg:w="19"/><text x="98.8947%" y="751.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (19 samples, 0.10%)</title><rect x="98.6447%" y="725" width="0.0979%" height="15" fill="rgb(236,80,13)" fg:x="19143" fg:w="19"/><text x="98.8947%" y="735.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (19 samples, 0.10%)</title><rect x="98.6447%" y="709" width="0.0979%" height="15" fill="rgb(213,5,6)" fg:x="19143" fg:w="19"/><text x="98.8947%" y="719.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (19 samples, 0.10%)</title><rect x="98.6447%" y="693" width="0.0979%" height="15" fill="rgb(205,59,21)" fg:x="19143" fg:w="19"/><text x="98.8947%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="98.7427%" y="757" width="0.0103%" height="15" fill="rgb(247,137,35)" fg:x="19162" fg:w="2"/><text x="98.9927%" y="767.50"></text></g><g><title>k256::arithmetic::mul::LookupTable::select (5 samples, 0.03%)</title><rect x="98.7530%" y="757" width="0.0258%" height="15" fill="rgb(242,208,28)" fg:x="19164" fg:w="5"/><text x="99.0030%" y="767.50"></text></g><g><title>subtle::ConditionallySelectable::conditional_assign (5 samples, 0.03%)</title><rect x="98.7530%" y="741" width="0.0258%" height="15" fill="rgb(245,62,25)" fg:x="19164" fg:w="5"/><text x="99.0030%" y="751.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as subtle::ConditionallySelectable&gt;::conditional_select (4 samples, 0.02%)</title><rect x="98.7581%" y="725" width="0.0206%" height="15" fill="rgb(233,99,54)" fg:x="19165" fg:w="4"/><text x="99.0081%" y="735.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as subtle::ConditionallySelectable&gt;::conditional_select (4 samples, 0.02%)</title><rect x="98.7581%" y="709" width="0.0206%" height="15" fill="rgb(213,10,37)" fg:x="19165" fg:w="4"/><text x="99.0081%" y="719.50"></text></g><g><title>&lt;k256::arithmetic::field::field_5x52::FieldElement5x52 as subtle::ConditionallySelectable&gt;::conditional_select (4 samples, 0.02%)</title><rect x="98.7581%" y="693" width="0.0206%" height="15" fill="rgb(235,143,30)" fg:x="19165" fg:w="4"/><text x="99.0081%" y="703.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_select (4 samples, 0.02%)</title><rect x="98.7581%" y="677" width="0.0206%" height="15" fill="rgb(250,146,33)" fg:x="19165" fg:w="4"/><text x="99.0081%" y="687.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitXor&lt;u64&gt;&gt;::bitxor (4 samples, 0.02%)</title><rect x="98.7581%" y="661" width="0.0206%" height="15" fill="rgb(226,198,42)" fg:x="19165" fg:w="4"/><text x="99.0081%" y="671.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (4 samples, 0.02%)</title><rect x="98.7581%" y="645" width="0.0206%" height="15" fill="rgb(222,55,6)" fg:x="19165" fg:w="4"/><text x="99.0081%" y="655.50"></text></g><g><title>&lt;k256::arithmetic::field::FieldElement as core::ops::arith::Mul&lt;&amp;k256::arithmetic::field::FieldElement&gt;&gt;::mul (7 samples, 0.04%)</title><rect x="98.7787%" y="741" width="0.0361%" height="15" fill="rgb(213,224,31)" fg:x="19169" fg:w="7"/><text x="99.0287%" y="751.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul (7 samples, 0.04%)</title><rect x="98.7787%" y="725" width="0.0361%" height="15" fill="rgb(226,103,35)" fg:x="19169" fg:w="7"/><text x="99.0287%" y="735.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (7 samples, 0.04%)</title><rect x="98.7787%" y="709" width="0.0361%" height="15" fill="rgb(205,66,45)" fg:x="19169" fg:w="7"/><text x="99.0287%" y="719.50"></text></g><g><title>&lt;P as elliptic_curve::ops::LinearCombination&gt;::lincomb (41 samples, 0.21%)</title><rect x="98.6293%" y="821" width="0.2113%" height="15" fill="rgb(226,51,42)" fg:x="19140" fg:w="41"/><text x="98.8793%" y="831.50"></text></g><g><title>k256::arithmetic::mul::&lt;impl elliptic_curve::ops::LinearCombinationExt&lt;[(k256::arithmetic::projective::ProjectivePoint,k256::arithmetic::scalar::Scalar) (41 samples, 0.21%)</title><rect x="98.6293%" y="805" width="0.2113%" height="15" fill="rgb(206,69,1)" fg:x="19140" fg:w="41"/><text x="98.8793%" y="815.50"></text></g><g><title> N]&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::lincomb_ext (41 samples, 0.21%)</title><rect x="98.6293%" y="789" width="0.2113%" height="15" fill="rgb(213,228,47)" fg:x="19140" fg:w="41"/><text x="98.8793%" y="799.50"></text></g><g><title>k256::arithmetic::mul::lincomb (41 samples, 0.21%)</title><rect x="98.6293%" y="773" width="0.2113%" height="15" fill="rgb(224,204,18)" fg:x="19140" fg:w="41"/><text x="98.8793%" y="783.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::double (12 samples, 0.06%)</title><rect x="98.7787%" y="757" width="0.0618%" height="15" fill="rgb(253,187,47)" fg:x="19169" fg:w="12"/><text x="99.0287%" y="767.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (5 samples, 0.03%)</title><rect x="98.8148%" y="741" width="0.0258%" height="15" fill="rgb(232,61,2)" fg:x="19176" fg:w="5"/><text x="99.0648%" y="751.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (5 samples, 0.03%)</title><rect x="98.8148%" y="725" width="0.0258%" height="15" fill="rgb(213,132,35)" fg:x="19176" fg:w="5"/><text x="99.0648%" y="735.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (5 samples, 0.03%)</title><rect x="98.8148%" y="709" width="0.0258%" height="15" fill="rgb(247,33,21)" fg:x="19176" fg:w="5"/><text x="99.0648%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (5 samples, 0.03%)</title><rect x="98.8406%" y="789" width="0.0258%" height="15" fill="rgb(233,71,46)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="799.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="98.8406%" y="773" width="0.0258%" height="15" fill="rgb(222,173,43)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="783.50"></text></g><g><title>crypto_bigint::uint::cmp::&lt;impl core::cmp::PartialOrd for crypto_bigint::uint::Uint&lt;_&gt;&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="98.8406%" y="757" width="0.0258%" height="15" fill="rgb(249,218,47)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="767.50"></text></g><g><title>crypto_bigint::uint::cmp::&lt;impl core::cmp::Ord for crypto_bigint::uint::Uint&lt;_&gt;&gt;::cmp (5 samples, 0.03%)</title><rect x="98.8406%" y="741" width="0.0258%" height="15" fill="rgb(254,185,48)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="751.50"></text></g><g><title>crypto_bigint::uint::cmp::&lt;impl crypto_bigint::uint::Uint&lt;_&gt;&gt;::ct_cmp (5 samples, 0.03%)</title><rect x="98.8406%" y="725" width="0.0258%" height="15" fill="rgb(252,165,50)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="735.50"></text></g><g><title>crypto_bigint::limb::sub::&lt;impl crypto_bigint::limb::Limb&gt;::sbb (5 samples, 0.03%)</title><rect x="98.8406%" y="709" width="0.0258%" height="15" fill="rgb(206,219,6)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_sub (5 samples, 0.03%)</title><rect x="98.8406%" y="693" width="0.0258%" height="15" fill="rgb(212,212,45)" fg:x="19181" fg:w="5"/><text x="99.0906%" y="703.50"></text></g><g><title>&lt;elliptic_curve::scalar::nonzero::NonZeroScalar&lt;C&gt; as elliptic_curve::ops::Invert&gt;::invert_vartime (7 samples, 0.04%)</title><rect x="98.8406%" y="821" width="0.0361%" height="15" fill="rgb(221,31,9)" fg:x="19181" fg:w="7"/><text x="99.0906%" y="831.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as elliptic_curve::ops::Invert&gt;::invert_vartime (7 samples, 0.04%)</title><rect x="98.8406%" y="805" width="0.0361%" height="15" fill="rgb(234,198,39)" fg:x="19181" fg:w="7"/><text x="99.0906%" y="815.50"></text></g><g><title>ff::PrimeField::is_even (2 samples, 0.01%)</title><rect x="98.8663%" y="789" width="0.0103%" height="15" fill="rgb(252,145,46)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="799.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as ff::PrimeField&gt;::is_odd (2 samples, 0.01%)</title><rect x="98.8663%" y="773" width="0.0103%" height="15" fill="rgb(237,149,0)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="783.50"></text></g><g><title>&lt;crypto_bigint::uint::Uint&lt;_&gt; as crypto_bigint::traits::Integer&gt;::is_odd (2 samples, 0.01%)</title><rect x="98.8663%" y="757" width="0.0103%" height="15" fill="rgb(229,65,5)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="98.8663%" y="741" width="0.0103%" height="15" fill="rgb(235,60,36)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="751.50"></text></g><g><title>&lt;crypto_bigint::uint::Uint&lt;_&gt; as crypto_bigint::traits::Integer&gt;::is_odd::{{closure}} (2 samples, 0.01%)</title><rect x="98.8663%" y="725" width="0.0103%" height="15" fill="rgb(222,47,18)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="735.50"></text></g><g><title>crypto_bigint::limb::cmp::&lt;impl crypto_bigint::limb::Limb&gt;::is_odd (2 samples, 0.01%)</title><rect x="98.8663%" y="709" width="0.0103%" height="15" fill="rgb(235,114,22)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="719.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.01%)</title><rect x="98.8663%" y="693" width="0.0103%" height="15" fill="rgb(209,167,11)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="703.50"></text></g><g><title>subtle::black_box (2 samples, 0.01%)</title><rect x="98.8663%" y="677" width="0.0103%" height="15" fill="rgb(251,73,18)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="687.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.01%)</title><rect x="98.8663%" y="661" width="0.0103%" height="15" fill="rgb(217,60,17)" fg:x="19186" fg:w="2"/><text x="99.1163%" y="671.50"></text></g><g><title>&lt;ecdsa::verifying::VerifyingKey&lt;C&gt; as signature::hazmat::PrehashVerifier&lt;ecdsa::Signature&lt;C&gt;&gt;&gt;::verify_prehash (52 samples, 0.27%)</title><rect x="98.6293%" y="869" width="0.2680%" height="15" fill="rgb(224,36,37)" fg:x="19140" fg:w="52"/><text x="98.8793%" y="879.50"></text></g><g><title>k256::ecdsa::&lt;impl ecdsa::hazmat::VerifyPrimitive&lt;k256::Secp256k1&gt; for k256::arithmetic::affine::AffinePoint&gt;::verify_prehashed (52 samples, 0.27%)</title><rect x="98.6293%" y="853" width="0.2680%" height="15" fill="rgb(211,21,32)" fg:x="19140" fg:w="52"/><text x="98.8793%" y="863.50"></text></g><g><title>ecdsa::hazmat::verify_prehashed (52 samples, 0.27%)</title><rect x="98.6293%" y="837" width="0.2680%" height="15" fill="rgb(231,55,48)" fg:x="19140" fg:w="52"/><text x="98.8793%" y="847.50"></text></g><g><title>&lt;k256::arithmetic::projective::ProjectivePoint as group::Curve&gt;::to_affine (4 samples, 0.02%)</title><rect x="98.8766%" y="821" width="0.0206%" height="15" fill="rgb(227,42,18)" fg:x="19188" fg:w="4"/><text x="99.1266%" y="831.50"></text></g><g><title>k256::arithmetic::projective::ProjectivePoint::to_affine (4 samples, 0.02%)</title><rect x="98.8766%" y="805" width="0.0206%" height="15" fill="rgb(217,2,27)" fg:x="19188" fg:w="4"/><text x="99.1266%" y="815.50"></text></g><g><title>k256::arithmetic::field::FieldElement::invert (4 samples, 0.02%)</title><rect x="98.8766%" y="789" width="0.0206%" height="15" fill="rgb(251,138,23)" fg:x="19188" fg:w="4"/><text x="99.1266%" y="799.50"></text></g><g><title>k256::arithmetic::field::FieldElement::pow2k (4 samples, 0.02%)</title><rect x="98.8766%" y="773" width="0.0206%" height="15" fill="rgb(226,184,11)" fg:x="19188" fg:w="4"/><text x="99.1266%" y="783.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (3 samples, 0.02%)</title><rect x="98.8818%" y="757" width="0.0155%" height="15" fill="rgb(242,142,12)" fg:x="19189" fg:w="3"/><text x="99.1318%" y="767.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (3 samples, 0.02%)</title><rect x="98.8818%" y="741" width="0.0155%" height="15" fill="rgb(234,187,18)" fg:x="19189" fg:w="3"/><text x="99.1318%" y="751.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (3 samples, 0.02%)</title><rect x="98.8818%" y="725" width="0.0155%" height="15" fill="rgb(237,44,42)" fg:x="19189" fg:w="3"/><text x="99.1318%" y="735.50"></text></g><g><title>&lt;elliptic_curve::scalar::nonzero::NonZeroScalar&lt;C&gt; as elliptic_curve::ops::Invert&gt;::invert (2 samples, 0.01%)</title><rect x="98.8972%" y="869" width="0.0103%" height="15" fill="rgb(211,90,23)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="879.50"></text></g><g><title>&lt;k256::arithmetic::scalar::Scalar as elliptic_curve::ops::Invert&gt;::invert (2 samples, 0.01%)</title><rect x="98.8972%" y="853" width="0.0103%" height="15" fill="rgb(207,81,18)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="863.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::invert (2 samples, 0.01%)</title><rect x="98.8972%" y="837" width="0.0103%" height="15" fill="rgb(222,107,28)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="847.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::pow2k (2 samples, 0.01%)</title><rect x="98.8972%" y="821" width="0.0103%" height="15" fill="rgb(237,83,52)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="831.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::square (2 samples, 0.01%)</title><rect x="98.8972%" y="805" width="0.0103%" height="15" fill="rgb(208,67,11)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="815.50"></text></g><g><title>k256::arithmetic::scalar::Scalar::mul (2 samples, 0.01%)</title><rect x="98.8972%" y="789" width="0.0103%" height="15" fill="rgb(249,157,49)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="799.50"></text></g><g><title>k256::arithmetic::scalar::wide::WideScalar::mul_wide (2 samples, 0.01%)</title><rect x="98.8972%" y="773" width="0.0103%" height="15" fill="rgb(243,200,1)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="783.50"></text></g><g><title>k256::arithmetic::scalar::wide::muladd (2 samples, 0.01%)</title><rect x="98.8972%" y="757" width="0.0103%" height="15" fill="rgb(225,162,37)" fg:x="19192" fg:w="2"/><text x="99.1472%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (93 samples, 0.48%)</title><rect x="98.4541%" y="981" width="0.4792%" height="15" fill="rgb(242,92,13)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="991.50"></text></g><g><title>zilliqa::consensus::Consensus::execute_block::{{closure}} (93 samples, 0.48%)</title><rect x="98.4541%" y="965" width="0.4792%" height="15" fill="rgb(220,43,36)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="975.50"></text></g><g><title>zilliqa::transaction::SignedTransaction::verify (93 samples, 0.48%)</title><rect x="98.4541%" y="949" width="0.4792%" height="15" fill="rgb(213,165,48)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="959.50"></text></g><g><title>alloy_consensus::signed::Signed&lt;T&gt;::recover_signer (93 samples, 0.48%)</title><rect x="98.4541%" y="933" width="0.4792%" height="15" fill="rgb(227,200,9)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="943.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::PrimitiveSignature::recover_address_from_prehash (93 samples, 0.48%)</title><rect x="98.4541%" y="917" width="0.4792%" height="15" fill="rgb(221,222,28)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="927.50"></text></g><g><title>alloy_primitives::signature::primitive_sig::PrimitiveSignature::recover_from_prehash (93 samples, 0.48%)</title><rect x="98.4541%" y="901" width="0.4792%" height="15" fill="rgb(223,142,26)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="911.50"></text></g><g><title>ecdsa::recovery::&lt;impl ecdsa::verifying::VerifyingKey&lt;C&gt;&gt;::recover_from_prehash (93 samples, 0.48%)</title><rect x="98.4541%" y="885" width="0.4792%" height="15" fill="rgb(243,46,9)" fg:x="19106" fg:w="93"/><text x="98.7041%" y="895.50"></text></g><g><title>&lt;k256::arithmetic::affine::AffinePoint as elliptic_curve::point::DecompressPoint&lt;k256::Secp256k1&gt;&gt;::decompress (5 samples, 0.03%)</title><rect x="98.9076%" y="869" width="0.0258%" height="15" fill="rgb(250,56,11)" fg:x="19194" fg:w="5"/><text x="99.1576%" y="879.50"></text></g><g><title>subtle::CtOption&lt;T&gt;::and_then (5 samples, 0.03%)</title><rect x="98.9076%" y="853" width="0.0258%" height="15" fill="rgb(229,113,5)" fg:x="19194" fg:w="5"/><text x="99.1576%" y="863.50"></text></g><g><title>&lt;k256::arithmetic::affine::AffinePoint as elliptic_curve::point::DecompressPoint&lt;k256::Secp256k1&gt;&gt;::decompress::{{closure}} (5 samples, 0.03%)</title><rect x="98.9076%" y="837" width="0.0258%" height="15" fill="rgb(244,108,28)" fg:x="19194" fg:w="5"/><text x="99.1576%" y="847.50"></text></g><g><title>k256::arithmetic::field::FieldElement::sqrt (5 samples, 0.03%)</title><rect x="98.9076%" y="821" width="0.0258%" height="15" fill="rgb(242,119,50)" fg:x="19194" fg:w="5"/><text x="99.1576%" y="831.50"></text></g><g><title>k256::arithmetic::field::FieldElement::pow2k (4 samples, 0.02%)</title><rect x="98.9127%" y="805" width="0.0206%" height="15" fill="rgb(224,164,23)" fg:x="19195" fg:w="4"/><text x="99.1627%" y="815.50"></text></g><g><title>k256::arithmetic::field::FieldElement::square (4 samples, 0.02%)</title><rect x="98.9127%" y="789" width="0.0206%" height="15" fill="rgb(214,227,44)" fg:x="19195" fg:w="4"/><text x="99.1627%" y="799.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::square (4 samples, 0.02%)</title><rect x="98.9127%" y="773" width="0.0206%" height="15" fill="rgb(238,202,4)" fg:x="19195" fg:w="4"/><text x="99.1627%" y="783.50"></text></g><g><title>k256::arithmetic::field::field_5x52::FieldElement5x52::mul_inner (4 samples, 0.02%)</title><rect x="98.9127%" y="757" width="0.0206%" height="15" fill="rgb(213,190,30)" fg:x="19195" fg:w="4"/><text x="99.1627%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="98.9539%" y="565" width="0.0103%" height="15" fill="rgb(239,15,2)" fg:x="19203" fg:w="2"/><text x="99.2039%" y="575.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::append_handler_register (4 samples, 0.02%)</title><rect x="98.9488%" y="917" width="0.0206%" height="15" fill="rgb(249,229,4)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="927.50"></text></g><g><title>revm::handler::Handler&lt;revm::context::Context&lt;EXT,DB&gt;,EXT,DB&gt;::append_handler_register (4 samples, 0.02%)</title><rect x="98.9488%" y="901" width="0.0206%" height="15" fill="rgb(239,75,44)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="911.50"></text></g><g><title>revm::handler::register::HandleRegisters&lt;EXT,DB&gt;::register (4 samples, 0.02%)</title><rect x="98.9488%" y="885" width="0.0206%" height="15" fill="rgb(251,206,23)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="895.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register (4 samples, 0.02%)</title><rect x="98.9488%" y="869" width="0.0206%" height="15" fill="rgb(215,208,0)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="879.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_all (4 samples, 0.02%)</title><rect x="98.9488%" y="853" width="0.0206%" height="15" fill="rgb(230,75,50)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="863.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::to_boxed_with (4 samples, 0.02%)</title><rect x="98.9488%" y="837" width="0.0206%" height="15" fill="rgb(246,180,39)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="847.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::to_boxed_with_slow (4 samples, 0.02%)</title><rect x="98.9488%" y="821" width="0.0206%" height="15" fill="rgb(249,175,24)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="831.50"></text></g><g><title>revm_interpreter::opcode::tables::make_boxed_instruction_table (4 samples, 0.02%)</title><rect x="98.9488%" y="805" width="0.0206%" height="15" fill="rgb(247,176,22)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="815.50"></text></g><g><title>core::array::from_fn (4 samples, 0.02%)</title><rect x="98.9488%" y="789" width="0.0206%" height="15" fill="rgb(241,100,24)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="799.50"></text></g><g><title>core::array::try_from_fn (4 samples, 0.02%)</title><rect x="98.9488%" y="773" width="0.0206%" height="15" fill="rgb(233,4,35)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="783.50"></text></g><g><title>core::array::try_from_fn_erased (4 samples, 0.02%)</title><rect x="98.9488%" y="757" width="0.0206%" height="15" fill="rgb(211,164,46)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="767.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (4 samples, 0.02%)</title><rect x="98.9488%" y="741" width="0.0206%" height="15" fill="rgb(242,99,53)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="751.50"></text></g><g><title>revm_interpreter::opcode::tables::make_boxed_instruction_table::{{closure}} (4 samples, 0.02%)</title><rect x="98.9488%" y="725" width="0.0206%" height="15" fill="rgb(243,45,33)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="735.50"></text></g><g><title>revm_interpreter::opcode::tables::InstructionTables&lt;H&gt;::update_all::{{closure}} (4 samples, 0.02%)</title><rect x="98.9488%" y="709" width="0.0206%" height="15" fill="rgb(217,55,21)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="98.9488%" y="693" width="0.0206%" height="15" fill="rgb(245,145,46)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="98.9488%" y="677" width="0.0206%" height="15" fill="rgb(215,112,45)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="98.9488%" y="661" width="0.0206%" height="15" fill="rgb(228,104,16)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="98.9488%" y="645" width="0.0206%" height="15" fill="rgb(239,186,38)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="655.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="98.9488%" y="629" width="0.0206%" height="15" fill="rgb(228,38,35)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="639.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="98.9488%" y="613" width="0.0206%" height="15" fill="rgb(251,42,40)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="623.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="98.9488%" y="597" width="0.0206%" height="15" fill="rgb(210,51,19)" fg:x="19202" fg:w="4"/><text x="99.1988%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="98.9539%" y="581" width="0.0155%" height="15" fill="rgb(236,94,42)" fg:x="19203" fg:w="3"/><text x="99.2039%" y="591.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_transaction (9 samples, 0.05%)</title><rect x="98.9385%" y="981" width="0.0464%" height="15" fill="rgb(239,167,16)" fg:x="19200" fg:w="9"/><text x="99.1885%" y="991.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_transaction_at (9 samples, 0.05%)</title><rect x="98.9385%" y="965" width="0.0464%" height="15" fill="rgb(252,175,31)" fg:x="19200" fg:w="9"/><text x="99.1885%" y="975.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction (9 samples, 0.05%)</title><rect x="98.9385%" y="949" width="0.0464%" height="15" fill="rgb(206,166,30)" fg:x="19200" fg:w="9"/><text x="99.1885%" y="959.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (8 samples, 0.04%)</title><rect x="98.9436%" y="933" width="0.0412%" height="15" fill="rgb(206,209,37)" fg:x="19201" fg:w="8"/><text x="99.1936%" y="943.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (2 samples, 0.01%)</title><rect x="98.9745%" y="917" width="0.0103%" height="15" fill="rgb(226,91,4)" fg:x="19207" fg:w="2"/><text x="99.2245%" y="927.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (2 samples, 0.01%)</title><rect x="98.9745%" y="901" width="0.0103%" height="15" fill="rgb(222,167,0)" fg:x="19207" fg:w="2"/><text x="99.2245%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="98.9849%" y="901" width="0.0206%" height="15" fill="rgb(211,70,14)" fg:x="19209" fg:w="4"/><text x="99.2349%" y="911.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (4 samples, 0.02%)</title><rect x="98.9849%" y="885" width="0.0206%" height="15" fill="rgb(214,84,42)" fg:x="19209" fg:w="4"/><text x="99.2349%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="98.9849%" y="869" width="0.0206%" height="15" fill="rgb(235,157,37)" fg:x="19209" fg:w="4"/><text x="99.2349%" y="879.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="98.9849%" y="853" width="0.0206%" height="15" fill="rgb(225,13,6)" fg:x="19209" fg:w="4"/><text x="99.2349%" y="863.50"></text></g><g><title>rusqlite::statement::Statement::execute (4 samples, 0.02%)</title><rect x="98.9849%" y="837" width="0.0206%" height="15" fill="rgb(205,202,1)" fg:x="19209" fg:w="4"/><text x="99.2349%" y="847.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (4 samples, 0.02%)</title><rect x="98.9849%" y="821" width="0.0206%" height="15" fill="rgb(232,195,26)" fg:x="19209" fg:w="4"/><text x="99.2349%" y="831.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (3 samples, 0.02%)</title><rect x="98.9900%" y="805" width="0.0155%" height="15" fill="rgb(208,102,26)" fg:x="19210" fg:w="3"/><text x="99.2400%" y="815.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="98.9900%" y="789" width="0.0155%" height="15" fill="rgb(215,41,39)" fg:x="19210" fg:w="3"/><text x="99.2400%" y="799.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="98.9900%" y="773" width="0.0155%" height="15" fill="rgb(247,139,11)" fg:x="19210" fg:w="3"/><text x="99.2400%" y="783.50"></text></g><g><title>sqlite3Step (3 samples, 0.02%)</title><rect x="98.9900%" y="757" width="0.0155%" height="15" fill="rgb(243,99,6)" fg:x="19210" fg:w="3"/><text x="99.2400%" y="767.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.02%)</title><rect x="98.9900%" y="741" width="0.0155%" height="15" fill="rgb(230,168,48)" fg:x="19210" fg:w="3"/><text x="99.2400%" y="751.50"></text></g><g><title>sqlite3VdbeExpandSql (2 samples, 0.01%)</title><rect x="98.9952%" y="725" width="0.0103%" height="15" fill="rgb(238,227,13)" fg:x="19211" fg:w="2"/><text x="99.2452%" y="735.50"></text></g><g><title>sqlite3_str_appendf (2 samples, 0.01%)</title><rect x="98.9952%" y="709" width="0.0103%" height="15" fill="rgb(209,109,13)" fg:x="19211" fg:w="2"/><text x="99.2452%" y="719.50"></text></g><g><title>sqlite3_str_vappendf (2 samples, 0.01%)</title><rect x="98.9952%" y="693" width="0.0103%" height="15" fill="rgb(228,195,1)" fg:x="19211" fg:w="2"/><text x="99.2452%" y="703.50"></text></g><g><title>zilliqa::consensus::Consensus::broadcast_commit_receipts (7 samples, 0.04%)</title><rect x="98.9849%" y="981" width="0.0361%" height="15" fill="rgb(230,218,0)" fg:x="19209" fg:w="7"/><text x="99.2349%" y="991.50"></text></g><g><title>zilliqa::db::Db::with_sqlite_tx (7 samples, 0.04%)</title><rect x="98.9849%" y="965" width="0.0361%" height="15" fill="rgb(206,1,45)" fg:x="19209" fg:w="7"/><text x="99.2349%" y="975.50"></text></g><g><title>zilliqa::consensus::Consensus::broadcast_commit_receipts::{{closure}} (7 samples, 0.04%)</title><rect x="98.9849%" y="949" width="0.0361%" height="15" fill="rgb(209,124,26)" fg:x="19209" fg:w="7"/><text x="99.2349%" y="959.50"></text></g><g><title>zilliqa::db::Db::insert_transaction_receipt_with_db_tx (7 samples, 0.04%)</title><rect x="98.9849%" y="933" width="0.0361%" height="15" fill="rgb(220,59,8)" fg:x="19209" fg:w="7"/><text x="99.2349%" y="943.50"></text></g><g><title>rusqlite::Connection::execute (7 samples, 0.04%)</title><rect x="98.9849%" y="917" width="0.0361%" height="15" fill="rgb(251,41,37)" fg:x="19209" fg:w="7"/><text x="99.2349%" y="927.50"></text></g><g><title>rusqlite::Connection::prepare (3 samples, 0.02%)</title><rect x="99.0055%" y="901" width="0.0155%" height="15" fill="rgb(239,152,21)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="911.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (3 samples, 0.02%)</title><rect x="99.0055%" y="885" width="0.0155%" height="15" fill="rgb(226,32,1)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="895.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (3 samples, 0.02%)</title><rect x="99.0055%" y="869" width="0.0155%" height="15" fill="rgb(230,154,36)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="879.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (3 samples, 0.02%)</title><rect x="99.0055%" y="853" width="0.0155%" height="15" fill="rgb(208,228,43)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="863.50"></text></g><g><title>sqlite3_prepare_v3 (3 samples, 0.02%)</title><rect x="99.0055%" y="837" width="0.0155%" height="15" fill="rgb(214,203,3)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="847.50"></text></g><g><title>sqlite3LockAndPrepare (3 samples, 0.02%)</title><rect x="99.0055%" y="821" width="0.0155%" height="15" fill="rgb(207,149,29)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="831.50"></text></g><g><title>sqlite3LockAndPrepare (3 samples, 0.02%)</title><rect x="99.0055%" y="805" width="0.0155%" height="15" fill="rgb(250,105,7)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="815.50"></text></g><g><title>sqlite3Prepare (3 samples, 0.02%)</title><rect x="99.0055%" y="789" width="0.0155%" height="15" fill="rgb(232,222,16)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="799.50"></text></g><g><title>sqlite3RunParser (3 samples, 0.02%)</title><rect x="99.0055%" y="773" width="0.0155%" height="15" fill="rgb(209,32,24)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="783.50"></text></g><g><title>sqlite3Parser (3 samples, 0.02%)</title><rect x="99.0055%" y="757" width="0.0155%" height="15" fill="rgb(225,13,6)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="767.50"></text></g><g><title>yy_reduce (3 samples, 0.02%)</title><rect x="99.0055%" y="741" width="0.0155%" height="15" fill="rgb(245,226,26)" fg:x="19213" fg:w="3"/><text x="99.2555%" y="751.50"></text></g><g><title>rusqlite::Connection::prepare (4 samples, 0.02%)</title><rect x="99.0209%" y="933" width="0.0206%" height="15" fill="rgb(229,178,27)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="943.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (4 samples, 0.02%)</title><rect x="99.0209%" y="917" width="0.0206%" height="15" fill="rgb(205,227,28)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="927.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (4 samples, 0.02%)</title><rect x="99.0209%" y="901" width="0.0206%" height="15" fill="rgb(210,191,45)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="911.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (4 samples, 0.02%)</title><rect x="99.0209%" y="885" width="0.0206%" height="15" fill="rgb(206,124,16)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="895.50"></text></g><g><title>sqlite3_prepare_v3 (4 samples, 0.02%)</title><rect x="99.0209%" y="869" width="0.0206%" height="15" fill="rgb(210,162,0)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="879.50"></text></g><g><title>sqlite3LockAndPrepare (4 samples, 0.02%)</title><rect x="99.0209%" y="853" width="0.0206%" height="15" fill="rgb(211,54,38)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="863.50"></text></g><g><title>sqlite3LockAndPrepare (4 samples, 0.02%)</title><rect x="99.0209%" y="837" width="0.0206%" height="15" fill="rgb(248,192,3)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="847.50"></text></g><g><title>sqlite3Prepare (4 samples, 0.02%)</title><rect x="99.0209%" y="821" width="0.0206%" height="15" fill="rgb(233,187,18)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="831.50"></text></g><g><title>sqlite3RunParser (4 samples, 0.02%)</title><rect x="99.0209%" y="805" width="0.0206%" height="15" fill="rgb(237,208,14)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="815.50"></text></g><g><title>sqlite3Parser (4 samples, 0.02%)</title><rect x="99.0209%" y="789" width="0.0206%" height="15" fill="rgb(212,77,1)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="799.50"></text></g><g><title>yy_reduce (4 samples, 0.02%)</title><rect x="99.0209%" y="773" width="0.0206%" height="15" fill="rgb(210,163,22)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="783.50"></text></g><g><title>sqlite3Select (4 samples, 0.02%)</title><rect x="99.0209%" y="757" width="0.0206%" height="15" fill="rgb(250,58,28)" fg:x="19216" fg:w="4"/><text x="99.2709%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::row::Rows&gt; (2 samples, 0.01%)</title><rect x="99.0415%" y="917" width="0.0103%" height="15" fill="rgb(254,28,41)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="927.50"></text></g><g><title>&lt;rusqlite::row::Rows as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="99.0415%" y="901" width="0.0103%" height="15" fill="rgb(237,162,36)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="911.50"></text></g><g><title>rusqlite::row::Rows::reset (2 samples, 0.01%)</title><rect x="99.0415%" y="885" width="0.0103%" height="15" fill="rgb(232,56,6)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="895.50"></text></g><g><title>rusqlite::statement::Statement::reset (2 samples, 0.01%)</title><rect x="99.0415%" y="869" width="0.0103%" height="15" fill="rgb(216,127,42)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="879.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::reset (2 samples, 0.01%)</title><rect x="99.0415%" y="853" width="0.0103%" height="15" fill="rgb(241,69,15)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="863.50"></text></g><g><title>sqlite3_reset (2 samples, 0.01%)</title><rect x="99.0415%" y="837" width="0.0103%" height="15" fill="rgb(227,180,19)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="847.50"></text></g><g><title>sqlite3_reset (2 samples, 0.01%)</title><rect x="99.0415%" y="821" width="0.0103%" height="15" fill="rgb(231,188,29)" fg:x="19220" fg:w="2"/><text x="99.2915%" y="831.50"></text></g><g><title>zilliqa::consensus::Consensus::new_transaction (9 samples, 0.05%)</title><rect x="99.0209%" y="981" width="0.0464%" height="15" fill="rgb(224,176,27)" fg:x="19216" fg:w="9"/><text x="99.2709%" y="991.50"></text></g><g><title>zilliqa::db::Db::contains_transaction (9 samples, 0.05%)</title><rect x="99.0209%" y="965" width="0.0464%" height="15" fill="rgb(249,214,19)" fg:x="19216" fg:w="9"/><text x="99.2709%" y="975.50"></text></g><g><title>rusqlite::Connection::query_row (9 samples, 0.05%)</title><rect x="99.0209%" y="949" width="0.0464%" height="15" fill="rgb(240,0,4)" fg:x="19216" fg:w="9"/><text x="99.2709%" y="959.50"></text></g><g><title>rusqlite::statement::Statement::query_row (5 samples, 0.03%)</title><rect x="99.0415%" y="933" width="0.0258%" height="15" fill="rgb(233,28,41)" fg:x="19220" fg:w="5"/><text x="99.2915%" y="943.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (3 samples, 0.02%)</title><rect x="99.0518%" y="917" width="0.0155%" height="15" fill="rgb(220,90,51)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="927.50"></text></g><g><title>rusqlite::row::Rows::next (3 samples, 0.02%)</title><rect x="99.0518%" y="901" width="0.0155%" height="15" fill="rgb(250,52,22)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="911.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (3 samples, 0.02%)</title><rect x="99.0518%" y="885" width="0.0155%" height="15" fill="rgb(231,152,36)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="895.50"></text></g><g><title>rusqlite::statement::Statement::step (3 samples, 0.02%)</title><rect x="99.0518%" y="869" width="0.0155%" height="15" fill="rgb(250,218,4)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="879.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (3 samples, 0.02%)</title><rect x="99.0518%" y="853" width="0.0155%" height="15" fill="rgb(210,38,21)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="863.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="99.0518%" y="837" width="0.0155%" height="15" fill="rgb(230,75,13)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="847.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="99.0518%" y="821" width="0.0155%" height="15" fill="rgb(250,68,53)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="831.50"></text></g><g><title>sqlite3Step (3 samples, 0.02%)</title><rect x="99.0518%" y="805" width="0.0155%" height="15" fill="rgb(250,210,16)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="815.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.02%)</title><rect x="99.0518%" y="789" width="0.0155%" height="15" fill="rgb(240,132,5)" fg:x="19222" fg:w="3"/><text x="99.3018%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="99.0673%" y="917" width="0.0206%" height="15" fill="rgb(222,148,48)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="927.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (4 samples, 0.02%)</title><rect x="99.0673%" y="901" width="0.0206%" height="15" fill="rgb(247,181,24)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="99.0673%" y="885" width="0.0206%" height="15" fill="rgb(239,5,31)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="895.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="99.0673%" y="869" width="0.0206%" height="15" fill="rgb(241,152,38)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="879.50"></text></g><g><title>rusqlite::statement::Statement::execute (4 samples, 0.02%)</title><rect x="99.0673%" y="853" width="0.0206%" height="15" fill="rgb(246,200,37)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="863.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (4 samples, 0.02%)</title><rect x="99.0673%" y="837" width="0.0206%" height="15" fill="rgb(243,210,26)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="847.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (4 samples, 0.02%)</title><rect x="99.0673%" y="821" width="0.0206%" height="15" fill="rgb(222,22,22)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="831.50"></text></g><g><title>sqlite3_step (4 samples, 0.02%)</title><rect x="99.0673%" y="805" width="0.0206%" height="15" fill="rgb(208,129,28)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="815.50"></text></g><g><title>sqlite3_step (4 samples, 0.02%)</title><rect x="99.0673%" y="789" width="0.0206%" height="15" fill="rgb(254,169,28)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="799.50"></text></g><g><title>sqlite3Step (4 samples, 0.02%)</title><rect x="99.0673%" y="773" width="0.0206%" height="15" fill="rgb(225,45,17)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="783.50"></text></g><g><title>sqlite3VdbeExec (4 samples, 0.02%)</title><rect x="99.0673%" y="757" width="0.0206%" height="15" fill="rgb(232,199,2)" fg:x="19225" fg:w="4"/><text x="99.3173%" y="767.50"></text></g><g><title>sqlite3VdbeExpandSql (3 samples, 0.02%)</title><rect x="99.0725%" y="741" width="0.0155%" height="15" fill="rgb(235,33,40)" fg:x="19226" fg:w="3"/><text x="99.3225%" y="751.50"></text></g><g><title>sqlite3_str_appendf (2 samples, 0.01%)</title><rect x="99.0776%" y="725" width="0.0103%" height="15" fill="rgb(237,89,50)" fg:x="19227" fg:w="2"/><text x="99.3276%" y="735.50"></text></g><g><title>sqlite3_str_vappendf (2 samples, 0.01%)</title><rect x="99.0776%" y="709" width="0.0103%" height="15" fill="rgb(238,126,5)" fg:x="19227" fg:w="2"/><text x="99.3276%" y="719.50"></text></g><g><title>zilliqa::db::Db::add_touched_address_with_db_tx (5 samples, 0.03%)</title><rect x="99.0673%" y="949" width="0.0258%" height="15" fill="rgb(247,214,42)" fg:x="19225" fg:w="5"/><text x="99.3173%" y="959.50"></text></g><g><title>rusqlite::Connection::execute (5 samples, 0.03%)</title><rect x="99.0673%" y="933" width="0.0258%" height="15" fill="rgb(238,60,45)" fg:x="19225" fg:w="5"/><text x="99.3173%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="99.0931%" y="917" width="0.0155%" height="15" fill="rgb(225,69,44)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="927.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (3 samples, 0.02%)</title><rect x="99.0931%" y="901" width="0.0155%" height="15" fill="rgb(241,13,44)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="99.0931%" y="885" width="0.0155%" height="15" fill="rgb(227,121,22)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="895.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="99.0931%" y="869" width="0.0155%" height="15" fill="rgb(231,160,23)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="879.50"></text></g><g><title>rusqlite::statement::Statement::execute (3 samples, 0.02%)</title><rect x="99.0931%" y="853" width="0.0155%" height="15" fill="rgb(250,179,43)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="863.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (3 samples, 0.02%)</title><rect x="99.0931%" y="837" width="0.0155%" height="15" fill="rgb(233,54,46)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="847.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (3 samples, 0.02%)</title><rect x="99.0931%" y="821" width="0.0155%" height="15" fill="rgb(247,120,42)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="831.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="99.0931%" y="805" width="0.0155%" height="15" fill="rgb(221,219,12)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="815.50"></text></g><g><title>sqlite3_step (3 samples, 0.02%)</title><rect x="99.0931%" y="789" width="0.0155%" height="15" fill="rgb(211,126,8)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="799.50"></text></g><g><title>sqlite3Step (3 samples, 0.02%)</title><rect x="99.0931%" y="773" width="0.0155%" height="15" fill="rgb(218,154,33)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="783.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.02%)</title><rect x="99.0931%" y="757" width="0.0155%" height="15" fill="rgb(212,199,16)" fg:x="19230" fg:w="3"/><text x="99.3431%" y="767.50"></text></g><g><title>sqlite3VdbeExpandSql (2 samples, 0.01%)</title><rect x="99.0982%" y="741" width="0.0103%" height="15" fill="rgb(236,215,46)" fg:x="19231" fg:w="2"/><text x="99.3482%" y="751.50"></text></g><g><title>sqlite3_str_appendf (2 samples, 0.01%)</title><rect x="99.0982%" y="725" width="0.0103%" height="15" fill="rgb(232,32,22)" fg:x="19231" fg:w="2"/><text x="99.3482%" y="735.50"></text></g><g><title>sqlite3_str_vappendf (2 samples, 0.01%)</title><rect x="99.0982%" y="709" width="0.0103%" height="15" fill="rgb(234,79,15)" fg:x="19231" fg:w="2"/><text x="99.3482%" y="719.50"></text></g><g><title>zilliqa::db::Db::with_sqlite_tx (9 samples, 0.05%)</title><rect x="99.0673%" y="981" width="0.0464%" height="15" fill="rgb(235,187,47)" fg:x="19225" fg:w="9"/><text x="99.3173%" y="991.50"></text></g><g><title>zilliqa::consensus::Consensus::execute_block::{{closure}} (9 samples, 0.05%)</title><rect x="99.0673%" y="965" width="0.0464%" height="15" fill="rgb(244,69,37)" fg:x="19225" fg:w="9"/><text x="99.3173%" y="975.50"></text></g><g><title>zilliqa::db::Db::insert_transaction_with_db_tx (4 samples, 0.02%)</title><rect x="99.0931%" y="949" width="0.0206%" height="15" fill="rgb(249,140,25)" fg:x="19230" fg:w="4"/><text x="99.3431%" y="959.50"></text></g><g><title>rusqlite::Connection::execute (4 samples, 0.02%)</title><rect x="99.0931%" y="933" width="0.0206%" height="15" fill="rgb(213,69,8)" fg:x="19230" fg:w="4"/><text x="99.3431%" y="943.50"></text></g><g><title>zilliqa::consensus::Consensus::proposal (131 samples, 0.68%)</title><rect x="98.4438%" y="1013" width="0.6750%" height="15" fill="rgb(220,136,2)" fg:x="19104" fg:w="131"/><text x="98.6938%" y="1023.50"></text></g><g><title>zilliqa::consensus::Consensus::execute_block (131 samples, 0.68%)</title><rect x="98.4438%" y="997" width="0.6750%" height="15" fill="rgb(237,50,36)" fg:x="19104" fg:w="131"/><text x="98.6938%" y="1007.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (2 samples, 0.01%)</title><rect x="99.1188%" y="949" width="0.0103%" height="15" fill="rgb(226,18,11)" fg:x="19235" fg:w="2"/><text x="99.3688%" y="959.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (2 samples, 0.01%)</title><rect x="99.1188%" y="933" width="0.0103%" height="15" fill="rgb(243,156,2)" fg:x="19235" fg:w="2"/><text x="99.3688%" y="943.50"></text></g><g><title>eth_trie::db::DB::insert_batch (2 samples, 0.01%)</title><rect x="99.1188%" y="917" width="0.0103%" height="15" fill="rgb(218,8,34)" fg:x="19235" fg:w="2"/><text x="99.3688%" y="927.50"></text></g><g><title>zilliqa::state::State::get_account_trie (2 samples, 0.01%)</title><rect x="99.1343%" y="901" width="0.0103%" height="15" fill="rgb(250,94,35)" fg:x="19238" fg:w="2"/><text x="99.3843%" y="911.50"></text></g><g><title>zilliqa::state::State::get_account (2 samples, 0.01%)</title><rect x="99.1343%" y="885" width="0.0103%" height="15" fill="rgb(229,127,21)" fg:x="19238" fg:w="2"/><text x="99.3843%" y="895.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (3 samples, 0.02%)</title><rect x="99.1497%" y="837" width="0.0155%" height="15" fill="rgb(234,49,5)" fg:x="19241" fg:w="3"/><text x="99.3997%" y="847.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (3 samples, 0.02%)</title><rect x="99.1497%" y="821" width="0.0155%" height="15" fill="rgb(248,12,16)" fg:x="19241" fg:w="3"/><text x="99.3997%" y="831.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (2 samples, 0.01%)</title><rect x="99.1549%" y="805" width="0.0103%" height="15" fill="rgb(208,220,31)" fg:x="19242" fg:w="2"/><text x="99.4049%" y="815.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (2 samples, 0.01%)</title><rect x="99.1549%" y="789" width="0.0103%" height="15" fill="rgb(243,184,0)" fg:x="19242" fg:w="2"/><text x="99.4049%" y="799.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_delta_evm (7 samples, 0.04%)</title><rect x="99.1343%" y="917" width="0.0361%" height="15" fill="rgb(217,38,21)" fg:x="19238" fg:w="7"/><text x="99.3843%" y="927.50"></text></g><g><title>zilliqa::state::State::save_account (5 samples, 0.03%)</title><rect x="99.1446%" y="901" width="0.0258%" height="15" fill="rgb(239,120,45)" fg:x="19240" fg:w="5"/><text x="99.3946%" y="911.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::insert (5 samples, 0.03%)</title><rect x="99.1446%" y="885" width="0.0258%" height="15" fill="rgb(235,33,2)" fg:x="19240" fg:w="5"/><text x="99.3946%" y="895.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (5 samples, 0.03%)</title><rect x="99.1446%" y="869" width="0.0258%" height="15" fill="rgb(249,161,5)" fg:x="19240" fg:w="5"/><text x="99.3946%" y="879.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::insert_at (4 samples, 0.02%)</title><rect x="99.1497%" y="853" width="0.0206%" height="15" fill="rgb(250,165,48)" fg:x="19241" fg:w="4"/><text x="99.3997%" y="863.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_external_context (2 samples, 0.01%)</title><rect x="99.1755%" y="901" width="0.0103%" height="15" fill="rgb(221,23,45)" fg:x="19246" fg:w="2"/><text x="99.4255%" y="911.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::into_db_and_env_with_handler_cfg (3 samples, 0.02%)</title><rect x="99.1858%" y="901" width="0.0155%" height="15" fill="rgb(217,108,46)" fg:x="19248" fg:w="3"/><text x="99.4358%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::context::Context&lt;&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;,&amp;mut zilliqa::inspector::TouchedAddressInspector,zilliqa::exec::PendingState&gt;&gt; (3 samples, 0.02%)</title><rect x="99.1858%" y="885" width="0.0155%" height="15" fill="rgb(254,26,35)" fg:x="19248" fg:w="3"/><text x="99.4358%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::opcode::tables::InstructionTables&lt;revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="99.1910%" y="869" width="0.0103%" height="15" fill="rgb(218,223,28)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt; (2 samples, 0.01%)</title><rect x="99.1910%" y="853" width="0.0103%" height="15" fill="rgb(242,27,47)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="863.50"></text></g><g><title> 256]&gt; (2 samples, 0.01%)</title><rect x="99.1910%" y="837" width="0.0103%" height="15" fill="rgb(218,39,35)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm_interpreter::interpreter::Interpreter,&amp;mut revm::context::Context&lt;(),zilliqa::exec::PendingState&gt;)&gt;+Output = ()&gt;&gt; (2 samples, 0.01%)</title><rect x="99.1910%" y="821" width="0.0103%" height="15" fill="rgb(232,127,16)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="99.1910%" y="805" width="0.0103%" height="15" fill="rgb(231,219,51)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="99.1910%" y="789" width="0.0103%" height="15" fill="rgb(217,220,46)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="99.1910%" y="773" width="0.0103%" height="15" fill="rgb(230,75,1)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="783.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="99.1910%" y="757" width="0.0103%" height="15" fill="rgb(218,2,8)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="767.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="99.1910%" y="741" width="0.0103%" height="15" fill="rgb(206,111,30)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="751.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="99.1910%" y="725" width="0.0103%" height="15" fill="rgb(209,135,6)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="99.1910%" y="709" width="0.0103%" height="15" fill="rgb(205,169,10)" fg:x="19249" fg:w="2"/><text x="99.4410%" y="719.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::preverify_transaction_inner (4 samples, 0.02%)</title><rect x="99.2013%" y="885" width="0.0206%" height="15" fill="rgb(212,204,38)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="895.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::tx_against_state (4 samples, 0.02%)</title><rect x="99.2013%" y="869" width="0.0206%" height="15" fill="rgb(205,199,14)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="99.2013%" y="853" width="0.0206%" height="15" fill="rgb(212,4,6)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="863.50"></text></g><g><title>revm::handler::mainnet::validation::validate_tx_against_state (4 samples, 0.02%)</title><rect x="99.2013%" y="837" width="0.0206%" height="15" fill="rgb(250,15,10)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="847.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (4 samples, 0.02%)</title><rect x="99.2013%" y="821" width="0.0206%" height="15" fill="rgb(212,49,51)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="831.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (4 samples, 0.02%)</title><rect x="99.2013%" y="805" width="0.0206%" height="15" fill="rgb(235,21,9)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="815.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (4 samples, 0.02%)</title><rect x="99.2013%" y="789" width="0.0206%" height="15" fill="rgb(251,31,32)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="799.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (4 samples, 0.02%)</title><rect x="99.2013%" y="773" width="0.0206%" height="15" fill="rgb(246,23,9)" fg:x="19251" fg:w="4"/><text x="99.4513%" y="783.50"></text></g><g><title>zilliqa::state::State::has_account (3 samples, 0.02%)</title><rect x="99.2064%" y="757" width="0.0155%" height="15" fill="rgb(225,216,14)" fg:x="19252" fg:w="3"/><text x="99.4564%" y="767.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (3 samples, 0.02%)</title><rect x="99.2064%" y="741" width="0.0155%" height="15" fill="rgb(215,200,26)" fg:x="19252" fg:w="3"/><text x="99.4564%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2116%" y="725" width="0.0103%" height="15" fill="rgb(237,130,47)" fg:x="19253" fg:w="2"/><text x="99.4616%" y="735.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2116%" y="709" width="0.0103%" height="15" fill="rgb(247,74,14)" fg:x="19253" fg:w="2"/><text x="99.4616%" y="719.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::reward_beneficiary (2 samples, 0.01%)</title><rect x="99.2270%" y="869" width="0.0103%" height="15" fill="rgb(254,97,46)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="99.2270%" y="853" width="0.0103%" height="15" fill="rgb(234,191,1)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="863.50"></text></g><g><title>revm::handler::mainnet::post_execution::reward_beneficiary (2 samples, 0.01%)</title><rect x="99.2270%" y="837" width="0.0103%" height="15" fill="rgb(215,165,14)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="847.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (2 samples, 0.01%)</title><rect x="99.2270%" y="821" width="0.0103%" height="15" fill="rgb(230,182,6)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="831.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (2 samples, 0.01%)</title><rect x="99.2270%" y="805" width="0.0103%" height="15" fill="rgb(210,127,39)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="815.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (2 samples, 0.01%)</title><rect x="99.2270%" y="789" width="0.0103%" height="15" fill="rgb(223,212,51)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="799.50"></text></g><g><title>zilliqa::state::State::has_account (2 samples, 0.01%)</title><rect x="99.2270%" y="773" width="0.0103%" height="15" fill="rgb(226,176,43)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="783.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (2 samples, 0.01%)</title><rect x="99.2270%" y="757" width="0.0103%" height="15" fill="rgb(222,155,4)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="767.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2270%" y="741" width="0.0103%" height="15" fill="rgb(215,149,7)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="751.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2270%" y="725" width="0.0103%" height="15" fill="rgb(252,199,23)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="735.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2270%" y="709" width="0.0103%" height="15" fill="rgb(245,52,29)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="719.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2270%" y="693" width="0.0103%" height="15" fill="rgb(221,228,19)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2270%" y="677" width="0.0103%" height="15" fill="rgb(253,101,6)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2270%" y="661" width="0.0103%" height="15" fill="rgb(211,130,8)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (2 samples, 0.01%)</title><rect x="99.2270%" y="645" width="0.0103%" height="15" fill="rgb(238,37,53)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="655.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (2 samples, 0.01%)</title><rect x="99.2270%" y="629" width="0.0103%" height="15" fill="rgb(235,145,5)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="639.50"></text></g><g><title>rusqlite::Connection::query_row (2 samples, 0.01%)</title><rect x="99.2270%" y="613" width="0.0103%" height="15" fill="rgb(244,12,43)" fg:x="19256" fg:w="2"/><text x="99.4770%" y="623.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (2 samples, 0.01%)</title><rect x="99.2477%" y="693" width="0.0103%" height="15" fill="rgb(246,195,24)" fg:x="19260" fg:w="2"/><text x="99.4977%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2477%" y="677" width="0.0103%" height="15" fill="rgb(235,163,6)" fg:x="19260" fg:w="2"/><text x="99.4977%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (2 samples, 0.01%)</title><rect x="99.2477%" y="661" width="0.0103%" height="15" fill="rgb(236,218,17)" fg:x="19260" fg:w="2"/><text x="99.4977%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (2 samples, 0.01%)</title><rect x="99.2477%" y="645" width="0.0103%" height="15" fill="rgb(235,12,38)" fg:x="19260" fg:w="2"/><text x="99.4977%" y="655.50"></text></g><g><title>zilliqa::state::State::get_account (3 samples, 0.02%)</title><rect x="99.2477%" y="709" width="0.0155%" height="15" fill="rgb(225,195,33)" fg:x="19260" fg:w="3"/><text x="99.4977%" y="719.50"></text></g><g><title>eth_trie::nibbles::Nibbles::from_raw (2 samples, 0.01%)</title><rect x="99.2631%" y="677" width="0.0103%" height="15" fill="rgb(238,54,35)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="99.2631%" y="661" width="0.0103%" height="15" fill="rgb(238,33,7)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.01%)</title><rect x="99.2631%" y="645" width="0.0103%" height="15" fill="rgb(245,5,14)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="99.2631%" y="629" width="0.0103%" height="15" fill="rgb(251,95,31)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="99.2631%" y="613" width="0.0103%" height="15" fill="rgb(222,15,46)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="99.2631%" y="597" width="0.0103%" height="15" fill="rgb(226,182,24)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="99.2631%" y="581" width="0.0103%" height="15" fill="rgb(229,105,41)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="591.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="99.2631%" y="565" width="0.0103%" height="15" fill="rgb(216,99,53)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="575.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="99.2631%" y="549" width="0.0103%" height="15" fill="rgb(253,26,20)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="99.2631%" y="533" width="0.0103%" height="15" fill="rgb(249,155,28)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="543.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="99.2631%" y="517" width="0.0103%" height="15" fill="rgb(241,221,2)" fg:x="19263" fg:w="2"/><text x="99.5131%" y="527.50"></text></g><g><title>rusqlite::Connection::prepare (4 samples, 0.02%)</title><rect x="99.2734%" y="597" width="0.0206%" height="15" fill="rgb(219,124,6)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="607.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (4 samples, 0.02%)</title><rect x="99.2734%" y="581" width="0.0206%" height="15" fill="rgb(233,37,6)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="591.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (4 samples, 0.02%)</title><rect x="99.2734%" y="565" width="0.0206%" height="15" fill="rgb(238,20,14)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="575.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (4 samples, 0.02%)</title><rect x="99.2734%" y="549" width="0.0206%" height="15" fill="rgb(232,106,27)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="559.50"></text></g><g><title>sqlite3_prepare_v3 (4 samples, 0.02%)</title><rect x="99.2734%" y="533" width="0.0206%" height="15" fill="rgb(246,157,24)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="543.50"></text></g><g><title>sqlite3LockAndPrepare (4 samples, 0.02%)</title><rect x="99.2734%" y="517" width="0.0206%" height="15" fill="rgb(214,153,10)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="527.50"></text></g><g><title>sqlite3LockAndPrepare (4 samples, 0.02%)</title><rect x="99.2734%" y="501" width="0.0206%" height="15" fill="rgb(212,94,6)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="511.50"></text></g><g><title>sqlite3Prepare (4 samples, 0.02%)</title><rect x="99.2734%" y="485" width="0.0206%" height="15" fill="rgb(254,25,27)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="495.50"></text></g><g><title>sqlite3RunParser (4 samples, 0.02%)</title><rect x="99.2734%" y="469" width="0.0206%" height="15" fill="rgb(250,43,52)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="479.50"></text></g><g><title>sqlite3Parser (4 samples, 0.02%)</title><rect x="99.2734%" y="453" width="0.0206%" height="15" fill="rgb(221,226,40)" fg:x="19265" fg:w="4"/><text x="99.5234%" y="463.50"></text></g><g><title>yy_reduce (3 samples, 0.02%)</title><rect x="99.2786%" y="437" width="0.0155%" height="15" fill="rgb(235,162,34)" fg:x="19266" fg:w="3"/><text x="99.5286%" y="447.50"></text></g><g><title>sqlite3Select (2 samples, 0.01%)</title><rect x="99.2837%" y="421" width="0.0103%" height="15" fill="rgb(239,24,26)" fg:x="19267" fg:w="2"/><text x="99.5337%" y="431.50"></text></g><g><title>zilliqa::consensus::Consensus::apply_transaction_at (33 samples, 0.17%)</title><rect x="99.1343%" y="949" width="0.1701%" height="15" fill="rgb(244,226,11)" fg:x="19238" fg:w="33"/><text x="99.3843%" y="959.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction (33 samples, 0.17%)</title><rect x="99.1343%" y="933" width="0.1701%" height="15" fill="rgb(225,23,10)" fg:x="19238" fg:w="33"/><text x="99.3843%" y="943.50"></text></g><g><title>zilliqa::exec::&lt;impl zilliqa::state::State&gt;::apply_transaction_evm (26 samples, 0.13%)</title><rect x="99.1704%" y="917" width="0.1340%" height="15" fill="rgb(249,125,6)" fg:x="19245" fg:w="26"/><text x="99.4204%" y="927.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (20 samples, 0.10%)</title><rect x="99.2013%" y="901" width="0.1031%" height="15" fill="rgb(246,212,12)" fg:x="19251" fg:w="20"/><text x="99.4513%" y="911.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (16 samples, 0.08%)</title><rect x="99.2219%" y="885" width="0.0824%" height="15" fill="rgb(230,43,32)" fg:x="19255" fg:w="16"/><text x="99.4719%" y="895.50"></text></g><g><title>revm::inspector::handler_register::inspector_handle_register::{{closure}} (12 samples, 0.06%)</title><rect x="99.2425%" y="869" width="0.0618%" height="15" fill="rgb(210,95,23)" fg:x="19259" fg:w="12"/><text x="99.4925%" y="879.50"></text></g><g><title>zilliqa::precompiles::scilla::scilla_call_handle_register::{{closure}} (11 samples, 0.06%)</title><rect x="99.2477%" y="853" width="0.0567%" height="15" fill="rgb(229,103,33)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.06%)</title><rect x="99.2477%" y="837" width="0.0567%" height="15" fill="rgb(222,104,27)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="847.50"></text></g><g><title>revm::handler::mainnet::execution::call (11 samples, 0.06%)</title><rect x="99.2477%" y="821" width="0.0567%" height="15" fill="rgb(239,221,23)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="831.50"></text></g><g><title>revm::context::evm_context::EvmContext&lt;DB&gt;::make_call_frame (11 samples, 0.06%)</title><rect x="99.2477%" y="805" width="0.0567%" height="15" fill="rgb(222,98,21)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="815.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_delegated (11 samples, 0.06%)</title><rect x="99.2477%" y="789" width="0.0567%" height="15" fill="rgb(231,101,20)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="799.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (11 samples, 0.06%)</title><rect x="99.2477%" y="773" width="0.0567%" height="15" fill="rgb(215,150,22)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="783.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (11 samples, 0.06%)</title><rect x="99.2477%" y="757" width="0.0567%" height="15" fill="rgb(248,3,34)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="767.50"></text></g><g><title>&lt;zilliqa::exec::PendingState as revm_primitives::db::Database&gt;::basic (11 samples, 0.06%)</title><rect x="99.2477%" y="741" width="0.0567%" height="15" fill="rgb(220,141,21)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="751.50"></text></g><g><title>zilliqa::exec::&lt;impl revm_primitives::db::DatabaseRef for &amp;zilliqa::state::State&gt;::basic_ref (11 samples, 0.06%)</title><rect x="99.2477%" y="725" width="0.0567%" height="15" fill="rgb(223,41,48)" fg:x="19260" fg:w="11"/><text x="99.4977%" y="735.50"></text></g><g><title>zilliqa::state::State::has_account (8 samples, 0.04%)</title><rect x="99.2631%" y="709" width="0.0412%" height="15" fill="rgb(247,12,5)" fg:x="19263" fg:w="8"/><text x="99.5131%" y="719.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::contains (8 samples, 0.04%)</title><rect x="99.2631%" y="693" width="0.0412%" height="15" fill="rgb(206,173,10)" fg:x="19263" fg:w="8"/><text x="99.5131%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (6 samples, 0.03%)</title><rect x="99.2734%" y="677" width="0.0309%" height="15" fill="rgb(233,214,37)" fg:x="19265" fg:w="6"/><text x="99.5234%" y="687.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (6 samples, 0.03%)</title><rect x="99.2734%" y="661" width="0.0309%" height="15" fill="rgb(238,86,43)" fg:x="19265" fg:w="6"/><text x="99.5234%" y="671.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (6 samples, 0.03%)</title><rect x="99.2734%" y="645" width="0.0309%" height="15" fill="rgb(212,182,8)" fg:x="19265" fg:w="6"/><text x="99.5234%" y="655.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (6 samples, 0.03%)</title><rect x="99.2734%" y="629" width="0.0309%" height="15" fill="rgb(240,91,47)" fg:x="19265" fg:w="6"/><text x="99.5234%" y="639.50"></text></g><g><title>rusqlite::Connection::query_row (6 samples, 0.03%)</title><rect x="99.2734%" y="613" width="0.0309%" height="15" fill="rgb(209,138,26)" fg:x="19265" fg:w="6"/><text x="99.5234%" y="623.50"></text></g><g><title>rusqlite::statement::Statement::query_row (2 samples, 0.01%)</title><rect x="99.2940%" y="597" width="0.0103%" height="15" fill="rgb(231,163,20)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="607.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (2 samples, 0.01%)</title><rect x="99.2940%" y="581" width="0.0103%" height="15" fill="rgb(214,91,54)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="591.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.01%)</title><rect x="99.2940%" y="565" width="0.0103%" height="15" fill="rgb(230,32,17)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="575.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2 samples, 0.01%)</title><rect x="99.2940%" y="549" width="0.0103%" height="15" fill="rgb(231,34,34)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="559.50"></text></g><g><title>rusqlite::statement::Statement::step (2 samples, 0.01%)</title><rect x="99.2940%" y="533" width="0.0103%" height="15" fill="rgb(224,228,27)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="543.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.01%)</title><rect x="99.2940%" y="517" width="0.0103%" height="15" fill="rgb(219,35,40)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="527.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="99.2940%" y="501" width="0.0103%" height="15" fill="rgb(234,42,8)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="511.50"></text></g><g><title>sqlite3_step (2 samples, 0.01%)</title><rect x="99.2940%" y="485" width="0.0103%" height="15" fill="rgb(226,75,22)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="495.50"></text></g><g><title>sqlite3Step (2 samples, 0.01%)</title><rect x="99.2940%" y="469" width="0.0103%" height="15" fill="rgb(242,203,28)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="479.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.01%)</title><rect x="99.2940%" y="453" width="0.0103%" height="15" fill="rgb(221,3,9)" fg:x="19269" fg:w="2"/><text x="99.5440%" y="463.50"></text></g><g><title>zilliqa::consensus::Consensus::get_consensus_timeout_params (4 samples, 0.02%)</title><rect x="99.3043%" y="949" width="0.0206%" height="15" fill="rgb(214,34,31)" fg:x="19271" fg:w="4"/><text x="99.5543%" y="959.50"></text></g><g><title>zilliqa::consensus::Consensus::get_view (4 samples, 0.02%)</title><rect x="99.3043%" y="933" width="0.0206%" height="15" fill="rgb(252,119,15)" fg:x="19271" fg:w="4"/><text x="99.5543%" y="943.50"></text></g><g><title>zilliqa::db::Db::get_view (4 samples, 0.02%)</title><rect x="99.3043%" y="917" width="0.0206%" height="15" fill="rgb(244,224,31)" fg:x="19271" fg:w="4"/><text x="99.5543%" y="927.50"></text></g><g><title>rusqlite::Connection::query_row (3 samples, 0.02%)</title><rect x="99.3095%" y="901" width="0.0155%" height="15" fill="rgb(215,8,51)" fg:x="19272" fg:w="3"/><text x="99.5595%" y="911.50"></text></g><g><title>rusqlite::statement::Statement::query_row (2 samples, 0.01%)</title><rect x="99.3146%" y="885" width="0.0103%" height="15" fill="rgb(207,24,1)" fg:x="19273" fg:w="2"/><text x="99.5646%" y="895.50"></text></g><g><title>sqlite3OsSync (8 samples, 0.04%)</title><rect x="99.3250%" y="581" width="0.0412%" height="15" fill="rgb(245,90,0)" fg:x="19275" fg:w="8"/><text x="99.5750%" y="591.50"></text></g><g><title>sqlite3OsSync (8 samples, 0.04%)</title><rect x="99.3250%" y="565" width="0.0412%" height="15" fill="rgb(246,43,48)" fg:x="19275" fg:w="8"/><text x="99.5750%" y="575.50"></text></g><g><title>unixSync (8 samples, 0.04%)</title><rect x="99.3250%" y="549" width="0.0412%" height="15" fill="rgb(252,218,10)" fg:x="19275" fg:w="8"/><text x="99.5750%" y="559.50"></text></g><g><title>full_fsync (8 samples, 0.04%)</title><rect x="99.3250%" y="533" width="0.0412%" height="15" fill="rgb(231,24,35)" fg:x="19275" fg:w="8"/><text x="99.5750%" y="543.50"></text></g><g><title>__GI_fsync (8 samples, 0.04%)</title><rect x="99.3250%" y="517" width="0.0412%" height="15" fill="rgb(225,66,19)" fg:x="19275" fg:w="8"/><text x="99.5750%" y="527.50"></text></g><g><title>doWalCallbacks (9 samples, 0.05%)</title><rect x="99.3250%" y="741" width="0.0464%" height="15" fill="rgb(214,96,51)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="751.50"></text></g><g><title>sqlite3WalDefaultHook (9 samples, 0.05%)</title><rect x="99.3250%" y="725" width="0.0464%" height="15" fill="rgb(251,151,47)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="735.50"></text></g><g><title>sqlite3WalDefaultHook (9 samples, 0.05%)</title><rect x="99.3250%" y="709" width="0.0464%" height="15" fill="rgb(236,79,14)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="719.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (9 samples, 0.05%)</title><rect x="99.3250%" y="693" width="0.0464%" height="15" fill="rgb(210,205,11)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="703.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (9 samples, 0.05%)</title><rect x="99.3250%" y="677" width="0.0464%" height="15" fill="rgb(233,142,53)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="687.50"></text></g><g><title>sqlite3Checkpoint (9 samples, 0.05%)</title><rect x="99.3250%" y="661" width="0.0464%" height="15" fill="rgb(212,116,48)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="671.50"></text></g><g><title>sqlite3BtreeCheckpoint (9 samples, 0.05%)</title><rect x="99.3250%" y="645" width="0.0464%" height="15" fill="rgb(234,55,33)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="655.50"></text></g><g><title>sqlite3PagerCheckpoint (9 samples, 0.05%)</title><rect x="99.3250%" y="629" width="0.0464%" height="15" fill="rgb(253,92,27)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="639.50"></text></g><g><title>sqlite3WalCheckpoint (9 samples, 0.05%)</title><rect x="99.3250%" y="613" width="0.0464%" height="15" fill="rgb(220,7,35)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="623.50"></text></g><g><title>walCheckpoint (9 samples, 0.05%)</title><rect x="99.3250%" y="597" width="0.0464%" height="15" fill="rgb(246,124,6)" fg:x="19275" fg:w="9"/><text x="99.5750%" y="607.50"></text></g><g><title>sqlite3VdbeExpandSql (3 samples, 0.02%)</title><rect x="99.3816%" y="725" width="0.0155%" height="15" fill="rgb(212,111,51)" fg:x="19286" fg:w="3"/><text x="99.6316%" y="735.50"></text></g><g><title>sqlite3_str_appendf (3 samples, 0.02%)</title><rect x="99.3816%" y="709" width="0.0155%" height="15" fill="rgb(253,116,7)" fg:x="19286" fg:w="3"/><text x="99.6316%" y="719.50"></text></g><g><title>sqlite3_str_vappendf (2 samples, 0.01%)</title><rect x="99.3868%" y="693" width="0.0103%" height="15" fill="rgb(213,145,18)" fg:x="19287" fg:w="2"/><text x="99.6368%" y="703.50"></text></g><g><title>unixWrite (8 samples, 0.04%)</title><rect x="99.3971%" y="565" width="0.0412%" height="15" fill="rgb(219,149,7)" fg:x="19289" fg:w="8"/><text x="99.6471%" y="575.50"></text></g><g><title>seekAndWrite (8 samples, 0.04%)</title><rect x="99.3971%" y="549" width="0.0412%" height="15" fill="rgb(225,156,20)" fg:x="19289" fg:w="8"/><text x="99.6471%" y="559.50"></text></g><g><title>seekAndWriteFd (8 samples, 0.04%)</title><rect x="99.3971%" y="533" width="0.0412%" height="15" fill="rgb(211,98,19)" fg:x="19289" fg:w="8"/><text x="99.6471%" y="543.50"></text></g><g><title>__libc_pwrite64 (8 samples, 0.04%)</title><rect x="99.3971%" y="517" width="0.0412%" height="15" fill="rgb(231,192,31)" fg:x="19289" fg:w="8"/><text x="99.6471%" y="527.50"></text></g><g><title>__libc_pwrite64 (8 samples, 0.04%)</title><rect x="99.3971%" y="501" width="0.0412%" height="15" fill="rgb(249,95,19)" fg:x="19289" fg:w="8"/><text x="99.6471%" y="511.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (10 samples, 0.05%)</title><rect x="99.3971%" y="693" width="0.0515%" height="15" fill="rgb(247,101,36)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="703.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (10 samples, 0.05%)</title><rect x="99.3971%" y="677" width="0.0515%" height="15" fill="rgb(221,45,43)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="687.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (10 samples, 0.05%)</title><rect x="99.3971%" y="661" width="0.0515%" height="15" fill="rgb(220,42,1)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="671.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (10 samples, 0.05%)</title><rect x="99.3971%" y="645" width="0.0515%" height="15" fill="rgb(236,19,24)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="655.50"></text></g><g><title>pagerWalFrames (10 samples, 0.05%)</title><rect x="99.3971%" y="629" width="0.0515%" height="15" fill="rgb(225,192,6)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="639.50"></text></g><g><title>sqlite3WalFrames (10 samples, 0.05%)</title><rect x="99.3971%" y="613" width="0.0515%" height="15" fill="rgb(242,30,19)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="623.50"></text></g><g><title>walFrames (10 samples, 0.05%)</title><rect x="99.3971%" y="597" width="0.0515%" height="15" fill="rgb(240,36,6)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="607.50"></text></g><g><title>walWriteOneFrame (10 samples, 0.05%)</title><rect x="99.3971%" y="581" width="0.0515%" height="15" fill="rgb(246,40,28)" fg:x="19289" fg:w="10"/><text x="99.6471%" y="591.50"></text></g><g><title>walEncodeFrame (2 samples, 0.01%)</title><rect x="99.4383%" y="565" width="0.0103%" height="15" fill="rgb(225,155,33)" fg:x="19297" fg:w="2"/><text x="99.6883%" y="575.50"></text></g><g><title>walChecksumBytes (2 samples, 0.01%)</title><rect x="99.4383%" y="549" width="0.0103%" height="15" fill="rgb(240,65,18)" fg:x="19297" fg:w="2"/><text x="99.6883%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (25 samples, 0.13%)</title><rect x="99.3250%" y="901" width="0.1288%" height="15" fill="rgb(217,0,48)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="911.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (25 samples, 0.13%)</title><rect x="99.3250%" y="885" width="0.1288%" height="15" fill="rgb(217,80,15)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (25 samples, 0.13%)</title><rect x="99.3250%" y="869" width="0.1288%" height="15" fill="rgb(253,43,51)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="879.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (25 samples, 0.13%)</title><rect x="99.3250%" y="853" width="0.1288%" height="15" fill="rgb(246,60,4)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="863.50"></text></g><g><title>rusqlite::statement::Statement::execute (25 samples, 0.13%)</title><rect x="99.3250%" y="837" width="0.1288%" height="15" fill="rgb(230,40,54)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="847.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (25 samples, 0.13%)</title><rect x="99.3250%" y="821" width="0.1288%" height="15" fill="rgb(208,20,44)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="831.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (25 samples, 0.13%)</title><rect x="99.3250%" y="805" width="0.1288%" height="15" fill="rgb(230,22,22)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="815.50"></text></g><g><title>sqlite3_step (25 samples, 0.13%)</title><rect x="99.3250%" y="789" width="0.1288%" height="15" fill="rgb(207,57,4)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="799.50"></text></g><g><title>sqlite3_step (25 samples, 0.13%)</title><rect x="99.3250%" y="773" width="0.1288%" height="15" fill="rgb(242,130,33)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="783.50"></text></g><g><title>sqlite3Step (25 samples, 0.13%)</title><rect x="99.3250%" y="757" width="0.1288%" height="15" fill="rgb(218,66,43)" fg:x="19275" fg:w="25"/><text x="99.5750%" y="767.50"></text></g><g><title>sqlite3VdbeExec (16 samples, 0.08%)</title><rect x="99.3713%" y="741" width="0.0824%" height="15" fill="rgb(236,105,16)" fg:x="19284" fg:w="16"/><text x="99.6213%" y="751.50"></text></g><g><title>sqlite3VdbeHalt (11 samples, 0.06%)</title><rect x="99.3971%" y="725" width="0.0567%" height="15" fill="rgb(230,46,15)" fg:x="19289" fg:w="11"/><text x="99.6471%" y="735.50"></text></g><g><title>vdbeCommit (11 samples, 0.06%)</title><rect x="99.3971%" y="709" width="0.0567%" height="15" fill="rgb(251,172,40)" fg:x="19289" fg:w="11"/><text x="99.6471%" y="719.50"></text></g><g><title>zilliqa::db::Db::insert_transaction (26 samples, 0.13%)</title><rect x="99.3250%" y="949" width="0.1340%" height="15" fill="rgb(225,217,32)" fg:x="19275" fg:w="26"/><text x="99.5750%" y="959.50"></text></g><g><title>zilliqa::db::Db::insert_transaction_with_db_tx (26 samples, 0.13%)</title><rect x="99.3250%" y="933" width="0.1340%" height="15" fill="rgb(243,10,29)" fg:x="19275" fg:w="26"/><text x="99.5750%" y="943.50"></text></g><g><title>rusqlite::Connection::execute (26 samples, 0.13%)</title><rect x="99.3250%" y="917" width="0.1340%" height="15" fill="rgb(207,102,10)" fg:x="19275" fg:w="26"/><text x="99.5750%" y="927.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (3 samples, 0.02%)</title><rect x="99.4589%" y="821" width="0.0155%" height="15" fill="rgb(241,125,5)" fg:x="19301" fg:w="3"/><text x="99.7089%" y="831.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (3 samples, 0.02%)</title><rect x="99.4589%" y="805" width="0.0155%" height="15" fill="rgb(230,125,29)" fg:x="19301" fg:w="3"/><text x="99.7089%" y="815.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (2 samples, 0.01%)</title><rect x="99.4641%" y="789" width="0.0103%" height="15" fill="rgb(223,65,44)" fg:x="19302" fg:w="2"/><text x="99.7141%" y="799.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::get (2 samples, 0.01%)</title><rect x="99.4641%" y="773" width="0.0103%" height="15" fill="rgb(224,188,28)" fg:x="19302" fg:w="2"/><text x="99.7141%" y="783.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (4 samples, 0.02%)</title><rect x="99.4589%" y="853" width="0.0206%" height="15" fill="rgb(254,197,27)" fg:x="19301" fg:w="4"/><text x="99.7089%" y="863.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (4 samples, 0.02%)</title><rect x="99.4589%" y="837" width="0.0206%" height="15" fill="rgb(220,200,25)" fg:x="19301" fg:w="4"/><text x="99.7089%" y="847.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::get (5 samples, 0.03%)</title><rect x="99.4589%" y="901" width="0.0258%" height="15" fill="rgb(239,225,54)" fg:x="19301" fg:w="5"/><text x="99.7089%" y="911.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (5 samples, 0.03%)</title><rect x="99.4589%" y="885" width="0.0258%" height="15" fill="rgb(211,59,40)" fg:x="19301" fg:w="5"/><text x="99.7089%" y="895.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::get_at (5 samples, 0.03%)</title><rect x="99.4589%" y="869" width="0.0258%" height="15" fill="rgb(213,176,46)" fg:x="19301" fg:w="5"/><text x="99.7089%" y="879.50"></text></g><g><title>zilliqa::state::State::must_get_account (6 samples, 0.03%)</title><rect x="99.4589%" y="933" width="0.0309%" height="15" fill="rgb(226,99,4)" fg:x="19301" fg:w="6"/><text x="99.7089%" y="943.50"></text></g><g><title>zilliqa::state::State::get_account (6 samples, 0.03%)</title><rect x="99.4589%" y="917" width="0.0309%" height="15" fill="rgb(239,203,43)" fg:x="19301" fg:w="6"/><text x="99.7089%" y="927.50"></text></g><g><title>zilliqa::pool::TransactionPool::best_transaction (7 samples, 0.04%)</title><rect x="99.4589%" y="949" width="0.0361%" height="15" fill="rgb(246,1,45)" fg:x="19301" fg:w="7"/><text x="99.7089%" y="959.50"></text></g><g><title>zilliqa::pool::TransactionPool::mark_executed (2 samples, 0.01%)</title><rect x="99.4950%" y="949" width="0.0103%" height="15" fill="rgb(231,42,52)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.01%)</title><rect x="99.4950%" y="933" width="0.0103%" height="15" fill="rgb(240,13,50)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (2 samples, 0.01%)</title><rect x="99.4950%" y="917" width="0.0103%" height="15" fill="rgb(225,81,14)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.01%)</title><rect x="99.4950%" y="901" width="0.0103%" height="15" fill="rgb(216,182,23)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.01%)</title><rect x="99.4950%" y="885" width="0.0103%" height="15" fill="rgb(233,137,19)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="99.4950%" y="869" width="0.0103%" height="15" fill="rgb(242,61,46)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="879.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2 samples, 0.01%)</title><rect x="99.4950%" y="853" width="0.0103%" height="15" fill="rgb(221,168,51)" fg:x="19308" fg:w="2"/><text x="99.7450%" y="863.50"></text></g><g><title>sqlite3OsSync (20 samples, 0.10%)</title><rect x="99.5208%" y="549" width="0.1031%" height="15" fill="rgb(238,48,15)" fg:x="19313" fg:w="20"/><text x="99.7708%" y="559.50"></text></g><g><title>sqlite3OsSync (20 samples, 0.10%)</title><rect x="99.5208%" y="533" width="0.1031%" height="15" fill="rgb(216,13,16)" fg:x="19313" fg:w="20"/><text x="99.7708%" y="543.50"></text></g><g><title>unixSync (20 samples, 0.10%)</title><rect x="99.5208%" y="517" width="0.1031%" height="15" fill="rgb(223,185,34)" fg:x="19313" fg:w="20"/><text x="99.7708%" y="527.50"></text></g><g><title>full_fsync (20 samples, 0.10%)</title><rect x="99.5208%" y="501" width="0.1031%" height="15" fill="rgb(228,94,42)" fg:x="19313" fg:w="20"/><text x="99.7708%" y="511.50"></text></g><g><title>__GI_fsync (20 samples, 0.10%)</title><rect x="99.5208%" y="485" width="0.1031%" height="15" fill="rgb(218,166,43)" fg:x="19313" fg:w="20"/><text x="99.7708%" y="495.50"></text></g><g><title>doWalCallbacks (25 samples, 0.13%)</title><rect x="99.5156%" y="709" width="0.1288%" height="15" fill="rgb(232,30,50)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="719.50"></text></g><g><title>sqlite3WalDefaultHook (25 samples, 0.13%)</title><rect x="99.5156%" y="693" width="0.1288%" height="15" fill="rgb(245,206,45)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="703.50"></text></g><g><title>sqlite3WalDefaultHook (25 samples, 0.13%)</title><rect x="99.5156%" y="677" width="0.1288%" height="15" fill="rgb(220,56,22)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="687.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (25 samples, 0.13%)</title><rect x="99.5156%" y="661" width="0.1288%" height="15" fill="rgb(239,129,38)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="671.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (25 samples, 0.13%)</title><rect x="99.5156%" y="645" width="0.1288%" height="15" fill="rgb(207,68,41)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="655.50"></text></g><g><title>sqlite3Checkpoint (25 samples, 0.13%)</title><rect x="99.5156%" y="629" width="0.1288%" height="15" fill="rgb(221,21,7)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="639.50"></text></g><g><title>sqlite3BtreeCheckpoint (25 samples, 0.13%)</title><rect x="99.5156%" y="613" width="0.1288%" height="15" fill="rgb(240,33,25)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="623.50"></text></g><g><title>sqlite3PagerCheckpoint (25 samples, 0.13%)</title><rect x="99.5156%" y="597" width="0.1288%" height="15" fill="rgb(242,119,10)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="607.50"></text></g><g><title>sqlite3WalCheckpoint (25 samples, 0.13%)</title><rect x="99.5156%" y="581" width="0.1288%" height="15" fill="rgb(214,149,40)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="591.50"></text></g><g><title>walCheckpoint (25 samples, 0.13%)</title><rect x="99.5156%" y="565" width="0.1288%" height="15" fill="rgb(228,25,36)" fg:x="19312" fg:w="25"/><text x="99.7656%" y="575.50"></text></g><g><title>sqlite3OsWrite (4 samples, 0.02%)</title><rect x="99.6238%" y="549" width="0.0206%" height="15" fill="rgb(222,59,15)" fg:x="19333" fg:w="4"/><text x="99.8738%" y="559.50"></text></g><g><title>unixWrite (4 samples, 0.02%)</title><rect x="99.6238%" y="533" width="0.0206%" height="15" fill="rgb(218,170,0)" fg:x="19333" fg:w="4"/><text x="99.8738%" y="543.50"></text></g><g><title>seekAndWrite (4 samples, 0.02%)</title><rect x="99.6238%" y="517" width="0.0206%" height="15" fill="rgb(232,173,23)" fg:x="19333" fg:w="4"/><text x="99.8738%" y="527.50"></text></g><g><title>seekAndWriteFd (4 samples, 0.02%)</title><rect x="99.6238%" y="501" width="0.0206%" height="15" fill="rgb(218,116,1)" fg:x="19333" fg:w="4"/><text x="99.8738%" y="511.50"></text></g><g><title>__libc_pwrite64 (4 samples, 0.02%)</title><rect x="99.6238%" y="485" width="0.0206%" height="15" fill="rgb(207,34,4)" fg:x="19333" fg:w="4"/><text x="99.8738%" y="495.50"></text></g><g><title>__libc_pwrite64 (4 samples, 0.02%)</title><rect x="99.6238%" y="469" width="0.0206%" height="15" fill="rgb(229,54,52)" fg:x="19333" fg:w="4"/><text x="99.8738%" y="479.50"></text></g><g><title>sqlite3BtreeInsert (7 samples, 0.04%)</title><rect x="99.6496%" y="693" width="0.0361%" height="15" fill="rgb(211,86,23)" fg:x="19338" fg:w="7"/><text x="99.8996%" y="703.50"></text></g><g><title>sqlite3BtreeIndexMoveto (5 samples, 0.03%)</title><rect x="99.6599%" y="677" width="0.0258%" height="15" fill="rgb(254,153,34)" fg:x="19340" fg:w="5"/><text x="99.9099%" y="687.50"></text></g><g><title>getAndInitPage (4 samples, 0.02%)</title><rect x="99.6651%" y="661" width="0.0206%" height="15" fill="rgb(219,220,14)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="671.50"></text></g><g><title>sqlite3PagerGet (4 samples, 0.02%)</title><rect x="99.6651%" y="645" width="0.0206%" height="15" fill="rgb(247,8,26)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="655.50"></text></g><g><title>getPageNormal (4 samples, 0.02%)</title><rect x="99.6651%" y="629" width="0.0206%" height="15" fill="rgb(213,129,42)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="639.50"></text></g><g><title>readDbPage (4 samples, 0.02%)</title><rect x="99.6651%" y="613" width="0.0206%" height="15" fill="rgb(225,95,41)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="623.50"></text></g><g><title>sqlite3WalReadFrame (4 samples, 0.02%)</title><rect x="99.6651%" y="597" width="0.0206%" height="15" fill="rgb(215,134,24)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="607.50"></text></g><g><title>sqlite3OsRead (4 samples, 0.02%)</title><rect x="99.6651%" y="581" width="0.0206%" height="15" fill="rgb(235,23,54)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="591.50"></text></g><g><title>unixRead (4 samples, 0.02%)</title><rect x="99.6651%" y="565" width="0.0206%" height="15" fill="rgb(229,96,31)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="575.50"></text></g><g><title>seekAndRead (4 samples, 0.02%)</title><rect x="99.6651%" y="549" width="0.0206%" height="15" fill="rgb(206,111,12)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="559.50"></text></g><g><title>__libc_pread64 (4 samples, 0.02%)</title><rect x="99.6651%" y="533" width="0.0206%" height="15" fill="rgb(222,177,8)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="543.50"></text></g><g><title>__libc_pread64 (4 samples, 0.02%)</title><rect x="99.6651%" y="517" width="0.0206%" height="15" fill="rgb(251,36,52)" fg:x="19341" fg:w="4"/><text x="99.9151%" y="527.50"></text></g><g><title>sqlite3VdbeExpandSql (11 samples, 0.06%)</title><rect x="99.6857%" y="693" width="0.0567%" height="15" fill="rgb(216,182,29)" fg:x="19345" fg:w="11"/><text x="99.9357%" y="703.50"></text></g><g><title>sqlite3_str_appendf (10 samples, 0.05%)</title><rect x="99.6908%" y="677" width="0.0515%" height="15" fill="rgb(241,145,50)" fg:x="19346" fg:w="10"/><text x="99.9408%" y="687.50"></text></g><g><title>sqlite3_str_vappendf (10 samples, 0.05%)</title><rect x="99.6908%" y="661" width="0.0515%" height="15" fill="rgb(231,71,35)" fg:x="19346" fg:w="10"/><text x="99.9408%" y="671.50"></text></g><g><title>unixWrite (29 samples, 0.15%)</title><rect x="99.7423%" y="533" width="0.1494%" height="15" fill="rgb(218,22,17)" fg:x="19356" fg:w="29"/><text x="99.9923%" y="543.50"></text></g><g><title>seekAndWrite (29 samples, 0.15%)</title><rect x="99.7423%" y="517" width="0.1494%" height="15" fill="rgb(225,227,6)" fg:x="19356" fg:w="29"/><text x="99.9923%" y="527.50"></text></g><g><title>seekAndWriteFd (29 samples, 0.15%)</title><rect x="99.7423%" y="501" width="0.1494%" height="15" fill="rgb(224,204,17)" fg:x="19356" fg:w="29"/><text x="99.9923%" y="511.50"></text></g><g><title>__libc_pwrite64 (29 samples, 0.15%)</title><rect x="99.7423%" y="485" width="0.1494%" height="15" fill="rgb(227,61,28)" fg:x="19356" fg:w="29"/><text x="99.9923%" y="495.50"></text></g><g><title>__libc_pwrite64 (29 samples, 0.15%)</title><rect x="99.7423%" y="469" width="0.1494%" height="15" fill="rgb(242,148,23)" fg:x="19356" fg:w="29"/><text x="99.9923%" y="479.50"></text></g><g><title>walEncodeFrame (3 samples, 0.02%)</title><rect x="99.8918%" y="533" width="0.0155%" height="15" fill="rgb(237,105,33)" fg:x="19385" fg:w="3"/><text x="100.1418%" y="543.50"></text></g><g><title>walChecksumBytes (3 samples, 0.02%)</title><rect x="99.8918%" y="517" width="0.0155%" height="15" fill="rgb(238,218,40)" fg:x="19385" fg:w="3"/><text x="100.1418%" y="527.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (33 samples, 0.17%)</title><rect x="99.7423%" y="661" width="0.1701%" height="15" fill="rgb(209,126,11)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="671.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (33 samples, 0.17%)</title><rect x="99.7423%" y="645" width="0.1701%" height="15" fill="rgb(245,90,11)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="655.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (33 samples, 0.17%)</title><rect x="99.7423%" y="629" width="0.1701%" height="15" fill="rgb(211,195,10)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="639.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (33 samples, 0.17%)</title><rect x="99.7423%" y="613" width="0.1701%" height="15" fill="rgb(231,45,45)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="623.50"></text></g><g><title>pagerWalFrames (33 samples, 0.17%)</title><rect x="99.7423%" y="597" width="0.1701%" height="15" fill="rgb(246,100,43)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="607.50"></text></g><g><title>sqlite3WalFrames (33 samples, 0.17%)</title><rect x="99.7423%" y="581" width="0.1701%" height="15" fill="rgb(241,193,8)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="591.50"></text></g><g><title>walFrames (33 samples, 0.17%)</title><rect x="99.7423%" y="565" width="0.1701%" height="15" fill="rgb(208,76,19)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="575.50"></text></g><g><title>walWriteOneFrame (33 samples, 0.17%)</title><rect x="99.7423%" y="549" width="0.1701%" height="15" fill="rgb(223,69,40)" fg:x="19356" fg:w="33"/><text x="99.9923%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (79 samples, 0.41%)</title><rect x="99.5105%" y="869" width="0.4071%" height="15" fill="rgb(207,120,39)" fg:x="19311" fg:w="79"/><text x="99.7605%" y="879.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (79 samples, 0.41%)</title><rect x="99.5105%" y="853" width="0.4071%" height="15" fill="rgb(212,209,28)" fg:x="19311" fg:w="79"/><text x="99.7605%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (79 samples, 0.41%)</title><rect x="99.5105%" y="837" width="0.4071%" height="15" fill="rgb(246,82,29)" fg:x="19311" fg:w="79"/><text x="99.7605%" y="847.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (79 samples, 0.41%)</title><rect x="99.5105%" y="821" width="0.4071%" height="15" fill="rgb(239,6,40)" fg:x="19311" fg:w="79"/><text x="99.7605%" y="831.50"></text></g><g><title>rusqlite::statement::Statement::execute (79 samples, 0.41%)</title><rect x="99.5105%" y="805" width="0.4071%" height="15" fill="rgb(228,181,35)" fg:x="19311" fg:w="79"/><text x="99.7605%" y="815.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (78 samples, 0.40%)</title><rect x="99.5156%" y="789" width="0.4019%" height="15" fill="rgb(238,151,2)" fg:x="19312" fg:w="78"/><text x="99.7656%" y="799.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (78 samples, 0.40%)</title><rect x="99.5156%" y="773" width="0.4019%" height="15" fill="rgb(236,94,18)" fg:x="19312" fg:w="78"/><text x="99.7656%" y="783.50"></text></g><g><title>sqlite3_step (78 samples, 0.40%)</title><rect x="99.5156%" y="757" width="0.4019%" height="15" fill="rgb(208,38,14)" fg:x="19312" fg:w="78"/><text x="99.7656%" y="767.50"></text></g><g><title>sqlite3_step (78 samples, 0.40%)</title><rect x="99.5156%" y="741" width="0.4019%" height="15" fill="rgb(234,215,27)" fg:x="19312" fg:w="78"/><text x="99.7656%" y="751.50"></text></g><g><title>sqlite3Step (78 samples, 0.40%)</title><rect x="99.5156%" y="725" width="0.4019%" height="15" fill="rgb(254,211,53)" fg:x="19312" fg:w="78"/><text x="99.7656%" y="735.50"></text></g><g><title>sqlite3VdbeExec (53 samples, 0.27%)</title><rect x="99.6444%" y="709" width="0.2731%" height="15" fill="rgb(216,175,11)" fg:x="19337" fg:w="53"/><text x="99.8944%" y="719.50"></text></g><g><title>sqlite3VdbeHalt (34 samples, 0.18%)</title><rect x="99.7423%" y="693" width="0.1752%" height="15" fill="rgb(246,179,26)" fg:x="19356" fg:w="34"/><text x="99.9923%" y="703.50"></text></g><g><title>vdbeCommit (34 samples, 0.18%)</title><rect x="99.7423%" y="677" width="0.1752%" height="15" fill="rgb(249,19,52)" fg:x="19356" fg:w="34"/><text x="99.9923%" y="687.50"></text></g><g><title>sqlite3Insert (3 samples, 0.02%)</title><rect x="99.9279%" y="693" width="0.0155%" height="15" fill="rgb(230,42,52)" fg:x="19392" fg:w="3"/><text x="100.1779%" y="703.50"></text></g><g><title>&lt;zilliqa::db::TrieStorage as eth_trie::db::DB&gt;::insert_batch (87 samples, 0.45%)</title><rect x="99.5053%" y="901" width="0.4483%" height="15" fill="rgb(221,171,0)" fg:x="19310" fg:w="87"/><text x="99.7553%" y="911.50"></text></g><g><title>rusqlite::Connection::execute (86 samples, 0.44%)</title><rect x="99.5105%" y="885" width="0.4432%" height="15" fill="rgb(222,177,40)" fg:x="19311" fg:w="86"/><text x="99.7605%" y="895.50"></text></g><g><title>rusqlite::Connection::prepare (7 samples, 0.04%)</title><rect x="99.9176%" y="869" width="0.0361%" height="15" fill="rgb(247,34,16)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="879.50"></text></g><g><title>rusqlite::Connection::prepare_with_flags (7 samples, 0.04%)</title><rect x="99.9176%" y="853" width="0.0361%" height="15" fill="rgb(213,217,37)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="863.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (7 samples, 0.04%)</title><rect x="99.9176%" y="837" width="0.0361%" height="15" fill="rgb(231,189,24)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="847.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare_ (7 samples, 0.04%)</title><rect x="99.9176%" y="821" width="0.0361%" height="15" fill="rgb(214,22,9)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="831.50"></text></g><g><title>sqlite3_prepare_v3 (7 samples, 0.04%)</title><rect x="99.9176%" y="805" width="0.0361%" height="15" fill="rgb(212,70,22)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="815.50"></text></g><g><title>sqlite3LockAndPrepare (7 samples, 0.04%)</title><rect x="99.9176%" y="789" width="0.0361%" height="15" fill="rgb(249,64,51)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="799.50"></text></g><g><title>sqlite3LockAndPrepare (7 samples, 0.04%)</title><rect x="99.9176%" y="773" width="0.0361%" height="15" fill="rgb(249,148,20)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="783.50"></text></g><g><title>sqlite3Prepare (7 samples, 0.04%)</title><rect x="99.9176%" y="757" width="0.0361%" height="15" fill="rgb(246,46,48)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="767.50"></text></g><g><title>sqlite3RunParser (7 samples, 0.04%)</title><rect x="99.9176%" y="741" width="0.0361%" height="15" fill="rgb(217,34,48)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="751.50"></text></g><g><title>sqlite3Parser (7 samples, 0.04%)</title><rect x="99.9176%" y="725" width="0.0361%" height="15" fill="rgb(222,45,26)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="735.50"></text></g><g><title>yy_reduce (7 samples, 0.04%)</title><rect x="99.9176%" y="709" width="0.0361%" height="15" fill="rgb(230,201,36)" fg:x="19390" fg:w="7"/><text x="100.1676%" y="719.50"></text></g><g><title>sqlite3MultiValues (2 samples, 0.01%)</title><rect x="99.9433%" y="693" width="0.0103%" height="15" fill="rgb(217,30,43)" fg:x="19395" fg:w="2"/><text x="100.1933%" y="703.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::recover_from_db (3 samples, 0.02%)</title><rect x="99.9536%" y="901" width="0.0155%" height="15" fill="rgb(230,197,40)" fg:x="19397" fg:w="3"/><text x="100.2036%" y="911.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::decode_node (2 samples, 0.01%)</title><rect x="99.9588%" y="885" width="0.0103%" height="15" fill="rgb(239,181,18)" fg:x="19398" fg:w="2"/><text x="100.2088%" y="895.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (4 samples, 0.02%)</title><rect x="99.9691%" y="901" width="0.0206%" height="15" fill="rgb(222,60,39)" fg:x="19400" fg:w="4"/><text x="100.2191%" y="911.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (3 samples, 0.02%)</title><rect x="99.9742%" y="885" width="0.0155%" height="15" fill="rgb(210,60,22)" fg:x="19401" fg:w="3"/><text x="100.2242%" y="895.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (3 samples, 0.02%)</title><rect x="99.9742%" y="869" width="0.0155%" height="15" fill="rgb(239,213,48)" fg:x="19401" fg:w="3"/><text x="100.2242%" y="879.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (2 samples, 0.01%)</title><rect x="99.9794%" y="853" width="0.0103%" height="15" fill="rgb(253,214,23)" fg:x="19402" fg:w="2"/><text x="100.2294%" y="863.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (2 samples, 0.01%)</title><rect x="99.9794%" y="837" width="0.0103%" height="15" fill="rgb(211,98,45)" fg:x="19402" fg:w="2"/><text x="100.2294%" y="847.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::encode_raw (2 samples, 0.01%)</title><rect x="99.9794%" y="821" width="0.0103%" height="15" fill="rgb(239,130,44)" fg:x="19402" fg:w="2"/><text x="100.2294%" y="831.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::write_node (2 samples, 0.01%)</title><rect x="99.9794%" y="805" width="0.0103%" height="15" fill="rgb(222,181,35)" fg:x="19402" fg:w="2"/><text x="100.2294%" y="815.50"></text></g><g><title>zilliqa::state::State::root_hash (95 samples, 0.49%)</title><rect x="99.5053%" y="949" width="0.4895%" height="15" fill="rgb(219,219,49)" fg:x="19310" fg:w="95"/><text x="99.7553%" y="959.50"></text></g><g><title>&lt;eth_trie::trie::EthTrie&lt;D&gt; as eth_trie::trie::Trie&lt;D&gt;&gt;::root_hash (95 samples, 0.49%)</title><rect x="99.5053%" y="933" width="0.4895%" height="15" fill="rgb(227,161,51)" fg:x="19310" fg:w="95"/><text x="99.7553%" y="943.50"></text></g><g><title>eth_trie::trie::EthTrie&lt;D&gt;::commit (95 samples, 0.49%)</title><rect x="99.5053%" y="917" width="0.4895%" height="15" fill="rgb(239,112,27)" fg:x="19310" fg:w="95"/><text x="99.7553%" y="927.50"></text></g><g><title>all (19,406 samples, 100%)</title><rect x="0.0000%" y="1541" width="100.0000%" height="15" fill="rgb(248,122,18)" fg:x="0" fg:w="19406"/><text x="0.2500%" y="1551.50"></text></g><g><title>it-612e7092ca83 (19,406 samples, 100.00%)</title><rect x="0.0000%" y="1525" width="100.0000%" height="15" fill="rgb(245,130,23)" fg:x="0" fg:w="19406"/><text x="0.2500%" y="1535.50">it-612e7092ca83</text></g><g><title>_start (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1509" width="99.9382%" height="15" fill="rgb(211,225,28)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1519.50">_start</text></g><g><title>__libc_start_main_impl (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1493" width="99.9382%" height="15" fill="rgb(242,105,44)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1503.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1477" width="99.9382%" height="15" fill="rgb(216,183,46)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1487.50">__libc_start_call_main</text></g><g><title>main (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1461" width="99.9382%" height="15" fill="rgb(227,112,9)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1471.50">main</text></g><g><title>std::rt::lang_start_internal (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1445" width="99.9382%" height="15" fill="rgb(244,21,0)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1455.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1429" width="99.9382%" height="15" fill="rgb(236,185,14)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1439.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1413" width="99.9382%" height="15" fill="rgb(236,170,30)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1423.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1397" width="99.9382%" height="15" fill="rgb(209,198,51)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1407.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1381" width="99.9382%" height="15" fill="rgb(205,171,26)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1391.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1365" width="99.9382%" height="15" fill="rgb(246,41,49)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1375.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1349" width="99.9382%" height="15" fill="rgb(240,229,12)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1359.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1333" width="99.9382%" height="15" fill="rgb(212,8,54)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1343.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1317" width="99.9382%" height="15" fill="rgb(230,114,13)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1327.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1301" width="99.9382%" height="15" fill="rgb(229,130,28)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1311.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1285" width="99.9382%" height="15" fill="rgb(206,139,15)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1295.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1269" width="99.9382%" height="15" fill="rgb(241,188,35)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1279.50">core::ops::function::FnOnce::call_once</text></g><g><title>it::main (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1253" width="99.9382%" height="15" fill="rgb(208,224,26)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1263.50">it::main</text></g><g><title>it::benches (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1237" width="99.9382%" height="15" fill="rgb(251,131,28)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1247.50">it::benches</text></g><g><title>it::produce_full (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1221" width="99.9382%" height="15" fill="rgb(208,153,1)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1231.50">it::produce_full</text></g><g><title>zilliqa::time::time_impl::sync_with_fake_time (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1205" width="99.9382%" height="15" fill="rgb(234,33,36)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1215.50">zilliqa::time::time_impl::sync_with_fake_time</text></g><g><title>tokio::task::task_local::LocalKey&lt;T&gt;::sync_scope (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1189" width="99.9382%" height="15" fill="rgb(246,42,29)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1199.50">tokio::task::task_local::LocalKey&lt;T&gt;::sync_scope</text></g><g><title>tokio::task::task_local::LocalKey&lt;T&gt;::scope_inner (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1173" width="99.9382%" height="15" fill="rgb(251,114,16)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1183.50">tokio::task::task_local::LocalKey&lt;T&gt;::scope_inner</text></g><g><title>it::produce_full::{{closure}} (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1157" width="99.9382%" height="15" fill="rgb(233,13,38)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1167.50">it::produce_full::{{closure}}</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1141" width="99.9382%" height="15" fill="rgb(247,120,19)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1151.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1125" width="99.9382%" height="15" fill="rgb(205,11,16)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1135.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>criterion::routine::Routine::profile (19,394 samples, 99.94%)</title><rect x="0.0618%" y="1109" width="99.9382%" height="15" fill="rgb(228,185,19)" fg:x="12" fg:w="19394"/><text x="0.3118%" y="1119.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (303 samples, 1.56%)</title><rect x="98.4386%" y="1093" width="1.5614%" height="15" fill="rgb(239,88,52)" fg:x="19103" fg:w="303"/><text x="98.6886%" y="1103.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (303 samples, 1.56%)</title><rect x="98.4386%" y="1077" width="1.5614%" height="15" fill="rgb(219,23,1)" fg:x="19103" fg:w="303"/><text x="98.6886%" y="1087.50"></text></g><g><title>it::produce_full::{{closure}}::{{closure}} (303 samples, 1.56%)</title><rect x="98.4386%" y="1061" width="1.5614%" height="15" fill="rgb(253,177,16)" fg:x="19103" fg:w="303"/><text x="98.6886%" y="1071.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (303 samples, 1.56%)</title><rect x="98.4386%" y="1045" width="1.5614%" height="15" fill="rgb(225,150,40)" fg:x="19103" fg:w="303"/><text x="98.6886%" y="1055.50"></text></g><g><title>it::produce_full::{{closure}}::{{closure}}::{{closure}} (303 samples, 1.56%)</title><rect x="98.4386%" y="1029" width="1.5614%" height="15" fill="rgb(208,108,30)" fg:x="19103" fg:w="303"/><text x="98.6886%" y="1039.50"></text></g><g><title>zilliqa::consensus::Consensus::vote (171 samples, 0.88%)</title><rect x="99.1188%" y="1013" width="0.8812%" height="15" fill="rgb(214,122,4)" fg:x="19235" fg:w="171"/><text x="99.3688%" y="1023.50"></text></g><g><title>zilliqa::consensus::Consensus::propose_new_block (171 samples, 0.88%)</title><rect x="99.1188%" y="997" width="0.8812%" height="15" fill="rgb(229,74,37)" fg:x="19235" fg:w="171"/><text x="99.3688%" y="1007.50"></text></g><g><title>zilliqa::consensus::Consensus::early_proposal_assemble_at (171 samples, 0.88%)</title><rect x="99.1188%" y="981" width="0.8812%" height="15" fill="rgb(233,61,41)" fg:x="19235" fg:w="171"/><text x="99.3688%" y="991.50"></text></g><g><title>zilliqa::consensus::Consensus::early_proposal_apply_transactions (171 samples, 0.88%)</title><rect x="99.1188%" y="965" width="0.8812%" height="15" fill="rgb(238,191,5)" fg:x="19235" fg:w="171"/><text x="99.3688%" y="975.50"></text></g></svg></svg>